// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`messages/AnalysisBundle.properties handleFile 1`] = `
"MsBuiltinInspection.inspection.message.second.argument.isnull.implicitly.truncated=ISNULL() 的第二個實參被隱式截斷
MsDomainInUserNameValidator.notification.content.do.you.want.to.set.up.href.action0.domain.authentication=是否要設定<a href\\='$ACTION0'>域身份驗證</a>?
MsDomainInUserNameValidator.notification.content.not.allowed.in.user.name.looks.like.you.want.domain.authentication=用戶名中不允許使用 ''。您可以使用域身份驗證
MsDomainInUserNameValidator.notification.title.not.allowed.in.user.name=用戶名中不允許使用 ''
MsDomainInUserNameValidator.progress.title.set.up.domain.authentication=設定域身份驗證
MsOrderByInspection.inspection.message.order.by.clause.invalid=除非指定 TOP、OFFSET 或 FOR XML 子句，否則 ORDER BY 子句在子查詢和檢視中無效
OraErrorHandler.set.locale=區域設定
SsrpInfoCache.progress.title.discovering.instances.on=正在發現 {0} 上的實例
SsrpInfoCache.progress.title.discovering.reachable.sql.server.instances=正在發現可到達的 SQL Server 實例
all.scope.name=所有
backward.dependencies.usage.view.initial.text=選擇在右側樹中搜尋的位置以及在左側樹中搜尋的內容。
backward.dependencies.usage.view.root.node.text=左側樹作用域選區在右側樹作用域選區中的用法
cannot.resolve.symbol=無法解析符號 ''{0}''
cleanup.in.file=清理程式碼
cleanup.in.scope=清理程式碼...
color.settings.common.default.language=預設語言
color.settings.rainbow.demo.header.1=語意醒目提示顯示\\:
color.settings.rainbow.demo.header.2=生成的光譜為區域變數和參數選擇顏色\\:
command.name.gather.fixes=收集修正
completion.not.all.variants.are.shown=輸入更多字元以檢視所有建議
default.path.evaluator.option=指示參照提供程序如何評估給定檔案的預設路徑
display.name.directories.0=目錄 {0}
display.name.directory.0=目錄 ''{0}''
documentation.settings.inline.code.highlighting.mode.as.default.code=作為普通程式碼
documentation.settings.inline.code.highlighting.mode.no.highlighting=無醒目提示
documentation.settings.inline.code.highlighting.mode.semantic.highlighting=醒目提示顯示關鍵字
empty.inspection.action.description=檢查 ''{0}'' 沒有針對此問題的快速修復。點擊以編輯檢查選項，禁止警告或完全停用此檢查。
error.cannot.resolve=無法解析
error.cannot.resolve.default.message=無法解析符號''{0}''
error.cannot.resolve.file.or.dir=無法解析 {0} ''{1}''
file.delete.root.error=無法刪除根檔案{0}。
file.read.error=無法讀取檔案 {0}。
file.write.error=無法寫入到檔案 {0}
find.usages.panel.title.usages=用法
forward.dependencies.usage.view.initial.text=在左側樹中選擇搜尋位置，在右側樹中選擇搜尋內容。
forward.dependencies.usage.view.root.node.text=右側樹作用域選區在左側樹作用域選區中的用法
generated.files.scope.name=生成的檔案
html.preview.navigate.line=，行 \\#
insert.code.template.command=插入程式碼模板
inspection.dead.code.comment=// --註釋掉檢查
inspection.dead.code.comment.quickfix=註釋掉
inspection.dead.code.commented.hint=已註釋掉
inspection.dead.code.date.comment=// --註釋掉檢查 ({0})\\:
inspection.dead.code.deleted.hint=已刪除
inspection.dead.code.display.name=未使用的宣告
inspection.dead.code.entry.point.quickfix=新增作為入口點
inspection.dead.code.entry.points.display.name=入口點
inspection.dead.code.export.results.instantiated.from.heading=實例化
inspection.dead.code.export.results.no.instantiations.found=找不到實例化。
inspection.dead.code.problem.synopsis=欄位從未被賦值。
inspection.dead.code.problem.synopsis1=欄位無用法。
inspection.dead.code.problem.synopsis10=匿名類別宣告上下文無法從入口點到達。類別從未實例化。
inspection.dead.code.problem.synopsis11=未發現類別參照。類別 static 初始設定式不可到達。
inspection.dead.code.problem.synopsis12=類別有一個實例化，但無法從入口點到達。
inspection.dead.code.problem.synopsis13=類別未實例化。
inspection.dead.code.problem.synopsis14=<ul><li>abstract 方法沒有實作，或</li><li>實作類別從未實例化，或</li><li>一個實例化無法從入口點到達。</li></ul>
inspection.dead.code.problem.synopsis15=<ul><li>方法所有者類別沒有實例化，或</li><li>一個實例化無法從入口點到達。</li></ul>
inspection.dead.code.problem.synopsis16=方法從未使用。
inspection.dead.code.problem.synopsis17=方法具有用法，但它們都屬於任何成員都無法從入口點到達的呼叫鏈。
inspection.dead.code.problem.synopsis18=方法無法從入口點到達。
inspection.dead.code.problem.synopsis19=類別和{0, choice, 1\\#它的實作|2\\#它的 {0,number} 個實作}從未實例化。
inspection.dead.code.problem.synopsis2=欄位已被分配，從未被存取。
inspection.dead.code.problem.synopsis20=類別有 {0, choice, 1\\#1 個實例化|2\\#{0,number} 個實例化}，但實例化無法從入口點到達。
inspection.dead.code.problem.synopsis21=方法從未用作此{0}的成員，但僅作為實作類別的成員。如果從{0}中移除該方法，專案將保持相容。
inspection.dead.code.problem.synopsis22=方法覆寫某個庫方法，但<ul><li>其{0}從未實例化，或者</li><li>其{0}實例化無法從入口點到達。</li></ul>
inspection.dead.code.problem.synopsis23={0}未被實作。
inspection.dead.code.problem.synopsis24={0} 有一個實作但 <ul><li>這是從來沒有實例化或</li><li>沒有實例化從入口點是可及的.</li></ul>
inspection.dead.code.problem.synopsis25={0} 有 {1, choice, 1\\#直接或間接的實作|2\\#{1,number} 直接或間接的實作} 但是 <ul><li>他們從不實例化或</li><li>沒有實例可從入口點。</li></ul>
inspection.dead.code.problem.synopsis26.constructor=建構函式從未使用過。
inspection.dead.code.problem.synopsis26.method=方法從未使用。
inspection.dead.code.problem.synopsis27.constructor=所有建構函式用法都屬於任何成員都無法從入口點到達的呼叫鏈。
inspection.dead.code.problem.synopsis27.method=所有方法用法都屬於任何成員都無法從入口點到達的呼叫鏈。
inspection.dead.code.problem.synopsis28.constructor=建構函式有一個用法，但無法從入口點到達。
inspection.dead.code.problem.synopsis28.method=方法有一個用法，但無法從入口點到達。
inspection.dead.code.problem.synopsis29.constructor=建構函式有 {0, choice, 1\\#1 個用法|2\\#{0,number} 個用法}，但無法從入口點到達。
inspection.dead.code.problem.synopsis29.method=方法有 {0, choice, 1\\#1 個用法|2\\#{0,number} 個用法}，但無法從入口點到達。
inspection.dead.code.problem.synopsis3=欄位有一個用法，但無法從入口點到達。
inspection.dead.code.problem.synopsis4=欄位有 {0, choice, 1\\#1 個用法|2\\#{0,number} 個用法}，但無法從入口點到達。
inspection.dead.code.problem.synopsis6=可到達。在專案程式碼中發現{0, choice, 1\\#1 個用法|2\\#{0, number} 個用法}。
inspection.dead.code.problem.synopsis6.suspicious=不可到達。在專案程式碼中發現{0, choice, 1\\#1 個用法|2\\#{0, number} 個用法}。
inspection.dead.code.problem.synopsis7=具有可到達的實例化。在專案程式碼中發現 {0, choice, 1\\#1 個實例化|2\\#{0, number} 個實例化}。
inspection.dead.code.problem.synopsis7.suspicious=沒有可到達的實例化。在專案程式碼中發現 {0, choice, 0\\#0 個實例化|1\\#1 個實例化|2\\#{0, number} 個實例化}。
inspection.dead.code.problem.synopsis8=具有可到達的實作實例化。在專案程式碼中發現 {0, choice, 1\\#1 個實例化|2\\#{0, number} 個實例化}。
inspection.dead.code.problem.synopsis8.suspicious=沒有可到達的實作實例化。在專案程式碼中找到 {0, choice, 1\\#1 個實例化|2\\#{0, number} 個實例化}。
inspection.dead.code.problem.synopsis9=在專案程式碼中發現{0, choice, 1\\#1|2\\#{0, number}}個實例化。
inspection.dead.code.problem.synopsis9.suspicious=匿名類別上下文不可達。類別未被實例化。在專案程式碼中找到{0, choice, 1\\#1|2\\#{0, number}}個實例化。
inspection.dead.code.remove.user.defined.entry.point.quickfix=刪除使用者定義的入口點
inspection.dead.code.safe.delete.quickfix=安全刪除
inspection.dead.code.start.comment=// --註釋掉檢查 START ({0})\\:\\n
inspection.dead.code.stop.comment=// --註釋掉檢查 STOP ({0})\\n
inspection.deprecated.display.name=棄用的 API 用法
inspection.disabled.error=檢查 ''{0}'' 被停用\\: {1}。
inspection.disabled.wrong.id=檢查 ''{0}'' 被停用\\: ID ''{1}'' 與 ''{2}'' 模式不符合。
inspection.display.name.annotator=註解器
inspection.display.name.generic.error=一般錯誤
inspection.display.name.syntax.error=語法錯誤
inspection.export.results.abstract=abstract
inspection.export.results.abstract.class=抽象類別
inspection.export.results.anonymous.ref.in.owner=位於
inspection.export.results.at.line=行
inspection.export.results.capitalized.abstract.class=抽象類別
inspection.export.results.capitalized.class=類別
inspection.export.results.capitalized.interface=接口
inspection.export.results.capitalized.location=位置
inspection.export.results.class=類別
inspection.export.results.constructor=建構函式
inspection.export.results.dead.code=未使用的宣告
inspection.export.results.derived.methods=派生方法
inspection.export.results.directory=目錄
inspection.export.results.extended=延長
inspection.export.results.extended.implemented=繼承/實作
inspection.export.results.extends.implements=繼承/實作
inspection.export.results.field=欄位
inspection.export.results.file=檔案
inspection.export.results.initializer=初始設定式
inspection.export.results.interface=接口
inspection.export.results.invalidated.item=失效的條目
inspection.export.results.method=方法
inspection.export.results.no.problems.found=沒有發現錯誤或警告
inspection.export.results.overrides.implements=覆寫/實作
inspection.export.results.static=static
inspection.export.results.used.from=使用從
inspection.export.results.uses=使用以下
inspection.marked.for.removal.display.name=使用API標記為刪除
inspection.message.line.separators.in.current.file.differ.from.project.defaults=當前檔案的行分隔符({0})中與專案預設設定({1})不同
inspection.options.action.text=檢查''{0}''選項
inspection.problem.resolution=解決問題
inspection.problem.synopsis=問題摘要
inspection.processing.job.descriptor=正在處理以下位置中的專案用法
inspection.processing.job.descriptor1=處理外部使用
inspection.processing.job.descriptor2=分析程式碼
inspection.progress.profile.title=正在使用組態檔案 ''{0}'' 檢查…
inspection.progress.single.inspection.title=正在執行檢查 ''{0}''…
inspection.redirect.template=<html><body>注入元素存在問題\\: {0} (在<a href\\="\\#navigation/{1}\\:{2}">{3}</a> 中)。</body></html>
inspection.reference.anonymous=匿名
inspection.reference.invalid=元素不再存在
inspections.settings.disable.new.inspections.by.default.checkbox=預設停用新檢查
inspections.settings.empty.text=找不到檢查
inspections.settings.empty.text.filters.link=清除篩選器
inspections.settings.empty.text.inspection.link=建立檢查
inspections.settings.invalid.format.warning=檔案 ''{0}'' 的格式無效。
inspections.settings.language.not.specified.warning=未指定語言
inspections.settings.multiple.inspections.warning=選擇了多個檢查。您可以將它們作為單個檢查進行編輯。
inspections.settings.no.description.warning=找不到檢查描述。
inspections.settings.options.title=選項
inspections.settings.options.title.specific.scope=''{0}'' 的選項
inspections.settings.overwrite.action.text=覆蓋
inspections.settings.overwrite.warning.title=覆蓋警告
inspections.settings.profile.already.exists.dialog.message=名稱為 ''{0}'' 的組態檔案已存在。是否要覆蓋它?
inspections.settings.profile.file.chooser.description=選擇組態檔案
inspections.settings.scopes.name=名稱
inspections.settings.scopes.order.help.label=此組態檔案中的所有檢查共用作用域順序。<br>如果檔案屬於多個作用域，則使用列表中第一個作用域的檢查設定。
inspections.settings.scopes.order.title=作用域順序
inspections.settings.scopes.pattern=模式
inspections.settings.show.modified.text=僅顯示修改的檢查
inspections.settings.show.new.description=顯示自 {0} 起可用的新檢查
inspections.settings.show.new.text=顯示 {0} 中的新檢查
inspections.settings.show.only.batch.text=僅顯示批處理模式檢查
inspections.settings.show.only.cleanup.text=僅顯示清理檢查
inspections.settings.show.only.disabled.text=僅顯示禁用項
inspections.settings.show.only.enabled.text=僅顯示啟用項
inspections.settings.undefined.severities.detected.dialog.message=檢測到未定義的嚴重性\\: {0}。是否要建立它們?
intention.family.name.convert.to.project.line.separators=轉換為專案行分隔符
intention.family.name.disable.highlighting.keep.fix=停用醒目提示顯示，保留修正
intention.family.name.fix.all.problems.like.this=修正所有諸如此類的問題
intention.name.apply.all.fixes.in.file=在檔案中套用所有 ''{0}'' 修正
intention.name.in.injection=在注入中{0}
jar.modification.not.supported.error=不能修改jar或zip檔案{0}。
library.0=庫 ''{0}''
local.scopes.node.text=區域作用域
modcommand.executor.error.files.are.marked.as.readonly=檔案被標記為唯讀
modcommand.executor.modification.of.guarded.region=動作嘗試修改受保護區域
modcommand.executor.unable.to.find.the.new.file=找不到新檔案 {0}
modcommand.result.action.completed.successfully=動作成功完成
modcommand.result.action.has.no.effect=動作沒有效果
modcommand.result.action.is.interactive.only.cannot.be.executed.in.batch=動作僅為互動；無法批量執行
modcommand.result.action.was.aborted=動作被中止
modcommand.result.conflict=有衝突；需要使用者互動
notification.title.unix.socket.connection=Unix 套接字連線
package.dependencies.progress.text=正在分析軟體套件相依項
parsing.error.and.ellipsis=和 …
parsing.error.empty.element.parsed.in.at.offset=在 ''{0}'' 的偏移 {1} 處解析了空元素
parsing.error.expected=應為 {0}
parsing.error.expected.got=應為 {0}，得到 ''{1}''
parsing.error.maximum.recursion.level.reached.in=在 ''{1}'' 中達到了最大遞迴級別({0})
parsing.error.no.expected.done.marker.at.offset=偏移 {0} 處沒有預期的完成標記
parsing.error.or=或
parsing.error.unexpected=意外 ''{0}''
parsing.error.unmatched.input=不符合的輸入
pass.syntax=語法分析
predefined.scope.problems.name=問題
predefined.scope.production.name=生產
preview.cannot.perform.action=無法執行動作\\:
preview.copy.to.clipboard=將字串 "{0}" 複製到剪貼簿
progress.title.refresh=重新整理
progress.title.submit.request=提交
psi.search.scope.production.files=專案生產檔案
psi.search.scope.test.files=專案測試檔案
scanning.scope.progress.title=正在掃描作用域…
scope.directory=目錄 ''{0}''
scope.display.name.allow.scope=在作用域''{1}''啟用作用域''{0}''的使用
scope.display.name.deny.scope=在作用域 ''{1}'' 拒絕作用域 ''{0}'' 的用法
scope.file=檔案 ''{0}''
scope.module.list={1, choice, 1\\#模組|2\\#模組} {0}
scope.option.module=模組 ''{0}''
scope.project=專案 ''{0}''
scope.selected.files=選定的檔案
scope.virtual.files=選擇
set.inspection.option.fix=設定檢查選項
set.option.description.check=檢查選項\\:
set.option.description.input=更新數值選項\\:
set.option.description.string=更新字串選項\\:
set.option.description.uncheck=取消選中選項\\:
shared.scopes.node.text=共享作用域
suppress.inspection.family=禁止檢查
suppress.inspection.file=對檔案禁止
suppress.inspection.statement=對語句禁止
suspicious.name.combination.display.name=可疑的變數/參數名稱組合
suspicious.name.combination.options.title=名稱組(逗號分隔)\\:
template.context.everywhere=所有位置
tests.scope.name=測試
text.illegal.character=非法字元\\: {0}
virtual.file.window.name=<Injected {0}file>
"
`;

exports[`messages/AnalysisBundle.properties handlePropertiesFile 1`] = `
"MsBuiltinInspection.inspection.message.second.argument.isnull.implicitly.truncated=ISNULL() 的第二个实参被隐式截断
MsDomainInUserNameValidator.notification.content.do.you.want.to.set.up.href.action0.domain.authentication=是否要设置<a href='$ACTION0'>域身份验证</a>?
MsDomainInUserNameValidator.notification.content.not.allowed.in.user.name.looks.like.you.want.domain.authentication=用户名中不允许使用 ''。您可以使用域身份验证
MsDomainInUserNameValidator.notification.title.not.allowed.in.user.name=用户名中不允许使用 ''
MsDomainInUserNameValidator.progress.title.set.up.domain.authentication=设置域身份验证
MsOrderByInspection.inspection.message.order.by.clause.invalid=除非指定 TOP、OFFSET 或 FOR XML 子句，否则 ORDER BY 子句在子查询和视图中无效
OraErrorHandler.set.locale=区域设置
SsrpInfoCache.progress.title.discovering.instances.on=正在发现 {0} 上的实例
SsrpInfoCache.progress.title.discovering.reachable.sql.server.instances=正在发现可到达的 SQL Server 实例
all.scope.name=所有
backward.dependencies.usage.view.initial.text=选择在右侧树中搜索的位置以及在左侧树中搜索的内容。
backward.dependencies.usage.view.root.node.text=左侧树作用域选区在右侧树作用域选区中的用法
cannot.resolve.symbol=无法解析符号 ''{0}''
cleanup.in.file=清理代码
cleanup.in.scope=清理代码...
color.settings.common.default.language=默认语言
color.settings.rainbow.demo.header.1=语义高亮显示:
color.settings.rainbow.demo.header.2=生成的光谱为局部变量和形参选择颜色:
command.name.gather.fixes=收集修正
completion.not.all.variants.are.shown=输入更多字符以查看所有建议
default.path.evaluator.option=指示引用提供程序如何评估给定文件的默认路径
display.name.directories.0=目录 {0}
display.name.directory.0=目录 ''{0}''
documentation.settings.inline.code.highlighting.mode.as.default.code=作为普通代码
documentation.settings.inline.code.highlighting.mode.no.highlighting=无高亮显示
documentation.settings.inline.code.highlighting.mode.semantic.highlighting=高亮显示关键字
empty.inspection.action.description=检查 ''{0}'' 没有针对此问题的快速修复。点击以编辑检查选项，禁止警告或完全禁用此检查。
error.cannot.resolve=无法解析
error.cannot.resolve.default.message=无法解析符号''{0}''
error.cannot.resolve.file.or.dir=无法解析 {0} ''{1}''
file.delete.root.error=无法删除根文件{0}。
file.read.error=无法读取文件 {0}。
file.write.error=无法写入到文件 {0}
find.usages.panel.title.usages=用法
forward.dependencies.usage.view.initial.text=在左侧树中选择搜索位置，在右侧树中选择搜索内容。
forward.dependencies.usage.view.root.node.text=右侧树作用域选区在左侧树作用域选区中的用法
generated.files.scope.name=生成的文件
html.preview.navigate.line=，行 #
insert.code.template.command=插入代码模板
inspection.dead.code.comment=// --注释掉检查
inspection.dead.code.comment.quickfix=注释掉
inspection.dead.code.commented.hint=已注释掉
inspection.dead.code.date.comment=// --注释掉检查 ({0}):
inspection.dead.code.deleted.hint=已删除
inspection.dead.code.display.name=未使用的声明
inspection.dead.code.entry.point.quickfix=添加作为入口点
inspection.dead.code.entry.points.display.name=入口点
inspection.dead.code.export.results.instantiated.from.heading=实例化
inspection.dead.code.export.results.no.instantiations.found=找不到实例化。
inspection.dead.code.problem.synopsis=字段从未被赋值。
inspection.dead.code.problem.synopsis1=字段无用法。
inspection.dead.code.problem.synopsis10=匿名类声明上下文无法从入口点到达。类从未实例化。
inspection.dead.code.problem.synopsis11=未发现类引用。类 static 初始值设定项不可到达。
inspection.dead.code.problem.synopsis12=类有一个实例化，但无法从入口点到达。
inspection.dead.code.problem.synopsis13=类未实例化。
inspection.dead.code.problem.synopsis14=<ul><li>abstract 方法没有实现，或</li><li>实现类从未实例化，或</li><li>一个实例化无法从入口点到达。</li></ul>
inspection.dead.code.problem.synopsis15=<ul><li>方法所有者类没有实例化，或</li><li>一个实例化无法从入口点到达。</li></ul>
inspection.dead.code.problem.synopsis16=方法从未使用。
inspection.dead.code.problem.synopsis17=方法具有用法，但它们都属于任何成员都无法从入口点到达的调用链。
inspection.dead.code.problem.synopsis18=方法无法从入口点到达。
inspection.dead.code.problem.synopsis19=类和{0, choice, 1#它的实现|2#它的 {0,number} 个实现}从未实例化。
inspection.dead.code.problem.synopsis2=字段已被分配，从未被访问。
inspection.dead.code.problem.synopsis20=类有 {0, choice, 1#1 个实例化|2#{0,number} 个实例化}，但实例化无法从入口点到达。
inspection.dead.code.problem.synopsis21=方法从未用作此{0}的成员，但仅作为实现类的成员。如果从{0}中移除该方法，项目将保持兼容。
inspection.dead.code.problem.synopsis22=方法重写某个库方法，但<ul><li>其{0}从未实例化，或者</li><li>其{0}实例化无法从入口点到达。</li></ul>
inspection.dead.code.problem.synopsis23={0}未被实现。
inspection.dead.code.problem.synopsis24={0} 有一个实现但 <ul><li>这是从来没有实例化或</li><li>没有实例化从入口点是可及的.</li></ul>
inspection.dead.code.problem.synopsis25={0} 有 {1, choice, 1#直接或间接的实现|2#{1,number} 直接或间接的实现} 但是 <ul><li>他们从不实例化或</li><li>没有实例可从入口点。</li></ul>
inspection.dead.code.problem.synopsis26.constructor=构造函数从未使用过。
inspection.dead.code.problem.synopsis26.method=方法从未使用。
inspection.dead.code.problem.synopsis27.constructor=所有构造函数用法都属于任何成员都无法从入口点到达的调用链。
inspection.dead.code.problem.synopsis27.method=所有方法用法都属于任何成员都无法从入口点到达的调用链。
inspection.dead.code.problem.synopsis28.constructor=构造函数有一个用法，但无法从入口点到达。
inspection.dead.code.problem.synopsis28.method=方法有一个用法，但无法从入口点到达。
inspection.dead.code.problem.synopsis29.constructor=构造函数有 {0, choice, 1#1 个用法|2#{0,number} 个用法}，但无法从入口点到达。
inspection.dead.code.problem.synopsis29.method=方法有 {0, choice, 1#1 个用法|2#{0,number} 个用法}，但无法从入口点到达。
inspection.dead.code.problem.synopsis3=字段有一个用法，但无法从入口点到达。
inspection.dead.code.problem.synopsis4=字段有 {0, choice, 1#1 个用法|2#{0,number} 个用法}，但无法从入口点到达。
inspection.dead.code.problem.synopsis6=可到达。在项目代码中发现{0, choice, 1#1 个用法|2#{0, number} 个用法}。
inspection.dead.code.problem.synopsis6.suspicious=不可到达。在项目代码中发现{0, choice, 1#1 个用法|2#{0, number} 个用法}。
inspection.dead.code.problem.synopsis7=具有可到达的实例化。在项目代码中发现 {0, choice, 1#1 个实例化|2#{0, number} 个实例化}。
inspection.dead.code.problem.synopsis7.suspicious=没有可到达的实例化。在项目代码中发现 {0, choice, 0#0 个实例化|1#1 个实例化|2#{0, number} 个实例化}。
inspection.dead.code.problem.synopsis8=具有可到达的实现实例化。在项目代码中发现 {0, choice, 1#1 个实例化|2#{0, number} 个实例化}。
inspection.dead.code.problem.synopsis8.suspicious=没有可到达的实现实例化。在项目代码中找到 {0, choice, 1#1 个实例化|2#{0, number} 个实例化}。
inspection.dead.code.problem.synopsis9=在项目代码中发现{0, choice, 1#1|2#{0, number}}个实例化。
inspection.dead.code.problem.synopsis9.suspicious=匿名类上下文不可达。类未被实例化。在项目代码中找到{0, choice, 1#1|2#{0, number}}个实例化。
inspection.dead.code.remove.user.defined.entry.point.quickfix=删除用户定义的入口点
inspection.dead.code.safe.delete.quickfix=安全删除
inspection.dead.code.start.comment=// --注释掉检查 START ({0}):\\n
inspection.dead.code.stop.comment=// --注释掉检查 STOP ({0})\\n
inspection.deprecated.display.name=弃用的 API 用法
inspection.disabled.error=检查 ''{0}'' 被禁用: {1}。
inspection.disabled.wrong.id=检查 ''{0}'' 被禁用: ID ''{1}'' 与 ''{2}'' 模式不匹配。
inspection.display.name.annotator=注解器
inspection.display.name.generic.error=一般错误
inspection.display.name.syntax.error=语法错误
inspection.export.results.abstract=abstract
inspection.export.results.abstract.class=抽象类
inspection.export.results.anonymous.ref.in.owner=位于
inspection.export.results.at.line=行
inspection.export.results.capitalized.abstract.class=抽象类
inspection.export.results.capitalized.class=类
inspection.export.results.capitalized.interface=接口
inspection.export.results.capitalized.location=位置
inspection.export.results.class=类
inspection.export.results.constructor=构造函数
inspection.export.results.dead.code=未使用的声明
inspection.export.results.derived.methods=派生方法
inspection.export.results.directory=目录
inspection.export.results.extended=延长
inspection.export.results.extended.implemented=继承/实现
inspection.export.results.extends.implements=继承/实现
inspection.export.results.field=字段
inspection.export.results.file=文件
inspection.export.results.initializer=初始值设定项
inspection.export.results.interface=接口
inspection.export.results.invalidated.item=失效的条目
inspection.export.results.method=方法
inspection.export.results.no.problems.found=没有发现错误或警告
inspection.export.results.overrides.implements=重写/实现
inspection.export.results.static=static
inspection.export.results.used.from=使用从
inspection.export.results.uses=使用以下
inspection.marked.for.removal.display.name=使用API标记为删除
inspection.message.line.separators.in.current.file.differ.from.project.defaults=当前文件的行分隔符({0})中与项目默认设置({1})不同
inspection.options.action.text=检查''{0}''选项
inspection.problem.resolution=解决问题
inspection.problem.synopsis=问题摘要
inspection.processing.job.descriptor=正在处理以下位置中的项目用法
inspection.processing.job.descriptor1=处理外部使用
inspection.processing.job.descriptor2=分析代码
inspection.progress.profile.title=正在使用配置文件 ''{0}'' 检查…
inspection.progress.single.inspection.title=正在运行检查 ''{0}''…
inspection.redirect.template=<html><body>注入元素存在问题: {0} (在<a href="#navigation/{1}:{2}">{3}</a> 中)。</body></html>
inspection.reference.anonymous=匿名
inspection.reference.invalid=元素不再存在
inspections.settings.disable.new.inspections.by.default.checkbox=默认禁用新检查
inspections.settings.empty.text=找不到检查
inspections.settings.empty.text.filters.link=清除筛选器
inspections.settings.empty.text.inspection.link=创建检查
inspections.settings.invalid.format.warning=文件 ''{0}'' 的格式无效。
inspections.settings.language.not.specified.warning=未指定语言
inspections.settings.multiple.inspections.warning=选择了多个检查。您可以将它们作为单个检查进行编辑。
inspections.settings.no.description.warning=找不到检查描述。
inspections.settings.options.title=选项
inspections.settings.options.title.specific.scope=''{0}'' 的选项
inspections.settings.overwrite.action.text=覆盖
inspections.settings.overwrite.warning.title=覆盖警告
inspections.settings.profile.already.exists.dialog.message=名称为 ''{0}'' 的配置文件已存在。是否要覆盖它?
inspections.settings.profile.file.chooser.description=选择配置文件
inspections.settings.scopes.name=名称
inspections.settings.scopes.order.help.label=此配置文件中的所有检查共用作用域顺序。<br>如果文件属于多个作用域，则使用列表中第一个作用域的检查设置。
inspections.settings.scopes.order.title=作用域顺序
inspections.settings.scopes.pattern=模式
inspections.settings.show.modified.text=仅显示修改的检查
inspections.settings.show.new.description=显示自 {0} 起可用的新检查
inspections.settings.show.new.text=显示 {0} 中的新检查
inspections.settings.show.only.batch.text=仅显示批处理模式检查
inspections.settings.show.only.cleanup.text=仅显示清理检查
inspections.settings.show.only.disabled.text=仅显示禁用项
inspections.settings.show.only.enabled.text=仅显示启用项
inspections.settings.undefined.severities.detected.dialog.message=检测到未定义的严重性: {0}。是否要创建它们?
intention.family.name.convert.to.project.line.separators=转换为项目行分隔符
intention.family.name.disable.highlighting.keep.fix=禁用高亮显示，保留修正
intention.family.name.fix.all.problems.like.this=修正所有诸如此类的问题
intention.name.apply.all.fixes.in.file=在文件中应用所有 ''{0}'' 修正
intention.name.in.injection=在注入中{0}
jar.modification.not.supported.error=不能修改jar或zip文件{0}。
library.0=库 ''{0}''
local.scopes.node.text=局部作用域
modcommand.executor.error.files.are.marked.as.readonly=文件被标记为只读
modcommand.executor.modification.of.guarded.region=操作尝试修改受保护区域
modcommand.executor.unable.to.find.the.new.file=找不到新文件 {0}
modcommand.result.action.completed.successfully=操作成功完成
modcommand.result.action.has.no.effect=操作没有效果
modcommand.result.action.is.interactive.only.cannot.be.executed.in.batch=动作仅为交互式；无法批量执行
modcommand.result.action.was.aborted=操作被中止
modcommand.result.conflict=有冲突；需要用户交互
notification.title.unix.socket.connection=Unix 套接字连接
package.dependencies.progress.text=正在分析软件包依赖项
parsing.error.and.ellipsis=和 …
parsing.error.empty.element.parsed.in.at.offset=在 ''{0}'' 的偏移 {1} 处解析了空元素
parsing.error.expected=应为 {0}
parsing.error.expected.got=应为 {0}，得到 ''{1}''
parsing.error.maximum.recursion.level.reached.in=在 ''{1}'' 中达到了最大递归级别({0})
parsing.error.no.expected.done.marker.at.offset=偏移 {0} 处没有预期的完成标记
parsing.error.or=或
parsing.error.unexpected=意外 ''{0}''
parsing.error.unmatched.input=不匹配的输入
pass.syntax=语法分析
predefined.scope.problems.name=问题
predefined.scope.production.name=生产
preview.cannot.perform.action=无法执行操作:
preview.copy.to.clipboard=将字符串 "{0}" 复制到剪贴板
progress.title.refresh=刷新
progress.title.submit.request=提交
psi.search.scope.production.files=项目生产文件
psi.search.scope.test.files=项目测试文件
scanning.scope.progress.title=正在扫描作用域…
scope.directory=目录 ''{0}''
scope.display.name.allow.scope=在作用域''{1}''启用作用域''{0}''的使用
scope.display.name.deny.scope=在作用域 ''{1}'' 拒绝作用域 ''{0}'' 的用法
scope.file=文件 ''{0}''
scope.module.list={1, choice, 1#模块|2#模块} {0}
scope.option.module=模块 ''{0}''
scope.project=项目 ''{0}''
scope.selected.files=选定的文件
scope.virtual.files=选择
set.inspection.option.fix=设置检查选项
set.option.description.check=检查选项:
set.option.description.input=更新数值选项:
set.option.description.string=更新字符串选项:
set.option.description.uncheck=取消选中选项:
shared.scopes.node.text=共享作用域
suppress.inspection.family=禁止检查
suppress.inspection.file=对文件禁止
suppress.inspection.statement=对语句禁止
suspicious.name.combination.display.name=可疑的变量/形参名称组合
suspicious.name.combination.options.title=名称组(逗号分隔):
template.context.everywhere=所有位置
tests.scope.name=测试
text.illegal.character=非法字符: {0}
virtual.file.window.name=<Injected {0}file>"
`;
