### META-INF/Akka.xml
displayname.actor.mutable.state=Actor 可变状态
props.constructor.not.found=找不到合适的 Actor 构造函数
props.factory.method.exists=可被替换为工厂方法调用
props.factory.method.simplifiable=动态调用可被替换为构造函数调用
group.akka=Akka
intention.category.scala.akka=Scala/Akka

### com/intellij/scala/akka/codeInsight/generation/actions/GeneratePropsFactoryAction.scala
generate.props.factory.action.text=生成 Actor 工厂方法
generate.props.factory.action.description=生成 Actor 工厂方法

### com/intellij/scala/akka/codeInsight/intention/GeneratePropsFactoryIntention.scala
family.name.create.a.corresponding.factory.method=创建相应的工厂方法

### com/intellij/scala/akka/codeInspection/mutableState/ActorMutableStateInspection.scala
display.name.actor.mutable.state=Actor 可变状态

### com/intellij/scala/akka/codeInspection/mutableState/ActorMutableStateQuickFix.scala
display.name.create.method=创建 ''{0}'' 方法

### com/intellij/scala/akka/codeInspection/props/PropsFactoryMethodExistenceInspection.scala
props.constructor.replace=替换为工厂方法调用

### com/intellij/scala/akka/codeInspection/props/SimplifyFactoryMethodInspection.scala
props.factory.method.replace=将动态调用替换为构造函数调用

### com/intellij/scala/akka/findUsages/AkkaUsageTypeProvider.scala
send.position=发送位置
ask.position=询问位置
receiver.position=接收器位置
