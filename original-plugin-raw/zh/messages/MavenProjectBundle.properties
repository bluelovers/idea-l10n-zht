maven.name=Maven
maven.scanning.projects=正在扫描 Maven 项目…
maven.locating.files=正在定位 Maven 项目文件…
maven.reading=正在读取 Maven 项目…
maven.reading.pom=正在读取 {0}…
maven.resolving=正在解析 Maven 依赖项…
maven.resolving.pom=正在解析 {0} 的依赖项…
maven.updating.folders=正在生成 Maven 源…
maven.updating.folders.pom=正在生成 {0} 的源…
maven.downloading.plugins=正在下载 Maven 插件…
maven.downloading.pom.plugins=正在下载 {0} 的插件…
maven.downloading=正在下载 Maven 源和文档…
maven.downloading.sources=正在下载 Maven 源…
maven.downloading.docs=正在下载 Maven 文档…

maven.action.download.sources=下载源代码
maven.action.download.sources.busy.text=正在下载源…

maven.project.importing=正在导入 Maven 项目
maven.project.importing.evaluating.effective.pom=正在评估有效的 POM
maven.project.import.title=重新加载 Maven 项目
maven.post.processing=正在配置 Maven 项目

module.group.name={0}和模块

maven.import.title.module.dir=选择 IDEA 模块文件(*.iml)的目录

maven.import.incompatible.modules=<html>以下{0,choice,1#模块|2#模块}的类型不正确，{0,choice,1#需要|2#需要}重新创建:<br><br>{1}<br><br>如果您不想重新创建{0,choice,1#模块|2#模块}，相应的 Maven 项目将被标记为已忽略，<br>之后，您可以在 Maven 项目工具窗口中取消忽略它们。</html>
maven.import.incompatible.modules.recreate=重新创建
maven.import.incompatible.modules.ignore=忽略这些项目

maven.import.message.delete.obsolete=这些模块已从 Maven 结构中移除:\n\
{0}\n\
\n\
是否同时希望将它们从项目中移除?
maven.navigator.nothing.to.display=没有要显示的 Maven 项目。\n\
\n\
您可以使用 {0} 添加一个项目，或者使用 {1} 让插件在项目根下找到所有 pom.xml 文件并重新加载
maven.tab.importing=正在导入


maven.tab.ignored.files=已忽略的文件
maven.testRunning=正在运行测试
maven.ignore=忽略项目
maven.unignore=取消忽略项目
maven.ignore.edit=编辑忽略的文件…
maven.profile.activate=激活
maven.profile.deactivate=停用
maven.profile.default=使用默认值

maven.project.problem.recursiveInheritance=已找到递归继承
maven.project.problem.selfInheritance=已找到自继承
maven.project.problem.parentHasProblems=父级 ''{0}'' 有问题
maven.project.problem.parentNotFound=未找到父级 ''{0}''
maven.project.problem.moduleNotFound=找不到模块 ''{0}''
maven.project.problem.unresolvedDependency=未解析的依赖项: ''{0}''
maven.project.problem.unresolvedExtension=未解析的构建扩展: ''{0}''
maven.project.problem.unresolvedPlugin=未解析的插件: ''{0}''

maven.select.maven.home.directory=选择 Maven 主目录
maven.select.maven.settings.file=选择用户设置文件
maven.select.local.repository=选择本地仓库

view.node.lifecycle=生命周期
view.node.profiles=配置文件
view.node.plugins=插件
view.node.run.configurations=运行配置
view.node.dependencies=依赖项
view.node.modules=模块

configurable.MavenSettings.display.name=Maven
maven.sources.cannot.download=无法下载源代码
filetype.maven.config.description=Maven 项目配置
filetype.maven.config.display.name=Maven 配置
maven.directory.contribution.description=Maven 源目录
maven.notification.choose.file.to.open=选择要打开的文件

maven.effective.pom.failed=无法评估有效的 pom。
maven.effective.pom.failed.title=错误

maven.offline.mode.switched.off.notification=Maven 脱机模式已关闭

maven.module.remove.failed=无法移除项目
maven.module.remove.failed.explanation=无法移除 {0}，因为它是作为另一个项目 {1} 的模块导入的。您可以使用“忽略”操作。只能移除根项目。


maven.run.configuration.remove.confirm=删除“{0}”?

maven.toggle.offline.search.title=切换 Maven 脱机模式


action.Maven.Reimport.text=重新加载所有 Maven 项目
action.Maven.ReimportProject.text=重新加载项目
action.Maven.ReimportProject.description=重新加载所选 Maven 项目
action.Maven.ShowEffectivePom.text=显示有效的 POM
action.Maven.ShowEffectivePom.description=生成并显示有效的 POM
action.Maven.UpdateFolders.text=为所有项目生成源代码并更新文件夹
action.Maven.UpdateFoldersForProject.text=生成源代码并更新文件夹
action.Maven.DownloadAllSources.text=下载源代码
action.Maven.DownloadAllSources.description=下载所有依赖项的源代码
action.Maven.DownloadAllDocs.text=下载文档
action.Maven.DownloadAllDocs.description=下载所有依赖项的文档
action.Maven.DownloadAllSourcesAndDocs.text=下载源代码和文档
action.Maven.DownloadAllSourcesAndDocs.description=下载所有依赖项的源代码和文档
action.Maven.DownloadSelectedSourcesAndDocs.text=下载源代码和文档
action.Maven.DownloadSelectedSourcesAndDocs.description=下载所选项目所有依赖项的源代码和文档
action.Maven.DownloadSelectedSources.text=下载源代码
action.Maven.DownloadSelectedSources.description=下载所选项目所有依赖项的源代码
action.Maven.DownloadSelectedDocs.text=下载文档
action.Maven.DownloadSelectedDocs.description=下载所选项目所有依赖项的文档
action.Maven.AddManagedFiles.text=添加 Maven 项目
action.Maven.AddManagedFiles.description=将 Maven 项目添加并重新加载到项目树
action.Maven.AddFileAsMavenProject.text=添加为 Maven 项目
action.Maven.AddFileAsMavenProject.description=将 Maven 项目添加并重新加载到项目树
action.Maven.RemoveManagedFiles.text=取消链接 Maven 项目
action.Maven.RemoveManagedFiles.description=从项目树中取消链接所选 Maven 项目及其子项目
action.Maven.OpenSettingsXml.text=打开 settings.xml
action.Maven.OpenSettingsXml.description=打开 Maven settings.xml
action.Maven.OpenProfilesXml.text=打开 profiles.xml
action.Maven.OpenProfilesXml.description=打开所选项目的 profiles.xml
action.Maven.IgnoreProjects.text=忽略项目(_I)
action.Maven.IgnoreProjects.description=将所选 Maven 项目排除/包含在导入范围内
action.Maven.ToggleProfile.text=切换配置文件
action.Maven.ToggleProfile.description=激活/停用配置文件
action.Maven.RunBuild.text=运行 Maven 构建 (_R)
action.Maven.RunBuild.description=执行所选阶段或目标
group.Maven.ShowSettingsGroup.text=构建工具设置
action.Maven.ShowSettings.text=Maven 设置
action.Maven.ShowSettings.description=编辑当前项目的 Maven 集成设置
action.Maven.ToggleOffline.text=切换脱机模式
action.Maven.ToggleOffline.description=切换 Maven 构建的脱机模式
action.Maven.ToggleLookNested.text=递归切换搜索 Maven 项目
action.Maven.ToggleLookNested.description=在导入 Maven 项目时，递归切换搜索项目
action.Maven.ToggleSkipTests.text=切换“跳过测试”模式
action.Maven.ToggleSkipTests.description=切换 Maven 构建的“跳过测试”模式
action.Maven.ExpandAll.text=全部展开
action.Maven.CollapseAll.text=全部收起
action.Maven.ExecuteGoal.text=执行 Maven 目标
action.Maven.GroupProjects.text=将模块分组
action.Maven.GroupProjects.description=根据 Maven 结构将项目分组
action.Maven.ShowIgnored.text=显示忽略的项目
action.Maven.ShowIgnored.description=显示忽略的项目
action.Maven.ShowBasicPhasesOnly.text=仅显示基本阶段
action.Maven.ShowBasicPhasesOnly.description=仅显示基本阶段
action.Maven.AlwaysShowArtifactId.text=始终显示工件 ID
action.Maven.AlwaysShowArtifactId.description=始终显示工件 ID 而不是项目名称
action.Maven.ShowVersions.text=显示版本
action.Maven.ShowVersions.description=显示 Maven 项目的版本
action.Maven.BeforeCompile.text=构建前执行
action.Maven.BeforeCompile.description=在构建前执行所选阶段/目标
action.Maven.AfterCompile.text=构建后执行
action.Maven.AfterCompile.description=在构建后执行所选阶段/目标
action.Maven.BeforeRebuild.text=重新构建前执行
action.Maven.BeforeRebuild.description=在完全重新构建前执行所选阶段/目标
action.Maven.AfterRebuild.text=重新构建后执行
action.Maven.AfterRebuild.description=在完全重新构建后执行所选阶段/目标
action.Maven.BeforeRun.text=在运行/调试之前执行…
action.Maven.BeforeRun.description=在启动运行/调试配置前执行所选阶段/目标
action.Maven.AssignShortcut.text=分配快捷键…
action.Maven.AssignShortcut.description=为所选阶段/目标分配快捷键
group.Maven.DownloadAllGroupPopup.text=下载源代码和/或文档
action.Maven.GenerateGroup.text=生成
action.Maven.ShowConnectors.text=显示 Maven 连接器
group.Maven.GlobalProjectMenu.text=Maven
group.Maven.RefactoringGroup.text=重构
action.refactoring.introduce.property.text=属性
action.refactoring.extract.dependency.text=提取管理型依赖项
action.Maven.EditRunConfiguration.text=编辑运行配置…
action.Maven.RemoveRunConfiguration.text=移除运行配置
maven.before.build.of.count={2} ({1}/{0})

action.Maven.open.file=打开 ''{0}''
action.Maven.create.file=创建 ''{0}''


maven.bundled.version.title=已捆绑(Maven 3)
maven.wrapper.version.title=使用 Maven 包装器
maven.wrapper.version.label=使用 .mvn/wrapper/maven-wrapper.properties 中定义的版本
consumer.pom.cannot.determine.parent.version=无法确定父版本
dialog.message.maven.home.directory.not.specified=未指定 Maven 主目录
dialog.message.maven.home.directory.invalid=Maven 主目录无效: {0}
from.dependency.management=\ (从 <dependencyManagement>)
maven.search.artifract.results=结果
dialog.message.please.specify=未指定此形参: {0}
label.use.project.settings=使用项目设置
inspection.message.duplicated.dependency=重复的依赖项
inspection.message.duplicated.plugin.declaration=重复的插件声明
label.invalid.maven.home.directory=无效的 Maven 主目录
label.invalid.maven.home.version=(版本: {0})
dialog.message.configuration.file.not.exists.in.maven.home=Maven 主目录中不存在配置文件: {0}
dialog.message.failed.to.run.maven.configuration=无法运行 Maven 配置
command.name.create.new.maven.module=创建新的 Maven 模块
command.name.add.maven.support=添加 Maven 支持
maven.parent.label.none=<none>
popup.content.maven.projects.not.found=找不到 Maven 项目
dialog.title.select.maven.project=选择 Maven 项目
dialog.title.choose.maven.goal=选择 Maven 目标
progress.details.configuring.module=正在配置模块 {0}
progress.text.refreshing.files=正在刷新文件…
notification.title.cannot.create=无法创建 {0}
dialog.message.wizard.please.specify.groupid=指定组 ID
dialog.message.wizard.please.specify.artifactid=指定工件 ID
dialog.message.wizard.please.specify.version=指定版本
notification.title.cannot.create.module=无法创建模块
notification.title.failed.to.create.maven.project=无法创建 Maven 项目
command.name.configuring.projects=配置项目
sources.not.found.for=找不到此对象的源代码:
and.more=等等…
tab.title.ignored=已忽略的 {0}
detailed.description.problems=问题:
detailed.description.location=位置:
detailed.description.project=项目:

maven.AddManagedFiles.warning.message.file=所选文件 ''{0}'' 不是 Maven 文件
maven.AddManagedFiles.warning.message.directory=所选目录 ''{0}'' 中没有 Maven 文件
maven.AddManagedFiles.warning.title=无法识别的 Maven 项目

maven.project.not.found.for=无法找到 {0} 的 Maven 项目
maven.model.error=无法创建 {0} 的 PSI 模型

maven.source.level.not.supported.update=语言级别无效或 pom.xml 中缺少语言级别。当前项目 JDK 为 {0}。<a href="{1}">在 {2} 中指定语言级别</a>
maven.quickfix.cannot.update.source.level.module.not.found=无法更新 {0} 的源级别 - 找不到对应模块。<br>\n\
确保 Maven 项目已同步
wsl.misconfigured.title=WSL 配置问题
wsl.does.not.have.configured.maven={0} 没有已配置的 Maven
wsl.does.not.have.configured.jdk={0} 没有已配置的 JDK

wsl.windows.jdk.used.for.wsl=Windows JDK 用于 WSL 项目
wsl.windows.jdk.used.for.wsl.descr=用于 WSL 项目的 Windows JDK。建议您将项目 JDK 设置为基于 WSL 的 JDK\n\
<br/><a href="OPEN">打开项目结构</a><br/><a href="FIX">自动修正</a>

wsl.wsl.jdk.used.for.windows=WSL JDK 用于 Windows 上的项目
wsl.wsl.jdk.used.for.windows.descr=用于 Windows 项目的 WSL JDK。您必须将项目 JDK 设置为基于 Windows 的 JDK\n\
<br/><a href="OPEN">打开项目结构</a><br/><a href="FIX">自动修正</a>

wsl.different.wsl.jdk.used=该项目使用另一个 WSL 分发版中的 WSL JDK
wsl.different.wsl.jdk.used.descr=该项目使用另一个 WSL 分发版中的 WSL JDK\n\
建议您将项目 JDK 设置为同一 WSL 分发版中的 JDK\n\
<br/><a href="OPEN">打开项目结构</a><br/><a href="FIX">自动修正</a>
maven.wsl.jdk.fix.failed=JDK 安装失败
maven.wsl.jdk.fix.failed.descr=无法安装项目 JDK，请手动安装 JDK\n\
<br/><a href="OPEN">打开项目结构</a>
wsl.jdk.searching=正在搜索现有 JDK…
wsl.jdk.downloading=正在下载 JDK…

maven.quickfix.cannot.artifact.download=<a href="{0}">尝试使用 -U 标记(强制更新快照)运行 Maven 导入</a>
maven.quickfix.header.possible.solution=可能的解决方案:
maven.quickfix.jvm.options.config.file= - 检查模块 {0} 中的 .mvn/jvm.config。 <a href="{1}">打开 jvm.config</a>。
maven.quickfix.jvm.options.run.configuration= - 检查您的 Maven 运行配置。“运行程序”选项卡 - 虚拟机选项。<a href="{0}">打开 Maven 运行配置</a>。
maven.quickfix.jvm.options.runner.settings= - 检查您的 Maven 运行程序虚拟机选项。<a href="{0}">打开 Maven 运行程序设置</a>。
maven.quickfix.jvm.options.import.settings= - 检查您的 Maven 导入虚拟机选项。<a href="{0}">打开 Maven 导入设置</a>。
maven.quickfix.maven.config.file=解析 ''.mvn/maven.config'' 文件时出错。<a href="{0}">打开 Maven 配置</a>。
maven.quickfix.source.version.great=模块 {0} SDK {1} 与源版本 {2} 不兼容。<br/>\n\
将项目设置中的模块 SDK 升级到 {2} 或更高版本。<a href="{3}">打开项目设置</a>。
maven.quickfix.source.version.less.header=模块 {0} SDK {1} 不支持源版本 {2}。<br/>可能的解决方案:
maven.quickfix.source.version.less.part1= - 将设置中的项目 SDK 降级为 {0} 或兼容版本。<a href="{1}">打开项目设置</a>。
maven.quickfix.source.version.less.part2= - 将 Maven 构建文件中的语言版本升级到 {0}。<a href="{1}">更新 pom.xml 并重新加载项目</a>。
maven.commandline.description=配置给定文件夹下的 Maven 项目