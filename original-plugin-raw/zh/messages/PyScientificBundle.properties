DataViewSlicingPanel.gotIt.tooltip.header=表达式输入和表格式设置已被移动
DataViewSlicingPanel.gotIt.tooltip.text=现在可以在菜单 <b>⋮</b> 中找到这些选项以及其他操作
DataViewSlicingPanel.placeholder=编写表达式并按({0})显示…
TableFormatting.FormatTable.cancel.action=取消
TableFormatting.FormatTable.checkbox.to.remember.format=默认为所有表设置
TableFormatting.FormatTable.close.action=关闭
TableFormatting.FormatTable.ok.action=确定
TableFormatting.FormatTable.panel.name=设置表格式
TableFormatting.FormatTable.textField.comment=表格式设置目前支持 Python 2 语法。<br><a href\='adjust.table.formatting'>查看文档</a>
action.DataViewHideSlicingPanelAction.text=隐藏表达式输入
action.DataViewOpenSlicingDocumentationAction.text=打开表达式输入文档
action.DataViewShowSlicingPanelAction.text=显示表达式输入
action.ExportTableAction.text=将数据导出到文件
action.ManualReloadTableAction.text=重新加载数据
action.OpenFormattingTableAction.text=设置表格式…
action.OpenInEditorAction.text=在编辑器标签页中打开
action.OpenPlotInEditorAction.text=在编辑器标签页中打开
action.SwitchBetweenTableModesAction.text=在表表示之间切换
action.ToggleDataViewColoring.text=切换单元着色
action.ToggleTableViewColorBooleanColumnsAction.text=颜色布尔列
action.ToggleTableViewColorPerColumnAction.text=每列独立
action.ToggleTableViewColorPerTableAction.text=整个表
action.ToggleTableViewColoringModeDivergingAction.text=发散
action.ToggleTableViewColoringModeOffAction.text=关
action.ToggleTableViewColoringModeSequentialAction.text=连续
action.com.intellij.python.scientific.PyPlotsAction.description=打开“绘图”工具窗口
action.com.intellij.python.scientific.PyPlotsAction.text=绘图
action.dont.show.again=不再显示
configurable.PyScientificConfigurable.display.name=Python 图
debugger.data.view.loading.image.chunk=正在加载图像块 {0}/{1}
error.title.show.image.view=图像视图错误
group.TableViewColoringGroup.text=表着色选项
label.install.kaleido.to.see.preview=以体验交互式图的完整功能。
label.install.kaleido.to.use.debug.image.view=以使用调试图像查看器。安装后重新启动服务器。
label.install.mpld3.to.see.preview=以体验交互式图。
label.install.pillow.to.use.debug.image.view=以使用调试图像查看器。安装后重新打开标签页。
link.label.install.kaleido.link=安装 'kaleido'
link.label.install.mpld3.link=安装 'mpld3'
link.label.install.pillow.link=安装 'pillow'
notification.group=绘图
notification.save.all.is.finished=所有图已保存。
notification.save.file.is.finished=文件已保存
open.plot.editor.tab.name=绘图
plots.close.all.plots.action=关闭所有图
plots.close.plot=关闭图
plots.close.selected.plot=关闭所选图
plots.empty.window=此处将显示 Python 图
plots.save.all.plots.action=保存所有图
plots.save.as.html=另存为 HTML
plots.save.as.image=另存为图像
plots.select.directory.to.save.plot=选择要保存图的目录
plots.select.file.to.save.plot=选择要保存图的文件
python.sci.colored.by.default=默认为彩色
python.sci.resize.automatically=自动调整大小
python.sci.view.action.text=科学模式
python.sci.view.interactive.plots.editor.name=交互式图
python.sci.view.saving.as.file.action=正在另存为文件
python.sci.view.table.missing.jupyter=<html>如果不安装 Jupyter 插件，<br/>则无法使用富表。<br/><br/><a href\="intellij.jupyter.py">安装 Jupyter 插件</a></html>
python.scientific.max.plots=最大图数量\:
python.scientific.show.plots.in.toolwindow=在工具窗口中显示绘图
python.scientific.suggest.install.kaleido=建议为 plotly 安装 'kaleido'
python.scientific.suggest.install.mpld3=建议为交互式 matplotlib 图安装 'mpld3'
python.scientific.suggest.install.pillow=建议为调试图像查看器安装 'pillow'
python.scientific.use.interactive.mode=为 Matplotlib 使用 'mpld3' 交互式图
sci.project.data.folder=数据文件夹\:
separator.TableViewColoring.mode=表颜色映射
separator.TableViewColoring.options=选项
