action.AddSourcesContentToSourceMap.text=将源添加到源映射
action.JavaScriptDebugger.OpenDevTools.description=打开 Web 控制台的 DevTools 窗口
action.JavaScriptDebugger.OpenDevTools.text=打开 Web 控制台的 DevTools 窗口
action.JavaScriptDebugger.OpenUrl.dialog.error=找不到文件“{0}”
action.JavaScriptDebugger.OpenUrl.dialog.label=指定URL(&S)\:
action.JavaScriptDebugger.OpenUrl.dialog.title=打开 URL
action.JavaScriptDebugger.OpenUrl.text=从 URL 打开源代码…
action.VisualizeSourceMap.text=可视化源映射
action.XDebugger.ValueGroup.CopyJson.text=复制 JSON
action.breakpoint.toggle.exception=遇到异常时切换中断
action.name.specify.remote.url.for.0=指定 ''{0}'' 的远程 URL
action.watches.method.return.value.description=启用监视上次执行的方法返回值
action.watches.method.return.value.enable=显示方法返回值
action.watches.show.getter.and.setter.functions.description=启用在变量视图中显示 getter 和 setter 函数
action.watches.show.getter.and.setter.functions.enable=显示 getter 和 setter 函数
checkbox.text.do.not.step.into.library.scripts=不单步执行库脚本
checkbox.text.do.not.step.into.scripts=不单步执行脚本(&N)\:
checkbox.text.show.the.following.properties.for.object.node=显示对象节点的以下属性(&P)\:
chrome.breakpoint.error.cannot.set.exception.catch.mode=无法设置异常 catch 模式
column.title.remote.url=远程 URL
console.editor.notification.error.cannot.navigate=无法导航
dialog.message.path.to.correct={0} 的路径不正确
dialog.message.path.to.executable.empty={0} 可执行文件的路径为空
dialog.message.please.specify.path.to.correctly=请正确指定 {0} 的路径
dialog.message.please.specify.working.directory.correctly=请正确指定工作目录
dialog.title.add.property=添加属性
dialog.title.remote.url=远程 URL
dialog.title.stepping.filter=步进筛选器
dialog.title.stop.debugger.session=停止调试器会话
error.connection.address=无法连接到 {0}。
error.connection.no.page=找不到要连接的页面 {0}
error.message.breakpoint.in.0.files.are.not.supported={0} 文件中的 JavaScript 断点不受支持。要调试 {0} 文件中的 JavaScript，<br>请从“调试”工具窗口的“脚本”标签页中打开脚本。
error.message.exe.path.not.specified=未指定程序路径
error.message.input.path.not.specified=未指定程序输入路径
error.websocket.malformed.message=响应的格式错误
error.websocket.message=来自远程主机的响应无效。请检查调试配置中的选项。
error.websocket.nodejs.message=请注意，Node.js 不允许使用主机名进行连接，请参阅 <a href\='https\://nodejs.org/en/docs/guides/debugging-getting-started/\#browsers-websockets-and-same-origin-policy'>node.js docs</a>。
javascript.breakpoint.title=JavaScript 行断点
javascript.breakpoint.type.line=行
javascript.configuration.description=JavaScript 调试会话配置
javascript.configuration.name=JavaScript 调试
javascript.debugger.file.not.found=找不到调试文件
javascript.debugger.file.not.html=调试文件不是 HTML 文件
javascript.debugger.notification.error.cannot.run.to.cursor.exception.message=无法运行到光标\: {0}
javascript.debugger.notification.error.cannot.run.to.location=无法运行到位置，源位置未映射\: {0}
javascript.debugger.settings.always.do.smart.step.into=始终进行智能单步执行
javascript.debugger.settings.display.name=JavaScript
javascript.debugger.settings.url=URL(&U)\:
javascript.debugger.url.is.not.specified=未指定 URL
javascript.exception.breakpoints.any=任何异常
javascript.exception.breakpoints.dialog.text=输入异常名称\:
javascript.exception.breakpoints.dialog.title=添加异常断点
javascript.exception.breakpoints.props=仅未捕获
javascript.exception.breakpoints.title=JavaScript 异常断点
js.DebuggableProcessRunConfigurationEditor.label=文件\:
js.console.debug.name=调试器控制台
js.console.filter.popup=筛选
js.console.filter.reset=重置筛选器
js.console.filter.severity=严重性
js.console.filter.title=控制台消息筛选器
js.console.jcef.check.notification=JavaScript 调试器控制台\: 已禁用 Web 控制台，切换到捆绑的 JetBrains 运行时。\n 要启用 Web 控制台，请在注册表中切换标志“js.debugger.webconsole”。
js.console.node.process.name=进程控制台
js.coverage.columns.covered=已覆盖，%
js.coverage.columns.file=文件
js.coverage.files.covered={0, choice, 1\#{0} 个文件|2\#{0} 个文件}
js.coverage.lines.covered=已覆盖
js.coverage.lines.covered.percent=已覆盖 {0}% 的行
js.coverage.lines.not.covered=未覆盖
js.coverage.notification=在浏览器中与应用交互，然后按“停止”以查看覆盖率报告。
js.debug.another.debugger.attached=附加了另一个调试器，请确保 DevTools 已关闭或重启应用程序以强制分离
js.debug.try.another.port=尝试另一个端口…
js.debug.vm.title=调试端口 {0}
js.debug.waiting.for.chrome.remote.debug.port=<html><body>正在等待连接到 localhost\:{0,number,0}。<br><br>请确保在打开远程调试端口的情况下成功启动浏览器。<br>如果已启动具有相同用户数据目录的 Chrome，将无法打开端口。
js.debug.waiting.for.chrome.remote.debug.port.more.info=更多信息…
js.debugger.chrome.extension.used.group.name=JavaScript 调试器 Chrome 扩展程序
js.debugger.chrome.extension.used.message=您可能安装了 <code>JetBrains IDE Support</code> Chrome 扩展程序。该扩展程序不再以任何方式使用，应予以移除。您可以从 <code>chrome\://extensions</code> 页面将其移除。
js.debugger.chrome.extension.used.title=JetBrains Chrome 扩展程序正在尝试连接
js.debugger.terminal.start.debugger.from.url=要启动 JavaScript 调试会话，请按住 {0}+Shift 并点击该 URL 链接。
js.debugger.terminal.start.debugger.from.url.more=参阅文档了解更多信息
js.file.mapping.indexing=索引更新期间无法进行智能远程文件映射
js.frame.async=来自 {0} 的异步调用
js.reload.in.browser.description=重新加载当前在调试的浏览器标签页中打开的页面
js.reload.in.browser.text=在浏览器中重新加载
js.remote.configuration.name=附加到 Node.js/Chrome
js.remote.debug.attach.to=附加到
js.remote.debug.host=主机(&H)\:
js.remote.debug.inspector.protocol=Chrome 或 Node.js > 6.3 使用 --inspect 启动
js.remote.debug.inspector.protocol.detected=已使用检查器协议连接。请在您的配置中选择 {0}，加快启动速度。
js.remote.debug.node.protocol=Node.js < 8 使用 --debug 启动
js.remote.debug.port=端口(&P)\:
js.remote.debug.restart.on.disconnect=自动重新连接(&R)
js.remote.mapper.choose.path.description=为“{0}”指定本地路径
js.remote.mapper.choose.path.title=选择本地路径
js.restart.frame.description=重启当前框架
js.restart.frame.text=重启框架
js.scripts.action.open=打开来源
js.scripts.action.open.actual=打开实际来源
js.scripts.no=未加载脚本
js.scripts.no.browser={0} 未加载任何脚本
js.scripts.nodes.root.evaluated=(已求值)
js.scripts.nodes.root.lib=库
js.scripts.nodes.root.no=(无域)
js.scripts.set.local.path=指定本地路径…
js.scripts.source.tree.internal.call.label=<内部调用>
js.scripts.source.tree.root.label=<root>
js.scripts.tab.title=脚本
js.scripts.visualize.action=可视化源映射
js.scripts.visualize.action.add.content=将源内容添加到 {0}
js.scripts.visualize.action.add.content.notification=源映射已有源内容
js.scripts.visualize.action.add.content.notification.created=源映射包含已创建的源内容\: {0}
js.scripts.visualize.action.browse=浏览
js.scripts.visualize.dialog.title={0} 的源可视化
js.scripts.visualize.name=可视化器
js.scripts.visualize.notification.cant=找不到生成的文件
js.scripts.visualize.notification.decode=无法解码源映射
js.scripts.visualize.notification.empty=映射为空
js.scripts.visualize.popup.choose=选择脚本
js.scripts.visualize.select.generated=选择生成的文件
js.scripts.visualize.unmapped=未映射
label.text.browser=浏览器(&W)\:
label.text.input.remote.url.for.0=输入 ''{0}'' 的远程 URL\:
label.text.remote.urls.of.local.files=本地文件的远程 URL (可选)
label.text.specify.property.name=属性名称\:
label.text.specify.url.pattern=指定通配符 (允许使用 '*' 和 '?'，分号 ';' 用作名称分隔符)\:
message.text.do.you.want.to.stop.0.sessions={0}\n是否要停止 {1} 个{2, choice, 1\#会话|2\#会话}?
notification.group.js.debugger=JavaScript 调试器
notification.group.source.map=已配置 JavaScript 源代码映射
notification.group.web.console=JavaScript 调试器 Web 控制台不可用
nwjs.error.app.doesnt.exist=NW.js 应用不存在 {0}
nwjs.error.cannot.get.main.url=无法获取主 URL
nwjs.error.cannot.parse.main.url=无法解析主 URL\: {0}
nwjs.error.main.file.not.valid=主文件无效
nwjs.error.manifest.not.found=未找到清单文件，package.json 不存在
nwjs.error.unknown.file=未知文件 {0}
nwjs.progress.title.unpacking.nw.js.app=正在解压缩 NW.js 应用…
nwjs.run.configuration.app=NW.js 应用
nwjs.run.configuration.arguments=NW.js 实参\:
nwjs.run.configuration.interpreter=NW.js 解释器\:
popup.title.step.into.function=步入函数
runConfig.nextJs.client.name=Next.js\: 调试客户端
runConfig.nextJs.server.name=Next.js\: 服务器端
start.debug.in.browser.text=在浏览器中启动调试
start.debug.in.browser.tooltip.description=启动调试会话并打开浏览器。或者，按住 {0}+Shift 并点击链接。
start.debug.in.browser.tooltip.title=在浏览器中启动调试
text.no.filters=未配置脚本筛选器
use.first.line.breakpoints.checkbox.text=确保在加载脚本时检测到断点(&E)
use.first.line.breakpoints.checkbox.tooltip=选中此选项以确保立即命中在页面加载时执行的代码中的断点。可能会降低初始页面的加载速度。
