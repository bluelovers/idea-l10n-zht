eclipse.name=Eclipse
eclipse.import.label.select.workspace=选择 Eclipse 项目目录(&S):
eclipse.import.title.select.workspace=选择 Eclipse 项目目录
eclipse.import.title.module.dir=选择 IntelliJ IDEA 项目和模块文件的目录
eclipse.import.warning.undefinded.libraries=导入的项目引用了未知的全局库
eclipse.import.converting=正在转换 Eclipse 项目
eclipse.import.scanning=正在扫描 Eclipse 项目
eclipse.export.dialog.title=导出到 Eclipse
eclipse.export.nothing.to.do=无法导出任何模块。您不能导出符合以下条件的模块: \n\
1) 没有内容根\n\
2) 有多个内容根\n\
3) 已转换为 Eclipse 兼容格式
eclipse.classpath.storage.description=Eclipse (.classpath)
filetype.eclipse.description=Eclipse 项目
filetype.eclipse.display.name=Eclipse 项目
eclipse.create.library.title=定位 Eclipse 安装
eclipse.create.library.description=<html>您要导入的某些项目依赖于 Eclipse 平台。<br>IntelliJ IDEA 将创建一个名为 {0} 的全局库，其中包含 Eclipse 库。</html>
eclipse.import.code.style.default.option=使用默认的项目代码样式
eclipse.import.code.style.import.option=从 Eclipse 项目导入代码样式
eclipse.import.code.style.default.hint=设置 | 编辑器 | 代码样式
eclipse.import.code.style.import.hint=<html>每个项目支持一种代码样式。并非所有 Eclipse 代码样式设置都可以映射到 Intellij IDEA 设置，<br>因此将使用最佳近似值。
eclipse.import.code.style.organize.imports.box=导入“组织导入”设置
list.empty.text.code.styles.not.found=找不到代码样式
border.text.choose.project.code.style=选择项目代码样式
button.browse.dialog.description.locate.user.libraries.file=定位要导出的项目库所在的 .userlibraries 文件
button.browse.dialog.title.locate.user.libraries=定位 .userlibraries
dialog.message.incompatible.modules.found=<html><body>找到 Eclipse 不兼容的模块: <ul><br><li>{0}</ul><br>要继续吗? 继续可能会丢失配置。</body> </html>
dialog.title.module.files.found=找到模块文件
dialog.message.0.module.files.found.1.would.you.like.to.reuse.them=找到 {0} 和模块文件: \n\
{1}。\n\
要重用它们吗?
notification.content.imported.projects.contain.unknown.natures=导入的项目包含未知性质:<br>{0}<br>导入后某些设置可能会丢失。
incompatible.eclipse.module.format.message.output=模块 ''{0}'' 的输出路径与 Eclipse 格式不兼容，该格式仅支持内容根目录下的输出。\n\
确保不选择“继承项目编译输出路径”
incompatible.eclipse.module.format.message.no.content.roots=模块 ''{0}'' 没有内容根目录，因此与 Eclipse 格式不兼容
incompatible.eclipse.module.format.message.library.root=来自模块 ''{1}'' 的库 ''{0}'' 与 Eclipse 格式不兼容，该格式仅支持一个库内容根目录
unknown.libraries.dialog.description=导出 Eclipse 用户库，并立即从生成的 .userlibraries 文件中导入它们
error.while.importing.project.code.style=导入项目代码样式时出错: {0}
unknown.modules.detected.dialog.message=检测到未知模块\n\
{0}
notification.title.unknown.natures.detected=检测到未知性质
unknown.jdks.detected.message={0, choice, 0#\n\
和 jdks\n\
|1#导入的项目引用了未知的 jdks\n\
}{1}
eclipse.file.to.import.description=<b>Eclipse</b> 项目(.project)或类路径(.classpath)文件
eclipse.import.step.name=Eclipse 项目根目录
eclipse.projects.to.import.selection.step.name=要导入的 Eclipse 项目
unable.to.proceed.import.title=无法继续
duplicate.names.found.import.error.message=找到重复名称: {0}
action.ExportToEclipse.text=将项目导出到 Eclipse…
action.ExportToEclipse.MainMenu.text=项目导出到 Eclipse...
label.path.to.resulting.userlibraries=生成的 .userlibraries 的路径(&P)
checkbox.export.non.module.libraries=导出非模块库(&X)
border.title.modules.to.export=要导出的模块
checkbox.switch.selected.modules.to.eclipse.compatible.format=将所选模块转换为 Eclipse 兼容格式(&E)
checkbox.link.created.intellij.idea.modules.to.eclipse.project.files=将创建的 IntelliJ IDEA 模块链接到 Eclipse 项目文件(&L)
radio.button.create.module.files.near.classpath.files=在 .classpath 文件附近创建模块文件
label.detect.test.sources.comma.separated.path.masks.and.wildcards.allowed=检测并测试源代码(使用逗号分隔的路径掩码，允许使用 '*' 和 '?' 通配符):
border.title.intellij.idea.project.and.module.files.location=IntelliJ IDEA 项目和模块文件的位置
radio.button.keep.project.and.module.files.in=保存项目和模块文件的文件夹
border.title.choose.project.code.style=选择项目代码样式
eclipse.color.theme.name=Eclipse 颜色主题(XML)
eclipse.xml.profile=Eclipse XML 配置文件
action.WelcomeScreen.OpenEclipseProject.text=打开现有 Eclipse 项目…
eclipse.projects=Eclipse 项目