GuiDesigner.FormSource.title=表单 - {0}
action.GuiDesigner.AddComponent.description=添加组件
action.GuiDesigner.AddComponent.text=将组件添加到调色板…
action.GuiDesigner.AddGroup.description=添加组
action.GuiDesigner.AddGroup.text=添加组
action.GuiDesigner.AddTab.description=将新标签页添加到所选标签页式窗格
action.GuiDesigner.AddTab.text=添加标签页
action.GuiDesigner.ChooseLocale.text=选择 UI 设计器窗体区域设置
action.GuiDesigner.CreateComponent.description=选择组件类，并将该组件添加至窗体
action.GuiDesigner.CreateComponent.text=创建组件
action.GuiDesigner.CreateListener.description=生成侦听器类并将其附加到组件
action.GuiDesigner.CreateListener.text=创建侦听器
action.GuiDesigner.DataBindingWizard.text=数据绑定向导…
action.GuiDesigner.DecreaseIndent.description=减少所选组件的缩进
action.GuiDesigner.DecreaseIndent.text=减少缩进
action.GuiDesigner.DeleteComponent.description=删除组件
action.GuiDesigner.DeleteComponent.text=删除组件
action.GuiDesigner.DeleteGroup.description=删除组
action.GuiDesigner.DeleteGroup.text=删除组
action.GuiDesigner.Duplicate.description=复制组件
action.GuiDesigner.Duplicate.text=复制
action.GuiDesigner.EditComponent.description=编辑组件
action.GuiDesigner.EditComponent.text=编辑组件
action.GuiDesigner.EditGroup.description=编辑组
action.GuiDesigner.EditGroup.text=编辑组
action.GuiDesigner.ExpandSelection.description=结构化扩展选区
action.GuiDesigner.ExpandSelection.text=扩展选区
action.GuiDesigner.Flatten.description=删除所选容器，并将其内容移至父容器
action.GuiDesigner.Flatten.text=平展
action.GuiDesigner.FormSource.description=显示窗体 XML 内容
action.GuiDesigner.FormSource.text=窗体源
action.GuiDesigner.GenerateMain.description=生成 main() 方法以显示 UI 窗体
action.GuiDesigner.GenerateMain.text=窗体 main()
action.GuiDesigner.GoToListener.description=导航到附加到组件的侦听器类
action.GuiDesigner.GoToListener.text=转到侦听器
action.GuiDesigner.GroupButtons.description=将所选按钮添加到按钮组
action.GuiDesigner.GroupButtons.text=将按钮分组
action.GuiDesigner.IncreaseIndent.description=增加所选组件的缩进
action.GuiDesigner.IncreaseIndent.text=增加缩进
action.GuiDesigner.Morph.description=将此组件转换为其他类，同时保留属性
action.GuiDesigner.Morph.text=转换组件…
action.GuiDesigner.Pack.description=将容器收缩至最小尺寸
action.GuiDesigner.Pack.text=打包
action.GuiDesigner.PreviewForm.description=预览窗体
action.GuiDesigner.PreviewForm.text=预览
action.GuiDesigner.QuickJavadoc.description=显示包含所选属性 JavaDoc 的弹出窗口
action.GuiDesigner.QuickJavadoc.text=快速 JavaDoc(_Q)
action.GuiDesigner.ReloadCustomComponents.description=重新加载修改的自定义组件类，并重新创建窗体
action.GuiDesigner.ReloadCustomComponents.text=重新加载自定义组件
action.GuiDesigner.ResetValue.description=还原所选属性的默认值
action.GuiDesigner.ResetValue.text=还原为默认值
action.GuiDesigner.ShowComponentTags.description=切换标签在没有文本的大型组件上的可见性
action.GuiDesigner.ShowComponentTags.text=显示组件标签
action.GuiDesigner.ShowGrid.description=切换容器布局网格的可见性
action.GuiDesigner.ShowGrid.text=显示网格
action.GuiDesigner.ShrinkSelection.description=结构化收缩选区
action.GuiDesigner.ShrinkSelection.text=收缩选区
action.GuiDesigner.SurroundPopup.description=使用容器包围所选控件
action.GuiDesigner.SurroundPopup.text=环绕方式…
action.GuiDesigner.UngroupButtons.description=从按钮组中移除所选按钮
action.GuiDesigner.UngroupButtons.text=取消按钮分组
action.NewDialog.text=Swing 对话框
action.NewForm.text=Swing UI 窗体
action.alter.data.binding=更改数据绑定
action.bind.to.another.bean=绑定到另一个 Bean
action.change.field.type=将字段 ''{0}'' 类型从 ''{1}'' 更改为 ''{2}''
action.create.class=创建类 ''{0}''
action.create.dialog=创建对话框类
action.create.field=创建字段 ''{0}''
action.delete.column=删除列
action.delete.columns=删除列
action.delete.row=删除行
action.delete.rows=删除行
action.description.create.dialog=创建实现 javax.swing.JDialog 的新类
action.group.columns=将列分组
action.group.rows=将行分组
action.gui.form.description=创建空 GUI 窗体
action.gui.form.text=GUI 窗体
action.insert.column.after.this=在此后面插入列
action.insert.column.before.this=在此前面插入列
action.insert.row.after.this=在此后面插入行
action.insert.row.before.this=在此前面插入行
action.split.column=拆分列
action.split.row=拆分行
action.suppress.for.all.components=对所有组件禁止
action.suppress.for.component=对组件禁止
action.suppress.named.for.all.components=禁止所有组件的 ''{0}''
action.suppress.named.for.component=禁止组件的 ''{0}''
action.ungroup.columns=取消列分组
action.ungroup.rows=取消行分组
add.component.cannot.load.form=无法加载窗体文件 {0}
add.component.choose.form=选择窗体文件
add.component.choose.icon=选择图标文件
add.component.class=类\:
add.component.error.component.required=请选择一个从 JComponent 派生的类
add.component.error.qualified.name.required=请输入限定的类名
add.component.form=窗体\:
add.component.form.not.bound=添加到调色板的窗体必须绑定到一个类
add.component.root.not.bound=添加到调色板的窗体必须有针对顶层组件的绑定
add.library.dependency.prompt=类 {0} 在库 {1} 中定义。您想将模块 {2} 中的依赖项添加到该库吗?
add.library.dependency.title=添加库依赖项
add.module.dependency.prompt=类 {0} 在模块 {1} 中定义。您想将模块 {2} 的依赖项添加到该模块吗?
add.module.dependency.title=添加模块依赖项
alignment.bottom=底部(&B)
alignment.center=中心(&C)
alignment.fill=填充(&F)
alignment.left=左(&L)
alignment.right=右(&R)
alignment.top=顶部(&T)
bind.to.bean.getdata.checkbox=getData()
bind.to.bean.ismodified.checkbox=isModified()
bind.to.bean.setdata.checkbox=setData()
border.color.editor.title=边框颜色
border.title.editor.title=边框标题
bound.field.type.mismatch=GUI 组件 (''{0}'') 的类型和绑定字段 (''{1}'') 不匹配
button.group.bound.checkbox=绑定到字段
button.group.name.label=名称\:
button.group.name.prompt=输入组名称\:
button.group.name.title=创建按钮组
button.group.new=新建…
button.group.none=<无>
checkbox.auto.create.binding=自动创建绑定
checkbox.can.attach.label=可以有附加的标签
checkbox.can.grow.horz=可以扩展(&G)
checkbox.can.grow.vert=可以扩展(&R)
checkbox.can.shrink.horz=可以收缩(&S)
checkbox.can.shrink.vert=可以收缩(&H)
checkbox.create.bound.class=创建绑定类(&B)
checkbox.generate.cancel=生成 'Cancel' 处理程序
checkbox.generate.main=生成可以创建并显示对话框的 main() 方法
checkbox.generate.ok=生成 'OK' 处理程序
checkbox.is.container=是容器(&C)
checkbox.want.grow.horz=希望扩展(&W)
checkbox.want.grow.vert=希望扩展(&A)
chk.copy.form.runtime=自动将表单运行时类复制到输出目录(&A)
chk.show.expert.properties=显示专家属性(&S)
choose.locale.default=<默认>
choose.locale.description=选择用于显示本地化字符串属性的区域设置
class.in.package={0} ({1} 内)
client.properties.already.defined=已定义属性 {0}
client.properties.class=类
client.properties.class.not.component=不是组件类\: {0}
client.properties.class.not.found=找不到类 {0}
client.properties.class.prompt=输入类的完全限定名称，为其配置客户端属性\:
client.properties.configure=(配置…)
client.properties.name=名称
client.properties.title=配置客户端属性
client.properties.type.header=属性类型
client.property.add.title=添加客户端属性
client.property.dialog.boolean=布尔型(&B)
client.property.dialog.double=双精度(&D)
client.property.dialog.integer=整型(&I)
client.property.dialog.string=字符串(&S)
client.property.name=属性名称(&P)\:
color.chooser.title=选择 {0} 的颜色
column.bean.property=Bean 属性
column.form.field=窗体字段
column.key=键
column.property=属性
column.value=值
combobox.group=组(&O)\:
command.create.field=创建字段
command.create.property=创建属性值
command.cut=剪切
command.delete.column=删除列
command.delete.row=删除行
command.delete.selection=删除选区
command.delete.unused.field=删除未使用的字段
command.drop.components=放置组件
command.duplicate=复制
command.edit.string.property=编辑字符串属性
command.flatten=平展
command.insert.component=插入组件
command.paste=粘贴
command.set.property.value=设置属性值
command.update.property=更改属性值
comment.call.onCancel.cross=// 点击 X 时调用 onCancel()
comment.call.onCancel.escape=// 遇到 ESCAPE 时调用 onCancel()
comment.oncancel=// 必要时在此处添加您的代码
comment.onok=// 在此处添加您的代码
component.form=窗体
component.gui.designer.form.to.source.compiler=GUI 设计器窗体到源编译器
component.horizontal.spacer=水平分隔
component.no.binding=无绑定
component.none=<无>
component.not.found=<未找到>
component.vertical.spacer=垂直分隔
create.component.title=选择要插入的组件
create.listener.class.not.found=找不到侦听器类
create.listener.command=创建侦听器
create.listener.title=创建侦听器
custom.create.field.name.prompt=具有自定义创建代码的组件需要绑定到字段。请输入字段名称\:
custom.create.title=自定义创建
default.field.accessibility=UI 捆绑字段的默认可访问性(&F)\:
default.layout.manager=默认布局管理器(&D)\:
delete.column.nonempty=所选的{1, choice, 1\#列包含|2\# {1} 列包含} {0} 个组件。您想删除这些组件和{1, choice, 1\#列|2\#列}吗?
delete.column.title=删除列
delete.component.prompt=从调色板中移除组件 {0}?
delete.component.title=删除组件
delete.row.nonempty=所选的{1, choice, 1\#行包含|2\# {1} 行包含} {0} 个组件。您想删除这些组件和{1, choice, 1\#行|2\#行}吗?
delete.row.title=删除行
dialog.title.check.field.usages=检查字段 ''{0}'' 的用法
edit.dialog.class.name=输入新的对话框类名\:
edit.enter.group.name=输入组名称\:
edit.text.change.all=全部更改
edit.text.make.unique=设为唯一
edit.text.multiple.usages=属性 {0} 具有 {1} 个用法。确定要更改其值吗?
edit.text.multiple.usages.title=更改属性值
edit.text.searching.references=正在搜索属性引用
edit.text.unique.key.prompt=输入新属性键的名称\:
editbox.bundle.name=捆绑包名称(&N)\:
editbox.class=类(&C)\:
editbox.class.2=类(&L)\:
editbox.icon=图标(&I)\:
editbox.key=键(&K)\:
editbox.package=软件包(&P)\:
editbox.value=值\:
editbox.value.2=值(&V)\:
error.X.is.not.a.valid.class.name=“{0}”不是有效的类名
error.X.is.not.a.valid.property.name=“{0}”不是有效的属性名称
error.bind.incompatible.types=类型不兼容。实际为“{0}”，需要“{1}”
error.binding.already.exists=到字段“{0}”的绑定已存在
error.binding.not.unique=绑定非唯一
error.bound.class.does.not.exist=绑定类 {0} 不存在
error.bound.to.not.found.class=窗体绑定到找不到的类 {0}。
error.bundle.does.not.exist=捆绑包“{0}”不存在
error.cannot.change.field.type=无法更改字段 ''{0}'' 类型。\n原因\: {1}
error.cannot.copy.gui.designer.form.runtime=无法将 GUI 设计器窗体运行时类复制到模块 {0} 的输出目录中。\n原因\: {1}
error.cannot.create.class=无法创建类 ''{0}''。\n原因\: {1}
error.cannot.create.class.X.because.it.already.exists=无法创建类“{0}”，因为此类已存在
error.cannot.create.class.not.in.source.root=无法创建类，因为窗体文件不属于\n任何源根
error.cannot.create.dialog=无法创建对话框
error.cannot.create.field=无法创建字段 ''{0}''
error.cannot.create.field.no.class=无法创建字段 ''{0}''，因为\n类 ''{1}'' 不存在。
error.cannot.create.field.reason=无法创建字段 ''{0}''。\n原因\: {1}
error.cannot.create.form=无法创建窗体
error.cannot.create.package=无法创建软件包 ''{0}''。\n原因\: {1}
error.cannot.delete.unused.field=无法删除未使用的字段\: {0}
error.cannot.find.package=找不到软件包\: {0}
error.cannot.load.class=无法加载类 {0}
error.cannot.preview.empty.form=无法预览空窗体 ''{0}''
error.cannot.preview.form=无法预览窗体 ''{0}''\n原因\: {1}
error.cannot.process.form.file=无法处理窗体文件。原因\: {0}
error.cannot.read=无法读取 {0}
error.cannot.read.form=无法读取窗体文件 ''{0}''。\n原因\: {1}
error.cannot.remove.default.group=您不能移除包含默认调色板组件的组。
error.cannot.remove.default.palette=您不能移除默认调色板组件。
error.cant.bind.to.static=无法绑定到静态字段“{0}”
error.card.already.exists=此容器中已存在名称为 ''{0}'' 的卡片
error.class.cannot.be.instantiated=无法实例化类“{0}”
error.class.does.not.exist=类“{0}”不存在
error.class.not.found=找不到类
error.class.not.found.N=找不到类\: {0}
error.class.to.bind.does.not.exist=要绑定的类不存在\: {0}
error.class.to.bind.not.found=找不到要绑定的类\: {0}
error.class.with.name.X.does.not.exist=名称为“{0}”的类不存在
error.custom.create.binding.required=该组件需要自定义创建代码，因此必须具有非空绑定
error.custom.create.no.binding=只有绑定到字段的组件才能有自定义创建代码
error.duplicate.bind=该窗体绑定到类 {0}。\n另一个窗体 {1} 也绑定到此类。
error.field.not.found.in.class=在类 {1} 中找不到字段 {0}
error.for.component=组件 {0}\: {1}
error.form.file.is.invalid=窗体文件无效
error.form.file.is.invalid.message=窗体文件无效\: {0}
error.form.file.is.not.in.source.root=窗体文件不在源根中
error.form.is.not.bound.to.a.class=窗体未绑定到类
error.getting.value=获取值时出错\: {0}
error.group.name.unique=组名称应唯一
error.instantiating.nested.form=实例化嵌套窗体 {0} 时出错\: {1}
error.invalid.binding.field.type=无效的绑定字段类型\: 字段 {0}，类 {1}
error.item.already.added=GUI 设计器调色板\: 已添加此类的条目\: {0}
error.multiple.toplevel.components=窗体无法编译，因为顶层包含多个组件
error.no.custom.create.method=窗体包含具有“自定义创建”选项但没有 createUIComponents() 方法的组件
error.no.field.in.class=类“{1}”中不存在字段“{0}”
error.no.message=没有消息
error.nonempty.xy.panels.found=存在采用 XY 布局的非空面板。请在网格中布局。
error.not.an.integer=所输入的值不是整数
error.one.toplevel.component.required=顶层只有一个组件
error.package.does.not.exist=软件包不存在\: {0}
error.package.with.name.X.does.not.exist=名称为“{0}”的软件包不存在
error.panel.not.laid.out=在此面板采用网格布局前无法编译窗体
error.please.specify.class.name.of.the.bean.to.be.created=请指定要创建的 Bean 的类名
error.please.specify.fully.qualified.name.of.bean.class=请指定 Bean 类的完全限定名称
error.recursive.form.nesting=由于递归窗体嵌套，因此无法加载窗体
error.required.class.not.found=找不到所需的类
error.required.class.not.found.N=找不到所需的类\: {0}
error.setting.value=设置值时出错\: {0}
error.specify.bundle.name=请指定资源捆绑包的名称
error.value.should.not.be.less=值不应小于 {0}
field.is.overwritten.by.generated.code=字段 ''{0}'' 被生成的代码覆盖
font.chooser.bold=粗体
font.chooser.bold.italic=加粗倾斜
font.chooser.font=字体(&F)
font.chooser.font.tab=字体选择器
font.chooser.italic=斜体
font.chooser.preview.text=预览文本
font.chooser.regular=常规
font.chooser.size=大小(&Z)
font.chooser.style=样式(&S)
font.chooser.swing.tab=Swing 字体
font.chooser.title=选择 {0} 的字体
font.default=<默认>
form.inspections.group=UI 窗体
form.usage.type=GUI 窗体中的用法
generate.main.empty.form=绑定到该类的窗体为空
generate.main.no.default.constructor=该类没有默认的构造函数
generate.main.no.root.binding=绑定到该类的窗体不具备根组件的有效绑定
generate.main.not.valid.form=绑定到类的表单不是有效的 IntelliJ IDEA 表单
generate.main.title=生成 main()
grid.layout.column.properties=列属性
grid.layout.column.property={0, choice, 0\#行|1\#列} {1}
grid.layout.column.selected.property={0} {1, choice, 0\#行已选|1\#列已选}
grid.layout.want.grow=希望增大
group.GuiDesigner.MainToolbarActions.text=UI 设计器工具栏操作
group.GuiDesigner.NewActions.text=Swing UI 设计器
group.buttons.name.prompt=输入按钮组的名称\:
group.buttons.title=将按钮分组
group.horizontal.size.policy=水平大小策略
group.vertical.size.policy=垂直大小策略
gui.editor.save.command=UI 设计器保存
i18n.quickfix.border.title=国际化边框标题
i18n.quickfix.property=国际化属性 ''{0}''
i18n.quickfix.tab.title=国际化 {0}
info.data.binding.regenerate=发现数据绑定到 {0}。如果继续，生成的方法将重新生成。
info.form.not.bound=不执行任何操作。窗体应绑定到类。
info.no.bound.components=不执行任何操作。窗体应至少包含一个绑定组件。
insert.feedback.add.tab=添加标签页\: {0} ({1})
insert.feedback.after.col={0} (行 {1}，在列 {2} 后)
insert.feedback.after.row={0} (列 {1}，在行 {2} 后)
insert.feedback.before.col={0} (行 {1}，在列 {2} 前)
insert.feedback.before.row={0} (列 {1}，在行 {2} 前)
insert.feedback.bottom=底部
insert.feedback.fill=填充
insert.feedback.left=左侧
insert.feedback.right=右侧
insert.feedback.top=顶部
inspection.bound.field.message=赋值给 UI 绑定字段将覆盖 UI 设计器生成的字段
inspection.bound.field.title=赋值给 UI 绑定字段
inspection.duplicate.mnemonics=助记键重复
inspection.duplicate.mnemonics.message=助记键重复\: {0}，{1}
inspection.duplicate.mnemonics.quickfix=分配唯一助记键
inspection.editor.quick.fix.name=更改为 …
inspection.i18n.message.in.form=表单中的硬编码字符串字面量\: ''{0}''
inspection.i18n.message.in.form.title=UI 表单中的硬编码字符串字面量
inspection.invalid.property.in.form.quickfix.error.bundle.not.found=找不到捆绑包 ''{0}''
inspection.invalid.property.in.form.quickfix.error.bundle.not.specified=未指定捆绑包
inspection.invalid.property.in.form.quickfix.error.key.not.found=在区域设置 ''{2}'' 的捆绑包 ''{1}'' 中找不到键 ''{0}''
inspection.invalid.property.in.form.quickfix.error.property.key.not.specified=未指定属性键
inspection.invalid.property.in.form.title=UI 表单中的无效属性键
inspection.java15form.problem.descriptor=使用记录为 @since {0}+ 的 API
inspection.message.typo.in.word=单词 ''{0}'' 中的拼写错误
inspection.message.typo.in.word.title=UI 表单中拼写错误
inspection.missing.mnemonics=缺少助记键
inspection.missing.mnemonics.message=缺少助记键\: {0}
inspection.missing.mnemonics.quickfix.prompt=选择包含助记键的文本\:
inspection.missing.mnemonics.quickfix.title=分配助记键
inspection.no.button.group=单选按钮不在组中
inspection.no.button.group.error=单选按钮不在组中
inspection.no.button.group.quickfix.add=添加到组 ''{0}''
inspection.no.button.group.quickfix.create=将相邻按钮分组
inspection.no.label.for=无组件标签
inspection.no.label.for.command=为组件分配标签
inspection.no.label.for.error=未为组件指定标签
inspection.no.label.for.quickfix=分配标签 ''{0}''
inspection.no.scroll.pane=可滚动的组件不在 JScrollPane 中
inspection.no.scroll.pane.quickfix=使用 JScrollPane 包围
inspection.one.button.group=包含一个按钮的按钮组
inspection.one.button.group.error=包含一个按钮的按钮组
inspections.missing.mnemonic.quickfix=分配助记键
intention.name.save.to.dictionary=将 ''{0}'' 保存到字典
key.chooser.new.property=新建属性(&N)…
key.chooser.new.property.name=键名(&N)\:
key.chooser.new.property.title=创建属性
key.chooser.new.property.value=键值(&V)\:
label.generate.gui.into=将 GUI 生成到\:
label.select.single.component.to.edit.its.properties=选择一个组件\n以编辑其属性
list.editor.prompt=模型中的项目(一个项目一行)(&I)\:
list.editor.title={0} 的列表模型
message.enter.group.name=输入新的组名称\:
message.rename.field=是否还要将字段“{0}”重命名为“{1}”?
morph.component.command=转换组件
morph.component.title=选择要转换成的组件
morph.non.palette.component=转换为非调色板组件
navigate.to.listener.empty=找不到侦听器
navigate.to.listener.title=导航到侦听器
new.form.base.layout.manager.label=基础布局管理器(&L)\:
new.form.class.name.label=类名(&C)\:
new.form.form.name.label=窗体名称(&F)\:
node.button.groups=按钮组
node.suppressed.inspections=禁止的检查
palette.non.palette.component=非调色板组件…
palette.non.palette.component.title=添加非调色板组件
palette.non.palette.component.tooltip=添加调色板中没有的组件
palette.special.group=调色板
paste.choose.destination.prompt=选择粘贴目标位置。点击或按 Enter 键粘贴，按 Esc 键取消
popup.title.select.replacement=选择替换
pressing.up.or.down.arrows.while.in.editor.changes.the.layout.manager=在编辑器中按向上或向下箭头可更改布局管理器
progress.compiling.ui.forms=正在编译 UI 窗体…
progress.converting=正在转换\: {0}
progress.creating.class=正在创建类 {0}。{1}
progress.preview.started=已开始 {0} 预览
property.above.bottom=底部上方
property.above.top=顶部上方
property.always=始终
property.as.needed=根据需要
property.below.bottom=底部下方
property.below.top=顶部下方
property.bottom=底部
property.can.grow=可以增大
property.can.shrink=可以收缩
property.center=中心
property.default=默认
property.fill=填充
property.fixed=已修正
property.focuslost.commit=提交
property.focuslost.commit.or.revert=提交或还原
property.focuslost.persist=保持
property.focuslost.revert=还原
property.horizontal=水平
property.horizontal.wrap=水平换行
property.javadoc.title={0} 属性的文档
property.leading=前导
property.left=左侧
property.never=从不
property.not.defined=<未定义>
property.resize.all.columns=所有列
property.resize.last.column=最后一列
property.resize.next.column=下一列
property.resize.off=关闭
property.resize.subsequent.columns=后续列
property.right=右侧
property.scroll=滚动
property.selection.multiple.interval=多间隔
property.selection.single=单一
property.selection.single.interval=单间隔
property.top=顶部
property.trailing=尾随
property.vertical=垂直
property.vertical.wrap=垂直换行
property.want.grow=希望增大
property.wrap=换行
quickfix.generate.custom.create=生成 createUIComponents() 方法
radio.bind.to.existing.bean=绑定到现有 Bean(&B)
radio.create.new.bean=创建新 Bean(&A)
radio.generate.into.class=二进制类文件(&C)
radio.generate.into.java.on.compilation=编译时的 Java 源代码(&S)
radio.generate.into.java.on.save=保存表单时的 Java 源代码(&O)
radio.resource.bundle=资源包(&B)
radio.string=字符串(&S)
remove.property.quickfix=移除属性
resize.feedback={0}\: {1} R x {2} C
row.0.properties=行 0 属性
separator.java=Java
separator.ui.forms=UI 表单
size.constant=常数(&T)
size.default=默认(&D)
size.grow=扩展(&G)\:
size.maximum.limit=最大值(&A)
size.minimum=最小值(&M)
size.minimum.limit=最小值(&I)
size.preferred=首选(&P)
surround.with.popup.title=包围方式
tab.build.ui.designer=GUI 表单编译
tab.getter=Getter
tab.setter=Setter
tab.untitled=无标题
title.add.component=添加组件
title.add.group=添加组
title.choose.bean.class=选择 Bean 类
title.choose.class.to.bind=选择要绑定的类
title.choose.component.class=选择组件类
title.choose.icon.file=选择图标文件
title.choose.package=选择软件包
title.choose.properties.file=选择属性文件
title.chooser.value=选择属性键
title.column.properties=列 {0} 属性
title.converting.project=正在转换项目…
title.data.binding=数据绑定
title.data.binding.wizard=数据绑定向导
title.default.alignment=默认对齐
title.edit.component=编辑组件
title.edit.group=编辑组
title.edit.text=编辑文本
title.form.preview=窗体预览
title.gui.designer=GUI 设计器
title.height=高度
title.invalid.input=输入无效
title.multiple.columns.selected=已选择多列
title.multiple.rows.selected=已选择多行
title.new.dialog=新建对话框
title.new.gui.form=新建 GUI 窗体
title.no.columns.selected=未选择列
title.no.rows.selected=未选择行
title.rename=重命名
title.row.properties=行 {0} 属性
title.size=大小
title.width=宽度
tooltip.press.accelerator=点击或按 {0}
tooltip.resize.column=列 {0}\: {1}
tooltip.resize.row=行 {0}\: {1}
toolwindow.ui.designer.name=UI 设计器
toolwindow.ui.designer.title=组件树
ui.designer.general.settings.resize.column.and.row.headers=用鼠标调整列标头和行标头的尺寸(&R)
ui.designer.general.settings.use.dynamic.bundles=允许在运行时更改区域设置(需要 2020.1)
ui.is.bound.header=UI 绑定到<br>
uidesigner.generated.code.folding.placeholder.text=UI 设计器生成了代码
uidesigner.string.no.i18n=值无需国际化(&I)
unit.centimeters=厘米
unit.dialog.units=对话框单元
unit.inches=英寸
unit.millimeters=毫米
unit.pixels=像素
unit.points=点
unsupported.component.class.version=不支持的组件类版本
