filetype.css.description=级联样式表

# validation messages
inspections.unresolved.variable=找不到变量 ''{0}''
invalid.css.class.reference=CSS 类引用无效
invalid.css.id.reference=CSS ID 引用无效
invalid.css.integer.value.message=浮点 px 值在不同浏览器上的呈现方式可能不同
invalid.css.selector=CSS 选择器无效
invalid.css.class=CSS 类无效
invalid.file.reference=文件引用无效
unresolved.css.keyframes=无法找到名称为 {0} 的关键帧 #loc
file.refers.not.to=文件不是指{0}文件

create.selector.dialog.title=创建选择器
create.selector.dialog.error.message=选择器无效
create.selector.action=创建选择器

show.applied.styles.for.tag.action.name=显示应用的标记样式(_S)

#highlighting categories
css.comment=注释
css.identifier=标识符
css.property.name=属性名称
css.property.value=属性值
css.tag.name=标签名称
css.keyword=关键字
css.important=重要
css.string=字符串
css.number=数字
css.function=函数
css.property=属性
css.null.value=Null
css.url=URL
css.color=十六进制颜色
css.id.selector=Id selector
css.class.name=类名
css.attribute.name=特性名称
css.unicode.range=Unicode range
css.bad.character=错误字符
css.dot=点
css.colon=冒号
css.comma=逗号
css.semicolon=分号
css.parenthesis=括号
css.brackets=中括号
css.braces=大括号
css.operation.sign=运算符号
css.pseudo.selector=Pseudo selector

css.property.name.label=属性名称
css.property.value.label=属性值
css.media.feature.label=媒体特性
css.pseudo.selector.label=Pseudo selector

#quick documentation
css.element=Css 元素
pseudo.class=伪类
pseudo.element=伪元素
# CSS selector specificity: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity
doc.popup.selector.specificity=特异性:

#parameter info
name.value.presentable.name=<identifier>
custom.property.name.value.presentable.name=<custom property name>
integer.value.presentable.name=<integer>
java.script.value.presentable.name=<java script>
angle.value.presentable.name=<angle>
frequency.value.presentable.name=<frequency>
position.value.presentable.name=<position>
resolution.value.presentable.name=<resolution>
length.value.presentable.name=<length>
number.value.presentable.name=<number>
time.value.presentable.name=<time>
decibel.value.presentable.name=<decibel>
semitones.value.presentable.name=<semitones>
flex.value.presentable.name=<flexible length>
urange.value.presentable.name=<urange>
percentage.value.presentable.name=<percentage>
color.value.presentable.name=<color>
any.value.presentable.name=<any>
string.value.presentable.name=<string>
expression.value.presentable.name=<expression>
selector.value.presentable.name=<selector>
url.value.presentable.name=<url>
id.value.presentable.name=<id>

#lookup items
resolution.in.lookup=分辨率
shape.in.lookup=矩形
counter.in.lookup=计数器
percentage.in.lookup=百分比
length.in.lookup=长度
time.in.lookup=时间
frequency.in.lookup=频率
angle.in.lookup=角度
integer.in.lookup=整数

css.terms.selector=选择器
css.terms.animation=动画
css.terms.ruleset=规则集
css.terms.variable=自定义属性
css.terms.property=属性
css.terms.custom.property.set=自定义属性集
css.value.defined.in.at.value.rule=值

invalid.css.property.name.message=CSS 属性名称无效
css.inspections.family=CSS

css.unclosed.comment=未闭合注释

css.inspections.missing.semicolon.name=缺少分号
css.inspections.missing.semicolon.fix.message=插入分号

css.inspections.charset.wrong.position=@charset 规则必须放在样式表的最开头
css.inspections.charset.wrong.file=@charset 规则必须放在 CSS 文件的最开头
css.inspections.charset.wrong.quotes=字符集必须用双引号引起来
css.inspections.charset.unknown.value=未知字符集
css.inspections.remove.charset.fix=移除位置错误的 @charset
css.inspections.move.charset.fix=将 @charset 移至样式表的最开头

css.inspections.overwritten.properties=覆盖的属性
css.overwritten.properties.message=属性 {0} 已被覆盖 #loc
css.overwriting.properties.duplicates.message=属性 {0} 与属性 {1} 重复 #loc
css.overwriting.properties.duplicated.message=属性 {1} 是属性 {0} 的重复 #loc
css.overwriting.properties.message=属性 {0} 覆盖了属性 {1} #loc
css.overwritten.properties.fix.message=移除属性
css.remove.element=移除 {0}
extract.inline.css.action=提取内联 CSS
extract.inline.css.title=提取内联 CSS
css.class.term=类选择器 {0}
css.class.term.with.file=类选择器 {0} [{1}]
css.id.term=ID 选择器 {0}
css.id.term.with.file=ID 选择器 {0} [{1}]

css.inspections.unresolved.custom.property=未解析的自定义属性
css.inspections.unresolved.custom.property.message=无法解析 <code>#ref</code> 自定义属性 #loc
# The name of the inspections that checks CSS class reference in 'composes: some-class' rule, see https://github.com/css-modules/css-modules#composition
css.inspections.unresolved.class.in.composes.rule='composes' 规则中的未解析类
css.inspections.unknown.property=未知属性
css.inspections.unknown.message=未知 CSS 属性 <code>#ref</code> #loc
css.inspections.vendor.specific.checkbox.label=忽略供应商特定的 CSS 属性
css.inspections.custom.checkbox.label=自定义 CSS 属性:
css.inspections.custom.properties.title=编辑自定义属性
css.unknown.property.fix.name=将 {0} 添加到自定义属性
css.unknown.vendor.property.fix.name=忽略供应商特定的 CSS 属性
css.inspections.create.style.current.file=当前文件
css.inspections.create.style.new.file=新建 CSS 文件…
css.inspections.create.style.existing.file=现有 CSS 文件…
css.inspections.create.style.new.file.title=创建新的 CSS 文件
css.inspections.create.style.new.file.text=请指定新 CSS 文件的位置和名称。
css.inspections.browser.compatibility.properties=属性与所选浏览器不兼容
no.mdn.data.for.property=不支持 CSS 属性 ''{0}'' (没有 MDN 兼容性数据)
property.not.supported.by.some.browsers={1}不支持 CSS 属性 ''{0}''

css.inspections.invalid.group=无效元素
css.inspections.invalid.pseudo=无效的伪选择器
css.inspections.invalid.function=无效函数
css.inspections.invalid.element.selector=无效类型选择器
css.inspections.invalid.media.feature=无效媒体特性
css.inspections.invalid.property.value=无效的属性值
css.inspections.invalid.charset=@charset 位置错误或不正确
css.inspections.negative.value=负属性值
css.inspections.negative.value.text=不允许负值

css.inspections.probable.bugs.group=可能的错误
css.inspections.float.px.length=非整数长度(像素)
css.inspections.float.px.length.fix.error=无法舍入值 {0}
css.inspections.float.px.length.fix.message=将数值舍入为整数
css.inspections.missing.comma.inspection.name=选择器列表中缺少逗号
css.inspections.missing.comma=缺少逗号
css.inspections.missing.comma.fix.message=插入缺少的逗号
css.inspections.nongeneric.fontname=缺少通用字体系列名称
css.overwritten.nongeneric.fontname.message=字体属性 {0} 没有通用默认值 #loc
css.overwritten.nongeneric.fontname.fix.message=插入通用字体名称

css.inspections.code.style.issues.group=代码样式问题
css.inspections.redundant.unit=冗余度量单位
css.inspections.redundant.unit.message=度量单位 <code>#ref</code> 冗余 #loc
css.inspections.redundant.unit.fix.message=移除单位限定符

# common invalid inspections
css.inspections.wrong.context=仅在以下规则中允许 {0}: {1} #loc
css.inspections.element.not.allowed.here=此处不允许 {0} #loc
css.inspections.wrong.media=仅在以下媒体组中允许 {0}: {1} #loc

# pseudo-selector inspection
css.inspections.invalid.pseudo.unknown.message=未知伪选择器 ''{0}'' #loc
css.inspections.invalid.pseudo.keyframes.message=关键帧名称中不允许 ''{0}'' 伪选择器
css.inspections.invalid.pseudo.prefix=应具有前缀 ''{0}''
css.inspections.invalid.pseudo.prefix.quickfix.family.name=替换伪选择器
css.inspections.invalid.pseudo.prefix.quickfix=将 ''{0}'' 替换为 ''{1}''

css.inspections.unknown.at.rule=未知 @ 规则
css.inspections.unknown.target=未解析的文件引用
css.inspections.convert.color.to.hex=颜色可被替换为 #-hex
css.inspections.convert.color.to.rgb=颜色可被替换为 rgb()

css.inspections.code.quality.tools.group=代码质量工具
css.inspections.w3.validator.key=W3C CSS 验证器

# stylelint
css.stylelint.configurable.name=Stylelint
css.stylelint.view.stylelintPackage.label=Stylelint 软件包(&S):
css.stylelint.view.config.file.label=配置文件(&C):
css.stylelint.view.config.file.auto.detect=自动检测
stylelint.select.config.file.title=选择 Stylelint 配置文件
css.stylelint.inspection=Stylelint
css.stylelint.message.prefix=Stylelint:

css.intentions.update.background.image.size.family=应用背景图像的宽度和高度
css.intentions.insert.background.image.size=添加 'width' 和 'height' 属性
css.intentions.update.background.image.size=更新 'width' 和 'height' 属性
css.intentions.update.background.image.size.error=无法解析图像引用
css.intentions.update.background.image.calculate.size.error=无法读取引用中的图像
css.intentions.replace.quotes=替换引号

css.intentions.extract.image=提取图像
css.intentions.extract.image.title=提取图像
css.intentions.extract.image.save.dialog.title=提取数据: 图像文件的 URL
css.intentions.extract.image.cannot.read.data.uri=无法读取数据: URL
css.intentions.extract.image.cannot.define.image.type=无法定义图像类型
css.intentions.extract.image.cannot.save.file=无法保存图像文件

css.intentions.color.change=更改颜色
# {0} - argument is like 'rgb()', 'hsl()', or '#-hex' (without quotation marks). It may also be 'color name', see the `color.name` property below
css.intentions.color.convert=将颜色转换为 {0}
css.intentions.color.convert.error=无法将颜色 {0} 转换为 {1}
# argument of `css.intentions.color.convert` and `css.intentions.color.convert.error`
color.name=颜色名称
css.intentions.replace.with.color.name=替换为颜色名称
css.intentions.replace.with.color.name.text=替换为 ''{0}''

css.intentions.replace.var.with.fallback.value=将 var() 替换为回滚值

css.inspections.invalid.import=@import 位置错误
css.invalid.import.fix.name=将 CSS @import 移至文件顶部
css.invalid.import.remove.fix.name=移除位置错误的 @import

css.selector.matches.unknown.element=选择器匹配未知元素 {0}
css.invalid.invalid.html.tag.reference.class.action=将 {0} 声明为类
css.invalid.invalid.html.tag.reference.id.action=将 {0} 声明为 ID

# expand shorthand action
expand.shorthand.action=展开速记属性
expand.shorthand.family=展开速记属性
expand.shorthand.error=无法执行速记展开

# optimize similar properties
css.inspections.replace.with.shorthand.safely=属性可以安全地替换为速记形式
css.inspections.replace.with.shorthand.unsafely=属性或许可被替换为速记形式
css.inspections.replace.with.shorthand.0.safely=属性可以安全地替换为 ''{0}'' 速记形式
css.inspections.replace.with.shorthand.0.unsafely=属性或许可被替换为 ''{0}'' 速记形式
css.inspections.quick.fix.replace.with.shorthand.safely=替换为 ''{0}'' 速记形式
css.inspections.quick.fix.replace.with.shorthand.unsafely=替换为 ''{0}'' 速记形式(可能更改结果)

#css tree
css.inspections.unused.symbol=未使用的选择器
css.inspections.unused.symbol.text=选择器 {0} 从未使用
css.inspections.unused.symbol.intention=移除未使用的选择器 {0}

# code style
css.code.style.braces.placement=大括号位置(&B):
css.code.style.align.value=对齐值(&A):
css.code.style.braces.end.of.line=行尾
css.code.style.braces.next.line=下一行
css.code.style.value.align.on.colon=冒号上
css.code.style.value.align.on.value=值上
css.code.style.value.align.do.not.align=不对齐
css.code.style.quote.marks=引号(&Q):
css.code.style.quote.marks.double=两次
css.code.style.quote.marks.single=单
css.code.style.quotes.enforce.on.format=强制格式化(&E)
code.style.label.blank.lines.around.top.level.block=环绕顶层块:
code.style.label.blank.lines.around.nested.selector=环绕嵌套的选择器:

# functions inspection
css.inspections.invalid.function.unknown.message=未知函数 <code>#ref</code> #loc
css.inspections.function.mismatched.parameters=不匹配的形参 {0}({1})

# media features inspection
css.inspections.invalid.media.feature.unknown.message=未知的媒体特性 <code>#ref</code> #loc
css.inspections.media.feature.mismatched.values=不匹配的值 {0}({1})

# property value inspection
css.inspections.property.mismatched.values=不匹配的属性值 {0}({1})

# css style browser
css.browser.title=CSS 样式
css.browser.styles={0} 标记的样式
css.browser.styles.title={0} 标记的样式
css.browser.preview.title.default=属性定义块的源代码预览
css.browser.preview.title={0} 属性定义块的源代码预览
css.browser.actions.refresh=刷新
css.browser.actions.refresh.description=刷新应用的样式
css.browser.actions.navigate.to.tag=导航到标记
css.browser.actions.navigate.to.tag.description=导航到标记定义
css.browser.actions.navigate.to.style.source=导航到样式源代码
css.browser.actions.navigate.to.style.source.description=导航到样式源代码
css.browser.actions.expand.styles=展开样式
css.browser.actions.collapse.styles=收起样式
css.browser.actions.closetab=关闭当前选项卡
css.browser.actions.closetab.description=关闭当前选项卡或工具窗口

# color
css.convert.color.to.hex.family=将颜色转换为 #-hex
css.convert.color.to.rgb.family=将颜色转换为 rgb()
css.convert.color.value.to.hex=将颜色转换为 #-hex
css.convert.color.value.to.rgb=将颜色转换为 rgb()
css.choose.color.dialog.title=选择颜色
css.code.style.spaces.frame.title=空格
css.code.style.space.after.colon=冒号后(&C)
css.code.style.space.before.opening.brace=左大括号前(&E)
css.code.style.tab.before.closing.brace=将右大括号与属性对齐(&P)

css.code.style.colors.frame.title=十六进制颜色
css.code.style.colors.format.checkbox=将十六进制颜色格式转换为(&F):
css.code.style.colors.format.long=长格式(&L)
css.code.style.colors.format.short=短格式(&S)
css.code.style.colors.case.checkbox=将十六进制颜色转换为(&H):
css.code.style.colors.case.upper=大写(&U)
css.code.style.colors.case.lower=小写(&W)

# live-template contexts
live.template.context.generic=CSS
live.template.context.property.value=属性值
live.template.context.declaration.block=声明块
live.template.context.ruleset.list=规则集列表

# structure view
structure.imports.filter=显示导入
structure.custom.properties.filter=显示自定义属性

suppress.inspection.statement=对语句禁止
suppress.inspection.ruleset=对规则集禁止
suppress.inspection.all.ruleset=禁止规则集的所有检查
suppress.inspection.atrule=对 @ 规则禁止
suppress.inspection.all.atrule=禁止 @ 规则的所有检查

css.stylesheets.configurable.title=样式表
stylesheet.code.style.group.description=基于样式表的代码样式集。

# suppress inspection "UnusedProperty" - for generating list of inner configrables, see ConfigurableEditor#createDefaultContent
configurable.stylesheets.settings.description=样式表设置

css.dialects.caption=<html><body>要更改文件、目录或整个项目应使用的 CSS 方言 {0}，请根据需要添加其路径，然后从下拉列表中选择方言。<br><br></body></html>
css.dialects.column.title=CSS 方言
css.dialects.title=方言
css.w3c.dialect.name=W3C
css.dialects.override.warning.text=存在为子目录指定的 CSS 方言。重写它们?
css.dialects.override.warning.title=重写子目录 CSS 方言
switch.to.css.dialect.quickfix.fanily.name=切换 CSS 方言
switch.to.css.dialect.quickfix.name=切换到 {0} CSS

css.emmet.enable.label=启用 CSS Emmet(&C)
css.emmet.fuzzy.search=在 CSS 缩写中启用模糊搜索(&F)
css.emmet.auto.insert.vendor.prefixes=自动插入 CSS 供应商前缀(&P)
css.emmet.enable.unknown.properties.expansion=启用未知属性的展开('unknown' 扩展为 'unknown: ;')(&U)

cannot.extract.variable.in.this.context=无法提取此上下文中的变量

duplicate.settings.css.index.names = 属性名称
duplicate.settings.css.index.values = 属性值
duplicate.settings.css.inspection.measure = CSS 属性
duplicate.settings.label.start.do.not.show.duplicates.containing.less.than.n=不显示少于
duplicate.settings.label.tail.n.css.properties=个 CSS 属性的重复项

action.ShowAppliedStylesAction.text=显示应用的标记样式
action.ReloadCssDescriptors.text=重新加载 CSS 描述符
configurable.CssEmmetConfigurable.display.name=CSS
settings.show.css.color.preview.as.background=Show CSS color preview as background
settings.sort.css.properties=排序 CSS 属性(&S)
settings.by.name=按名称(&B)
settings.custom.order=自定义排序(&C):
settings.comma.separated.list.of.css.properties.without.vendor.prefix=Comma-separated list of CSS properties without vendor prefix
css.code.style.keep.single.line.blocks=保持单行块(&K)
column.info.value=值
column.info.name=名称
progress.title.calculating.image.size=正在计算图像大小…
dialog.title.images=图像
column.info.property=属性
dialog.title.new.css.property=新建 CSS 属性
dialog.message.property.name=属性名称:
action.text.separator.open.files=打开文件
action.text.separator.recent.files=最近的文件
action.text.separator.linked.files=链接的文件
action.text.extract.ruleset=提取规则集
validation.info.custom.property.with.this.name.already.exists=文件中已存在具有此名称的自定义属性
validation.info.invalid.custom.property.name=自定义属性名称无效
validation.info.custom.property.name.cant.be.dash.dash=自定义属性名称不能为 '--'
validation.info.custom.property.name.must.start.with.dash.dash=自定义属性名称必须以 '--' 开头
label.text.name2=名称:
message.pattern.unknown.font.family=未知字体系列
command.name.create.file.0=创建文件 {0}
dialog.message.target.file.doesn.t.exist.do.you.want.to.create.it=目标文件不存在。\n要创建吗?
label.text.to=到(&T):
psi.element.type.name.color=颜色
message.pattern.value.0.not.found=找不到 @value {0}
action.name.create.stylesheet.0=创建样式表 {0}
dialog.kind.0.file={0} 文件
dialog.title.new.stylesheet=新建样式表
action.CreateStylesheetFileAction.description=创建一个样式表
action.CreateStylesheetFileAction.text=样式表
lookup.advertisement.press.0.again.for.selectors.from.all.stylesheets=再次按 {0} 可获取所有样式表中的选择器
settings.display.name.css=CSS
label.compresses.css.files=压缩 .css 文件

parsing.error.0.expected=应为 {0}
parsing.error.selector.expected=应为选择器
parsing.error.url.or.string.expected=应为 URL 或字符串
parsing.error.media.query.expected=应为媒体查询
parsing.error.expression.list.expected=应为表达式列表
parsing.error.media.expression.expected=应为媒体表达式
parsing.error.identifier.expected=应为标识符
parsing.error.closing.bracket.expected=应为 ']'
parsing.error.unexpected.term=意外词
parsing.error.unexpected.terms=意外词
parsing.error.opening.parenthesis.expected=应为 '('
parsing.error.closing.parenthesis.expected=应为 ')'
parsing.error.invalid.parameter=形参无效
parsing.error.invalid.argument=实参无效
parsing.error.unexpected.interpolation=意外插值
parsing.error.unexpected.token=非预期令牌
parsing.error.term.expected=应为词语
parsing.error.expected.string.or.identifier=应为一个字符串或标识符
parsing.error.unexpected.asterisk=意外星号
parsing.error.unknown.page.margin.keyword=未知页边距关键字
parsing.error.keyframe.block.expected=应为关键帧块
parsing.error.invalid.keyframes.name=关键帧名称无效
parsing.error.divider.should.be.a.number=除数应为数字
parsing.error.end.of.line.expected=应为行尾
parsing.error.counter.style.name.expected=应为计数器样式名称
parsing.error.and.or.or.expected=应为 'and' 或 'or'
parsing.error.or.expected=应为 'or'
parsing.error.and.expected=应为 'and'
parsing.error.supports.condition.expected=应为 @supports 条件
parsing.error.plus.or.minus.expected=应为 '+' 或 '-'
parsing.error.opening.parenthesis.or.identifier.expected=应为 '(' 或标识符
parsing.error.media.feature.expected=应为媒体特性
parsing.error.variable.expected=应为变量
parsing.error.expression.expected=应为表达式
parsing.error.semicolon.expected=应为 ';'
parsing.error.opening.brace.expected=应为 '{'
parsing.error.closing.brace.expected=应为 '}'
parsing.error.operand.expected=应为操作数
parsing.error.whitespace.expected=应为空格
parsing.error.unexpected.whitespace=意外空格
parsing.error.selector.suffix.expected=应为选择器后缀
parsing.error.pseudo.element.or.pseudo.class.expected=应为伪元素或伪类
parsing.error.keyframes.selector.expected=应为关键帧选择器
parsing.error.page.selector.expected=应为页面选择器
parsing.error.region.selector.expected=应为区域选择器
parsing.error.function.expected=应为函数
parsing.error.supports.condition.or.declaration.expected=应为 @supports 条件或声明
parsing.error.from.expected=应为 'from'
parsing.error.file.path.expected=应为文件路径
parsing.error.property.name.expected=应为属性名称
parsing.error.attribute.name.expected=应为特性名称

dialog.message.error.creating.file=创建文件时出错:\n{0}
dialog.message.target.file.not.stylesheet.file=目标文件不是样式表文件。
title.move.0.rulesets=移动{0, choice, 1#规则集|2#规则集}
title.move.0.rulesets.to=移动 {0, choice, 1#规则集|2#规则集} 到
dialog.message.target.file.not.specified=未指定目标文件。
dialog.message.source.target.files.should.be.different=源文件和目标文件应当不同。
command.name.update.css.color=更新 CSS 颜色

css.intentions.category=CSS
css.stylelint.starting.process.progress.title=正在启动 Stylelint…
css.settings.comments=注释
stylelint.run.for.files.label=针对以下文件运行(&F):
stylelint.files.pattern.comment=<html>使用 <a href=''https://github.com/isaacs/node-glob#glob-primer''>glob 模式</a>，例如，<code>{**/*,*}.{css,html}</code></html>