action.QuarkusOpenDevUI.description=将 Quarkus Dev UI 作为编辑器标签页打开
action.QuarkusOpenDevUI.text=打开 Quarkus Dev UI
application.run.configuration.class.not.annotated=应用程序类必须使用 '@QuarkusMain' 注解
application.run.configuration.class.not.specified=未指定 Quarkus 应用程序类
application.run.configuration.emulate.terminal=模拟终端
application.run.configuration.name=Quarkus 应用程序
description.for.quarkus.project.starter=创建 <b>Quarkus</b> 应用程序
dev.ui.editor.tab.title=Quarkus Dev UI
inspection.fix.remove.private.modifier=移除 'private' 修饰符
inspection.group.name=Quarkus
inspection.message.private.bean.members=不建议 Quarkus CDI 成员使用 private 访问修饰符
inspection.message.undeclared.path.mime.types=类和方法均未使用支持的 MIME 类型声明 @{0} 注解
inspection.name.private.bean.members=带有 CDI 注解的 Bean 成员的错误访问修饰符
inspection.name.undeclared.path.mime.types='@Path' 的未声明 '@Produces' / '@Consumes' MIME 类型
inspection.smallrye.config.mapping='@ConfigMapping' 注解中缺少 'prefix' 特性值或者 'prefix' 特性值为空
inspection.smallrye.config.mapping.empty.prefix='prefix' 不能为空
inspection.smallrye.config.mapping.missing.prefix='prefix' 特性为必选项
quarkus.cache.element.choose.title=选择可缓存操作
quarkus.cache.element.no.operations=找不到可缓存的操作
quarkus.cache.element.tooltip.text=转到同名的可缓存操作
quarkus.cache.line.marker.name=可缓存操作
quarkus.cache.presentation.type.name=缓存
quarkus.config.deprecated.key=弃用的配置属性 ''{0}''
quarkus.config.unresolved.duration.value=值 ''{0}'' 不是有效的持续时间
quarkus.config.unresolved.memory.size.value=值 ''{0}'' 的格式不正确(正则表达式)\: [0-9][BbKkMmGgTtPpEeZzYy]?
quarkus.config.unresolved.sub.key=无法解析配置条目 ''{0}''
quarkus.inspections.config.properties=无效的 Quarkus application.properties 配置
quarkus.inspections.config.properties.missing.closing.bracket=缺少结束 ']'
quarkus.inspections.config.properties.missing.index.value=缺少索引值
quarkus.inspections.config.properties.missing.map.key=缺少映射键
quarkus.inspections.config.properties.non.integer.index=索引值必须是整数
quarkus.inspections.config.yaml=无效的 Quarkus YAML 配置
quarkus.qute=Qute
quarkus.scheduled.method=计划的方法
quarkus.scheduled.tasks=计划的任务
quarkus.settings.create.run.configuration=自动创建运行配置(&R)
quarkus.settings.create.run.configuration.tooltip=(重新)导入时添加 Quarkus 运行配置(如果尚不存在)
quarkus.starter.artifact.must.contain.only.lowercase.characters=必须只包含小写字符
quarkus.starter.extensions.label=扩展\:
quarkus.starter.select.extensions.hint=未添加扩展
quarkus.starter.selected.extensions.label=已添加扩展\:
quarkus.starter.version.label=Quarkus\:
quarkus.wizard.built.in=Quarkus (内置)
qute.highlighting.colors.background=模板背景
qute.highlighting.colors.boolean=布尔
qute.highlighting.colors.comment=注释
qute.highlighting.colors.identifier=标识符
qute.highlighting.colors.number=数字
qute.highlighting.colors.operator.sign=大括号和运算符//运算符符号
qute.highlighting.colors.secondary.keyword=二级关键字
qute.highlighting.colors.string=字符串
qute.highlighting.colors.tag.braces=大括号和运算符//标记大括号
qute.highlighting.colors.tag.brackets=大括号和运算符//中括号
qute.highlighting.colors.tag.comma=大括号和运算符//逗号
qute.highlighting.colors.tag.dot=大括号和运算符//点
qute.highlighting.colors.tag.name=标记名称
qute.highlighting.colors.tag.parentheses=大括号和运算符//圆括号
qute.identifier=标识符
qute.live.template.each=Qute 'each' 部分
qute.live.template.eval=Qute 'eval' 部分
qute.live.template.for=Qute 'for' 部分
qute.live.template.if=Qute 'if' 部分
qute.live.template.ifelse=Qute 'if-else' 部分
qute.live.template.ifelseif=Qute 'if-elseif' 部分
qute.live.template.include=Qute 'include' 部分
qute.live.template.insert=Qute 'insert' 部分
qute.live.template.let=Qute 'let' 部分
qute.live.template.parameter=Qute 形参声明
qute.live.template.set=Qute 'set' 部分
qute.live.template.switch=Qute 'switch' 部分
qute.live.template.when=Qute 'when' 部分
qute.live.template.with=Qute 'with' 部分
qute.no.template.found=找不到 Qute 模板
qute.open.template=导航至 Qute 模板
qute.parser.error.missing.tag.name=缺少标记名称
qute.parser.error.switch.recovery.error=意外的标记。应为 case/switch 标记
qute.parser.error.tag.name.expected=应为标记名称，实际为 {0}
qute.parser.error.unexpected.tag=意外标记 `{0}`
qute.parser.error.unexpected.tag.expected=意外标记 `{0}`，应为 {1}
qute.parser.error.unexpected.token=应为 `{0}`，实际为 `{1}`
qute.parser.error.when.recovery.error=意外的标记。应为 is/else/when 标记
run.configuration.application.module=应用程序模块
run.configuration.arguments.label=实参\:
run.configuration.arguments.name=添加实参(&R)
run.configuration.configuration.tab=配置
run.configuration.description=Quarkus 应用程序
run.configuration.emulate.terminal=模拟终端(&E)
run.configuration.environment=环境(&M)
run.configuration.group=Quarkus
run.configuration.name=Quarkus
run.configuration.no.module.selected=未选择模块
run.configuration.profile=运行配置文件(&P)
