django=Django
filetype.django-template.description=Django 模板

need-python-sdk=需要 Python SDK 才能生成 Django 项目
project-create-error=无法生成 Django 项目
create-folder-error=无法创建模板文件夹: {0}
goto-template-name=转到 {0} 模板
goto-templates=转到模板

settings-module=设置:
app-name=应用程序名称(&A):
select-root-folder-title=选择 Django 根文件夹
select-root-folder-desc=选择 Django 根文件夹

skip-template-create=由于未指定模板文件夹，因此跳过了模板创建
create-view=Djang: 为 {0} 函数创建视图
template-name-error=模板名称应仅包含字母、数字和下划线
no-view=找不到视图文件: {0}

module=模块:
port=端口:
port-error=端口应为整数

# manage.py

manage.run.tab.name=Django: manage.py
manage.run.error=无法启动 manage.py: {}
manage.run.error.no-python=找不到 Python 解释器

django.console=Django 控制台
django.manage.py=Manage.py 任务
django.manage.py.env.settings=环境变量:

user-name=用户名:
password=密码:
email=电子邮件:
inspection.close.tag.name=不匹配的起始标记和结束标记
inspection.error.no-closing-tag=只有起始标记，没有结束标记
inspection.error.no-opened-tag=只有结束标记，没有起始标记
inspection.error.open-tag-without-closed=''{0}'' 起始标记没有对应的结束标记
inspection.error.middle-tag-without-opened=''{0}'' 没有起始标标记
inspection.unresolved-template-reference.display-name=未解析的模板引用
inspection.unresolved-template-reference.error-msg=未解析的模板引用 ''{0}''

inspection.unresolved-static-reference.display-name=未解析的 static 引用
inspection.unresolved-static-reference.error-msg=未解析的 static 引用 ''{0}''

inspection.unresolved-tag.display-name=未解析的标记
inspection.unresolved-tag.error-msg=未解析的标记 ''{0}''

inspection.unresolved-filter.display-name=未解析的筛选器
inspection.unresolved-filter.error-msg=未解析的筛选器 ''{0}''

inspection.unresolved-load.display-name=未解析的库检查
inspection.unresolved-load.error-msg=未解析的库 ''{0}''

inspection.unresolved-name.error-msg=未解析的名称 ''{0}''

inspection.incompatible.display-name=Django 模板中不兼容的代码
inspection.incompatible.url_tag.error=自 Django 1.5 起，视图名称应放在引号中，在 1.5 前的版本中不应放在引号中
inspection.incompatible.fix.url_tag.add_quotes=在 url 参数两旁添加引号
inspection.incompatible.fix.url_tag.remove_quotes=移除 url 参数两旁的引号
inspection.incompatible.error=''{0}'' 仅在 ''{1}'' 中可用


inspection.url_tag_arguments.display-name='{% url %}' 标记中不正确的实参
inspection.url_tag_arguments.args_mixed=不要在单个调用中混用位置语法和关键字语法。
inspection.url_tag_arguments.redundant_argument=url 正则表达式中没有实参 ''{0}''
inspection.url_tag_arguments.missing_args=缺少以下参数: ''{0}''
inspection.url_tag_arguments.named_arg_string=''{0}''
inspection.url_tag_arguments.pos_arg_string=参数 # ''{0}''
inspection.url_tag_arguments.bad_regex=表达式 ''{0}'' 与模式 ''{1}'' 不匹配

inspection.unresolved_url.display-name=Django {% url %} 标记实参未解析
inspection.unresolved_url.error=无法解析 url ''{0}''，请确保 urls.py、views.py 等中存在此 url。在 url 未解析之前，无法进行参数检查


inspection.django-orm-inspection.display-name=Django ORM 错误
# Some methods are disabled when M2M has intermediate table: https://docs.djangoproject.com/en/1.7/topics/db/models/#extra-fields-on-many-to-many-relationships
inspection.django-orm-inspection.disabled-m2m-interm=如果使用中间模型，则方法 ''{0}'' 不能用于多对多关系。可以考虑在中间模型管理器中进行调用。
# Some methods do not even exist if foreign key does not allow nulls: https://docs.djangoproject.com/en/1.7/ref/models/relations/#django.db.models.fields.related.RelatedManager.clear
# ... and https://docs.djangoproject.com/en/1.7/ref/models/relations/#django.db.models.fields.related.RelatedManager.remove
inspection.django-orm-inspection.non-existence-due-to-foreign-key-not-null-method=当外键不允许 null 时，管理器中不存在方法 ''{0}''。可以考虑向外键构造函数中添加 null = true。

# DuplicatedBlockNamesInspection
INSP.NAME.duplicated.block.names=重复的块名称
INSP.NAME.block.name.is.duplicated=块名称 ''{0}'' 重复

broken.line.comment.inspection.name=中断的行注释

# ExtendsTagPositionInspection
INSP.NAME.extends.tag.position=位置错误的 {% extends %} 标记

inspection.end-block-name.display-name=Django 结束块名称与块名称不匹配

create-view-quick-fix-name=创建 Django 视图方法

django-create-view-method=创建视图方法
name=模板名称:
folder=模板文件夹:

select-template-folder=选择模板文件夹

select-template-folder-text=请选择模板文件的根目录

django.facet.wizard.error.no.skd=Django facet 要求 Python SDK
django.facet.wizard.error.skd.without.django=请选择包含 Django 软件包的 Python SDK
django.facet.wizard.error.bad.project.name=项目名称应仅包含字母、数字和下划线
django.facet.wizard.error.bad.app.name=应用名称应仅包含字母、数字和下划线
django.facet.wizard.error.project.equals.app.name=不能像调用项目一样调用应用
django-root-folder=Django 项目根:

manage-script=管理脚本:
template.path=模板路径:
templates.root=模板根:

django.block.is.overridden=在继承者中被重写
django.block.inheritors.navigation.title=<html><body>选择 <b>{0}</b> 的继承者(找到 {1} 个模板)</body></html>
django.block.inheritors.navigation.findUsage.title={0} 的继承者
# Magic literal "url name" like {% url "here" %}
magic_literals.django_url_name=Django url
# Magic literal django context param" like {{ here }}
magic_literals.django_template_context_param=Django 模板上下文参数
# Django console name
django.manage.name=manage.py@{0}
# Show user progress bar while python fetches commands
django.manage.real_commands.modal_title=正在提取 Django 命令…
# Python process died fetching commands
django.manage.real_commands.fail.died=无法提取 "{0}" 模块中的实际命令: Python 进程死亡，代码为 {1}: {2}
# Process failed to execute and fetch commands
django.manage.real_commands.fail.cant_execute=无法在模块 {0} 中执行进程: {1}
# What to tell user when "manage shell" is called
django.manage.open_console=正在单独的窗口中运行 shell…
# Text to display when several modules exist, and user should choose one to run manage.py on
django.manage.several_modules=请选择要在其中运行 manage.py 的模块
# To be reported when helper XML output is badly formatted
django.manage.bad_commands_out=由于输出错误，提取实际命令时出错。请查看日志以了解详情。
# Message to be shown when timeout elapsed waiting for manage.py commands
django.manage.timeout=等待 Python 生成命令列表时超时({0} 秒)

settings.file-tracking.comment=用冒号分隔多个名称。支持 Glob 样式的通配符
settings.no.value.validation.error.message=请指定 {0}
settings.no.value.for.name.validation.error.message=找不到 {1} 的 {0}
settings.no.manage.value.validation.error.message=请指定 {0}
settings.project.root.validation.error.message=请指定 Django 项目根目录
settings.no.project.root.dir.validation.error.message=指定的 Django 项目根目录不存在
settings.project.root.dir.validation.error.message=Django 项目根应为目录
configurable.DjangoFacetTab.display.name=Django
configurable.DjangoFacet.display.name=Django

# Templates
django.templates.with.name.exists=模板 {0} 已存在
django.templates.root.selection.invalid=模板根选择无效
django.templates.root.folder.missing=模板根文件夹不存在
django.templates.root.not.specified=未指定模板根
django.templates.name.not.valid=模板名称无效
django.templates.create.capitalized=创建模板
django.templates.create.no.capitalization=创建模板
django.create.template.with.name=创建模板 {0}
django.template.colours.display.name=Django/Jinja2 模板
django.template.colours.filter=筛选器
django.template.colours.identifier=标识符
django.template.colours.number=数字
django.template.colours.comment=注释
django.template.colours.tag.name=标记名称
django.template.colours.tag=标记
django.template.colours.string=字符串
django.template.colours.keyword=关键字
django.template.context.type.name=Django 模板
django.template.factory.error.missing.dir.title=目录 {0} 不存在
django.template.factory.error.missing.dir.message=''{1}'' 中不存在目录 ''{0}''。要创建此目录吗?
django.templates.checkbox.create=创建模板

django.facet.name=Django
django.reference.cant.resolve=无法解析 ''{0}''
django.reference.cant.resolve.function=无法解析函数 ''{0}''
django.reference.cant.resolve.class=无法解析类 ''{0}''
django.reference.cant.resolve.class.or.function=无法解析类或函数 ''{0}''
django.cant.patch.created.project=无法修补已创建的项目
django.remote.project.not.synchronized=远程项目尚未与本地版本同步。PyCharm 无法根据您的设置对其进行修补。项目仍可能位于远程站点。在这种情况下，您需要手动下载。
django.server.display.name=Django 服务器
django.server.config.description=Django 服务器
django.select.manage.script=选择 Django 管理脚本
django.select.settings.file=选择 Django 设置文件
django.run.browser.setting=运行浏览器:
django.start.js.debugger.automatically=调试时自动启动 JavaScript 调试器
django.enable.admin=启用 Django admin(&E)
django.server.run.config.additional.options=其他选项:
django.server.run.config.host=主机:
django.server.run.config.custom.command=自定义运行命令:
django.server.run.config.no.reload=不重新加载
django.server.run.config.test.server=测试服务器
django.settings.dont.use.testrunner=不使用 Django 测试运行程序:
django.settings.folder.pattern=用于跟踪文件的文件夹模式:
django.settings.show.structure=显示结构
django.settings.completion.tail.text=配置常量

django.exception.breakpoint=Django 异常断点
django.exception.breakpoint.type.short.text=模板渲染错误
django.exception.breakpoint.type.display.text=模板渲染错误(VariableDoesNotExist、TemplateDoesNotExist)
django.line.breakpoint=Django 行断点

django.tests.config.select.settings.file=选择 Django 设置文件
django.tests.config.custom.settings=自定义设置:
django.tests.config.options=选项:
django.tests.config.target=目标:
enable.django.support.checkbox.text=启用 Django 支持

# Add load tag quick-fix
django.add.load.tag.family.name=添加加载标记
django.add.load.tag.suggestion.single.result=从 {0} 加载
django.add.load.tag.suggestion.several.results=加载自…

django.parse.error.block.identifier.expected=应为块标识符
django.parse.error.identifier.expected.after=. 后面应为标识符
django.parse.error.in.expected=应为 'in'
django.parse.error.member.expression.expected=应为成员表达式
django.parse.error.percent.brace.expected=应为 %}
django.parse.error.identifier.expected.before.from.keyword=from 关键字前面应为标识符
django.parse.error.id.or.literal.expected=应为 ID 或文字
django.parse.error.unknown.subtag.for.blocktrans.found.with.count.or.and.expected=发现 blocktrans 的未知子标记。应为 'with'、'count' 或 'and'。
django.parse.error.equals.or.as.expected=应为 '=' 或 'as'
django.parse.error.as.expected=应为 'as'
django.parse.error.id.expected=应为 ID
django.parse.error.trimmed.argument.duplicated=重复的 'trimmed' 参数
django.parse.error.trimmed.should.be.the.first.argument.of.tag='trimmed' 应是标记的第一个参数
django.parse.error.id.lowercase.expected=应为 id
django.parse.error.as.var.should.be.the.first.argument.of.tag='asVar' 应为标记的第一个参数
django.creating.django.facet=正在创建 Django Facet
django.create.django.application=创建 Django 应用程序
django.error.creating.django.application.0=创建 Django 应用程序时出错: {0}
django.parse.error.name.expected=应为名称
django.parse.error.as.keyword.expected=应为 'as' 关键字
django.parse.error.by.keyword.expected=应为 'by' 关键字
django.parse.error.as.or.equals.expected=应为 'as' 或 '='
django.parse.error.value.expected=应为值
django.parse.error.identifier.expected=应为标识符
django.parse.error.parameter.assignment.expected=应为形参赋值
django.parse.error.named.expression.expected=应为命名表达式
django.parse.error.whitespace.expected=应为空格
django.parse.error.wrong.identifier=标识符错误
django.parse.error.whitespace.expected.before.a.string=字符串前面应为空格
django.parse.error.named.expression=命名表达式
django.parse.error.silent.keyword.expected=应为 'silent' 关键字
django.parse.error.member.literal.expected=应为成员文字
django.create.view.quickfix=创建视图方法
group.Django.ToolsMenu.text=Django
action.Django.RunManageTaskAction.text=运行 manage.py 任务…
action.Django.RunManageTaskAction.description=运行 manage.py 任务
django.start.comment.without.ending=有起始注释，{# without ending #}
django.end.comment.without.starting=有结束注释 #}，但没有起始 {#
intention.name.convert.function.based.generic.view.to.class.based=将基于函数的泛型视图转换为基于类。
checkbox.auto.insert.closing.braces.in.django.templates=在 Django 模板中自动插入右 }} 和 ％}
django.parsing.error.identifier.expected=应为标识符
django.parsing.error.expected.one.of=应为以下之一: {0}
django.parsing.error.in.expected=应为 'in'
django.parsing.error.operator.expected=应为运算符
django.parsing.error.only.keyword.expected=应为 'only' 关键字
dialog.message.please.enable.django.support.for.project=请为项目启用 Django 支持
dialog.message.please.select.django.module=请选择 Django 模块
django.is.not.importable.in.this.environment=在此环境中不可导入 Django
django.project.root.not.configured=未配置 Django 项目根
django.port.number.is.not.within.acceptable.range=端口号不在可接受的范围(0-65535)内
django.please.specify.run.command=请指定运行命令
django.please.select.django.module=请选择 Django 模块
django.parsing.error.id.or.literal.expected=应为 ID 或文字
django.parsing.error.string.literal.expected=应为字符串文字。
django.parsing.error.path.expected=应为路径。
django.parsing.error.filter.name.expected=应为筛选器名称
django.parsing.error.expression.expected=应为表达式
django.parsing.error.braces.or.brace.percent.expected=应为 {{ 或 {%
django.parsing.error.expected.brace.percent=应为 %}
django.parsing.error.expected.double.brace=应为 }}
django.templates.navigation.marker.separator=模板
django.command.name.migrate.variables.in.django.template.file=迁移 Django 模板文件中的变量
django.dialog.message.no.module.provided=未提供模块
django.dialog.message.custom.settings.enabled.but.cant.resolve=自定义设置已启用，但无法解析 {0}
django.inspection.message.end.block.name.doesnt.match=结束块名称不匹配。
django.inspection.message.extends.tag.must.be.first.tag.in.template=扩展标记必须为模板中的第一个标记
django.parsing.error.unexpected.symbols=意外符号
django.parsing.error.verbatim.block.without.endverbatim=Verbatim 块没有 {% endverbatim %}
django.parsing.error.block.comment.without.endcomment=块注释没有 {% endcomment %}
django.parsing.error.tag.name.expected=应为标记名称
django.parsing.error.expression.expected.after.in='in' 后面应为表达式
django.parsing.error.expected.filter.argument=应为筛选器参数
django.view.line.marker.provider.referenced.from=引用自:
django.view.line.marker.provider.referenced.from.param=引用自 {0}
django.view.line.marker.provider.view.name.in={0} ({1} 内)
django.editor.smart.keys.dialog.title=Django
django.static.file.not.found=找不到静态文件 ''{0}''
django.cant.resolve.view.method=无法解析视图方法 ''{0}''
django.project.creator.title.generate=生成
django.project.creator.title.creating.application=正在创建应用程序
header.variable.reference=变量引用
inspection.comparison.display-name=Django 模板中不正确的比较表达式
django.inspection.message.whitespace.expected.before.and.after.comparison=比较运算符前后应有空格
django.inspection.message.whitespace.expected.before.comparison=比较运算符前面应有空格
django.inspection.message.whitespace.expected.after.comparison=比较运算符后面应有空格