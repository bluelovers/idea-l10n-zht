accessible.name.icon.0.1.2=图标\: {0}{1}{2}
accessible.name.icon.conditional=条件
accessible.name.icon.disabled=已禁用
action.Anonymous.text.breakpointdialog.gotosource=BreakpointDialog.GoToSource
action.Anonymous.text.breakpointdialog.showsource=BreakpointDialog.ShowSource
action.TurnOffDfaAssist.description=为此会话关闭数据流辅助调试
action.TurnOffDfaAssist.text=关闭此会话的数据流助手
action.XDebugger.PauseWatch.template.text=暂停{0}
action.XDebugger.ResumeWatch.template.text=恢复{0}
action.hotswap.hide.text=隐藏
action.memory.view.settings.text=内存视图设置
action.next.frame.text=下一帧
action.previous.frame.text=上一帧
ad.extra.selection.shortcut=选择具有 {0} 的项目
advanced.setting.debugger.inlay.run.to.cursor=显示嵌入式“运行到光标”弹出窗口
advanced.setting.debugger.inlay.run.to.cursor.description=请注意，嵌入式“运行到光标”仅适用于新 UI。在经典 UI 中，点击行号将执行“运行到光标”。
advanced.setting.debugger.max.recent.expressions=最近表达式的最大数量
breakpoint.variant.text.all=所有
breakpoints.dialog.create.new.group=新建…
breakpoints.dialog.edit.description=编辑描述
breakpoints.dialog.new.group=新建组
breakpoints.dialog.new.group.name=新建组名称
breakpoints.dialog.no.group=<无组>
breakpoints.dialog.set.as.default=设为默认
breakpoints.dialog.unset.as.default=取消设置为默认
breakpoints.group.by.type.label=类型
breakpoints.show.user.groups=显示用户组
button.text.code.fragment.mode=代码段模式(&M)
button.text.expression.mode=表达式模式(&M)
data.views.configurable.panel.title=编辑器
debug.threads.and.frames.default.layout.option=组合
debug.threads.and.frames.frames.only.layout.option=仅显示帧
debug.threads.and.frames.side.by.side.layout.option=并排
debug.threads.and.frames.threads.tree.layout.option=线程
debug.tool.window.header.toolbar=调试标题工具栏
debug.tool.window.left.toolbar=调试工具窗口左侧工具栏
debug.tool.window.more.toolbar=调试标题更多弹出窗口
debug.tool.window.top.toolbar=调试工具窗口顶部工具栏
debug.toolwindow.empty.text.0=要调试代码，请执行以下操作之一\:
debug.toolwindow.empty.text.1=— 点击编辑器装订区域中的“运行”图标
debug.toolwindow.empty.text.2=— 在编辑器上下文菜单中选择“调试…”
debug.toolwindow.empty.text.help=正在调试模式
debug.watches.toolbar=调试监视工具栏
debugger.add.action.dialog.filter.name=仅显示调试器操作
debugger.add.action.dialog.title=向调试器工具栏添加操作
debugger.configurable.display.name=调试器
debugger.customize.toolbar.actions.dialog.title=自定义调试器工具栏
debugger.dataViews.display.name=数据视图
debugger.editor.choose.language=选择语言
debugger.evaluate.expression.or.add.a.watch.hint=对表达式求值({0})或添加监视({1})
debugger.frame.list.help.description=返回上一帧。这将重置局部变量，但不会更改全局状态。
debugger.frame.list.help.title=重置帧
debugger.frames.dialog.message.not.available.for.unsuspended=框架不可用于未挂起的线程
debugger.frames.label.async.call.from.function=来自 {0} 的异步调用
debugger.frames.not.available=帧不可用
debugger.hotswap.display.name=热交换
debugger.inline.watches.edit.watch.expression.text=编辑监视表达式
debugger.inline.watches.group.name=内联监视
debugger.inline.watches.popup.action.add.as.inline.watch=添加为内联监视
debugger.no.watches=无监视
debugger.result.node.name=结果
debugger.runner.start.action.text=调试(&D)
debugger.runner.start.action.text.2=调试 '%s'(&D)
debugger.session.tab.console.content.name=控制台
debugger.session.tab.frames.thread.main=主线程
debugger.session.tab.frames.title=帧
debugger.session.tab.threads.title=线程
debugger.session.tab.variables.title=变量
debugger.session.tab.watches.title=监视
debugger.state.message.connected=已连接
debugger.state.message.connecting=正在连接
debugger.state.message.disconnected=已断开连接
debugger.stepping.display.name=步进
debugger.switch.frames.from.anywhere.hint=使用 {0} 和 {1} 从 IDE 中的任意位置切换帧
debugger.threads.not.available=线程不可用
debugger.variables.not.available=变量不可用
dialog.message.error.executing.ps=进程 `ps` 已完成，退出代码为 {0}
dialog.message.error.parsing.ps.output=无法解析 `ps` 的输出
dialog.message.error.while.calculating.remote.operating.system=计算远程操作系统时出错
dialog.title.evaluate.code.fragment=对代码段求值
done.action.text=完成
error.message.cannot.find.available.port=找不到可用端口
group.advanced.settings.debugger=调试器
hide.library.frames.tooltip=在库中隐藏帧
inspect.value.dialog.title=检查 ''{0}''
invalid.frame=<无效帧>
label.debugger.hotswap.option.suggest.in.editor=在编辑器中建议热交换
label.folded.frames={0,number} 个隐藏{0,choice, 1\#帧|2\#帧}
label.host=主机(&H)\:
label.port=端口(&P)\:
load.value.task.error=无法加载值\: {0}
load.value.task.text=正在加载值
memory.instances.close.text=关闭
memory.unable.to.get.instances.of.class=无法获取类 {0} 的实例
memory.view.empty.running=在断点停止，加载类列表
memory.view.empty.stopped=类不可用
memory.view.instances.dialog.title={0} 的实例
memory.view.instances.dialog.title.warning={0} 的实例。警告\: {1}
memory.view.instances.warning.not.all.loaded=并非所有实例都会被加载(仅 {0})
memory.view.load.classes=加载类
memory.view.no.classes.loaded=未加载类。
memory.view.table.column.name.class=类
memory.view.table.column.name.count=计数
memory.view.table.column.name.diff=差异
message.confirm.breakpoint.removal.message=断点包含
message.confirm.breakpoint.removal.message.condition=条件\:
message.confirm.breakpoint.removal.message.log=日志表达式\:
message.confirm.breakpoint.removal.title=确认移除
message.frame.is.not.available=框架不可用
message.smart.step=使用箭头键选择要单步执行的方法。\n要退出“智能单步执行”模式，请按 Esc。
move.to.group=移至组
node.test.show.full.value=…显示
node.text.ellipsis.0.more.nodes.double.click.to.show=…(其他 {0} 个{0, choice, 1\#条目|2\#条目}。双击查看)
node.text.ellipsis.0.unknown.more.nodes.double.click.to.show=…(双击查看更多条目)
node.text.ellipsis.truncated=…(长度\: {0})
notification.group.attach.to.process=无法将调试器附加到进程
notification.group.breakpoint.hit=断点提示
notification.group.debugger.hotswap.messages=热交换失败
notification.group.debugger.messages=调试器消息
options.java.attribute.descriptor.breakpoint.line=断点行
options.java.attribute.descriptor.evaluated.expression=求解的表达式文本
options.java.attribute.descriptor.evaluated.expression.execution.line=执行行的求解表达式文本
options.java.attribute.descriptor.execution.point=执行点
options.java.attribute.descriptor.inlined.values=内联的值
options.java.attribute.descriptor.inlined.values.execution.line=为断点行内联值
options.java.attribute.descriptor.inlined.values.modified=内联修改后的值
options.java.attribute.descriptor.not.top.frame=没有顶部框架
options.java.attribute.descriptor.smart.step.into.selection=智能单步执行选区
options.java.attribute.descriptor.smart.step.into.target=智能单步执行目标
options.kotlin.attribute.descriptor.inline.stack.frames=内联堆栈帧
plugin.is.not.unload.safe.because.of.the.started.debug.session=由于已启动的调试会话，插件无法安全卸载
popup.title.set.breakpoint=设置断点
rule.name.group.by.file=按文件分组
scope.block=块
scope.catch=Catch
scope.class=类
scope.closure=闭包
scope.global=全局
scope.instance=实例
scope.library=库
scope.local=本地
scope.module=模块
scope.script=脚本
scope.stack=值
scope.unknown=未知
scope.with=包含块
script.debugger.error.cannot.connect=无法连接到虚拟机({0})
script.debugger.popup.canceled=未选择页面
script.debugger.popup.title.choose.page=选择要调试的页面
session.tab.close.debug.session=关闭调试会话
session.tab.hide.threads.view=隐藏线程视图
session.tab.show.threads.view=显示线程视图
setting.enable.auto.expressions.label=在“变量”视图中启用自动表达式
setting.focus.app.on.breakpoint.label=在断点上使应用程序获得焦点
setting.focus.during.debug=调试期间聚焦
setting.hide.window.label=进程终止时隐藏调试窗口(&W)
setting.show.target.process.window.after.resume=恢复后聚焦目标进程
setting.show.target.process.window.after.resume.help.text=如果目标进程在恢复后 1 秒内没有与调试器进行交互，则目标进程的窗口将显示在所有其他窗口的前端
setting.sort.alphabetically.label=按字母顺序排列值(&L)
setting.value.tooltip.delay.label=提示延迟值 (毫秒)(&V)\:
settings.confirm.breakpoint.removal=确认移除条件或日志断点
settings.drag.to.remove.breakpoint=移除断点\:
settings.drag.to.remove.breakpoint.click=使用鼠标左键点击
settings.drag.to.remove.breakpoint.drag=拖动到编辑器中或使用鼠标中键点击
settings.run.to.cursor.gesture=点击行号以执行“运行到光标”
settings.scroll.to.center=将执行点滚动到中心
settings.show.tooltip.on.selection=选择代码时显示值工具提示
settings.show.value.tooltip=显示值工具提示。
settings.show.values.inline=内联显示值
settings.show.window.label=在断点上显示调试窗口(&D)
settings.tooltip.label=如果禁用，请使用“{0}”显示/隐藏工具提示
show.all.frames.tooltip=显示所有框架
showReferring.dialog.title={0} 的引用对象
stack.frame.function.name.anonymous=匿名
stack.frame.function.unknown=未知
stack.frame.loading.text=正在加载…
string.debugger.runner.description=调试所选配置
suspend.policy.panel.all=所有(&A)
suspend.policy.panel.makeDefault=设为默认(&F)
suspend.policy.panel.suspend=挂起(&S)\:
suspend.policy.panel.suspend.execution=挂起执行(&S)
suspend.policy.panel.thread=线程(&T)
suspend.policy.panel.title=挂起策略
threads.list.threads.not.available=线程不可用
value.marker.dialog.choose.label.color=选择标签颜色
value.marker.dialog.label.text=标签(&L)\:
value.marker.dialog.preview.label=预览\:
value.marker.dialog.select.object.label=选择对象标签
xbreakpoint.default.display.text={1}\:{0,number,\#}
xbreakpoint.default.display.text.with.column={2}\:{0,number,\#}\:{1,number,\#}
xbreakpoint.label.after.breakpoint.was.hit=命中后\:
xbreakpoint.label.empty=选择一个断点
xbreakpoint.master.breakpoint.description=禁用，直至命中以下断点\:
xbreakpoint.master.breakpoint.none=<无>
xbreakpoint.radio.disable.again=再次禁用
xbreakpoint.radio.leave.enabled=保持启用
xbreakpoint.reached.text=已到达断点\:
xbreakpoint.tooltip.condition=条件\:
xbreakpoint.tooltip.depends.on=依赖于\:
xbreakpoint.tooltip.edit.hint=右键点击进行编辑
xbreakpoint.tooltip.log.expression=日志表达式\:
xbreakpoint.tooltip.log.message=记录消息\: 是
xbreakpoint.tooltip.log.stack=记录堆栈\: 是
xbreakpoint.tooltip.multiple=多个断点
xbreakpoint.tooltip.suspend.policy.all=挂起\: 所有
xbreakpoint.tooltip.suspend.policy.none=挂起\: 无
xbreakpoint.tooltip.suspend.policy.thread=挂起\: 线程
xbreakpoints.breakpoint.name=断点名称
xbreakpoints.condition.checkbox=条件(&C)\:
xbreakpoints.dialog.double.breakpoint.title={0}，{1}
xbreakpoints.dialog.title=断点
xbreakpoints.enabled.label=已启用(&D)
xbreakpoints.log.expression.checkbox=求值并记录(&E)\:
xbreakpoints.log.message.checkbox=“断点命中”消息(&M)
xbreakpoints.log.message.label=日志\:
xbreakpoints.log.stack.checkbox=堆栈跟踪(&K)
xbreakpoints.popup.more.label=更多
xbreakpoints.properties.actions.group.title=操作
xbreakpoints.remove.once.hit.label=命中后移除(&R)
xbreakpoints.restore.label=还原上一个断点
xdebugger.all.debuggers.messages=所有进程
xdebugger.attach.action=附加到进程…
xdebugger.attach.action.collectingItems=正在收集附加条目…
xdebugger.attach.action.description=使用可用的调试器附加到进程
xdebugger.attach.action.items.error.message=无法获取主机上运行的进程列表。有关其他详细信息，请查看 IDE 日志。
xdebugger.attach.action.items.error.title=无法获取进程
xdebugger.attach.add.connection.message=添加连接…
xdebugger.attach.button.name=使用 {0} 附加
xdebugger.attach.button.no.debugger.name=附加
xdebugger.attach.command.line.column.name=命令行
xdebugger.attach.debuggers.column.name=可用调试器
xdebugger.attach.dialog.all.processes.message=所有进程
xdebugger.attach.dialog.no.debuggers.is.available.message=没有适合所选进程的调试器
xdebugger.attach.dialog.other.processes.message=其他进程
xdebugger.attach.dialog.recently.attached.message=最近附加
xdebugger.attach.executable.column.name=可执行文件
xdebugger.attach.host.popup.title=查看 {0} 进程
xdebugger.attach.local.host=本地主机
xdebugger.attach.manage.connections.message=管理连接…
xdebugger.attach.pid=pid {0,number,\#}
xdebugger.attach.pid.column.name=进程 ID
xdebugger.attach.popup.emptyText=没有要附加到的进程
xdebugger.attach.popup.selectDebugger.title=调试器
xdebugger.attach.popup.title=使用{0}附加到
xdebugger.attach.popup.title.default=附加到
xdebugger.attach.reattach=重新附加到 PID {0,number,\#}
xdebugger.attach.show.only.my.processes=仅显示我的进程
xdebugger.attach.toLocal.popup.recent=最近
xdebugger.attach.user.column.name=用户
xdebugger.attach.view.list.message=列表
xdebugger.attach.view.message=查看\:
xdebugger.attach.view.tree.message=树
xdebugger.breakpoint.reached=已到达断点
xdebugger.building.tree.node.message=正在收集数据…
xdebugger.button.evaluate=求值(&V)
xdebugger.cancel.set.action.title=取消
xdebugger.colors.page.name=调试器
xdebugger.debugger.tab.title=调试器
xdebugger.default.content.title=调试
xdebugger.dialog.title.evaluate.expression=对表达式求值
xdebugger.disable.breakpoint.action.text=禁用断点
xdebugger.docker.attach.button.name=Docker
xdebugger.drag.text.0.elements={0}元素
xdebugger.drop.text.add.to.watches=添加到监视
xdebugger.enable.breakpoint.action.text=启用断点
xdebugger.enable.set.action.title=设置值
xdebugger.evaluate.addtowatches.hint=使用{0}添加到监视
xdebugger.evaluate.dialog.close=关闭
xdebugger.evaluate.dialog.title=求值
xdebugger.evaluate.full.value.evaluator.not.available=无法对表达式求值
xdebugger.evaluate.history.navigate.ad=使用 {0} 浏览历史记录
xdebugger.evaluate.label.expression=表达式\:
xdebugger.evaluate.label.result=结果(&R)\:
xdebugger.evaluate.language.hint=点击以更改语言
xdebugger.evaluate.paused.watch=…求值
xdebugger.evaluate.result=结果
xdebugger.evaluate.stack.frame.has.no.evaluator.id=无法评估，当前堆栈帧不支持评估。或者当前堆栈帧在评估期间发生更改 
xdebugger.evaluate.stack.frame.has.not.evaluator=无法求值，当前堆栈帧不支持求值
xdebugger.evaluating.expression.node.message=正在评估…
xdebugger.execution.stack.description.not.available.message=描述不可用
xdebugger.hotswap.code.changed=代码已更改\:
xdebugger.hotswap.status.success=代码已重新加载
xdebugger.hotswap.tooltip.apply=应用热交换
xdebugger.hotswap.tooltip.description=您在调试会话期间更改了代码。您无需重新启动即可应用这些更改。所有修改过的文件都将重新编译并重新加载。
xdebugger.intention.control.exception.breakpoint.create.text=在 {0} 上创建异常断点
xdebugger.intention.control.exception.breakpoint.disable.text=在 {0} 上禁用异常断点
xdebugger.intention.control.exception.breakpoint.enable.text=在 {0} 上启用异常断点
xdebugger.intention.control.exception.breakpoint.family=创建异常断点
xdebugger.label.text.code.fragment=代码段\:
xdebugger.local.attach.button.name=局部
xdebugger.mark.dialog.duplicate.warning=标签已被使用，将被替换
xdebugger.modifiyng.value.node.message=正在修改值…
xdebugger.no.remote.connections.message=找不到远程连接。
xdebugger.pin.to.top.action=固定至顶部
xdebugger.popup.value.tree.set.root.action.tooltip=设为根
xdebugger.remote.attach.button.name=远程
xdebugger.remove.line.breakpoint.action.text=移除断点
xdebugger.reset.filtration.by.process.message=按流程类型重置筛选
xdebugger.reset.frame.title=重置帧
xdebugger.set.text.value.action.title=设置
xdebugger.set.text.value.error.title=设置值时出错
xdebugger.show.errors.action.title=文档和问题
xdebugger.threads.tab.layout.settings.title=线程和帧
xdebugger.threads.vars.tab.title=线程和变量
xdebugger.unpin.action=取消固定
xdebugger.visualized.text.name.html=HTML 文件
xdebugger.visualized.text.name.json=JSON
xdebugger.visualized.text.name.jwt=JWT
xdebugger.visualized.text.name.raw=原始
xdebugger.visualized.text.name.url=URL (已解码)
xdebugger.visualized.text.name.xml=XML
xdebugger.watch=监视
xdebugger.watch.is.paused.message=监视已暂停
xdebugger.watches=监视
