xdebugger.colors.page.name=调试器

debugger.configurable.display.name=调试器
debugger.dataViews.display.name=数据视图
# suppress inspection "UnusedProperty"
debugger.stepping.display.name=步进
# suppress inspection "UnusedProperty"
debugger.hotswap.display.name=热交换

xdebugger.default.content.title=调试
xdebugger.debugger.tab.title=调试器
xdebugger.attach.popup.title=使用{0}附加到
xdebugger.attach.host.popup.title=查看 {0} 进程
xdebugger.attach.toLocal.popup.recent=最近
xdebugger.attach.popup.emptyText=没有要附加到的进程
xdebugger.attach.popup.title.default=附加到
xdebugger.attach.popup.selectDebugger.title=调试器
xdebugger.attach.action=附加到进程…
xdebugger.attach.action.description=使用可用的调试器附加到进程
xdebugger.attach.action.collectingItems=正在收集附加条目…
xdebugger.attach.pid=pid {0,number,#}
xdebugger.attach.reattach=重新附加到 PID {0,number,#}
xdebugger.attach.local.host=本地主机

xdebugger.attach.action.items.error.title=无法获取进程
xdebugger.attach.action.items.error.message=无法获取主机上正在运行的进程列表

xdebugger.remove.line.breakpoint.action.text=移除断点
xdebugger.disable.breakpoint.action.text=禁用断点
xdebugger.enable.breakpoint.action.text=启用断点
xbreakpoint.tooltip.suspend.policy.all=挂起: 所有
xbreakpoint.tooltip.suspend.policy.thread=挂起: 线程
xbreakpoint.tooltip.suspend.policy.none=挂起: 无
xbreakpoint.tooltip.condition=条件:
xbreakpoint.tooltip.log.message=记录消息: 是
xbreakpoint.tooltip.log.stack=记录堆栈: 是
xbreakpoint.tooltip.log.expression=日志表达式:
xbreakpoint.tooltip.depends.on=依赖于:

xbreakpoints.dialog.title=断点
suspend.policy.panel.title=挂起策略
suspend.policy.panel.suspend=挂起(&S):
suspend.policy.panel.suspend.execution=挂起执行(&S)
suspend.policy.panel.all=所有(&A)
suspend.policy.panel.thread=线程(&T)
suspend.policy.panel.makeDefault=设为默认(&F)

xbreakpoints.properties.actions.group.title=操作
xbreakpoints.remove.once.hit.label=命中后移除(&R)
xbreakpoints.log.message.label=日志:
xbreakpoints.log.message.checkbox=“断点命中”消息(&M)
xbreakpoints.log.stack.checkbox=堆栈跟踪(&K)
xbreakpoints.log.expression.checkbox=评估并记录(&E):
xbreakpoints.condition.checkbox=条件(&C):
xbreakpoints.enabled.label=已启用(&D)
xbreakpoints.restore.label=恢复上一个断点
xbreakpoints.breakpoint.name=断点名称
xbreakpoint.label.after.breakpoint.was.hit=命中后:
xbreakpoint.radio.disable.again=再次禁用
xbreakpoint.radio.leave.enabled=保持启用
xbreakpoint.master.breakpoint.none=<无>
xbreakpoint.master.breakpoint.description=禁用，直至命中以下断点:
rule.name.group.by.file=按文件分组
xbreakpoint.default.display.text={1}:{0,number,#}
xbreakpoint.label.empty=选择一个断点

xbreakpoint.reached.text=已到达断点:
xdebugger.breakpoint.reached=已到达断点

xdebugger.evaluate.language.hint=点击以更改语言
xdebugger.evaluate.history.navigate.ad=使用 {0} 浏览历史记录
xdebugger.evaluate.label.result=结果(&R):
xdebugger.button.evaluate=评估(&V)
xdebugger.evaluate.dialog.title=评估
xdebugger.evaluate.dialog.close=关闭
xdebugger.mark.dialog.duplicate.warning=标签已被使用，将被替换
xdebugger.dialog.title.evaluate.expression=评估表达式
xdebugger.evaluate.label.expression=表达式:
xdebugger.evaluate.addtowatches.hint=使用{0}添加到监视
dialog.title.evaluate.code.fragment=评估代码段
button.text.code.fragment.mode=代码段模式(&M)
button.text.expression.mode=表达式模式(&M)
xdebugger.label.text.code.fragment=代码段:
xdebugger.evaluate.result=结果
xdebugger.evaluate.stack.frame.has.not.evaluator=无法评估，当前堆栈帧不支持评估

xdebugger.popup.value.tree.set.root.action.tooltip=设为根

xdebugger.building.tree.node.message=正在收集数据…
xdebugger.modifiyng.value.node.message=正在修改值…
xdebugger.evaluating.expression.node.message=正在评估…
node.text.ellipsis.0.more.nodes.double.click.to.show=… (额外 {0} {0, choice, 1#项|2#项}。双击查看)
node.text.ellipsis.0.unknown.more.nodes.double.click.to.show=…(双击查看更多条目)
node.text.ellipsis.truncated=…(长度: {0})
node.test.show.full.value=...(显示)
inspect.value.dialog.title=检查 ''{0}''

debugger.state.message.connected=已连接
debugger.state.message.connecting=正在连接
debugger.state.message.disconnected=已断开连接

debugger.runner.start.action.text=调试(&D)
string.debugger.runner.description=调试所选配置

# ToolWindow
debugger.session.tab.threads.title=线程
debugger.session.tab.frames.title=帧
debugger.session.tab.frames.thread.main=主线程
debugger.session.tab.watches.title=监视
debugger.session.tab.variables.title=变量
debugger.session.tab.console.content.name=控制台
action.next.frame.text=下一帧
action.previous.frame.text=上一帧
stack.frame.loading.text=正在加载…
invalid.frame=<无效帧>
xdebugger.drag.text.0.elements={0}元素
xdebugger.drop.text.add.to.watches=添加到监视

debugger.frames.not.available=帧不可用
debugger.threads.not.available=线程不可用
debugger.variables.not.available=变量不可用
debugger.no.watches=无监视
load.value.task.error=无法加载值: {0}
load.value.task.text=正在加载值

scope.global = 全局
scope.local = 本地
scope.with = 包含块
scope.closure = 闭包
scope.catch = Catch
scope.class = 类
scope.instance = 实例
scope.library = 库
scope.block = 块
scope.script = 脚本
scope.unknown = 未知

setting.value.tooltip.delay.label=提示延迟值 (ms)(&V):
setting.enable.auto.expressions.label=在“变量”视图中启用自动表达式
setting.sort.alphabetically.label=按字母顺序排列值(&L)

setting.hide.window.label=进程终止时隐藏调试窗口(&W)
setting.focus.app.on.breakpoint.label=在断点上使应用程序获得焦点
settings.show.window.label=在断点上显示调试窗口(&D)

showReferring.dialog.title={0} 的引用对象
settings.show.values.inline=内联显示值
settings.show.value.tooltip=显示值工具提示。
settings.show.tooltip.on.selection=选择代码时显示值工具提示
settings.scroll.to.center=将执行点滚动到中心
settings.tooltip.label=如果禁用，请使用“{0}”显示/隐藏工具提示

ad.extra.selection.shortcut=选择具有 {0} 的项目
settings.drag.to.remove.breakpoint=移除断点:
settings.drag.to.remove.breakpoint.click=使用鼠标左键点击
settings.drag.to.remove.breakpoint.drag=拖动到编辑器中或使用鼠标中键点击
settings.confirm.breakpoint.removal=确认移除条件或日志断点
settings.run.to.cursor.gesture=点击行号以执行“运行到光标”

message.confirm.breakpoint.removal.title=确认移除
message.confirm.breakpoint.removal.message=断点包含
message.confirm.breakpoint.removal.message.condition=条件:
message.confirm.breakpoint.removal.message.log=日志表达式:

message.smart.step=使用箭头键选择要单步执行的方法。\n要退出“智能单步执行”模式，请按 Esc。

xdebugger.pin.to.top.action=固定至顶部
xdebugger.unpin.action=取消固定

value.marker.dialog.label.text=标签(&L):
value.marker.dialog.preview.label=预览:
value.marker.dialog.select.object.label=选择对象标签
value.marker.dialog.choose.label.color=选择标签颜色

done.action.text=完成
xbreakpoints.popup.more.label=更多
move.to.group=移动到组
breakpoints.dialog.edit.description=编辑描述
breakpoints.dialog.new.group.name=新建组名称
breakpoints.dialog.new.group=新建组
breakpoints.dialog.no.group=<无组>
breakpoints.dialog.create.new.group=新建…
breakpoints.dialog.unset.as.default=重置为默认值
breakpoints.dialog.set.as.default=设置为默认值
breakpoints.show.user.groups=显示用户组
breakpoints.group.by.type.label=类型
debugger.editor.choose.language=选择语言
memory.unable.to.get.instances.of.class=无法获取类 {0} 的实例
memory.instances.close.text=关闭

threads.list.threads.not.available=线程不可用
data.views.configurable.panel.title=编辑器
hide.library.frames.tooltip=从库中隐藏框架
show.all.frames.tooltip=显示所有框架
options.java.attribute.descriptor.breakpoint.line=断点行
options.java.attribute.descriptor.execution.point=执行点
options.java.attribute.descriptor.not.top.frame=没有顶部框架
options.java.attribute.descriptor.evaluated.expression=评估表达式文本
options.java.attribute.descriptor.evaluated.expression.execution.line=为执行行评估表达式文本
options.java.attribute.descriptor.inlined.values=内联的值
options.java.attribute.descriptor.inlined.values.modified=内联修改后的值
options.java.attribute.descriptor.inlined.values.execution.line=为断点行内联值
options.java.attribute.descriptor.smart.step.into.target=智能单步执行目标
options.java.attribute.descriptor.smart.step.into.selection=智能单步执行选区
debug.tool.window.top.toolbar=调试工具窗口顶部工具栏
debug.tool.window.left.toolbar=调试工具窗口左侧工具栏
debug.watches.toolbar=调试监视工具栏
action.Anonymous.text.breakpointdialog.gotosource=BreakpointDialog.GoToSource
action.Anonymous.text.breakpointdialog.showsource=BreakpointDialog.ShowSource
popup.title.set.breakpoint=设置断点
action.memory.view.settings.text=内存视图设置
accessible.name.icon.0.1.2=图标: {0}{1}{2}
accessible.name.icon.conditional=条件
accessible.name.icon.disabled=已禁用
label.host=主机(&H):
label.port=端口(&P):
stack.frame.function.name.anonymous=匿名
stack.frame.function.unknown=未知
error.message.cannot.find.available.port=找不到可用端口
script.debugger.popup.title.choose.page=选择要调试的页面
script.debugger.error.cannot.connect=无法连接到虚拟机({0})
debugger.frames.dialog.message.not.available.for.unsuspended=框架不可用于未挂起的线程
debugger.frames.label.async.call.from.function=来自 {0} 的异步调用
dialog.message.error.while.calculating.remote.operating.system=计算远程操作系统时出错
breakpoint.variant.text.all=所有
message.frame.is.not.available=框架不可用
session.tab.hide.threads.view=隐藏线程视图
session.tab.show.threads.view=显示线程视图
session.tab.close.debug.session=关闭调试会话
memory.view.empty.running=在断点停止，加载类列表
memory.view.empty.stopped=类不可用
memory.view.load.classes=加载类
memory.view.no.classes.loaded=未加载类。
memory.view.table.column.name.class=类
memory.view.table.column.name.count=计数
memory.view.table.column.name.diff=差异
memory.view.instances.dialog.title={0} 的实例
memory.view.instances.dialog.title.warning={0} 的实例。警告: {1}
memory.view.instances.warning.not.all.loaded=并非所有实例都会被加载(仅 {0})

debugger.inline.watches.group.name=内联监视
debugger.inline.watches.edit.watch.expression.text=编辑监视表达式
debugger.inline.watches.popup.action.add.as.inline.watch=添加为内联监视

debug.toolwindow.empty.text.0=要调试代码，请执行以下操作之一:
debug.toolwindow.empty.text.1=– 点击编辑器间距中的“运行”图标
debug.toolwindow.empty.text.2=- 在编辑器上下文菜单中选择“调试…”
debug.toolwindow.empty.text.help=正在调试模式
debugger.evaluate.expression.or.add.a.watch.hint=评估表达式({0})或添加监视({1})
debugger.switch.frames.from.anywhere.hint=使用 {0} 和 {1} 从 IDE 中的任意位置切换帧

xdebugger.threads.vars.tab.title=线程和变量
debug.tool.window.header.toolbar=调试标题工具栏
debug.tool.window.more.toolbar=调试标题更多弹出窗口
debug.threads.and.frames.default.layout.option=组合
debug.threads.and.frames.threads.tree.layout.option=线程
debug.threads.and.frames.side.by.side.layout.option=并排
debug.threads.and.frames.frames.only.layout.option=仅显示帧
debugger.result.node.name=结果
group.advanced.settings.debugger=调试器
advanced.setting.debugger.max.recent.expressions=最近表达式的最大数量
options.kotlin.attribute.descriptor.inline.stack.frames=内联堆栈帧