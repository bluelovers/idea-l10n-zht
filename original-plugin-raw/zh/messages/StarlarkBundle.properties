annotator.missing.closing.quote=缺少右引号 [{0}]
annotator.missing.closing.triple.quote=缺少右三引号
annotator.named.parameter.not.found=找不到具有此名称的形参\: {0}
annotator.unresolved.reference=未解析的引用\: {0}
annotator.unused.declaration=从未使用 {0} "{1}"
highlighter.descriptor.text.brackets=中括号
highlighter.descriptor.text.comma=逗号
highlighter.descriptor.text.dot=点
highlighter.descriptor.text.functionDeclaration=函数声明
highlighter.descriptor.text.identifier=标识符
highlighter.descriptor.text.keyword=关键字
highlighter.descriptor.text.lineComment=行注释
highlighter.descriptor.text.namedArgument=命名实参
highlighter.descriptor.text.number=数字
highlighter.descriptor.text.parentheses=圆括号
highlighter.descriptor.text.semicolon=分号
highlighter.descriptor.text.string=字符串
parser.end.of.statement.expected=应为语句结束
parser.expected.colon=应为 '\:'
parser.expected.colon.or.rbracket=应为 '\:' 或 ']'
parser.expected.comma=应为 ','
parser.expected.comma.lpar.rpar=应为 ','、'(' 或 ')'
parser.expected.comma.or.rpar=应为 ',' 或 ')'
parser.expected.else=应为 'else'
parser.expected.expr.or.comma.or.bracket=应为表达式、',' 或 ']'
parser.expected.expression=应为表达式
parser.expected.for.or.bracket=应为 ']' 或 'for'
parser.expected.formal.param.name=应为形参名称
parser.expected.identifier=应为标识符
parser.expected.in=应为 'in'
parser.expected.lpar=应为 '('
parser.expected.name=应为名称
parser.expected.rbrace=应为 '}'
parser.expected.rbracket=应为 ']'
parser.expected.rpar=应为 ')'
parser.expected.statement=应为语句
parser.expected.string=应为字符串
parser.indent.expected=应为缩进
parser.rbracket.or.comma.expected=应为 ']' 或 ','
parser.reserved.keyword.cannot.be.used.as.identifier=''{0}'' 保留关键字不能用作标识符
parser.statement.expected.found.0=应为语句，实际为 {0}
parser.tuple.expression.expected=应为元组表达式
parser.unexpected.expression.syntax=意外的表达式语法
parser.unexpected.indent=意外缩进
parser.unindent.does.not.match.any.outer.indent=取消缩进不匹配任何外部缩进级别
parser.value.expression.expected=应为值表达式
