action.description.copy.whole.thread.dump.to.clipboard=将线程转储复制到剪贴板
action.description.group.threads.with.identical.stacktraces=组合具有相同堆栈跟踪的线程
action.description.show.only.threads.containing.a.specific.string=仅显示包含特定字符串的线程
action.text.copy.to.clipboard=复制到剪贴板
action.text.merge.identical.stacktraces=合并相同的堆栈跟踪
align.types.in.multi.catch=在多 catch 中对齐类型
annotations.new.line.record.component=为注解添加新行
auto.run.floating.toolbar.disable.action=禁用自动测试
auto.run.floating.toolbar.text=自动测试开启
button.add=添加…
button.add.blank=添加空白
button.add.package=添加软件包…
checkbox.after.description=在描述后
checkbox.after.parameter.descriptions=在形参描述后
checkbox.after.return.tag=在return后
checkbox.align.parameter.descriptions=对齐形参说明
checkbox.align.thrown.exception.descriptions=对齐抛出异常说明
checkbox.delete.unused.module.import=删除未使用的模块 import
checkbox.do.not.indent.top.level.class.members=不缩进顶层类成员
checkbox.do.not.wrap.after.single.annotation=单个注解后不换行
checkbox.do.not.wrap.one.line.comments=一行注释不分行
checkbox.enable.javadoc.formatting=启用JavaDoc格式
checkbox.enable.leading.asterisks=启用前导星号
checkbox.generate.p.on.empty.lines=在空行中生成 "<p>"
checkbox.insert.imports.for.inner.classes=插入导入到内部类
checkbox.keep.empty.lines=保留空行
checkbox.keep.empty.param.tags=保持空 @param 标签
checkbox.keep.empty.return.tags=保持空 @return 标签
checkbox.keep.empty.throws.tags=保持空 @throws 标签
checkbox.keep.invalid.tags=保持无效标签
checkbox.no.separate.module.import=不要将模块 import 分成单个 import 或软件包 import
checkbox.param.description.on.new.line=形参描述在新行
checkbox.param.indent.on.continuation=缩进连续线
checkbox.preserve.line.feeds=保留换行
checkbox.spaces.around.annotation.eq=注解值对中的 '\=' 周围
checkbox.spaces.before.colon.in.foreach=在 foreach 中的冒号之前
checkbox.spaces.before.deconstruction.list=析构列表
checkbox.spaces.inside.block.braces.when.body.is.present=存在主体时在块大括号内
checkbox.spaces.inside.one.line.enum=在一行枚举大括号内
checkbox.spaces.record.header=记录标头
checkbox.spaces.within.deconstruction.list=析构列表
checkbox.use.fully.qualified.class.names=使用完全限定类名
checkbox.use.single.class.import=使用单个类导入
checkbox.use.throws.rather.than.exception=用 @throws 而不是 @exception
checkbox.wrap.at.right.margin=在右页边距处换行
code.style.settings.angle.spacing.brackets=尖括号
code.style.settings.spacing.after.closing.angle.bracket=右尖括号之后
code.style.settings.spacing.around.type.bounds=类型界限周围
do.not.import.inner.classes.for=按短名称排除内部类\:
do.not.import.inner.classes.no.classes=未定义内部类
dump.item.java.thread.icon.tooltip.daemon=守护线程
dump.item.java.thread.icon.tooltip.virtual=虚拟线程
editbox.blank.lines.field.in.interface=接口中的字段之前
editbox.blank.lines.field.with.annotations=带注解的字段之前\:
editbox.blank.lines.field.without.annotations=在没有注解的字段之前\:
editbox.blank.lines.record.components=记录组件之间\:
editbox.blanklines.around.initializer=初始值设定项周围\:
editbox.class.count.to.use.import.with.star=将 import 与 '*' 搭配使用的类计数\:
editbox.names.count.to.use.static.import.with.star=将静态 import 与 '*' 搭配使用的名称计数\:
group.javadoc.alignment=对齐
group.javadoc.blank.lines=空行
group.javadoc.invalid.tags=无效标签
group.javadoc.other=其他
import.layout.on.demand.import.from.same.package.first=将按需 import 放在来自同一软件包的单类 import 之前
import.layout.panel.all.other.imports=所有其他导入
import.layout.panel.blank.line.entry=<空行>
import.layout.panel.down.button=下
import.layout.panel.module.imports=模块 import
import.layout.panel.up.button=上
import.layout.static.imports.separately=单独布局 static import
listbox.import.package=软件包
listbox.import.static=static
listbox.import.with.subpackages=以及子软件包
new.line.when.body.is.presented=显示正文时换行
notification.text.full.thread.dump.was.successfully.copied.to.clipboard=已成功将完整线程转储复制到剪贴板
notification.text.truncated.thread.dump.was.successfully.copied.to.clipboard=截断的线程转储已成功复制到剪贴板
radio.use.fully.qualified.class.names.in.javadoc=在 JavaDoc 中使用完全限定类名\:
radio.use.fully.qualified.class.names.in.javadoc.always=始终
radio.use.fully.qualified.class.names.in.javadoc.if.not.imported=如果尚未导入
radio.use.fully.qualified.class.names.in.javadoc.never=切勿使用短名称和添加导入
sort.threads.by.interest.level=按兴趣程度对线程进行排序
sort.threads.by.name=按名称对线程排序
thread.dump.loading.text=正在加载…
title.import.layout=导入布局\:
title.javadoc=JavaDoc
title.packages.to.use.import.with=将 import 与 '*' 搭配使用的软件包\:
truncated.dump.notification=显示前 {0} 个元素
wrapping.annotation.enums=枚举字段注解
wrapping.annotation.parameters=注解形参
wrapping.deconstruction.patterns=析构模式
wrapping.multi.catch.types=多 catch 中的类型
wrapping.record.components=记录组件
wrapping.semicolon.after.call.chain=将 ';' 移动到新行
wrapping.switch.statement.or.expression='switch' 语句/表达式
wrapping.text.blocks=文本块
