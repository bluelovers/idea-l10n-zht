# Inspections
osgi.inspection.group.name=Spring OSGi

model.inspection.service.inconsistency=Spring OSGi 基于 XML 的应用程序上下文中不正确的声明
model.inspection.service.common=不正确声明的 OSGi 服务

service.inconsistency.illegal.use.of.interfaces=同时使用 interface 特性和 interfaces 元素是非法的
service.inconsistency.illegal.use.of.ref.and.bean=同时使用 ref 特性和 Bean 元素是非法的
collections.inconsistency.illegal.use.of.comparator=同时使用 comparator-ref 特性和 comparator 元素是非法的

service.common.inspection.interface.must.be.implemented=Bean 必须为 ''{0}'' 的继承者
service.common.inspection.is.interface=此处应为接口
model.inspection.listener.common=不正确声明的 OSGi 生命周期侦听器
model.inspection.listener.common.method.return.type=方法必须具有 'void' 返回类型
model.inspection.listener.common.method.parameters=方法必须具有参数: anyMethodName(ServiceType service, Dictionary properties)、anyMethodName(ServiceType service, Map properties)、anyMethodName(ServiceReference ref)
model.inspection.listener.common.method.public=方法必须为 public
model.inspection.listener.class.extends=侦听器必须实现 ''{0}''

spring.patterns.osgi.group.name=动态模块
spring.patterns.osgi.service=服务
spring.patterns.osgi.multiple.service=服务(多个接口)
spring.patterns.osgi.ref=引用
spring.patterns.osgi.multiple.ref=引用(多个接口)
spring.patterns.osgi.ref.with.listener=引用(指定侦听器)
spring.patterns.osgi.ref.with.bean=引用(指定 Bean)

spring.patterns.osgi.list=列表
spring.patterns.osgi.list.comparator=列表(具有比较器)
spring.patterns.osgi.set=设置
spring.patterns.osgi.set.comparator=集合(具有比较器)
