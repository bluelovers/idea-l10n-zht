ejb.facet.display.name=EJB

ejb.validator.description=EJB
progress.validating.ejbs.text=正在验证 EJB…

ejb.model.object.type.entity.bean=实体 Bean
ejb.model.object.type.message.driven.bean=消息驱动 Bean
ejb.model.object.type.session.bean=会话 Bean
ejb.model.object.type.interceptor=侦听器
ejb.model.object.type.cmp.field=CMP 字段
ejb.model.object.type.cmr.field=CMR 字段
ejb.model.object.type.ejb.relation=EJB 关系

label.edit.cmp.field.description=描述(&D):
checkbox.cmp.field.properties.generate.setter.in.remote.interface=远程接口(&E)
checkbox.cmp.field.properties.generate.setter.in.local.interface=本地接口(&I)
checkbox.cmp.field.properties.generate.getter.in.remote.interface=远程接口(&R)
checkbox.cmp.field.properties.generate.getter.in.local.interface=本地接口(&L)
label.cmp.field.properties.generate.setter.in=在以下位置生成 setter:
label.cmp.field.properties.generate.getter.in=在以下位置生成 getter:
dialog.title.choose.ejb.message.listener.interface=选择 EJB 消息侦听器接口
dialog.title.choose.ejb.service.endpoint.interface=选择 EJB 服务端点接口
label.ejb.class.properties.message.listener.interface=消息侦听器(&M):
label.ejb.class.properties.service.endpoint.interface=服务端点(&S):

border.interceptor.binding=侦听器绑定
column.name.ejb.business.tree.name=名称
column.name.ejb.business.tree.intercept=截获
checkbox.default.interceptor=默认侦听器(&D)

template.node.ejb=EJB
ejb.template.node.java.code.templates=Java 代码模板
ejb.template.node.deployment.descriptors=部署描述符
ejb.model.object.type.abstract.schema.name=抽象架构名称

ejb.dialog.title.primary.key.class=主键类
label.pk.class.dialog.pk.class.cant.contain.compound.primary.key=<html>PK 类 ''{0}'' 不能包含复合主键。<br>请任选以下操作:<ul><li>指定可以保留所有 CMP 字段的主键类，或</li><li>提供软件包和类名以创建新主键类</li></html>
border.pk.class.dialog.primary.key.class.package=主键类软件包:
dialog.title.choose.primary.key.class.package=选择主键类软件包
border.pk.class.dialog.primary.key.class.name=主键类名称:

class.role.ejb.class=EJB 类
class.role.home.interface=主接口
class.role.local.home.interface=本地主接口
class.role.local.interface=本地接口
class.role.remote.interface=远程接口
class.role.business.local.interface=本地业务接口
class.role.business.remote.interface=远程业务接口
class.role.service.endpoint.interface=服务端点接口
class.role.unknown.ejb.class=未知 EJB 类

model.object.type.service.reference=Web 服务引用
model.object.type.managed.bean=托管 Bean
model.object.type.ejb.reference=EJB 引用
model.object.type.ejb.local.reference=EJB 局部引用
model.object.type.ejb.message.destination.reference=消息目标引用

ejb.declaration.action.home.interface.not.found=未找到主接口
ejb.declaration.action.bean.interface.not.found=未找到 Bean 接口
ejb.declaration.action.add.method=添加方法
EjbFrameworkSupportProvider.create.ejb.jar.xml=创建 ejb-jar.xml

message.text.class.not.fount.in.project=在项目中未找到类 ''{0}''
confirmation.text.regenerate.equals.and.hashcode.for.class=为类 ''{0}'' 重新生成 equals 和 hashCode 方法?
message.title.primary.key.class.changed=主键类已更改

deployment.descriptor.title.ejb.module=EJB 模块部署描述符

role.for.ejb.name.string.representation=EJB ''{1}'' 的{0}
role.for.interceptor.name.string.representation=''{1}'' 的{0}
method.role.finder.method.declaration=Finder 方法声明
method.role.create.method.declaration=创建方法声明
method.role.business.method.declaration=业务方法声明
method.role.cmp.field.getter.declaration=CMP 字段 Getter 声明
method.role.cmp.field.setter.declaration=CMP 字段 Setter 声明
method.role.cmr.field.getter.declaration=CMR 字段 Getter 声明
method.role.cmr.field.setter.declaration=CMR 字段 Setter 声明
method.role.home.business.method.declaration=主业务方法声明
method.role.unknown.method.declaration=未知方法声明
method.role.home.business.method.implementation=主业务方法实现
method.role.finder.method.implementation=Finder 方法实现
method.role.selector.method.implementation=选择器方法实现
method.role.create.method.implementation=创建方法实现
method.role.post.create.method.implementation=发布创建方法实现
method.role.business.method.implementation=业务方法实现
method.role.cmp.field.getter.implementation=CMP 字段 Getter 实现
method.role.cmp.field.setter.implementation=CMP 字段 Setter 实现
method.role.cmr.field.getter.implementation=CMR 字段 Getter 实现
method.role.cmr.field.setter.implementation=CMR 字段 Setter 实现
method.role.method.implementation=方法实现

command.name.create.directory=创建目录
message.title.error=错误

ejb.dialog.title.new.typename=新建 {0}
ejb.type.bmp.entity.bean=BMP 实体 Bean
ejb.type.cmp.entity.bean=CMP 实体 Bean
ejb.type.entity.bean=实体 Bean
ejb.type.session.bean=会话 Bean
ejb.type.stateful.bean=有状态会话 Bean
ejb.type.stateless.bean=无状态会话 Bean
ejb.type.singleton.bean=单一实例会话 Bean
ejb.type.message.bean=消息 Bean
ejb.interceptor.type=侦听器

#Delete ejb
checkbox.delete.ejb.delete.following.classes=删除以下类(&D):
command.name.delete.ejb.class=删除 EJB 类
local.vcs.label.name.deleting.ejb.class=正在删除 ejb 类 {0}
dialog,title.remove.ejb.remote.interface=移除 EJB 远程接口
dialog.title.remove.ejb.local.interface=移除 EJB 本地接口

dialog.title.create.new.cmp.field=创建 CMP 字段

#Creating ejb
label.text.creating.ejb=正在创建 EJB ''{0}''
dialog.title.create.new.ejb.0=创建新 EJB ''{0}''

#actions
action.name.create.bmp.entity.bean=创建 BMP 实体 Bean
action.name.create.cmp.entity.bean=创建 CMP 实体 Bean
action.name.new.cmp.field=新建 CMP 字段
action.description.create.new.cmp.field=创建新 CMP 字段
action.name.new.ejb.relationship=新建 EJB 关系
action.description.create.new.ejb.relationship=创建新 EJB 关系
message.text.must.be.cmp.entity.bean.with.local.interface=必须至少有一个具有本地接口的 CMP 实体 Bean
message.title.cannot.create.relationship=无法创建关系
action.name.create.message.bean=创建消息 Bean
action.name.create.stateless.bean=创建无状态会话 Bean
action.name.create.stateful.bean=创建有状态会话 Bean
action.name.create.singleton.bean=创建单一实例会话 Bean
action.name.create.new.transfer.object=传输对象
command.name.create.transfer.object=创建传输对象

label.ejb.class.properties.ejb.class=EJB 类(&C):

tooltip.text.primary.key.class=主键类

dialog.title.cant.create.class=无法创建类
class.role.interceptor.class=侦听器
action.name.create.interceptor=创建侦听器
interceptor.method.container.node.title=侦听器方法

value.should.either.0.or.1=值应为 {0} 或 {1}

#intentions
intention.add.method.to.ejb.class.family=将方法添加到 EJB 类中
intention.add.method.to.ejb.class.text=将 ''{0}'' 添加到 Bean 实现类 {1} 中
intention.add.method.to.ejb.class.error.no.impl.class.message=未找到 Bean 实现类。未生成方法。

#actions
action.CreateStatelessBean.text=无状态会话 Bean(_L)
action.CreateStatefulBean.text=有状态会话 Bean(_F)
action.CreateSingletonBean.text=单一实例会话 Bean(_G)
action.CreateContainerManagedEntityBeanAction.text=CMP 实体 Bean(_C)
action.CreateBeanManagedEntityBeanAction.text=BMP 实体 Bean(_B)
action.CreateMessageBean.text=消息 Bean(_M)
action.CreateTransferObject.text=传输对象(_T)
action.CreateCMPField.text=CMP 字段(_C)
action.CreateEJBRelationship.text=EJB 关系(_R)
action.CreateEJBInterceptor.text=侦听器(_I)
action.CreateServletAction.text=Servlet(_S)
action.CreateServletAction.description=创建新 servlet
action.CreateFilterAction.text=筛选器(_F)
action.CreateFilterAction.description=创建新筛选器
action.CreateListenerAction.text=侦听器(_L)
action.CreateListenerAction.description=创建新侦听器
action.GenerateEJBReference.text=@EJB 引用
action.GenerateResourceReference.text=@Resource 引用
action.GeneratePersistenceContextReference.text=@PersistenceContext/单元引用
action.GenerateInterceptorMethods.text=侦听器方法…
action.GenerateEntityListenerMethods.text=实体侦听器方法…
action.GenerateEJBFinderOrSelectorMethod.text=EJB Finder/选择器方法…

action.OpenPersistenceERDiagramAction.text=ER 图表(_G)
action.ValidateJsp.text=验证 JSP(_V)
action.ValidateJsp.description=验证选定的 JSP 文件
action.PackageFile.text=软件包文件(_P)
action.PackageFile.description=将所选文件添加到展开型部署目录或 Java EE 归档中

group.GeneratePersistenceMapping.text=生成持久性映射
group.JspActions.text=JSP 操作
group.JavaeeMigrationGroup.text=迁移操作

action.GenerateFilterAction.text=过滤(&F)...
action.GenerateServletAction.text=Servlet(&S)…
group.NewGroupPersistence.text=持久性
group.J2EEGenerateGroup.text=J2EE
group.WebResourcesGroup.text=网页

EJBImplementationAction.bean.class.not.found=找不到 Bean 类
EjbFrameworkSupportProvider.template.node.ejb=EJB

message.title.change.ejb.classes=更改 EJB 类
dialog.title.choose.ejb.class=选择 EJB 类
label.ejb.class.properties.package=软件包(&P):
dialog.title.choose.ejb.classes.package=选择 EJB 类软件包
dialog.title.choose.ejb.home.interface=选择 EJB 主接口
label.ejb.class.properties.remote.interface=主(&H):
label.ejb.class.properties.local.home=本地主(&O):
label.ejb.class.properties.remote=远程(&E):
label.ejb.class.properties.local=本地(&A):
dialog.title.choose.ejb.remote.interface=选择 EJB 远程接口
dialog.title.choose.ejb.local.home.interface=选择 EJB 本地主接口
dialog.title.choose.ejb.local.interface=选择 EJB 本地接口
label.ejb.class.properties.primary.key.class=主键类(&K):
dialog.title.choose.ejb.primary.key.class=选择 EJB 主键类
message.text.ejb.exists.in.ejb.facet=EJB ''{0}'' 在此 EJB facet 中已存在。
checkbox.edit.ejb.class.enable.local.interface=本地接口(&L)
checkbox.edit.ejb.class.enable.remote.interface=远程接口(&R)
label.edit.ejb.class.cmp.version=CMP 版本(&V)
message.text.no.ejbs.in.this.module.no.interceptors=此模块中没有 EJB。

ejb.interface.entry.point=EJB 接口方法

title.choose.interceptor.method.types=选择要实现的侦听器方法
command.apply.interceptor.bindings.command=修改侦听器绑定
dialog.title.edit.interceptor.bindings=编辑侦听器 ''{0}'' 绑定

dialog.title.ejb.relationship.properties=EJB 关系属性
message.text.entity.bean.not.specified.for.cmr.field=应指定现有实体 EJB 名称
label.edit.relationship.ejb=EJB:
dialog.title.choose.cmp.field.class=选择 CMP 字段类
label.edit.cmp.field.name=名称: (&N)
message.text.cmp.field.exists=CMP 字段 ''{0}'' 已存在。
message.text.cmp.field.name.not.valid=CMP 字段名称 ''{0}'' 不是有效的标识符。
message.text.cmp.field.name.should.begin.with.a.lower.case.letter=CMP 字段名称应以小写字母开头。
checkbox.edit.cmp.field.primary.key=主键(&P)
message.text.type.not.found=未找到类型 ''{0}''。
label.edit.cmp.field.type=类型(&T):
confirmation.text.class.does.not.exist.create.it=类 {0} 不存在。要创建吗?
confirmation.text.classes.do.not.exist.create.them=类\n{0}\n不存在。要创建吗?
dialog.title.choose.entity.bean.primary.key.class=选择实体 Bean 主键类
message.text.duplicate.role.names=重复的角色名称
message.text.cmr.field.0.already.defined=CMR 字段 ''{0}'' 已在 {1} 中定义。
message.text.cmr.field.name.should.begin.with.a.lower.case.letter=CMR 字段名称应以小写字母开头。
message.text.name.is.not.valid.identifier={0} 不是有效的标识符
label.ejb.roots.text=EJB 类的源根

#Create transfer object
message.text.recommended.transfer.object.class.agrees.with.pattern=建议传输对象类名\n同意以下模式: {0}
label.create.transfer.object.transfer.object.class.name=传输对象类名称:
checkbox.create.transfer.object.generate.getter.in.interface=在 {0} 接口中生成 getter(&G)
checkbox.create.transfer.object.generate.setter.in.interface=在 {0} 接口中生成 setter(&S)
message.text.select.field.to.include.in.transfer.object=请至少选择一个要包含在传输对象中的字段。
dialog.title.select.accessors.of.fields.to.include.in.transfer.object=选择要包含在传输对象中的字段访问器
dialog.title.edit.ejb.ql.query=编辑 EJB QL 查询

dialog.title.rename.0=重命名 {0}
inspection.ejb.display.name=EJB 类错误
inspection.ejb.xml.display.name=EJB 描述符
inspection.javaee.ejb.ql.display.name=EJB QL 问题

border.relationship.editor.role.1=角色 1
border.relationship.editor.role.2=角色 2
label.edit.relationship.field.type=字段类型:
label.edit.relationship.field.name=字段名称:
label.edit.relationship.role.name=角色名称:
label.edit.relationship.multiplicity=多重性:
label.edit.relationship.description=描述(&D):
label.edit.relationship.relationship.name=关系名称(&N):
checkbox.edit.relationship.enable.cmr.field=CMR 字段
checkbox.edit.relationship.getter=Getter
checkbox.edit.relationship.setter=Setter
checkbox.edit.relationship.cascade.delete=级联删除

#intentions
intention.add.method.to.ejb.interface.family=将方法添加到 EJB 接口中
intention.add.method.to.ejb.interface.text=将 ''{0}'' 添加到 Bean 接口中
intention.add.method.to.ejb.interface.error.no.home.interface=未找到 Bean 主接口类。未生成方法。
intention.add.method.to.ejb.interface.error.no.interface=未找到 Bean 接口类。未生成方法。
intention.add.method.to.ejb.interface.command.name=添加方法
intention.add.method.to.ejb.interface.chooser.title=选择接口
intention.add.method.to.ejb.interface.chooser.label=将 ''{0}'' 添加到

message.title.class.not.found=找不到 {0}
message.title.no.fields.selected=未选择字段

action.EditInterceptorBindingsAction.text=编辑侦听器绑定(_B)…
action.OpenEjbERDiagramAction.text=实体关系图
ejb.form.abstract.schema.name=抽象架构名称:

ejb.config.gutter.action=打开 EJB 工具窗口
ejb.config.gutter.name=EJB 配置文件
ejb.annotations.gutter.name=EJB 注解