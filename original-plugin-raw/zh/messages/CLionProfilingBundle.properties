dynamic.analysis.tools.configurable.name=动态分析工具
dynamic.analysis.tools.sanitizers.configurable.name=Sanitizers
dynamic.analysis.tools.valgrind.configurable.name=Valgrind
dynamic.analysis.tools.memcheck.border.title=Valgrind Memcheck
# suppress inspection "UnusedProperty"

memory.profile.panel.loading.preview.label=正在加载预览…
memory.profile.panel.preview.editor.title=预览编辑器
memory.profile.panel.frame.information.title=框架信息
memory.profile.panel.empty.preview=选择一个堆栈帧以获取更多信息
memory.profile.instruction.pointer.label=指令指针:
memory.profile.object.label=对象:
memory.profile.function.label=函数:
memory.profile.directory.label=目录:
memory.profile.file.label=文件:
memory.profile.line.label=行:
memory.profile.warnings.count={0} 个{0,choice, 0#警告|1#警告|2#警告}
memory.profile.node.empty=<空>
memory.profile.import.title=正在导入 {0} 结果
memory.profile.process.output.from.remote=正在远程处理 {0} 输出

valgrind.fileNotFound=找不到 Valgrind 可执行文件: ''{0}''<br><a href="">配置</a>
valgrind.sanitizers=Valgrind 在启用 Google Sanitizers 的情况下可能无法正常工作
valgrind.ctest.invalid.trace.children.parameter=Valgrind 可能不会显示 CTest 执行的结果，因为 `--trace-children` 设置为 `no`。
valgrind.progress=Valgrind 正在运行…
valgrind.configurable.executable.label=Valgrind 可执行文件:
valgrind.configurable.executable.dialog.title=Valgrind 可执行文件路径
valgrind.confugurable.analysisOptions.label=分析选项:
valgrind.configurable.arguments.hint=这些实参将自动添加:
valgrind.argument.hint=--tool=memcheck、--xml=yes、--xml-file=<file>、--gen-suppressions=all、<program>、程序实参和所有禁止文件
valgrind.configurable.no.suppression.files=无禁止文件
valgrind.configurable.add.suppression.files.label=添加禁止文件:
valgrind.executor.description=使用 Valgrind 内存检查器分析所选配置
valgrind.executor.run.action=运行 Valgrind Memcheck
valgrind.executor.run.action.with.configuration=通过 Valgrind Memcheck 运行 {0}
valgrind.suppress.action.title=选择禁止文件
valgrind.suppress.action.description=选择要添加禁止的文件
valgrind.prepare.suppression.files=正在准备 Valgrind 禁止文件…

sanitizers.runtime.flags.border.title=运行时标志
sanitizers.runtime.flags.hint=各工具解析相应环境变量中的选项
sanitizers.runtime.flags.hint.note=注意: log_path、stack_trace_format、print_summary、print_stacktrace 将被覆盖
sanitizers.import.flags.button=从现有环境变量导入标志
sanitizers.use.visual.representation.checkbox=为 Sanitizer 的输出使用视觉表示
sanitizers.compiler.min.version.supported=注: 要启用此功能，需要 Clang (>={0})或 GCC(>={1})
sanitizers.tabTitle=Sanitizers
sanitizers.progress=程序正在运行…
sanitizers.llvmSymbolizer.notification.title=Google Sanitizers
sanitizers.llvmSymbolizer.notification.text=找不到 llvm-symbolizer。要通过导航获取堆栈跟踪，请将 *SAN_SYMBOLIZER_PATH 环境变量设置为指向 llvm-symbolizer 二进制文件，或确保 llvm-symbolizer 位于您的 PATH 中。

action.Sanitizers.EditSettings.text=编辑设置
action.Valgrind.EditSettings.text=编辑设置
action.Valgrind.SuppressAction.text=禁止
action.Valgrind.ImportAction.text=导入 Valgrind XML 结果


dynamic.analysis.tools.configurable.description=可用的动态分析工具列表
configurable.group.dynamic.analysis.tools.settings.display.name=动态分析工具