# settings dialog
cf.config.title=ClangFormat
cf.config.enable=启用 ClangFormat (仅限 C/C++/Objective-C)
cf.config.override.standard=ClangFormat 重写 IDE 代码样式设置
cf.title.actual.clang.format={0} 的 ClangFormat 选项

# indent widget
cf.hint.text.overridden=ClangFormat
cf.action.group.title=ClangFormat
cf.action.disable=禁用 ClangFormat
cf.action.enable=启用 ClangFormat
cf.action.open.file=编辑 {0} 的 `.clang-format`
cf.action.open.full.set=查看 {0} 的 ClangFormat 选项
cf.action.create.file=从代码样式创建 `.clang-format`
# suppress inspection "UnusedProperty"
cf.action.export=.clang-format 文件

# indent widget tooltips
cf.advertisement.text.overridden=当前代码样式被 ClangFormat 重写
cf.advertisement.text.has.clang-format=启用 ClangFormat 并使用 `.clang-format` 重写代码样式。
# json schema
cf.schema.name=ClangFormat

# create `.clang-format` file Yes/No
cf.create.cf.file.title=创建 .clang-format 文件
cf.create.cf.file.message=是否要通过有效代码样式为项目创建新的 .clang-格式文件?

progressbar.long.clang.format=正在使用 ClangFormat 格式化…
progressbar.long.clang.indent=正在使用 ClangFormat 缩进…
progressbar.long.clang.settings=正在加载 ClangFormat 设置…

action.CIDR.Lang.Format.ClangFormat.text=clangd: 纯 Clang 格式