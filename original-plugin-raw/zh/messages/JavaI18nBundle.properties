action.description.new.line.0=新建一行 ({0})
action.text.mark.as.nonnls=标记为 NonNls
action.text.unmark.as.nonnls=取消标记为 NonNls
comment.if.the.resource.bundle.is.invalid.either.declare.it.as.an.object=如果资源包无效，请在源代码中将其声明为 java.util.ResourceBundle 类的对象，或编辑国际化模板，以指向您的自定义资源包类的方法。
dissociate.resource.bundle.quick.fix.name=分离资源包
dissociate.resource.bundle.quick.fix.options.input.text=Inter 语言代码
dissociate.resource.bundle.quick.fix.options.input.title=添加区域语言
dissociate.resource.bundle.quick.fix.options.label=其他语言代码:
error.hint.property.has.no.usages=属性没有用法
error.hint.property.has.non.method.usages=属性存在非方法用法
i18n.quickfix.code.panel.resource.bundle.expression.label=资源绑定表达式:(&E)
i18n.quickfix.code.panel.title=Java代码信息
i18n.quickfix.preview.panel.title=预览
i18nize.dialog.error.jdk.message=找不到类'java.util.ResourceBundle'。请正确安装JDK。
i18nize.dialog.error.jdk.title=类未找到
i18nize.dialog.template.link.label=编辑I18n模板
i18nize.error.message=您只能国际化 Java 字符串文字或其子字符串。\n请将文本光标置于 Java 字符串文字内或选择它的一部分。
i18nize.error.title=不能I18nize选择
i18nize.jsp.error=请选择JSP文本i18nize。\n确保您没有选择任何脚本,自定义标签或其他语言元素。\n同时,HTML标签里面选择必须是平衡的。
inconsistent.bundle.property.error=不一致的属性''{0}''.必须定义在父文件''{1}''.
inconsistent.bundle.property.inconsistent.end=不一致的属性值结束''{0}''
inconsistent.bundle.property.inconsistent.end.parent.end.from.check.symbols=不一致的属性值结束“{0}”,但发现''{1}''在''{2}''
inconsistent.bundle.property.inconsistent.placeholders=不一致的占位符:{0}在“{1}”
inconsistent.bundle.property.inherited.with.the.same.value=属性继承了''{0}''文件相同的值
inconsistent.bundle.report.duplicate.properties.values=报表属性覆盖与相同的值(&O)
inconsistent.bundle.report.inconsistent.properties=报告不一致的属性(&I)
inconsistent.bundle.report.inconsistent.properties.ends=报表属性不一致的目的(&E)
inconsistent.bundle.report.inconsistent.properties.placeholders=报表属性不一致的占位符(&P)
inconsistent.bundle.report.missing.translations=报告失踪的翻译(&M)
inconsistent.bundle.untranslated.property.error=未翻译属性''{0}''.应该被覆盖在''{1}''.
inconsistent.resource.bundle.display.name=不一致的资源包
inline.property.confirmation=使用值 ''{1}'' 内联属性 ''{0}''?
inline.property.refactoring=内联属性
inspection.duplicates.display.name=复制字符串文字
inspection.duplicates.message=<html><body>重复的字符串在<br>{0}</body></html>
inspection.duplicates.message.in.this.file=(在此文件中)
inspection.duplicates.message.more=... ({0}更多)
inspection.duplicates.navigate.to.occurrences=导航到匹配项
inspection.duplicates.occurrences.view.title=''{0}'' 的重复项
inspection.duplicates.option=最小字符串长度：(&M)
inspection.duplicates.option.report.propertykey.expressions=忽略 @PropertyKey 表达式 (&I)
inspection.duplicates.replace.family.quickfix=替换
inspection.duplicates.replace.quickfix=替换为 ''{0}''
inspection.error.dialog.title=错误
inspection.i18n.display.name=硬编码字符串
inspection.i18n.expression.is.invalid.error.message=I18nized表达式模板的不是一个有效的表达式
inspection.i18n.message.general.with.value=硬编码字符串:{0}
inspection.i18n.message.non.localized.passed.to.localized=非本地化字符串的引用用于应为本地化字符串的位置
inspection.i18n.option.ignore.assert=对断言语句参数忽略
inspection.i18n.option.ignore.assigned.to.constants=忽略文字分配常数
inspection.i18n.option.ignore.comment.pattern=忽略包含此注释(正则表达式)的行:
inspection.i18n.option.ignore.comment.title=非 Nls 注释模式
inspection.i18n.option.ignore.string.pattern=忽略内容匹配此正则表达式的行:
inspection.i18n.option.ignore.string.title=非 Nls 字符串模式
inspection.i18n.option.ignore.enum=忽略枚举常量
inspection.i18n.option.ignore.for.exception.constructor.arguments=忽略异常构造函数参数:
inspection.i18n.option.ignore.for.junit.assert.arguments=对 JUnit 断言参数忽略
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=对指定的异常构造函数实参忽略
inspection.i18n.option.ignore.nls=如果没有使用 @Nls 注解目标，则忽略
inspection.i18n.option.report.unannotated.refs=报告未注解的引用
inspection.i18n.option.ignore.nonalphanumerics=忽略文字不包含字母字符
inspection.i18n.option.ignore.property.keys=忽略文字具有价值等于现有的属性键
inspection.i18n.option.ignore.qualified.class.names=忽略文字具有价值等于现有的完全限定类名
inspection.i18n.option.ignore.tostring=忽略toString()方法的内容
inspection.i18n.quickfix=I18nize硬编码字符串
inspection.invalid.resource.bundle.reference=无效的资源包引用''{0}''
inspection.title.capitalization.mix.description=该字符串将同时用于标题和句子大小写上下文中
inspection.title.capitalization.mismatch.description=需要 {1} 大小写时，提供 {0} 大小写
inspection.title.capitalization.description=字符串 ''{0}'' 的大小写不正确。其中的 {1} 应当大写
inspection.unresolved.property.key.reference.message=''{0}'' 似乎不是有效的属性键
inspection.unresolved.property.key.reference.name=无效属性健
intention.family.annotate.capitalization.type=注解大写类型
intention.text.edit.property.value=编辑属性值
intention.text.suppress.with.0.comment=使用 ''{0}'' 注释禁止
introduce.constant.across.the.project=跨项目引入常量
progress.title.searching.for.duplicates.of.0=搜索 ''{0}'' 的重复项
property.file=属性文件:
property.has.more.parameters.than.passed=属性 ''{0}'' 预期 {1} 个{1, choice, 1#形参|2#形参}，已传递 {2} 个
quickfix.family.title.capitalization.fix=正确大写
quickfix.i18n.concatentation=I18nize 串联
quickfix.i18n.concatentation.error=字符串连接没有找到
quickfix.text.title.capitalization=正确大写 ''{0}''
rename.prefix.based.property.key.error.message=无法基于名称 ''{2}'' 的前缀 ''{0}'' 重命名属性键 ''{1}''，请先更改前缀
resource.bundle.contains.locales.with.suspicious.locale.languages.desciptor=资源包包含区域语言可疑的区域设置
unused.message.format.parameter.display.name=缺少消息格式参数
unused.message.format.parameter.problem.descriptor=在 <code>#ref<code> 中使用参数 {0}，而不使用参数 {1} #loc 
intention.family.name.mark.as.nlssafe=标记为 @NlsSafe
capitalization.kind.title=标题
capitalization.kind.sentence=句子
value.column.name=值
key.column.name=键
command.name.edit.property.value=编辑属性值
# suppress inspection "DevKitPropertiesQuotesValidation"
checkbox.fold.to.context=将 ''{0}''、''{1}'' 等占位符折叠到 Java/Kotlin 代码中相应的上下文表达式
inspection.dialog.title.capitalization.display.name=错误的字符串大小写
inspection.suspicious.locales.languages.display.name=可疑的资源包区域设置语言

inspection.non.basic.latin.character.display.name=非基本拉丁字符
inspection.non.basic.latin.character.quickfix=转换为基本的拉丁
i18n.quickfix.preview.description=将以下字符串提取到 *.properties 文件中: