model.inspection.group.name=CDI (上下文和依赖项注入)

inspection.name.stereotype.restriction.errors=Bean 在构造型中存在范围冲突
inspection.name.injected.errors=不正确的依赖项注入位置
inspection.name.observer.method.errors=不正确的 observer 方法
inspection.name.alternative.errors=被否决的 @Alternative Bean
inspection.name.decorator.errors=不正确的 @Decorator 类
inspection.name.specialize.errors=不正确的 @Specializes 用法
inspection.name.managed.bean.inconsistency.errors=不正确的托管 Bean 定义
inspection.name.disposer.method.errors=不正确的 disposer 方法
inspection.name.disposer.method.to.produces.errors=无生产者的 Disposer 方法形参
inspection.name.interceptor.errors=无绑定类型的 @Interceptor 类
inspection.name.unproxyable.bean.types.inconsistency.errors=无法代理的 Bean 类型不正确的用法
inspection.name.stereotype.errors=不正确的 @Stereotype 注解类
inspection.name.ambiguous.dependencies=有不明确的依赖项的注入点
inspection.name.typed.annotation=不正确的 @Typed 注解用法
inspection.name.bean.normal.scope.inconsistency=具有非默认范围的 Bean 声明 public 字段
inspection.name.bean.scope.inconsistency=不正确的 Bean 范围
inspection.name.beans.configuration.errors=beans.xml 中不正确的 Bean 定义

CdiManagedBeanInconsistencyInspection.no.appropriate.constructor=托管的 Bean 必须有不带形参的构造函数，或有使用 @Inject注解的构造函数
CdiManagedBeanInconsistencyInspection.unallowed.ancestor=托管的 Bean 不得继承 ''{0}''
CdiManagedBeanInconsistencyInspection.parameterized.class=托管的 Bean 不得为形参化类型
CdiManagedBeanInconsistencyInspection.static.inner.class=托管的 Bean 不得为非 static 内部类
CdiManagedBeanInconsistencyInspection.not.concrete.class=托管的 Bean 必须是具体的类或 @Decorator

CdiInjectionInspection.field.cannot.be.static=static 字段上不允许 @Inject 注解
CdiInjectionInspection.field.cannot.be.final=不允许在最终字段中使用 @Inject 注解

CdiInjectInspection.more.than.one.injected.constructor=托管的 Bean 必须有一个使用 @Inject 注解的构造函数
CdiInjectInspection.wrong.injected.method.annotation=@Inject 方法不能使用 ''{0}'' 进行注解
CdiInjectInspection.injected.method.cannot.be.static=@Inject 方法不能为 static
CdiInjectInspection.injected.with.disposes.parameters=@Inject 方法的形参不能使用 ''{0}'' 进行注解
CdiInjectInspection.injected.method.cannot.be.abstract=@Inject 方法不能为 abstract
CdiInjectInspection.field.cannot.be.annotated.produces=注入的字段不能使用 @Produces 进行注解

CdiStereotypeRestrictionsInspection.different.scopes.in.stereotypes = 所有构造型必须指定相同的范围，或者必须在 Bean 中指定范围

CdiObservesInspection.multiple.observes.parameters.not.allowed = 方法只能包含一个 @Observes 形参
CdiObservesInspection.wrong.observe.method.annotation= Observer 方法不能使用 ''{0}'' 进行注解
CdiObservesInspection.observer.method.with.wrong.parameters=Observer 方法的形参不能使用 ''{0}'' 进行注解

CdiDecoratorInspection.cannot.find.decorates=装饰器的委托特性必须使用 @Delegate 进行注解
CdiDecoratorInspection.too.many.decorates.in.decorator=装饰器必须只有一个使用 @Delegate 注解的委托特性
CdiDecoratorInspection.annotation.not.allowed.for.decorator=装饰器类不允许 ''{0}'' 注解
CdiDecoratorInspection.decorates.type.must.implements.all.decorator.interfaces=装饰器的委托类型必须实现或扩展装饰的每个类型。不受支持: {0}
CdiDecoratorInspection.injection.point.must.be.constructor.or.initializer=包含 @Delegate 形参的方法必须是构造函数或初始值设定项方法(@Injected)
CdiDecoratorInspection.delegate.injection.point.expected=@Delegate 字段必须使用 @Injected 进行注解
CdiDecoratorInspection.class.must.be.decorator=不是装饰器的 Bean 类不能有使用 @Delegate 注解的注入点
CdiDecoratorInspection.class.cannot.be.final=装饰器不能为最终类

CdiSpecializesInspection.specializes.method.must.be.non.static=专门化方法不能为 static
CdiSpecializesInspection.specializes.method.must.be.producer=专用化方法必须使用 @Produces 进行注解
CdiSpecializesInspection.specializes.method.must.override.producer.of.superclass=专用化方法必须重写直接超类上的 @Produces 方法
CdiSpecializesInspection.specialized.class.has.multiple.specializes=多个类专用化同一超类: {0}
CdiSpecializesInspection.specialized.class.not.defined=专用化 Bean 必须扩展另一个 Bean
CdiSpecializesInspection.specialized.class.has.duplicated.named.anno=@Named 注解不能用于专用化类和专用类

CdiDisposerMethodInspection.too.many.dispose.parameters=方法不能有多个使用 @Disposes 注解的形参
CdiDisposerMethodInspection.non.abstract.disposer.method=Disposer 方法不能为 abstract

CdiInterceptorInspection.no.binding.type=@Interceptor 必须指定至少一个侦听器绑定

CdiUnproxyableBeanTypesInspection.unproxyable.type.detected=注入的正常范围 Bean 无法代理
CdiUnproxyableBeanTypesInspection.injected.in.passivating.scoped.bean.must.be.serializable=不能将非序列化类型的 Bean 注入钝化范围的 Bean 中
CdiUnproxyableBeanTypesInspection.passivating.scoped.bean.must.be.serializable= 声明钝化范围的托管 Bean 必须为 java.io.Serializable

CdiStereotypeInspection.qualified.annotations.not.allowed=不允许对构造型使用限定符注解
CdiStereotypeInspection.non.empty.named.annotations.not.allowed=不允许对构造型使用非空 @Named 注解
CdiStereotypeInspection.not.allowed.for.stereotypes=不允许用于构造型

CdiInspectionPointsInspection.unsatisfied.dependency=依赖项不满足要求: 没有一个 Bean 与注入点相匹配
CdiInspectionPointsInspection.ambiguous.dependency=依赖项不明确: 有多个 Bean 与注入点相匹配
CdiInspectionPointsInspection.new.annotation.with.other.qualifiers=@New 不能与其他限定符组合

CdiTypedAnnotationInspection.incorrect.bean.type=Bean 类型与 @Typed 注解的类型不相符。
CdiTypedAnnotationInspection.non.producer=应当应用于生产者

CdiScopeInspection.singleton.bean.incorrect.scopes=单例 Bean 必须为 @ApplicationScoped 或 @Dependent
CdiScopeInspection.session.stateless.bean.incorrect.scopes=会话无状态 Bean 的范围必须为 @Dependent

CdiNormalScopeInspection.public.field.in.normal.scoped.beans=具有非默认范围的 Bean 不得有 public 字段
CdiDomBeansInspection.class.must.be=此处应为 {0} 类
CdiDomBeansInspection.add.annotation=添加 @{0}
CdiDomBeansInspection.add.annotation.family=添加注解
CdiDomBeansInspection.duplicated.alternative.classes=类已在 <alternatives> 中定义
CdiDomBeansInspection.duplicated.stereotype.classes=构造型已在 <alternatives> 中定义
alternative.bean.should.not.be.vetoed=替代 Bean 不应被否决
CdiUnknownProducersForDisposerMethodInspection.cannot.find.corresponding.producers=找不到相应的生产者

CdiInjectInspection.field.should.not.be.initialized=注入字段可能无法初始化