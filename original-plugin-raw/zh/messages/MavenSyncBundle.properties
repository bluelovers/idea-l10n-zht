build.event.title.cannot.start.server.error=无法启动 Maven 服务器
build.event.title.error=错误
build.event.title.internal.server.error=Maven 服务器错误
cannot.download.zip.from=无法从 {0} 下载 ZIP 分发。请检查 distributionUrl
cannot.resolve.maven.home=无法解析 Maven 主目录
importing.jdk.changed=导入程序的 JDK 已更改
importing.jdk.changed.description=找不到导入程序 {0} 的 JDK，已更改为 {1}。<br>可以考虑通过 Maven 设置来更改导入程序 JDK
is.not.correct.maven.home.reverting.to.embedded={0} 不是正确的 Maven 主目录，正在还原为嵌入式
maven.cannot.reconnect=无法连接到 Maven 进程。如果问题一直存在，请检查网络和本地计算机设置。请参阅这篇文章以了解详情\: https\://intellij-support.jetbrains.com/hc/en-us/articles/360014262940
maven.core.plexus.init.issue.description=由于出现致命的严重错误，无法初始化 Maven\:\n可能的解决方案\:
maven.core.plexus.init.issue.description.exception=异常消息和堆栈跟踪如下\:
maven.core.plexus.init.issue.fix.downgrade=使用 Maven 3.8.4 或更早版本。从 Maven 3.8.5 开始，未解析的核心扩展会阻止 Maven 运行。<a href\="{0}">打开 Maven 设置</a>
maven.core.plexus.init.issue.fix.remove=移除未解析的核心扩展并<a href\="{0}">重新启动 Maven 子系统</a> 
maven.core.plexus.init.issue.title=无法解析 Maven 核心组件
maven.language.level.unaccepted.description=您必须接受测试版 Java 规范的法律声明条款，才能启用对“{0}”的支持<a href\="{1}">显示条款</a>
maven.language.level.unaccepted.title=无法设置语言级别“{0}”
maven.sync.annotation.processor.problem=Maven 编译器注解处理器问题
maven.sync.dependencies.artifact.download=正在下载 {0}
maven.sync.dependencies.download=正在下载依赖项
maven.sync.dependencies.resolve=解析依赖项
maven.sync.dependencies.resolve.error=无法解析 {0}
maven.sync.failure.dependency.not.found=找不到 {0}
maven.sync.failure.error.reading.file=读取文件 {0} 时出错
maven.sync.failure.error.undefined.detailed.message=文件 {0} 中存在错误
maven.sync.failure.error.undefined.message=错误
maven.sync.failure.terminated=已终止，退出代码为 {0}
maven.sync.group.compiler=编译器
maven.sync.group.error=错误
maven.sync.group.warning=警告
maven.sync.incorrect.model.version=Maven 模型版本不正确
maven.sync.incorrect.model.version.desc={0} <br/><br/><a href\="{1}">将 Maven 模型版本升级到 4.1.0</a>
maven.sync.jdk.description=对于 Maven {0}，至少需要 JDK {1}。<a href\="{2}">更改导入 JDK </a>
maven.sync.jdk.title=导入程序的 Maven JDK 版本过低
maven.sync.not.trusted.description=所打开的不受信任的项目未完全加载。 \nIntelliJ IDEA 不会解析项目中的任何插件、下载工件或执行任何目标
maven.sync.not.trusted.title=不受信任的项目
maven.sync.plugins.artifact.download=正在下载 {0}
maven.sync.plugins.download=正在下载插件
maven.sync.plugins.resolve=解析插件
maven.sync.plugins.resolve.error=无法解析插件 {0}
maven.sync.project.title=同步 {0}
maven.sync.quickfixes.maven.jdk.version.title=不兼容的 Maven JDK
maven.sync.quickfixes.maven.version.title=Maven 版本问题
maven.sync.quickfixes.maven360=使用 Maven 3.6.0 时，导入多模块项目可能会出现问题。建议升级或降级 Maven 版本
maven.sync.quickfixes.nomaven=未定义 Maven 版本
maven.sync.quickfixes.open.settings=打开设置
maven.sync.quickfixes.repository.blocked=无法访问 Maven 3.8.1 http 仓库。<br/><br/>可能的解决方案\:
maven.sync.quickfixes.repository.blocked.add.mirror=- 在 Maven <a href\="{1}">settings.xml</a> 中为 {0} 添加允许 http url 的镜像
maven.sync.quickfixes.repository.blocked.downgrade=- 在<a href\="{0}">设置</a>中将 Maven 降级到 3.8.1 或更早的版本
maven.sync.quickfixes.repository.blocked.find.repository=- 检查 Maven <a href\="{0}">pom 文件</a>是否不包含 http 仓库 {1}
maven.sync.quickfixes.repository.blocked.show.settings=- 检查 Maven <a href\="{0}">settings.xml</a> 是否不包含 http 仓库
maven.sync.quickfixes.repository.blocked.title=无法访问 Maven 3.8.1 http 仓库
maven.sync.quickfixes.upgrade.to.jdk7=Maven 版本 {0} 至少需要 JDK 版本 1.7
maven.sync.quickfixes.use.bundled.settings=使用捆绑{0}
maven.sync.restarting=正在重启 Maven…
maven.sync.title=同步
maven.sync.trust.project=信任项目
maven.sync.version.issue.title=Maven 版本问题
maven.sync.version.open.settings=打开设置
maven.sync.version.use.bundled=使用捆绑的 {0}
maven.sync.waiting.for.completion=等待 Maven 导入完成
maven.sync.warnings.eclipse.batch.compiler.no.dependency=依赖项 org.codehaus.groovy\:groovy-eclipse-batch 未正确注册
maven.sync.warnings.eclipse.batch.compiler.no.dependency.desc=要使用 groovy-eclipse-compiler，除了 maven-compiler-plugin 依赖项外，还需要指定 Groovy 工件作为构建依赖项。Groovy 依赖项版本应与编译器版本匹配。
maven.sync.wrapper=正在运行 Maven 包装器
maven.sync.wrapper.downloading=正在下载 Maven 包装器
maven.sync.wrapper.downloading.auth=正在使用基本身份验证下载 Maven 包装器
maven.sync.wrapper.downloading.canceled=已取消下载 Maven 包装器
maven.sync.wrapper.downloading.from=正在从 {0} 下载 Maven 包装器
maven.sync.wrapper.downloading.progress=正在下载 Maven 包装器 {0}/{1}%
maven.sync.wrapper.failure=无法安装包装的 Maven，设置捆绑 Maven
maven.sync.wrapper.failure.description={0}<br/><br/>Maven 包装器已被禁用。将改用绑定了 Maven 的版本。<br/><br/>要启用 Maven 包装器，请在<a href\="{1}">设置</a>中更改 Maven 主路径。
maven.sync.wrapper.http.description=用于下载 Maven 发行版的 HTTP。可以考虑将 distributionURL 更改为 HTTPS
maven.sync.wrapper.http.title=用于下载 Maven 发行版的 HTTP
maven.sync.wrapper.unpacked.into=Maven 包装器解压缩到 {0}
maven.sync.wrapper.unpacking=正在解压缩归档…
maven.sync.wsl.jdk=用于导入程序的 Maven JDK 应当为 WSL JDK
maven.sync.wsl.jdk.fix=打开 Maven 导入设置
maven.sync.wsl.jdk.revert.usr=找不到用于导入程序的 Maven JDK，将使用 /usr/bin/java (如果存在)
maven.sync.wsl.jdk.set.to.project=对于正确的导入过程，用于导入程序的 Maven JDK 通项目 JDK 运行
maven.sync.wsl.maven.is.not.wsl=Maven 发行版似乎不正确
maven.sync.wsl.maven.is.not.wsl.description=Maven 主目录解析为 {0}。\n出于性能考虑，最好使用安装在 WSL 发行版中的 Maven。<a href\="{1}">打开设置</a>
maven.sync.wsl.userhome.cannot.resolve=无法解析 WSL 上的 $HOME 变量。似乎 WSL 集成进程已挂起。请尝试重启 WSL 或主机。
maven.wrapper.notification.downloading.error.action=在设置中重新启用 Maven 包装器。
maven.wrapper.notification.downloading.error.content={0}<br/>Maven 包装器已被禁用。将改用 Maven 捆绑版本。
maven.wrapper.notification.downloading.finish=已成功安装。
maven.wrapper.notification.downloading.start=开始下载。请稍候。
maven.wrapper.notification.empty.url.action.check=请检查您的分发 URL。
maven.wrapper.notification.empty.url.action.disable=在设置中禁用 Maven 包装器。
maven.wrapper.notification.empty.url.content=DistributionUrl 为空。将改用 Maven 捆绑版本。
maven.wrapper.notification.empty.url.content.file.not.found=找不到文件 .mvn/wrapper/maven-wrapper.properties。将改用 Maven 捆绑版本。
maven.wrapper.notification.title=Maven 包装器
maven.wrapper.version.label=创建属性
progress.title.starting.maven.server=正在启动 Maven 服务器
zip.is.not.correct={0} 下的 Zip 归档不是正确的 Maven 分发。请检查 distributionUrl
