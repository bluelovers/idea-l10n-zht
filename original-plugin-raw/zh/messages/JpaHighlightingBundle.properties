persistent.object.class.should.be.top.level=持久对象类 ''{0}'' 应为顶级类
persistent.object.class.0.should.not.be.final=持久对象类 ''{0}'' 不应为 final
persistent.entity.0.should.have.id=持久实体 ''{0}'' 应使用主键
method.0.should.take.parameter.of.type.1.here=方法 ''{0}'' 应仅在此处获取 ''{1}'' 类型的参数
method.0.should.take.1.parameters.only=方法 ''{0}'' 应获取 {1} 个参数
method.0.should.return.1=方法 ''{0}'' 应返回 ''{1}''
class.0.should.have.1.no.arg.constructor=类 ''{0}'' 应具有 {1} 无实参构造函数
class.both.persistent.and.entity.listener=类 ''{0}'' 应同时定义为持久和实体侦听器类
more.than.one.method.defined.for.entity.listener.method.type=已在类 ''{1}'' 或其一个超类中定义了 ''{0}'' 实体侦听器方法
entity.listener.class.has.no.annotated.methods=EntityListener 类 ''{0}'' 没有 EntityListener 方法
intention.family.generate.entity.listener.methods=生成 EntityListener 方法
unable.to.resolve=无法解析 ''{0}''
intention.family.remove.attribute=移除元数据
text.remove.0=移除 ''{0}''
more.than.one.attribute.configured.for.method=已为方法 ''{0}'' 配置多个特性
more.than.one.attribute.configured.for.field=已为字段 ''{0}'' 配置多个特性
attribute.should.be.collection=''{0}'' 特性类型应为容器
attribute.should.not.be.map=''{0}'' 特性类型不应为映射
attribute.should.not.be.collection=''{0}'' 特性类型不应为容器
attribute.should.be.entity=''{0}'' 特性目标应为实体
attribute.types.should.be.compatible=''{0}'' 不能分配给 ''{1}''
attribute.should.not.reference.mapped.classes=''{0}'' 特性类型不应引用映射的类
attribute.0.component.1.should.not.be.2=''{0}'' 特性{1}类型不应为 ''{2}''
attribute.0.type.should.be.1=''{0}'' 特性类型应为{1}
attribute.0.type.should.not.be.array=''{0}'' 特性类型不应为数组
attribute.with.wrong.collection.type=为不正确的集合类型应用了注解
attribute.mapkeyclass.with.mapkey.conflict=@MapKeyClass 注解不应与 @MapKey 一起使用
attribute.member.should.be.field.or.getter=应在字段或特性 getter 上指定持久特性元数据
attribute.definition.lacks.setter=对于基于属性的访问，setter 和 getter 都应存在
attribute.type.not.valid.for.embeddable=''{0}'' 特性无法在可嵌入对象中使用
attribute.opposite.type.incorrect=''{0}'' 特性具有不正确的相反 ''{1}'' 特性 ''{2}''
attribute.should.be.interface.or.serializable=特性 ''{0}'' 应为接口或可序列化
fix.edit.unit.datasource.name=分配数据源
fix.edit.unit.datasource.family.name=分配持久性单元数据源
fix.refresh.datasource.name=刷新数据源 ''{0}''
fix.refresh.datasource.family.name=刷新数据源表
quick.fix.name.add.id.attribute=添加 Id 特性
quick.fix.family.add.facet=添加 JPA facet
quick.fix.name.add.facet.to.0.module=将 JPA facet 添加到 ''{0}'' 模块中

interface.should.extend=接口 ''{0}'' 应扩展 ''{1}''
interface.should.not.extend=接口 ''{0}'' 不应扩展 ''{1}''
class.should.extend=类 ''{0}'' 应扩展 ''{1}''
class.should.not.extend=类 ''{0}'' 不应扩展 ''{1}''
class.should.implement=类 ''{0}'' 应实现 ''{1}''
class.should.not.implement=类 ''{0}'' 不应实现 ''{1}''

label.persistence.xml.version=persistence.xml 版本:
jpa.framework.provider.label.no.provider=<无提供商>
jpa.finder.recursive.panel.unknown=<未知>
jpa.descriptors=JPA 描述符
dialog.title.select.module=选择模块
label.select.module.with.jpa.facet=选择包含 JPA Facet 的模块
show.content.of.jpa.resources=显示 JPA 资源的内容

action.OpenPersistenceERDiagramAction.text=实体关系图

hint.failed.to.open.console.no.facet.or.unit.found=无法打开控制台，因为未配置 JPA facet 或持久性单元
hint.open.console.with.0.unit.and.1.facet=使用模块 ''{1}'' 中的 ''{0}'' 持久性单元运行控制台