action.Swift.PackageManager.Clean.text=清理
action.Swift.PackageManager.GenerateXcodeproj.text=生成 Xcode 项目
action.Swift.PackageManager.Resolve.text=解析依赖项
action.Swift.PackageManager.Update.text=更新依赖项
build.applying=正在应用…
build.compiling=正在编译…
build.compiling.module=正在编译 {0}…
build.copying.resources=正在复制资源…
build.documentation=构建文档
build.linking=正在链接…
build.messages.compiler=编译器消息
build.messages.linker=链接器消息
build.planning=正在规划构建…
build.target.not.selected=未选择构建目标
clang.missing.message=Swift 编译器需要安装 Clang
clang.missing.title=缺少 Clang
compiler.version.outdated.message=请将 Swift 编译器更新为较新版本({0} 或更高版本)以继续
compiler.version.outdated.title=Swift 版本过时
configuration.name=Swift 软件包运行
configuration.test.name=Swift 软件包测试
dependency.from=来自 {0}
dump.symbol.graphs.task=正在转储符号图
execution.target.not.selected=未选择执行目标
generate.linux.main=生成 LinuxMain
generate.linux.main.progress=正在生成 LinuxMain.swift…
generate.xcodeproj.task=生成 Xcode 项目(.xcodeproj)
group.Swift.PackageManager.Menu.text=Swift Package Manager
import.operation.canceled=被用户取消
import.project=导入 Swift 软件包项目
import.project.failed=Swift 软件包项目导入失败
invalid.project.path=项目路径无效
missing.lldb=在 {0} 处找不到 Swift LLDB 调试器
missing.xctest=缺少 XCTest 二进制文件
missing.xctest.bundle={0} 处缺少 XCTest 捆绑包
package.manifest={0} 清单
package.manifest.execution.exception=Swift 软件包清单执行失败，退出代码为 {0}\:\n{1}
package.manifest.timeout.exception=Swift 软件包清单运行耗时太久
package.resolve.exception=Swift 软件包依赖项解析失败，退出代码为 {0}\:\n{1}
package.type.executable=可执行文件
package.type.library=库
package.type.menu=软件包类型\:
package.type.system=系统
preview.documentation=预览文档
progress.title.generate.documentation.archives=生成 DocC 归档
progress.title.generating.documentation.archives=正在生成 DocC 归档
project.new.error=无法创建项目
project.new.progress=正在生成 Swift 软件包项目…
reset=重置缓存和构建
resolve.project=解析 Swift 软件包依赖项
settings.restart.suggest=重启 {0} 以激活 Swift 插件中的更改?
settings.restart.suggest.title=Swift 设置
settings.toolchain.version=工具链版本 {0} {1}
swift.package=Swift 软件包
swift.package.manager=Swift Package Manager
swift.package.manager.build.directory=Swift Package Manager 构建目录
swift.package.manager.settings=Swift Package Manager 设置
swift.version.menu=Swift 版本\:
system.package.install=运行 ''{0} install''
system.package.install.brew.title=brew 安装
system.package.install.command.copied=安装命令已复制到剪贴板
system.package.install.family=安装缺少的系统软件包
system.package.install.starting=正在开始安装…
system.package.invalid=无效的软件包名称
system.package.missing=未安装 {0}
system.package.missing.multiple=未安装系统软件包
toolchain.configure.link=配置
toolchain.missing.sourcekit=在工具链中找不到 SourceKit
toolchain.missing.swiftpm=在工具链中找不到 Swift Package Manager
tools.version.invalid=Swift 工具链版本无效
tools.version.not.supported=Swift 工具版本比此编译器版本({0})高
tools.version.not.supported.message=Swift 软件包清单需要版本 {0}，该版本比当前所选 Swift 编译器 {1} 更新
tools.version.not.supported.title=不支持的 Swift 软件包版本
update.project=更新 Swift 软件包依赖项
