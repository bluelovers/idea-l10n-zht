LLDBNatvisDiagnosticsLevel.description.disabled=已禁用
LLDBNatvisDiagnosticsLevel.description.errors.only=仅错误
LLDBNatvisDiagnosticsLevel.description.verbose=详细
action.CIDR.Debugger.AddWatchPoint.text=添加观察点
action.CIDR.Debugger.ApplyFix.fixedExpr={0}
action.CIDR.Debugger.AttachToUnstartedProcess.text=附加到未启动的进程…
action.CIDR.Debugger.CopyAddress.text=复制地址
action.CIDR.Debugger.Detach.0.text=分离 ''{0}''
action.CIDR.Debugger.Detach.text=分离
action.CIDR.Debugger.DetachAll.text=全部分离
action.CIDR.Debugger.DetachInferiorOnFork.text=复刻时分离进程
action.CIDR.Debugger.DisableFilteringValues.text=隐藏作用域外的变量
action.CIDR.Debugger.DisableValueRenderers.text=启用值呈现器
action.CIDR.Debugger.DisassembleFrame.text=反汇编
action.CIDR.Debugger.ElevationDaemonAdjustQuotaAction.text=调整提升配额
action.CIDR.Debugger.EnableHexFormatting.text=将整数显示为十六进制值
action.CIDR.Debugger.FollowChildOnFork.text=复刻时跟随子级
action.CIDR.Debugger.GdbIndexResetCaches.text=重置 GDB 索引缓存
action.CIDR.Debugger.ImageViewerActions.CopyImage.text=复制镜像
action.CIDR.Debugger.ImageViewerActions.CopyPixelAddress.text=复制像素地址
action.CIDR.Debugger.ImageViewerActions.CopyPixelCoordinates.text=复制像素坐标
action.CIDR.Debugger.ImageViewerActions.CopyPixelData.text=复制像素数据
action.CIDR.Debugger.ImageViewerActions.ReloadImage.text=重新加载图像
action.CIDR.Debugger.ImageViewerActions.SaveImage.text=保存图像
action.CIDR.Debugger.JumpToDebuggerConsole.text=跳转到调试器控制台
action.CIDR.Debugger.LLDBFrontendDebugMode.description=LLDBFrontend 将等待调试器附加
action.CIDR.Debugger.LLDBFrontendDebugMode.text=为 LLDBFrontend 启用调试模式
action.CIDR.Debugger.LowLevelExceptionAction.Suppress.AtAddress.text=位于地址\: {0}
action.CIDR.Debugger.LowLevelExceptionAction.Suppress.AtLine.text=行 {0}
action.CIDR.Debugger.LowLevelExceptionAction.Suppress.Globally.text=全局
action.CIDR.Debugger.MuteVariables.text=忽略变量
action.CIDR.Debugger.PauseAll.text=暂停所有进程
action.CIDR.Debugger.ResumeAll.text=恢复所有进程
action.CIDR.Debugger.SelfProfiling.text=分析原生调试器进程…
action.CIDR.Debugger.ShowFrameFunctionParameterTypes.text=显示形参类型
action.CIDR.Debugger.ShowFrameFunctionTemplateArguments.text=显示模板实参
action.CIDR.Debugger.ShowFrameModuleName.text=显示模块名称
action.CIDR.Debugger.ShowFunctionReturnValue.text=显示函数返回值
action.CIDR.Debugger.ShowInMemoryView.text=在内存视图中显示
action.CIDR.Debugger.ShowMemoryViewInEditor.text=在编辑器中显示内存视图
action.CIDR.Debugger.ShowRegisters.text=始终显示
action.CIDR.Debugger.ShowTypeTemplateArguments.text=显示模板实参
action.CIDR.Debugger.ShowTypes.text=显示类型
action.CIDR.Debugger.StopAll.text=停止所有进程
action.CIDR.Debugger.StripAuxiliaryNamespaces.text=剥离辅助命名空间
action.CIDR.Debugger.SugarizeCxxStlTypes.text=简化 C++ STL 类型
action.CIDR.Debugger.ViewAsArray.text=作为数组查看…
action.CIDR.Debugger.ViewAsImage.failedNotification=无法创建图像
action.CIDR.Debugger.ViewAsImage.failedToGetDataAddress=无法获取数据地址
action.CIDR.Debugger.ViewAsImage.progressTitle=正在加载图像
action.CIDR.Debugger.ViewAsImage.text=作为图像查看…
action.CIDR.Debugger.ViewAsImage.tooBig=图像太大
action.CIDR.Debugger.ViewAsImage.unsupportedFormat=不支持的数据格式
action.CIDR.Debugger.ViewRawValue.progressTitle=正在检索原始值
action.CIDR.Debugger.ViewRawValue.text=查看原始值
action.show.addresses.text=显示地址
bytearray.image.title=数组\: {0}
debug.address.breakpoint={0}
debug.address.breakpoint.invalid=地址断点无效
debug.address.breakpoints=地址断点
debug.assign.error.cannotAssignExpression=无法将表达式 ''{0}'' 分配至 ''{1}''
debug.attachToUnstartedProcess.cmdMustNotBeEmpty=命令行不能为空
debug.attachToUnstartedProcess.commandLine=命令行\:
debug.attachToUnstartedProcess.debuggerNotFound=找不到调试器
debug.attachToUnstartedProcess.dialogTitle=附加到未启动的进程
debug.attachToUnstartedProcess.failedToAttach=无法附加到进程
debug.attachToUnstartedProcess.failedToAttachDetails=无法附加到进程\: {0}
debug.attachToUnstartedProcess.failedToReopenDialog=无法重新打开对话框
debug.attachToUnstartedProcess.keepSuspended=附加后保持进程挂起
debug.attachToUnstartedProcess.mergeButtons=操作需要启用 ide.allow.merge.buttons 注册表选项
debug.attachToUnstartedProcess.noDebuggersFound=找不到调试器
debug.attachToUnstartedProcess.reopenDialog=调试后重新打开对话框
debug.attachToUnstartedProcess.statusNotWatching=未监视
debug.attachToUnstartedProcess.statusWatching=正在监视…
debug.attachToUnstartedProcess.stop=停止
debug.breakpoint.hit.count.message=命中数\:
debug.breakpoint.hit.count.mode.equal.to.message=\=\=
debug.breakpoint.hit.count.mode.greater.than.or.equal.to.message=>\=
debug.breakpoint.hit.count.mode.multiple.of.message=是以下值的倍数\:
debug.breakpoint.line=行断点
debug.breakpoint.line.is.relaxed.match=仅使用文件名
debug.breakpoint.line.unresolved.hint=断点当前不会被命中。没有可执行代码与此行相关联。
debug.cancel.loading=取消
debug.cancelled.loading=加载已取消
debug.cancelling.loading=正在取消…
debug.childProcessDebugging.failedToAttach=子进程调试\: 无法附加到 PID 为 {0,number,\#} 的进程
debug.childProcessDebugging.parseXml.DefaultRuleIsMissing=子进程调试\: 缺少标记 'DefaultRule'
debug.childProcessDebugging.parseXml.DefaultRuleMustBeFirst=子进程调试\: 标记 ''DefaultRule'' 必须是文件 {0} 中的第一个标记
debug.childProcessDebugging.parseXml.FailedToParse=子进程调试\: 无法解析 XML 文件 {0}\: {1}
debug.childProcessDebugging.parseXml.FileNotFound=子进程调试\: 找不到文件\: {0}
debug.childProcessDebugging.parseXml.InvalidOrderAttribute=文件 {0} 中的 ''order'' 特性无效\: ''{1}'' 不是数字
debug.childProcessDebugging.parseXml.InvalidRegex=文件 {1} 中的 ''{0}'' 标记中的正则表达式无效
debug.childProcessDebugging.parseXml.MissingAttributes=子进程调试\: 文件 {1} 中的 ''{0}'' 标记缺少特性
debug.childProcessDebugging.parseXml.MissingOrInvalidAttachAttribute=子进程调试\: 文件 {1} 中的 ''{0}'' 标记缺少 ''attach'' 特性或该特性无效
debug.childProcessDebugging.parseXml.MultipleDefaultRules=子进程调试\: 在文件 {0} 中发现多个 ''DefaultRule'' 标记
debug.childProcessDebugging.parseXml.NoRules=子进程调试\: 在文件 {0} 中未找到规则
debug.childProcessDebugging.parseXml.UnexpectedError=子进程调试\: 解析 XML 文件 {0} 时发生意外错误\: {1}
debug.childProcessDebugging.parseXml.UnknownTag=子进程调试\: 未知标记\: 文件 {1} 中的 ''{0}''
debug.childProcessDebugging.processNotFound=子进程调试\: 未找到 PID 为 {0,number,\#} 的进程
debug.childProcessDebugging.settingsFile.overwrite.confirmation=文件 ''{0}'' 已存在。是否要覆盖它?
debug.childProcessDebugging.settingsFile.overwrite.title=正在创建示例设置文件
debug.command.error.cannotAddModulesSearchPaths=无法添加模块搜索路径
debug.command.error.checkPermissionsMessage=附加调试器失败，请检查权限 - https\://www.jetbrains.com/help/clion/attach-to-process.html
debug.command.error.evaluationTimedOut=求值挂起\: {0}\n 这可能是死锁或无限循环等情况所致。\n 为了防止在计算变量时发生这种情况，请将 ''{1}'' 切换为<a href\="off">关</a>。
debug.command.error.inPrompt=在提示模式下无法执行命令
debug.command.error.notSuspended=仅当目标挂起时才能执行命令
debug.command.error.timedOut=命令超时
debug.computing.source.position=正在计算源位置
debug.console.action.jumpToDebuggerConsole.jumpTo0=跳转到 {0} 控制台
debug.console.completions.tooManyCompletions=补全过多(仅显示了 {0} 个补全)
debug.current.trace=线程\: {0}\n跟踪\: {1}
debug.disasm.editorTabDescription=反汇编
debug.disasm.intel.syntax.failed=无法更改反汇编语法
debug.disasm.intel.syntax.option.name=使用 Intel 语法
debug.driver.cannotCreatePipe=无法设置进程通信\: {0}
debug.driver.cannotReadInputFile=无法打开输入文件\: {0}
debug.editor.notification.force.mapping=找不到当前帧的文件 ''{0}'' 或其内容与编译的内容不同。您可以手动指定此文件。
debug.editor.notification.force.mapping.exists=当前帧文件 ''{0}'' 的内容与编译的内容不同。
debug.editor.notification.force.mapping.select.file=选择文件…
debug.editor.notification.force.mapping.use.it.anyway=仍要使用
debug.error.failedToReadMemory=无法读取内存 {0}\: {1}
debug.error.failedToReadMemory.unknownReason=无法读取内存 {0}
debug.exception.breakpoint=异常断点
debug.exception.breakpoint.invalid=异常断点无效
debug.exception.breakpoint.when.any.fragment=任意
debug.exception.breakpoint.when.any.label=任意
debug.exception.breakpoint.when.kn.fragment=Kotlin/Native
debug.exception.breakpoint.when.kn.label=Kotlin/Native
debug.exception.breakpoint.when.objc.fragment=Objective-C
debug.exception.breakpoint.when.objc.label=Objective-C
debug.exception.breakpoint.when.summary.caught.label={0} 捕获时
debug.exception.breakpoint.when.summary.thrown.label={0} 抛出时
debug.exception.breakpoint.when.summary.thrownAndCaught.label={0} 抛出时；{1} 被捕获
debug.exception.breakpoint.when.swift.fragment=Swift
debug.exception.breakpoint.when.swift.label=Swift
debug.exception.breakpoint.whenCaught.checkbox=捕获时
debug.exception.breakpoint.whenThrown.checkbox=抛出时
debug.exception.breakpoints=异常断点
debug.force.file.mapping.invalid.hash=所选文件的校验和与调试信息中的校验和不同。是否仍要使用所选文件?
debug.force.file.mapping.invalid.name=所选文件的名称(''{0}'')与调试信息中的名称(''{1}'')不同。是否仍要使用所选的文件?
debug.force.file.mapping.title=强制文件映射?
debug.frames.unknownFunction=<unknown>
debug.freezeInactiveThreadsAmongSelected.notification.error=无法冻结某些线程
debug.freezeInactiveThreadsAmongSelected.notification.success=线程已被冻结
debug.freezeInactiveThreadsAmongSelected.progress=正在冻结线程
debug.freezeInactiveThreadsAmongSelected.text=冻结组中的停用线程
debug.freezeOtherThreads.notification.error=无法冻结某些线程
debug.freezeOtherThreads.notification.success=线程已被冻结
debug.freezeOtherThreads.progress=正在冻结线程
debug.freezeThread.notification.error=无法冻结线程
debug.freezeThread.notification.success=线程已被冻结
debug.freezeThread.progress=正在冻结线程
debug.freezeThread.textWithThreadName=冻结 {0}
debug.freezeThreadNotFound.warning=找不到线程
debug.freezeThreads.notification.error=无法冻结某些线程
debug.freezeThreads.notification.success=线程已被冻结
debug.freezeThreads.progress=正在冻结线程
debug.freezeThreads.text=冻结线程
debug.function.return.value=返回值
debug.gdb.error.changeSettingsToLLDB=请在<a href\="settings">偏好设置</a>中将调试器切换到 LLDB。
debug.gdb.error.duringStartupProgramTerminatedOnSierra={0}\n\n从版本 10.12 开始，由于系统完整性保护，macOS 在运行 GDB 时存在已知问题。
debug.gdb.index.notification.configure=配置…
debug.gdb.index.notification.content=GDB 索引可以加快调试速度。您可以在“{0} | 高级设置”中进行配置
debug.gdb.index.notification.hide=不再显示
debug.gdb.preparingIndexesProgress=正在准备 GDB 索引
debug.hexdump.columns.option.name=列
debug.hexdump.editorTabDescription=内存
debug.imageViewer.apply=应用
debug.imageViewer.autoReload=自动重新加载
debug.imageViewer.channelN=通道 {0}
debug.imageViewer.channelsCount=通道\:
debug.imageViewer.channelsFormat=设置格式\:
debug.imageViewer.coordX=x\={0}
debug.imageViewer.coordY=y\={0}
debug.imageViewer.dataType=数据类型\:
debug.imageViewer.enterPositiveNumber=请输入一个正数
debug.imageViewer.failedToLoadImage=无法加载图像
debug.imageViewer.failedToLoadImageDetails=无法加载图像\: {0}
debug.imageViewer.gray=灰色
debug.imageViewer.height=高度\:
debug.imageViewer.pitch=间距\:
debug.imageViewer.reset=重置
debug.imageViewer.saveImageDialogTitle=另存为…
debug.imageViewer.saveToFileFailed=无法保存图像
debug.imageViewer.shape={0,number}x{1,number} {2,number} {3}
debug.imageViewer.stackFrameNotFound=找不到堆栈帧
debug.imageViewer.viewAsImage=… 作为图像查看
debug.imageViewer.width=宽度\:
debug.imageViewer.wrongDimensions=图像尺寸错误
debug.inlay.loadingData=正在加载数据 {0}
debug.jumpToLine.text=将执行点设置到光标
debug.jumpToLine.tooltip=拖放箭头以设置执行点
debug.jumpToLine.warning=此操作会将下一条语句设置为另一个函数\n并有可能破坏进一步执行。\n是否确定?
debug.lldb.lockedDeviceUserMessage={0} 无法在设备上启动应用程序，因为该设备当前已被密码锁定。\n 请解锁设备。
debug.lldb.lockedDeviceWaiting=正在等待设备解锁…
debug.lowLevel.exception.any.exception=任意 {0}
debug.lowLevel.exception.enable.hint=启用以禁止 {0}
debug.lowLevel.exception.mach.description.EXC_BREAKPOINT=跟踪或断点陷阱
debug.lowLevel.exception.mach.kind=Mach 异常
debug.lowLevel.exception.notSuppressedAndCannotResume.message=无法永久禁止 {0}。<br/>当前调试器命令已被中断。
debug.lowLevel.exception.specific.exception={1} 的 {0}
debug.lowLevel.exception.suppressedAndCannotResume.message={0} 已根据请求永久禁止。<br/>但当前调试器命令已被中断。
debug.lowLevel.exception.suppression.add.rule=添加禁止规则
debug.lowLevel.exception.suppression.address=低级异常地址禁止
debug.lowLevel.exception.suppression.everywhere=低级异常禁止
debug.lowLevel.exception.suppression.line=低级异常行禁止
debug.lowLevel.exception.suppression.obsolete=已过时的禁止，请移除
debug.lowLevel.exception.unix.signal.description.SIGINT=键盘中断
debug.lowLevel.exception.unix.signal.description.SIGSTOP=停止进程
debug.lowLevel.exception.unix.signal.description.SIGTRAP=跟踪或断点陷阱
debug.lowLevel.exception.unix.signal.description.SIGTSTP=停止在终端输入
debug.lowLevel.exception.unix.signal.kind=Unix 信号
debug.lowLevel.exception.win32.description.0x80000003=已到达断点
debug.lowLevel.exception.win32.kind=Win32 异常
debug.memory.addess.copy.address=复制地址
debug.memory.doc.gutter.popup.name=设置
debug.memory.doc.options.popup.name=选项
debug.memory.editing.action.is.not.supported=不支持编辑操作
debug.memory.failed.to.update.byte=无法更新 {0} 下的字节
debug.memory.modify.in.running.session.is.not.supported=暂停程序以修改内存
debug.memory.modify.in.stopped.session.is.not.supported=不支持在已停止的调试会话中修改内存
debug.memory.view.modify.not.supported=不支持修改 {0}
debug.memory.view.name.pattern={0} ({1})
debug.memory.view.panel.address.label=转到\:
debug.memory.view.panel.error.evaluationError=求值错误\: {0}
debug.memory.view.panel.error.evaluationNotAvailableInSelectedFrame=求值在所选框架中不可用
debug.memory.view.panel.error.evaluationNotAvailableWhileRunning=求值在程序运行时不可用
debug.memory.view.panel.error.notAPointer=不是指针
debug.memory.view.panel.hint.takeAddress=提取地址\: {0}
debug.memory.view.process=内存视图
debug.memory.view.tooltip.pattern=''{0}'' 的 {1}
debug.no.register.set.enabled=未启用任何寄存器集
debug.popup.error.crashed=调试器进程已结束，退出代码为 {0}。
debug.popup.rerun=重新运行 ''{0}''
debug.popup.showCrashDump=显示崩溃转储
debug.registers.value=寄存器
debug.result.already.cancelled=结果已被取消。\n当前线程\: {0}\n{1}
debug.result.already.set.exceptionally=结果已被异常设置。\n异常\: {0}\n{1}\n当前线程\: {2}\n{3}
debug.selfProfiling.dialog.text=IDE 将在单独的进程中启动一个新的 ETW 分析会话。<br/>它将捕获有关正在运行或将在会话启动后启动的调试器进程的采样信息。<br/><br/>要启动 ETW 会话，Windows 将提示需要管理员权限。<br/><br/>完成后，使用状态栏中的控件停止分析会话。<br/>请勿通过 Windows 任务管理器终止 ETW 进程\:<br/>ETW 会话会在应用程序生存期结束后继续存在，停止会话需要重启 Windows。
debug.selfProfiling.dialog.title=启动原生调试器自分析
debug.selfProfiling.notification.failedToFindProfiler.text=找不到分析器
debug.selfProfiling.notification.processExited.text=无法捕获快照。分析器进程意外完成，退出代码为 {0}。
debug.selfProfiling.notification.snapshotCaptured.action=在 {0} 中显示
debug.selfProfiling.notification.snapshotCaptured.text=已捕获快照 ''{0}''
debug.selfProfiling.notification.title=自分析
debug.selfProfiling.notification.unknownError.text=无法捕获快照
debug.selfProfiling.progressIndicator.profilingInProgress.text=正在分析调试器。完成后请手动停止。
debug.selfProfiling.progressIndicator.savingInProgress.text=正在保存快照
debug.settings.addMicrosoftSymbolServer.action.label=添加 Microsoft 符号服务器
debug.settings.childProcessDebugging.automaticallyAttach.comment=默认情况下，调试器会自动附加到所有子进程。您可以在设置文件中重写和微调此行为。
debug.settings.childProcessDebugging.createExampleFile=创建示例设置文件
debug.settings.childProcessDebugging.panel.title=子进程调试
debug.settings.childProcessDebugging.useChildProcessDebugging.label=启用子进程调试(C/C++/原生调试，仅限 LLDB)
debug.settings.cxxTypes.separator=C++ 类型(帧和变量)
debug.settings.enableCocoaRenderers.checkbox=Cocoa 呈现器
debug.settings.enableCoreDataRenderers.checkbox=核心数据呈现器
debug.settings.enableGNUSTLRenderers.checkbox=启用 GNU C++ 库呈现器
debug.settings.enableHexNumberFormatting.asSecondary.checkbox=显示原始值和十六进制值
debug.settings.enableHexNumberFormatting.checkbox=将整数显示为十六进制值
debug.settings.enableLLDBNatvisRenderers.checkbox=为 LLDB 启用 Natvis 呈现器
debug.settings.enableLLDBNatvisRenderers.checkbox.description={0} 将自动查找并加载 .natvis 文件\:<br>— 已添加到项目模型，<br>— 属于所选 MSBuild 或 MSVC 工具链，<br>— 位于 %USERPROFILE%\\Documents\\Visual Studio Version\\Visualizers。
debug.settings.enableLLDBNatvisRenderers.customLocations=附加目录\:
debug.settings.enableLLDBNatvisRenderers.diagnostics=Natvis 诊断\:
debug.settings.enableLLDBNatvisRenderers.noCustomLocations=无附加目录
debug.settings.enableValueRenderers.checkbox=启用值呈现器\:
debug.settings.enableValuesFilter.checkbox=隐藏作用域外的变量
debug.settings.enableValuesFilter.checkbox.hint=不显示当前作用域内未初始化或不可用的变量
debug.settings.frames.separator=帧
debug.settings.general.panel.title=母语
debug.settings.general.pauseAllProcesses.label=在命中断点时暂停所有原生进程
debug.settings.macOS.load.dsym.near.binaries=从位于二进制文件旁边的 dSYM 文件加载调试符号
debug.settings.macOS.load.dsym.near.binaries.comment=启用后，调试符号也会从位于二进制文件旁边的 dSYM 文件中加载，就像在 Unreal Engine 中一样。这可能会减缓调试器启动速度。
debug.settings.name.c.cpp=C/C++
debug.settings.name.objective.c=Objective-C
debug.settings.name.symbol.servers=符号服务器
debug.settings.qtRenderers.enableQtRenderers=启用 Qt 呈现器
debug.settings.renderers.comment=更改呈现器将影响下一个调试会话
debug.settings.renderers.separator=呈现器
debug.settings.selectDirectoryDialog.title=选择目录
debug.settings.selectSymbolCache.caption=选择符号缓存位置
debug.settings.showFrameFunctionParameterTypes.checkbox=显示形参类型
debug.settings.showFrameFunctionTemplateArguments.checkbox=显示函数中的模板实参
debug.settings.showFrameModule.checkbox=显示模块名称
debug.settings.showTypeTemplateArguments.checkbox=显示类型中的模板实参
debug.settings.stepFilters.comment=请注意，.natstepfilter 文件可能会覆盖这些设置
debug.settings.stepFilters.diagnostics=步进诊断\:
debug.settings.stepFilters.diagnostics.disabled=已禁用
debug.settings.stepFilters.diagnostics.errorsOnly=仅错误
debug.settings.stepFilters.diagnostics.verbose=详细
debug.settings.stepFilters.doNotStepIntoFunctions=不步入函数\:
debug.settings.stepFilters.emptyText=未配置步骤筛选器
debug.settings.stepFilters.loadSteppingRulesFromFiles=从配置文件(.natjmc、.natstepfilter)加载步进规则
debug.settings.stepFilters.newStepFilter.message=输入过滤器模式\:
debug.settings.stepFilters.newStepFilter.title=新建步骤筛选器
debug.settings.stripCxxStdAbiVersionNamespace.checkbox=剥离辅助命名空间
debug.settings.stripCxxStdAbiVersionNamespace.checkbox.description=移除全局和函数作用域说明符以及标准 ABI 版本命名空间
debug.settings.sugarizeCxxStlTypes.checkbox=简化 STL 类型
debug.settings.sugarizeCxxStlTypes.checkbox.description=将标准库类型替换为可读性更强的别名
debug.settings.symbolCachePath.label=本地符号存储
debug.settings.symbolServers.checkbox=启用符号服务器支持
debug.settings.symbolServers.checkbox.comment=仅 Windows 上的 LLDB 支持符号服务器
debug.settings.symbolServers.empty.text=未配置符号服务器
debug.settings.symbolServers.label=符号服务器
debug.settings.symbolServersNotAvailable.label=PDB 符号服务器仅在 Windows 上可用
debug.settings.symbolStorages.empty.text=未配置符号存储
debug.settings.symbolStorages.label=共享符号存储
debug.settings.variables.separator=变量
debug.signal.exception.cause=异常
debug.signal.suspension.cause=信号
debug.symbolic.breakpoint.emptySymbolName.title=<Empty>
debug.symbolic.breakpoint.invalid=断点无效
debug.symbolic.breakpoint.module.placeholder=所有模块
debug.symbolic.breakpoint.moduleAndSymbol.title={0}\: {1}
debug.symbolic.breakpoint.moduleName.label=模块名称
debug.symbolic.breakpoint.symbolName.label=符号名称
debug.symbolic.breakpoints=符号断点
debug.unfreezeAllThreads.notification.error=无法取消冻结某些线程
debug.unfreezeAllThreads.notification.success=线程已被取消冻结
debug.unfreezeAllThreads.progress=正在取消冻结线程
debug.unfreezeThread.notification.error=无法取消冻结线程
debug.unfreezeThread.notification.success=线程已被取消冻结
debug.unfreezeThread.progress=正在取消冻结线程
debug.unfreezeThread.textWithThreadName=取消冻结 {0}
debug.unfreezeThreads.notification.error=无法取消冻结某些线程
debug.unfreezeThreads.notification.success=线程已被取消冻结
debug.unfreezeThreads.progress=正在取消冻结线程
debug.unfreezeThreads.text=取消冻结线程
debug.watchpoint.displayText.valueName.valueAccessType=%s (访问类型\: "%s")
debug.watchpoint.displayText.valueName.valueAccessType.valueLifetime=%s (访问类型\: "%s"，有效时长\: "%s")
debug.watchpoint.obsolete=观察点过时，请移除
debug.watchpoint.properties.accessType=访问类型\:
debug.watchpoint.properties.error.label=错误
debug.watchpoint.properties.lifeTime=有效时长\:
debug.watchpoints=观察点
debugger.attachedTo=调试器已附加到进程 {0,number,\#}
debugger.connectedTo=调试器已连接至 {0}
debugger.detached=调试器已分离
debugger.disconnected=调试器已断开连接
debugger.variables.loadMutedValue.link=加载
debugger.variables.viewAsArray.enterSize.error=未提供大小
debugger.variables.viewAsArray.enterSize.prompt=<输入大小>
device.startingApplication.startingDebug=正在启动调试…
dialog.message.execution.exception=执行异常
error.cannot.create.editor.for=无法为下列对象创建编辑器\: {0}
error.execution.interrupted=执行中断
filetype.childProcessDebugging.description=子进程调试的规则
filetype.childProcessDebugging.display.name=子进程调试规则
filetype.disasm.description=二进制图像反汇编
filetype.hex.dump.description=内存转储
filetype.native.visualisations.description=原生可视化
filetype.native.visualisations.display.name=原生可视化
filetype.natjmc.description=原生仅我的代码
filetype.natjmc.display.name=原生仅我的代码
filetype.natstepfilter.description=原生步骤筛选器
filetype.natstepfilter.display.name=原生步骤筛选器
gdbRemote.pathMappings.empty=无路径映射
gdbRemote.pathMappings.local=本地
gdbRemote.pathMappings.remote=远程
goto.address.evaluate.view.button=查看
goto.address.evaluation.option=求值选项
group.CIDR.Debugger.FramePresentation.Popup.text=帧装饰
group.CIDR.Debugger.InternalActions.text=CIDR 原生调试器
group.CIDR.Debugger.Registers.Group.text=寄存器
group.CIDR.Debugger.ValueGroup.DataViewSettings.Popup.text=自定义演示
group.CIDR.Debugger.ValueGroup.LowLevelExceptionActions.Suppress.Popup.text=禁止 {0}
opencv.image.title=OpenCV\: {0}
progress.title.downloading.symbols=正在下载符号…
setting.up.debugger=正在设置调试器
stack.frame.label.inlined=[内联]
