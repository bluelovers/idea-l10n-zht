project.configuration.save.file.not.found=找不到 {0}
project.load.undefined.path.variables.message=项目配置文件中有未定义的路径变量.
project.load.default.error=载入默认项目失败
project.loading.components=正在加载组件...
project.preparing.workspace=正在准备工作区...
project.configure.path.variables.title=配置路径变量
project.open.select.from.multiple.processors.dialog.title=打开或导入项目
project.open.select.from.multiple.processors.dialog.description.line1=在 ''{1}'' 中找到 {0} 个项目配置。
project.open.select.from.multiple.processors.dialog.description.line2=打开为:
project.open.select.from.multiple.processors.dialog.choice={0} 项目

framework.detected.info.text=检测到{0}框架.
label.facet.will.be.added.to.module=''{0}'' facet 将添加到 ''{1}'' 模块
notification.title.frameworks.detected=检测到框架

sdk=SDK
sdk.java.name=JDK
sdk.java.corrupt.error=可能在''{0}''中安装的SDK已损坏
sdk.java.corrupt.title=无法检测SDK版本
sdk.table.settings=SDK 表
sdk.unknown.name=未知 SDK
sdk.list.name.required.error=请指定SDK名称
sdk.list.unique.name.required.error=请指定不同的SDK名称
sdk.lookup.resolving.sdk.progress=正在解析 {0}...
sdk.configure.add.sdkType.subAction={0}...
sdk.configure.add.sdkType.action=添加 {0}...
sdk.configure.add.sdkType.actionTitle=添加 {0}...
sdk.configure.addFromDisk.sdkType.subAction=从磁盘选择 {0} 主目录...
sdk.configure.addFromDisk.sdkType.action=从磁盘选择 {0} 主目录...
sdk.configure.addFromDisk.sdkType.actionTitle=从磁盘选择 {0} 主目录...
sdk.configure.download.subAction=下载 {0}...
sdk.configure.download.action=下载 {0}...
sdk.configure.download.actionTitle=下载 {0}...
sdk.configure.downloading=正在下载 {0}...
sdk.configure.type.home.path={0}主路径:
sdk.configure.home.invalid.error=所选目录不是{0}的有效主路径
sdk.configure.home.file.invalid.error=所选文件不是{0}的有效主路径
sdk.configure.home.title=选择{0}的主目录
sdk.configure.javadoc.url.prompt=输入文档URL:
sdk.configure.javadoc.url.title=指定文档 URL
module.paths.title=源
module.paths.add.content.action=添加内容根 (_C)
module.paths.add.content.action.description=添加内容根到该模块
module.paths.add.content.title=选择内容根目录
module.paths.add.content.prompt=内容根目录是包含与此模块相关的所有文件的目录
module.paths.add.content.already.exists.error=内容根"{0}" 已经存在
module.paths.add.content.intersect.error=正在添加内容根"{0}"\n位于现有内容根"{1}"下面.\n内容条目不应相交.
module.paths.add.content.dominate.error=内容根被添加"{0}"\n支配现有内容根"{1}".\n内容条目不应相交.
module.paths.add.content.duplicate.error=已为模块 "{1}" 定义内容根 "{0}"。\n项目中的两个模块无法共享相同的内容根。
module.paths.remove.content.prompt=移除内容根 "{0}"?
module.paths.remove.content.title=移除内容根
module.paths.empty.node=<空>
module.paths.root.node={0}根目录
module.paths.sources.group=源文件夹
module.paths.test.sources.group=测试源文件夹
module.paths.excluded.group=排除的文件夹
module.paths.exclude.patterns=排除文件:
module.paths.remove.content.tooltip=移除内容条目
module.paths.unmark.tests.tooltip=取消标记测试
module.paths.unmark.source.tooltip=取消标记源
module.paths.include.excluded.tooltip=包含
module.paths.remove.tooltip=移除
module.paths.edit.properties.tooltip=编辑属性
module.paths.edit.properties.title=编辑根属性
jdk.combo.box.autodetected=检测到的 SDK
jdk.combo.box.project.item=<无项目SDK>
jdk.combo.box.invalid.item={0} [无效]
jdk.combo.box.no.sdk.item.accessibility=无 SDK
progress.title.jdk.combo.box.resolving.jdk.home=正在扫描 JDK 主目录
progress.text.jdk.combo.box.resolving.jdk.home=正在刷新 {0}...
module.libraries.javadoc.url.button=指定文档 URL(&U)…
module.load.unload.dialog.title=加载/卸载模块
module.unload.button.text=卸载 (&U) >
module.load.button.text=< 加载 (&L)
module.unload.all.button.text=全部卸载 >
module.load.all.button.text=< 全部加载
module.loaded.label.text=已加载模块
module.unloaded.label.text=已卸载模块
module.unloaded.explanation=卸载模块可使 IDE 加快速度：搜索、重构和编译会跳过卸载的模块。 关于卸载模块的信息不会通过版本控制共享，因此您队友的项目配置不会受到影响。
module.load.dependencies.dialog.text=所选{0, choice, 1#模块依赖于|2#模块依赖于}当前卸载的{1, choice, 1#模块“{2}”|2# {1} 个模块}。如果加载的模块依赖于卸载的模块，可能会导致编译错误。您想要如何继续?
module.load.dependencies.dialog.title=加载所需的模块
module.load.with.dependencies.button.text=加载所有必需的模块
module.load.without.dependencies.button.text=只加载选择的模块
module.unload.dependents.dialog.text={1, choice, 1#模块“{2}”依赖于|2#{1} 个模块依赖于}所选{0, choice, 1#模块|2#模块}。如果所选{0, choice, 1#模块|2#模块}卸载，可能会导致依赖模块中出现编译错误。您想要如何继续?
module.unload.dependents.dialog.title=卸载依赖模块
module.unload.with.dependents.button.text=卸载所有相关模块
module.unload.without.dependents.button.text=仅卸载所选模块

convert.module.groups.action.text=将模块组转换为限定名称...
convert.module.groups.action.description=按添加到模块名称的前缀替换模块组
convert.module.groups.dialog.title=将模块组转换为限定名称
convert.module.groups.button.text=转换
convert.module.groups.description.text=以下文本中的每一行都对应于一个模块。根据需要调整模块名称，然后按“转换”以重命名模块，并丢弃模块组。
convert.module.groups.error.at.text=第 {0} 行出错: {1}
convert.module.groups.record.previous.names.tooltip=模块名称中的所有变更均会记录。在其他团队成员从 VCS 更新项目时，{0} 将使用此数据自动替换工作区设置中的模块名称。
convert.module.groups.record.previous.names.text=记录以前的模块名称(&R)
convert.module.groups.do.you.want.to.save.scheme=您是否希望保存当前方案?
convert.module.groups.inspection.group.name=模块组转换
convert.module.groups.inspection.display.name=模块名称列表检查

module.renaming.scheme.cannot.load.error=无法从 {0} 加载重命名方案:\n{1}
module.renaming.scheme.cannot.save.error=无法保存重命名方案:\n{0}
module.renaming.scheme.load.button.text=加载(&L)...
module.renaming.scheme.save.button.text=保存(&S)...
module.renaming.scheme.save.chooser.title=保存模块重命名方案
module.renaming.scheme.save.chooser.description=选择将存储当前模块重命名方案的文件。
module.renaming.scheme.cannot.import.error.title=无法导入模块名称
module.renaming.scheme.unknown.module.error=未知模块 ''{0}''
module.name.inspection.empty.name.is.not.allowed=不允许使用空模块名称
module.name.inspection.duplicate.module.name=模块名称 ''{0}'' 重复
module.name.inspection.too.many.lines=项目中有 {0} 个模块，因此第 {1} 行没有对应的模块
module.name.inspection.too.few.lines=项目中有 {0} 个模块，但此处仅有 {1} 行

button.text.attach.files=附加文件或目录(&F)...
library.attach.files.action=附加文件或目录
library.attach.files.to.library.action=附加文件或目录到库''{0}''
library.attach.files.description=选择库类,源和文档所在的文件或目录

project.sdk.setup=安装SDK

module.remove.confirmation.prompt=从项目中移除{1, choice, 1#模块|2#模块} {0}?\n将不会删除文件。
project.remove.confirmation.prompt=您想分离 {1, choice, 1#项目|2#项目} {0}?
module.remove.command=从项目中分离模块
module.toggle.excluded.action=排除的
module.toggle.excluded.action.description=从模块中包含/排除目录
module.toggle.test.sources.action=测试源代码
module.toggle.sources.action=源代码
module.toggle.sources.action.description=标记目录为{0}
sdk.missing.item=<无 SDK>
module.type.unknown.name=未知的模块类型. 用"{0}"替换
module.source.roots.not.configured.error=模块{0}没有源根配置\n请使用 设置| 路径 去配置根.
module.source.roots.not.configured.title=没有源根配置
module.web.title=Web模块
module.web.description=使用 JavaScript、HTML、CSS 和 Node.js 开发应用时的空项目。
project.settings.display.name=项目结构
find.usages.action.text=查找用法
rename.message.prefix.scope=范围
rename.scope.title=重命名范围.
project.roots.flatten.modules.action.text=平展模块
project.roots.flatten.modules.action.description=以简单列表显示模块
project.roots.project.display.name=项目
sdk.configuration.exception=SDK ''{0}''无效.
project.roots.project.jdk.inherited=项目SDK
error.message.unknown.facet.type.0=未知的 facet类型: ''{0}''
error.message.plugin.for.facets.unloaded=支持 ''{1}'' facet 的插件 {0} 已卸载
button.text.remove.selected=移除所选
button.text.ignore.selected=忽略所选
button.text.keep.all=全部保留
facet.configuration.problem.text={0, choice, 1#{1} 个 facet|2#{0} 个 facet}
confirmation.message.would.you.like.to.ignore.facet=您想忽略模块''{1}''中的原型''{0}''吗?

modules.added.notification.title=已添加新模块
configure.unloaded.modules=配置已卸载模块
auto.unloaded.notification={0,choice,1#新添加的模块“{1}”|2#新添加的模块“{1}”、“{2}”|3#“{1}”和另外 {2} 个模块}{0,choice,1#已经|2#已经}自动卸载
auto.unloaded.revert.short=将{0,choice,1#其|2#其}加载回来
auto.unloaded.revert.full=加载{0,choice,1#模块“{1}”|2#方法“{1}”，{2}“|3#“{1}”和另外 {2} 个模块}
auto.loaded.notification={0,choice,1#新添加的模块“{1}”|2#新添加的模块“{1}”、“{2}”|3#“{1}”和另外 {2} 个模块}{0,choice,1#已经|2#已经}自动加载，因为有些其他模块对{0,choice,1#其|2#其}依赖
auto.loaded.revert.short=将{0,choice,1#其|2#其}卸载
auto.loaded.revert.full=卸载{0,choice,1#模块“{1}”|2#方法“{1}”，{2}“|3#“{1}”和另外 {2} 个模块}

error.message.configuration.cannot.load=无法加载 {0}
label.text.0.cannot.be.loaded.remove={0}无法加载.  您可以将它们从项目中移除 (不会删除任何文件).
label.text.0.cannot.be.loaded.ignore={0}无法加载. 您可以将其标记为忽略以禁止此错误通知.

#new project wizard
module.type.empty.name=多模块项目
module.type.empty.description=项目结构对话框将打开，以帮助您构建项目结构

library.docs.node=文档
configurable.DetectionExcludesConfigurable.display.name=框架检测排除
configurable.PlatformContentEntriesConfigurable.display.name=项目结构
notification.text.config.unknown.sdk={0} "{1}" 缺失
notification.text.config.invalid.sdk={0}“{1}”在磁盘上未找到或已损坏
action.text.config.unknown.sdk.configure=配置...
action.text.config.invalid.sdk.configure=配置...
action.text.config.unknown.sdk.download=下载 {0}
label.text.download.for.missing.sdk=为缺失的 {1}“{2}” 下载 {0}
label.text.download.for.invalid.sdk=为损坏的 {1}“{2}” 下载 {0}
label.text.use.for.invalid.sdk=为损坏的 {2}“{3}”使用现有 {0} {1}
label.text.use.for.unknown.sdk=为缺失的 {2}“{3}”使用现有 {0} {1}
config.unknown.sdk.local=使用现有的{0} {1}
config.unknown.sdk.configure.missing=配置缺失的 {0} "{1}"
config.invalid.sdk.configure.missing=配置损坏的 {0}“{1}”
config.unknown.sdk.configuration=SDK 配置
combobox.item.add.sdk=添加 SDK
label.text.mark.as=标记为:
checkbox.text.enable.framework.detection=启用框架检测
label.exclude.from.detection=\   从检测中排除:
label.content.entry.separate.name.patterns=使用 <b>;</b> 分隔名称模式，对于任意数量的符号使用 <b>*</b>，对于一个符号则使用 <b>?</b>。
checkbox.for.generated.sources=对于生成的源(&G)
label.package.prefix=软件包前缀(&P):
dialog.title.cannot.create.sdk=无法创建 SDK
dialog.title.error.configuring.sdk=配置 SDK 时出错
dialog.message.error.configuring.sdk.0.please.make.sure.that.1.is.a.valid.home.path.for.this.sdk.type=配置 SDK 时出错: {0}。\n请确保 {1} 是此 SDK 类型的有效主路径。
button.folder.type.tests=测试
action.text.remove.module=移除模块
action.text.remove.from.project.view=从项目视图中移除
dialog.message.failed.to.download.0.1=无法下载 {0}。{1}
progress.text.configuring.sdks=正在配置 SDK...
progress.text.looking.for.downloadable.sdks=正在查找可下载的 SDK...
progress.text.looking.for.local.sdks=正在查找本地 SDK...
progress.text.resolving.missing.sdks=正在解析缺失的 SDK...
progress.text.resolving.existing.sdks=正在验证现有 SDK...
progress.title.resolving.sdks=正在解析 SDK
section.title.choose.roots=选择根
dialog.title.detected.roots=检测到的根
progress.title.scanning.for.roots=正在扫描根
invalid.root.label=[无效]
progress.title.detecting.sdks=正在检测 SDK
chooser.title.select.library.files=选择库文件
notification.title.error.loading.project=加载项目时出错
notification.group.project.loading.error=无法加载项目
dialog.title.create.project=创建项目
dialog.title.new.project=新建项目
label.new.project=新项目
item.text.empty.project=空项目
progress.title.downloading.sdk=正在配置 SDK
notification.title.sdks.configured=已配置 SDK
notification.link.change.sdks=更改 SDK...
notification.link.change.sdk=更改 {0}...
notification.title.sdk.configured=已配置 {0}
notification.text.sdk.usage.is.set.to=“{0}”设置为 {1}
progress.title.downloading.jdk.list=正在下载 JDK 列表
progress.text.downloading.jdk.list=正在下载 JDK 列表...
progress.text.resolving.hint.path=正在解析提示路径: {0}...
progress.text.detecting.local.jdks=正在检测本地 JDK...
progress.text.checking.existing.jdks=正在检查现有 JDK...
dialog.title.download.jdk=下载 JDK
dialog.title.select.path.to.install.jdk=选择 JDK 安装路径
dialog.button.download.jdk=下载
dialog.row.jdk.location=位置:
dialog.row.jdk.version=版本:
dialog.row.jdk.vendor=供应商:
dialog.row.jdk.other.versions=其他版本
error.message.title.download.jdk=下载 JDK
error.message.no.jdk.for.download=没有 JDK 软件包可供下载
progress.title.preparing.jdk=正在准备 JDK 目标目录
error.message.text.jdk.install.failed=无法在 {0} 上准备 JDK 安装
dialog.message.error.target.path.empty=目标路径为空
dialog.message.error.resolving.path=无法解析路径
dialog.message.error.target.path.exists.file=目标路径为现有文件
dialog.message.error.target.path.exists.nonEmpty.dir=目标路径为现有的非空目录
progress.text.installing.jdk.1=正在安装 {0}...
progress.text2.downloading.jdk=正在下载
progress.text2.unpacking.jdk=正在解压缩
error.message.sdk.download.failed=无法下载 {0}
config.unknown.sdk.commandline.configure=配置未知项目 SDK
config.unknown.progress.scanning=正在扫描未知 SDK...
config.unknown.progress.configuring=正在配置 {0}...
progress.title.updating.jdk.0.to.1=正在将 JDK“{0}”更新到 {1}
progress.title.updating.jdk.failed=无法下载和安装 JDK {0}
progress.text.updating.jdk.setting.up=正在配置 JDK
progress.title.checking.for.jdk.updates=正在检查 JDK 更新
action.title.jdk.update.found=将 JDK "{0}" 更新为 {1}
action.description.jdk.update.found=对于 JDK ''{0}''，可以将 JDK 更新到 {1}。当前版本为 {2}
notification.link.jdk.update.retry=重试
dialog.text.resolving.sdks.item={0}“{1}”
unknown.sdk.with.no.name=<未知>
list.item.all.frameworks=所有框架...
#0 - file name
framework.detection.in.0=\ ({0} 中)
#0 - number, 1 - kind of files (e.g. xml)
comment.0.1.files={0} 个 {1} 文件
list.item.group.by.type=类型
list.item.group.by.directory=目录
label.directory.will.be.excluded.from.framework.detection=将从框架检测中排除 ''{0}'' 目录
label.framework.detection.will.be.disabled=将禁用 ''{0}'' 框架检测。
plugins.advertiser.feature.facet=facet
module.type.general=空项目
general.purpose.type.to.support.any.kind.of.development=具有一个模块的简单项目
failed.to.resolve.sdk.notification.title=无法解析 SDK
try.to.find.sdk.notification.action=尝试查找 SDK
resolve.sdk.task.name=解析 SDK

sdk.specify.location=指定 SDK 位置
sdk.loading.item=正在加载…
notification.group.automatic.module.unloading=模块已自动加载或卸载
notification.group.framework.detection=检测到框架
notification.group.missing.sdks=SDK 已自动配置
error.message.configuration.cannot.load.button=详细信息…
sdk.configure.checking.home.path.validity=正在检查主路径有效性