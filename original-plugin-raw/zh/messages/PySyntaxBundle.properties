configurable.PyLanguageCodeStyleSettingsProvider.display.name=Python
formatter.after.hash='\#' 之后
formatter.after.local.imports=在本地导入后面\:
formatter.align.when.multiline=多行时对齐
formatter.around.eq.in.keyword.argument=在关键字实参中的 \= 周围
formatter.around.eq.in.named.parameter=在命名形参中的 \= 周围
formatter.around.multiplicative.operators=乘法运算符 (*, @, /, %)
formatter.around.power.operator=幂运算符 (**)
formatter.around.top.level.classes.and.function=围绕顶层类和函数\:
formatter.around.top.level.imports=在顶层导入后\:
formatter.before.backslash='' 之前
formatter.before.first.method=在第一个方法前面\:
formatter.before.hash='\#' 之前
formatter.braces=大括号
formatter.collections.and.comprehensions=集合和推导
formatter.dictionary.literals=字典字面量
formatter.force.new.line.after.colon=在冒号后强制换行
formatter.force.trailing.comma.if.multiline=如有多行，强制使用尾随逗号
formatter.from.import.statements="From" Import 语句
formatter.from.import.statements.force.parentheses.if.multiline=如有多行，强制使用括号
formatter.hang.closing.brackets=挂起右中括号
formatter.imports.panel.from.imports.always.split=始终拆分导入
formatter.imports.panel.from.imports.join.with.same.source=使用相同的源联接导入
formatter.imports.panel.from.imports.leave.as.is=保持原样
formatter.imports.panel.from.imports.structure.title="from" 导入结构
formatter.imports.panel.optimize.imports=优化 import
formatter.imports.panel.sort.by.type=在组中分别对 plain 导入和 "from" 导入进行排序
formatter.imports.panel.sort.case.insensitively=不区分大小写排序
formatter.imports.panel.sort.imports=对 import 语句排序
formatter.imports.panel.sort.names.in.from.imports=对 "from" 导入中的导入名称排序
formatter.imports.panel.title=导入
formatter.left.bracket=左中括号
formatter.list.literals=列表字面量
formatter.multi.clause.statements=多子句语句
formatter.panel.add.trailing.line.feed=在文件末尾添加换行
formatter.panel.dict.alignment.label=字典对齐\:
formatter.panel.format.injected.fragments=设置注入片段的格式
formatter.panel.injected.fragments=注入的片段\:
formatter.panel.injected.fragments.use.continuation.indent=添加缩进
formatter.panel.use.continuation.indent.for.arguments=方法调用实参
formatter.panel.use.continuation.indent.for.collection.literals=集合和推导
formatter.panel.use.continuation.indent.for.parameters=方法声明形参
formatter.panel.use.continuation.indent.for.title=为此内容使用继续缩进
formatter.parenthesized.tuples=用圆括号括起的元组表达式
formatter.set.literals=设置字面量
formatter.single.clause.statements=单子句语句
python.colors.braces.and.operators.braces=大括号和运算符//大括号
python.colors.braces.and.operators.brackets=大括号和运算符//中括号
python.colors.braces.and.operators.comma=大括号和运算符//逗号
python.colors.braces.and.operators.dot=大括号和运算符//点
python.colors.braces.and.operators.operation.sign=大括号和运算符//运算符号
python.colors.braces.and.operators.parentheses=大括号和运算符//圆括号
python.colors.built.in.name=内置名称
python.colors.class.definition=类定义
python.colors.decorator=装饰器
python.colors.docstring.tag=Docstring//标签
python.colors.docstring.text=Docstring//文本
python.colors.functions.function.call=函数//函数调用
python.colors.functions.function.definition=函数//函数定义
python.colors.functions.method.call=函数//方法调用
python.colors.functions.nested.function.definition=函数//嵌套函数定义
python.colors.keyword=关键字
python.colors.keyword.argument=关键字实参
python.colors.line.comment=行注释
python.colors.local.variables=局部变量
python.colors.number=数字
python.colors.parameters.parameter=形参//形参
python.colors.parameters.self.parameter=形参//'self' 形参
python.colors.python=Python
python.colors.special.names.definition=特殊名称//定义
python.colors.special.names.usage=特殊名称//用法
python.colors.string.binary.bytes=字符串//二进制(字节)
python.colors.string.escape.sequence.invalid=字符串//转义序列//无效
python.colors.string.escape.sequence.valid=字符串//转义序列//有效
python.colors.string.f.string.expression.braces=字符串//格式化字符串///表达式大括号
python.colors.string.f.string.format.specifier.start=字符串//格式化字符串//格式说明符开始
python.colors.string.f.string.type.conversion=字符串//格式化字符串///类型转换
python.colors.string.text.unicode=字符串//文本 (unicode)
python.colors.type.annotation=类型注解
python.colors.type.parameters=类型形参
