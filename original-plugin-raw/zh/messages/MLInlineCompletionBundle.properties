action.ml.inline.completion.ClearCompletionCache.text=清除云补全的缓存
ml.completion.advise.aia.name=JetBrains AI Assistant
ml.completion.advise.full.line.name=Full Line Code Completion
ml.completion.advise.full.line.unavailable.suffix=在远程开发中不可用
ml.completion.configurable.name=机器学习补全
ml.completion.diagnostics.buttons.row.title=尝试按钮\:
ml.completion.diagnostics.caches.analyzed.title=已分析缓存
ml.completion.diagnostics.caches.button.reset.plugin.caches=重置插件缓存
ml.completion.diagnostics.caches.raw.title=原始缓存
ml.completion.diagnostics.clear=清除
ml.completion.diagnostics.completion.title=补全：
ml.completion.diagnostics.contexts.copy.button.label=复制上下文
ml.completion.diagnostics.hide.failed=隐藏失败
ml.completion.diagnostics.mock.button.add=添加到现有
ml.completion.diagnostics.mock.button.reset.mock=重置 Mock
ml.completion.diagnostics.mock.button.reset.mock.and.plugin.caches=重置模拟和插件缓存
ml.completion.diagnostics.mock.response.title=模型响应
ml.completion.diagnostics.mock.streaming.mode.char.by.char=逐字符，延迟 {0}
ml.completion.diagnostics.mock.streaming.mode.disabled=已禁用
ml.completion.diagnostics.mock.streaming.mode.line.by.line=逐行，延迟 {0}
ml.completion.diagnostics.mock.streaming.mode.title=流式传输模式\:
ml.completion.diagnostics.native.server.address=原生服务器地址\: {0}\:{1}
ml.completion.diagnostics.native.server.grpc.channel.state=GRPC 通道状态\: {0}
ml.completion.diagnostics.native.server.is.not.started={0} 未启动
ml.completion.diagnostics.native.server.started=已启动
ml.completion.diagnostics.native.server.terminated.with=已终止，退出代码为 {0}
ml.completion.diagnostics.next.edit.context.prompt.system=提示
ml.completion.diagnostics.next.edit.context.prompt.user=用户提示
ml.completion.diagnostics.next.edit.target.after=之后
ml.completion.diagnostics.next.edit.target.before=之前
ml.completion.diagnostics.no.data.label=无数据
ml.completion.diagnostics.no.semantic.correctness.information=没有语义正确性信息
ml.completion.diagnostics.on.hidden=即使此窗口隐藏也记录
ml.completion.diagnostics.preview.title=预览：
ml.completion.diagnostics.userDump.dialog.text=我们现在将收集 AI 补全行为的详细日志。请像平常一样输入代码，并使用代码补全功能。为了获得最佳效果，请考虑重启 IDE 并在新的实例上触发此操作。这将使我们能够从头开始捕获日志，并更好地分析问题。日志记录将在 {0} 后自动停止。然后，您将看到一个包含日志文件的确认对话框。在将日志文件发送给客户支持团队之前，您可以查看并移除任何机密信息。
ml.completion.diagnostics.userDump.dialog.title=收集 AI 补全的诊断数据
ml.completion.diagnostics.userDump.dialog.yes=收集日志
ml.completion.diagnostics.userDump.successful.dialog.text=诊断日志已成功收集并保存至以下位置\: {0}。您现在可以查看该文件并将其发送给我们进行分析。
ml.completion.diagnostics.userDump.successful.dialog.title=日志收集成功
ml.completion.enable.lookup.sync.checkbox=同步内联和弹出补全
ml.completion.enable.lookup.sync.checkbox.comment=启用后，内联补全将显示在弹出补全列表中，以避免快捷键冲突
ml.completion.enable.multi.line.completion.comment=如果禁用，将仅显示单行建议
ml.completion.enable.multi.line.completion.enable=启用多行建议
ml.completion.go.to.code.completion.settings=转到<a>代码补全设置页面</a>调整查找补全设置
ml.completion.no.plugins.text=您没有启用任何 JetBrains 内联代码补全插件\:<ul>{0}</ul>
ml.completion.notifications.common.name=JetBrains 内联代码补全
ml.completion.notifications.third.parties.conflict.action.more.info.title=更多信息
ml.completion.notifications.third.parties.conflict.action.plugin.settings.title=插件设置
ml.completion.notifications.third.parties.conflict.detect.title={0} 已禁用
ml.completion.notifications.third.parties.conflict.resolve.content=与其他插件不再有任何冲突。{0} 现已重新启用，并且能够建议补全。
ml.completion.notifications.third.parties.conflict.resolve.title={0} 已启用
ml.completion.third.parties.conflict.content.multiple=由于启用了以下插件，{0} 和 {1} 现已禁用\: {2}\n要启用 {3} 和 {4}，需要先禁用有冲突的插件。
ml.completion.third.parties.conflict.content.single=由于启用了以下插件，{0} 现已禁用\: {1}\n要启用 {2}，需要先禁用以上插件。
ml.completion.tooltip.action.inline.hint=在编辑器中显示提示
ml.completion.tooltip.action.settings=内联补全设置…
ml.completion.trigger.on.typing.comment=如果禁用，仍然可以通过 <b>{0}</b> 快捷键调用补全建议
ml.completion.trigger.on.typing.enabled=启用输入时自动补全
