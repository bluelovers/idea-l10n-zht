ExtractJpqlQueryIntention.error={0} 错误
action.SpringDataRunJpqlAction.text=在控制台中运行查询
action.SpringRepositoryViewShowMembers.text=显示继承的成员
action.runRepositoryMethodAction.text=在控制台中运行查询
completion.SpringData.generate.repository.command.name=创建 {0} 仓库
completion.SpringData.generateRepositoryMethod=生成仓库方法
completion.SpringData.generateRepositoryMethod.progress=正在生成仓库方法…
completion.SpringData.select.entity.class=选择实体
completion.SpringData.select.entity.class.none=<未选择实体>
completion.SpringData.select.repository.class=选择基仓库类
completion.SpringData.suggested.method.parameters.advertisement=选择仓库方法形参
data.inspection.group.name=Spring Data
goto.custom.implementation.title=导航到自定义实现\: ''{0}''
goto.named.query.title=导航到 @NamedQuery
goto.repository.methods.title=导航到 Spring Data 仓库方法
incorrect.method.of.explicit.subject.return.type=此处应为''{0}'' 类型
incorrect.method.return.type=此处应为 ''{0}'' 域类型或有效投影接口
incorrect.method.return.type.non.reactive.type.expected=应为非反应式类型
incorrect.method.return.type.reactive.type.expected=应为反应式类型\: ''{0}''
incorrect.method.return.type.unknown.reactive.type.expected=应为反应式类型
inspection.SpringDataModifyingAnnotationMissing=Update/Delete 查询必须使用 @Modifying 进行注解，否则将抛出 InvalidDataAccessApiUsageException。
inspection.SpringDataPageableParameterMissing=返回 Page 的查询必须具有 Pageable 形参。
intention.family.name.spring.data.intentions=Spring 数据意图
intention.name.create.spring.data.repository=在 ''{1}'' 中创建仓库方法 ''{0}''
live.template.repository.description=Spring '@Repository' 模板
logical.spring.repo.methods=方法
named.query.type.title=@NamedQuery
notification.group.spring.dataJpa=Spring Data JPA
open.in.database.view=在数据库视图中打开
run.jpql.query=运行 JPQL 查询
spring.component.template.repository=仓库
spring.data.commons.query.method.inconsistency.inspection.name=Spring Data 仓库方法错误
spring.data.commons.query.method.parameters.inspection.name=Spring Data 仓库方法形参错误
spring.data.commons.query.method.return.type.inspection.name=Spring Data 仓库方法返回值类型错误
spring.data.domain.class.from.projection=导航到域类
spring.data.domain.class.member.select=选择域成员
spring.data.domain.class.select=选择域类
spring.data.domain.member.from.projection=导航到域类成员
spring.data.jdbc.associated.db.elements.inspection.name=Spring Data JDBC 关联的数据库元素
spring.data.jdbc.entities=JDBC 实体
spring.data.jdbc.gutter.attribute.actions=显示特性操作
spring.data.jdbc.gutter.entity.actions=显示条目操作
spring.data.jdbc.gutter.name=Spring Data JDBC 映射
spring.data.jpa=Spring Data JPA
spring.data.jpa.entities=JPA 实体
spring.data.lineMarker.runMongoQuery=在控制台中运行 Mongo 查询
spring.data.lineMarker.runQuery=在控制台中运行查询
spring.data.mongodb.document=文档
spring.data.mongodb.document.not.found=找不到文档 
spring.data.mongodb.documents=MongoDB 文档
spring.data.mongodb.field.not.found=找不到字段
spring.data.mongodb.fields=MongoDB 字段
spring.data.mongodb.gutter.name=Spring Data MongoDB 映射
spring.data.mongodb.json.field.inspection.name=Spring Data MongoDB JSON 未解析字段
spring.data.projections.annotator=Spring Data 投影
spring.data.ql=Spring Data QL
spring.data.repositories.not.found=找不到 Spring 仓库
spring.data.repositories.title=仓库
spring.data.repository=仓库
spring.data.tab.title=数据
spring.template.context.type=Spring Data
