### META-INF/SBT.xml
displayname.sbt=sbt
displayname.replace.project.with.project.in=将 Project() 替换为 project.in()
group.sbt=sbt
packagesearch.dependency.version.inspection.description=库依赖项有较新的稳定版本

### org/jetbrains/sbt/Sbt.scala
sbt.build.module.description=sbt 模块用于标记内容根，并为 sbt 项目定义提供库
sbt.project.long.description=由 sbt 支持的项目
sbt.project.description=sbt 项目
sbt.build.module.name=sbt 模块

### org/jetbrains/sbt/annotator/SbtAnnotator.scala
sbt.annotation.blankLineRequired=在 0.13.7 版(您的版本是 {0})以前的 *.sbt 文件中，需要用空行来分隔表达式
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt 文件只能包含表达式
sbt.annotation.expectedExpressionType=sbt 文件中预期的表达式类型为 Def.SettingsDefinition
sbt.annotation.expectedExpressionTypeSbt0136=sbt 文件中预期的表达式类型为 DslEntry
sbt.annotation.expressionMustConform=表达式类型 {0} 必须符合 sbt 文件中的 Def.SettingsDefinition
sbt.annotation.expressionMustConformSbt0136=表达式类型 {0} 必须符合 sbt 文件中的 DslEntry

### org/jetbrains/sbt/codeInspection/SbtDependencyVersionInspection.scala
packagesearch.newer.stable.version.available={0}\:{1} 有较新的稳定版本
packagesearch.update.dependency.to.newer.stable.version=将依赖项更新到较新的稳定版本 {0}

### org/jetbrains/sbt/codeInspection/SbtReplaceProjectWithProjectInInspection.scala
sbt.inspection.projectIn.name=将 Project() 替换为 project.in()

### org/jetbrains/sbt/project/SbtExternalSystemManager.scala
sbt.import.noCustomJvmFound=无法确定所选 JDK 中的 Java VM 可执行文件
sbt.import.noProjectJvmFound=无法确定当前项目 SDK 中的 Java VM 可执行文件

### org/jetbrains/sbt/project/SbtNotificationListener.scala
sbt.project.import=sbt 项目导入

### org/jetbrains/sbt/project/SbtProjectResolver.scala
sbt.import.to.intellij.project.model=导入到 IntelliJ 项目模型
sbt.unknown.cause=未知原因
sbt.import.cancelled=sbt 导入已取消\: {0}
sbt.launcher.not.found=在 {0} 中找不到 sbt 启动器
sbt.sincesbtversion.required=需要 sbt {0}+。请更新项目 build.properties。
sbt.import.extracting.structure.failed=提取结构失败
sbt.import.message.build.status=构建状态：{0}
sbt.import.message.structure.file.is.not.a.file=结构文件 {0} 不是文件
sbt.import.message.structure.file.is.empty=结构文件 {0} 为空
sbt.local.cache=本地缓存

### org/jetbrains/sbt/project/SbtViewContributor.scala
sbt.tasks.defined.in.this.project=此项目中定义的 sbt 任务
sbt.tasks=sbt 任务
sbt.settings.defined.in.this.project=此项目中定义的 sbt 设置
sbt.settings=sbt 设置
sbt.named.sbt.commands.defined.in.this.project=此项目中定义的命名 sbt 命令
sbt.commands=sbt 命令

### org/jetbrains/sbt/project/modifier/BuildFileModifier.scala
sbt.build.file.modification=sbt 构建文件修改

### org/jetbrains/sbt/project/modifier/ui/BuildFileModifiedStatus.java
sbt.build.modified.detected=已检测
sbt.build.modified.automatically=已自动修改
sbt.build.modified.manually=已手动修改
sbt.build.modified.automatically.and.fixed.manually=已自动修改和手动修正
sbt.build.modified.unexpected.file.status=意外的构建文件状态\: {0}

### org/jetbrains/sbt/project/modifier/ui/ChangesConfirmationDialog.scala
sbt.build.file.changes=sbt 构建文件变更

### org/jetbrains/sbt/project/module/SbtModuleSettingsEditor.scala
sbt.settings.sbtModuleSettings=sbt
sbt.settings.sbtVersionNotDetected=未检测
sbt.settings.noImplicitImportsFound=找不到隐式 import
sbt.settings.resolvers.url=URL
sbt.settings.resolvers.name=名称

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.form
sbt.settings.sbtVersionInModule=sbt 版本
sbt.settings.implicitImports=隐式 import
sbt.settings.resolvers=解析器

### org/jetbrains/sbt/project/settings/SbtExtraControls.scala
sbt.settings.scalaVersionPreference=打开交叉编译 Scala 3 / Scala 2 项目为\:
sbt.settings.scalaVersionPreference.tooltip=针对 Scala 2 和 Scala 3 交叉编译的项目实际上并不使用 Scala 3 功能，且可以作为 Scala 2 (更可靠)打开。
sbt.settings.useShell=用于\:
sbt.settings.download=下载\:
sbt.settings.shell.title=sbt shell
sbt.settings.useShellForImport=项目重新加载
sbt.settings.useShellForBuild=内部版本
sbt.settings.remoteDebug=启用调试
sbt.settings.allowSbtVersionOverride=允许重写 sbt 版本
sbt.settings.resolveClassifiers=库源代码
sbt.settings.resolveSbtClassifiers=sbt 源代码
sbt.settings.resolveClassifiers.tooltip=从 sbt 重新加载项目时下载项目库依赖项的源
sbt.settings.resolveSbtClassifiers.tooltip=从 sbt 重新加载项目时下载 sbt 和 sbt 插件的源
sbt.settings.useShellForImport.tooltip=项目从 sbt shell 而不是新的 sbt 进程中重新加载。这样可以减少重新加载时间，但需要 sbt shell 才能留在内存中
sbt.settings.useShellForBuild.tooltip=在 sbt shell 中构建项目。推荐用于 sbt 构建配置，这些配置会导致在 IntelliJ IDEA 编译器中的编译工作无法正常进行
sbt.settings.remoteDebug.tooltip=Starts the sbt shell as debuggable process. Allows debugging sbt plugin code and tests running in sbt shell
sbt.settings.allowSbtVersionOverride.tooltip=Run sbt shell with the latest compatible version of sbt, if newer than the one configured in project build.properties. Allows the sbt shell integration to take advantage of newer features and fixes

### org/jetbrains/sbt/project/settings/SbtProjectSettingsControl.scala
sbt.settings.project.jdk="项目 JDK\:"

### org/jetbrains/sbt/project/sources/SharedSourcesModuleType.scala
sbt.shared.sources.module=共享源代码模块
sbt.shared.source.module.description=在编译期间，某个共享源代码模块的依赖项混入模块源代码而不是模块输出中

### org/jetbrains/sbt/project/structure/SbtStructureDump.scala
sbt.extracting.project.structure.from.sbt.shell=正在从 sbt shell 提取项目结构
sbt.project.structure.extracted=已提取项目结构
sbt.import.errors.project.reload.aborted=发生导入错误，已中止项目重新加载
sbt.extracting.project.structure.from.sbt=正在从 sbt 提取项目结构
sbt.task.failed.see.log.for.details=sbt 任务失败，请参阅日志以了解详细信息
sbt.events=事件
sbt.task.canceled=任务已取消

### org/jetbrains/sbt/project/template/SbtModuleBuilder.scala
scala.version.requires.library.version=Scala {0} 需要 {1} {2}
wrong.library.version={0} 版本错误

### org/jetbrains/sbt/project/template/SbtProjectTemplate.scala
sbt.based.scala.project.recommended=基于 sbt 的 Scala 项目(推荐)

### org/jetbrains/sbt/project/template/techhub/TechHubDownloadUtil.scala
sbt.techhub.downloading.location=正在下载 {0}
sbt.techhub.no.response.status.from.connection.to.url={0} 连接无响应状态
sbt.techhub.response.to.connection.to.url.was.status={0} 连接的响应为 ''{1}''

### org/jetbrains/sbt/project/template/techhub/TechHubModuleBuilder.scala
downloading.list.of.templates=正在下载模板列表…
select.template=选择模板
downloading.template=正在下载模板…

### org/jetbrains/sbt/project/template/techhub/TechHubProjectTemplate.scala
sbt.techhub.lightbend.project.starter=Lightbend 项目启动器
sbt.techhub.sbt.based.project.from.a.lightbend.tech.hub.template=Lightbend Tech Hub 模板中基于 sbt 的项目

### org/jetbrains/sbt/project/template/wizard/SbtModuleStepLike.scala
sbt.settings.sbt=sbt(&S)\:
sbt.settings.scala=Scala(&C)\:
sbt.download.scala.standard.library.sources=下载 Scala 标准库源代码(对于编辑源代码很有用)
sbt.download.sbt.sources=下载 sbt 源代码(对于编辑项目定义很有用)
sbt.module.step.download.sources=下载源

### org/jetbrains/sbt/project/template/wizard/buildSystem/IntelliJScalaNewProjectWizardStep.scala
scala.sdk.must.be.set=必须设置 Scala SDK

### org/jetbrains/sbt/resolvers/exceptions.scala
sbt.resolverIndexer.cantCreateIndexDir=无法创建索引目录\: {0}
sbt.resolverIndexer.indexVersionMismatch=索引版本与最新版本不同\: {0}
sbt.resolverIndexer.invalidRepository=仓库不存在或无效\: {0}
sbt.resolverIndexer.remoteRepositoryHasNotBeenIndexed=尚未对远程仓库建立索引\: {0}\n\
{1}
sbt.resolverIndexer.indexFileIsCorrupted={0} 中的 sbt 仓库索引已损坏。\n\
请移除此文件并重新索引 sbt 仓库

### org/jetbrains/sbt/runner/SbtConfigurationType.scala
sbt.runner.displayName=sbt 任务
sbt.runner.description=运行 sbt 任务

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.form
sbt.runner.form.tasks=任务\:
sbt.runner.form.vmParameters=VM 形参\:
sbt.runner.form.environmentVariables=环境变量\:
sbt.runner.form.tasksEditorTitle=任务
sbt.runner.form.vmParametersEditorTitle=VM 形参
sbt.runner.form.use.sbt.shell=使用 sbt shell
sbt.runner.form.working.directory=工作目录\:

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.java
sbt.runner.choose.working.directory=选择工作目录

### org/jetbrains/sbt/settings/SbtSettingsPane.form
sbt.settings.jvm=JVM
sbt.settings.custom.launcher=自定义(&U)
sbt.settings.maxHeapSize=最大堆大小(MB)
sbt.settings.vmParams=VM 形参
sbt.settings.sbtLauncher=启动器(sbt-launch.jar)
sbt.settings.bundled=已捆绑(&B)

### org/jetbrains/sbt/settings/SbtSettingsPane.java
sbt.settings.choose.custom.launcher=选择自定义启动器
sbt.settings.choose.sbt.launch.jar=选择 sbt-launch.jar

### org/jetbrains/sbt/shell/SbtProcessManager.scala
sbt.shell.disable.version.override=禁用版本重写
sbt.shell.update.sbt.version=更新 sbt 版本
sbt.shell.configure.sbt.jvm=配置 sbt JVM(&C)
sbt.shell.configure.project.jdk=配置项目 JDK(&C)
sbt.shell.started.sbt.shell.with.sbt.version=已使用 sbt 版本 {0} 而不是项目配置的 {1} 启动 sbt shell。
sbt.shell.no.jre.found.at.path=在路径 {0} 中找不到 JRE。改用项目 JDK。
sbt.shell.no.project.jdk.configured=未配置项目 JDK，但必须配置才能运行 sbt shell。

### org/jetbrains/sbt/shell/SbtProjectTaskRunner.scala
sbt.shell.refresh.sbt.project=刷新 sbt 项目
sbt.shell.sbt.build.failed=sbt 构建失败
sbt.shell.unable.to.build.sbt.project=无法构建与 IDEA 模块 {0} 相对应的 sbt 项目。
sbt.shell.sbt.build=sbt 构建
sbt.shell.build.interrupted=构建已中断
sbt.shell.error.build.interrupted=错误\: 构建已中断
sbt.shell.errors.in.build=构建中存在错误
sbt.shell.warnings.in.build=构建中存在警告
sbt.shell.synchronizing.output.directories=正在同步输出目录…

### org/jetbrains/sbt/shell/SbtShellRunner.scala
initializing.sbt.shell.message=正在初始化 sbt shell…
sbt.shell.status.initializing=正在初始化
sbt.shell.status.busy=繁忙

### org/jetbrains/sbt/shell/SbtShellToolWindowFactory.scala
sbt.shell.title=sbt shell

### org/jetbrains/sbt/shell/action/projectWindowActions.scala
sbt.shell.action.run.task=运行
sbt.shell.action.run.task.description=在 sbt shell 中运行任务
sbt.shell.action.show.task=显示结果
sbt.shell.action.show.task.description=在 sbt shell 中显示任务结果
sbt.shell.action.inspect.task=检查
sbt.shell.action.inspect.task.description=在 sbt shell 中检查任务
sbt.shell.action.show.setting=显示值
sbt.shell.action.show.setting.description=在 sbt shell 中显示设置
sbt.shell.action.inspect.setting=检查
sbt.shell.action.inspect.setting.description=在 sbt shell 中检查设置
sbt.shell.action.run.command=运行
sbt.shell.action.run.command.description=在 sbt shell 中运行命令
sbt.shell.action.help=帮助
sbt.shell.action.help.description=在 sbt shell 中获取帮助

### org/jetbrains/sbt/shell/action/shellWindowActions.scala
sbt.shell.start=启动 sbt shell
sbt.shell.restart=重启 sbt shell
sbt.shell.stop=停止 sbt shell
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.attach.debugger=将调试器附加到 sbt shell
sbt.shell.enable.debugging.in.sbt.settings=在 sbt 设置中启用 sbt shell 调试，并重启 shell 以附加调试器
sbt.shell.debug=调试 sbt shell

### <unused>
sbt.shell.execute.task=执行 {0}
sbt.fix.updateIndexes=更新项目解析器的索引
sbt.notification.will.be.disabled.for.all.projects=将对所有项目禁用通知\n\
使用“设置 | 外观与行为 | 通知 | {0}”\n\
可以配置通知。
sbt.unindexed.maven.repositories.sbt.detection=无索引 Maven 仓库 sbt 检测
sbt.disable.notification=禁用通知
sbt.unindexed.maven.repositories.for.sbt.detection=用于 sbt 检测的无索引 Maven 仓库
sbt.unindexed.maven.repositories.found=<b>找到 {0} 个无索引的 Maven 仓库</b>
sbt.unindexed.maven.repositories.found.message=如果要使用依赖项补全，请点击<b><a href\="\#open">此处</a></b>，选择所需的仓库，并按“更新”按钮。<a href\="\#disable">禁用…</a>
sbt.notificationGroupTitle=sbt 导入
sbt.notificationGroupName=sbt
sbt.import.error=导入 sbt 项目时出错\: <br/><pre>{0}</pre>
sbt.import.unresolvedDependencies=未解析的依赖项\: <ul>{0}</ul>请参阅 <a href\="{1}">{1}</a> 中的完整日志
sbt.fix.refreshProject=刷新项目
