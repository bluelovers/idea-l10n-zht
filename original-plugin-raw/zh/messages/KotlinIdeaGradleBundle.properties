action.Gradle.MigrateToDaemonJvmCriteria.text=将项目迁移到守护进程 JVM 标准
action.text.install=安装
build.0.project=内部版本号 {0}
change.build.gradle.configuration=更改 build.gradle 配置
command.name.configure.0=配置 {0}
command.name.configure.kotlin=配置 Kotlin
command.name.configure.kotlin.automatically=Kotlin 自动配置
configuration.apply.is.resolve.module.per.source.set=修正并重新导入项目
configuration.do.not.suggest.update.is.resolve.module.per.source.set=不再显示
configuration.is.resolve.module.per.source.set=检测到传统 Gradle 导入模式
configuration.update.is.resolve.module.per.source.set=IDE 当前配置为每个 Gradle 项目创建一个模块。这种模式与 Kotlin Multiplatform 项目不兼容，后者要求每个 Gradle 源集都只有一个模块。
configure.kotlin.new.content=新内容
configure.kotlin.original.content=原始内容
description.text.a.single.platform.kotlin.library.or.application.targeting.javascript=面向 JavaScript 的单平台 Kotlin 库或应用程序
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.browser=面向 JavaScript 或浏览器的单平台 Kotlin 库或应用程序
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.node.js=面向 JavaScript 或 Node.js 的单平台 Kotlin 库或应用程序
description.text.a.single.platform.kotlin.library.or.application.targeting.the.jvm=面向 JVM 的单平台 Kotlin 库或应用程序
description.text.adds.support.for.building.kotlin.projects=添加对构建 Kotlin 项目的支持
description.text.multi.targeted.jvm.js.ios.etc.project.with.shared.code.in.common.modules=具有通用模块中共享代码的多目标 (JVM、JS、iOS 等) 项目。可以在项目的构建脚本中配置这些目标。
display.name.kotlin.js.for.browser=Kotlin/JS (适用于浏览器)
display.name.kotlin.js.for.node.js=Kotlin/JS (适用于 Node.js)
display.name.kotlin.jvm=Kotlin/JVM
display.name.kotlin.multiplatform=Kotlin/Multiplatform
error.text.cannot.find.build.gradle.file.for.module=找不到模块 {0} 的 build.gradle 文件
error.text.failed.to.load.script.definitions.by=无法通过 {0} 加载脚本定义
error.text.highlighting.is.impossible.during.gradle.import=在 Gradle 导入期间，无法突出显示
error.text.support.requires.version={0}支持需要 {1} 或更高版本的 Kotlin 运行时库。请更新构建脚本中的版本。
error.text.this.language.feature.requires.version=此语言功能需要 {0} 或更高版本的 Kotlin 运行时库。请更新构建脚本中的版本。
framework.support.provider.kotlin.js.for.browser.display.name=Kotlin/JS (适用于浏览器)
framework.support.provider.kotlin.js.for.node.js.display.name=Kotlin/JS (适用于 Node.js)
framework.support.provider.kotlin.jvm.display.name=Kotlin/JVM
presentable.text.java.with.gradle=Java 与 Gradle
step.configure.kotlin.preparing=正在准备构建文件
step.configure.kotlin.writing=正在编写构建文件
text.couldn.t.configure.kotlin.gradle.plugin.automatically=无法自动配置 kotlin-gradle 插件。
text.see.manual.installation.instructions=要查看手动安装说明，请点击<a href\="https\://kotlinlang.org/docs/reference/using-gradle.html">此处</a>。
text.was.modified={0} 已被修改
title.configure.kotlin.gradle.plugin=配置 Kotlin-Gradle 插件
title.kotlin.build.script=Gradle Kotlin DSL 脚本错误
title.update.language.version=更新语言版本
you.can.delegate.to.gradle=您可以在“文件 | 设置 | 构建、执行、部署 | 构建工具 | Gradle | 使用此工具构建和运行”中将 IDE 构建/运行操作委托给 Gradle
