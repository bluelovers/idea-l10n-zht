action.ReactClassToFunctionComponentAction.description=转换为函数组件
action.ReactClassToFunctionComponentAction.text=转换为函数组件
action.ReactExtractComponentAction.description=提取组件
action.ReactExtractComponentAction.text=提取组件…
action.ReactFunctionToClassComponentAction.description=转换为类组件
action.ReactFunctionToClassComponentAction.text=转换为类组件
create.react.app.description=<a href\="https\://github.com/facebookincubator/create-react-app">创建 React 应用</a>是官方支持的一种创建单页 React 应用程序的新方法。它提供了没有配置的现代构建设置。
create.react.app.name=React
create.react.app.scripts.version=脚本版本 (&V)
create.react.app.typescript.checkbox=创建 TypeScript 项目(&T)
javascript.fix.create.class.component.jsx.family=创建类组件
javascript.fix.create.class.component.jsx.name=创建类组件 ''{0}''
javascript.fix.create.function.component.jsx.family=创建函数组件
javascript.fix.create.function.component.jsx.name=创建函数组件 ''{0}''
react.class.component.type.class=类
react.class.component.type.function=函数
react.class.to.function.caret.at.class=文本光标应置于要转换的类处
react.function.to.class.caret.at.function=文本光标应置于要转换的函数处
react.inspection.unresolved.component.prop=未解析的组件 prop ''{0}''
react.inspection.unresolved.prop.action.name=创建组件 Prop
react.inspection.unresolved.prop.quick.fix.family.name=创建组件 prop
react.inspection.unresolved.prop.quick.fix.text=创建组件 prop ''{0}''
react.inspection.unresolved.prop.validation.message.component.source.not.found=找不到组件源
react.inspection.unresolved.prop.validation.message.writable.props.not.found=找不到可写属性类型对象
react.inspection.unresolved.prop.validation.message.writable.source.not.found=找不到可写组件源
react.inspection.unresolved.ref.to.prop.fix.text=在 ''{1}'' 组件中创建 ''{0}'' prop
react.inspection.unresolved.ref.to.state.fix.family.name=创建组件状态
react.inspection.unresolved.ref.to.state.fix.text=在 ''{1}'' 组件中创建 ''{0}'' 状态
refactoring.create.react.component.title=创建组件
refactoring.extract.react.component.label.name=名称\:
refactoring.extract.react.component.label.type=类型\:
refactoring.extract.react.component.no.expression=所选内容不构成 JSX 表达式
refactoring.extract.react.component.no.scope=找不到用于放置所创建组件的作用域
refactoring.extract.react.component.title=提取组件
refactoring.react.class.to.function.conflict.used.with.ref={0} 与 ''ref'' 特性结合使用。无法为无状态函数组件提供 ref
refactoring.react.class.to.function.intention.title=转换为函数组件
refactoring.react.class.to.function.refactoring.title=转换为函数组件
refactoring.react.could.not.find.in.template=无法重构。找不到名称为 {0} 的元素。可能的代码模板 {1} 无效吗?
refactoring.react.function.to.class.intention.title=转换为类组件
refactoring.react.function.to.class.refactoring.title=转换为类组件
refactoring.react.function.to.class.used.in.call.conflict=调用表达式中使用了 {0}
refactoring.react.function.to.class.used.in.new.conflict=\ ''new'' 表达式中使用了 {0}
