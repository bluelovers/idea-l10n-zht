generate.kmp.project=生成 <b>Kotlin Multiplatform</b> 项目。
kmp.wizard.android=Android
kmp.wizard.android.comment=使用基于 Jetpack Compose 的 Compose Multiplatform UI 框架
kmp.wizard.desktop=桌面
kmp.wizard.desktop.comment=使用 Compose Multiplatform UI 框架
kmp.wizard.error.no.platforms.selected=至少选择一个平台来生成 Kotlin Multiplatform 项目
kmp.wizard.failed.to.generate.project=无法生成 Kotlin Multiplatform 项目。请检查您的互联网连接以及对 <a href\="https\://{0}">{0}</a> 的访问权限。
kmp.wizard.failed.to.generate.project.delete.failed=无法生成 Kotlin Multiplatform 项目。请检查您是否有项目目录的访问权限。
kmp.wizard.failed.to.generate.project.incompatible.android.sdk=无法生成 Kotlin Multiplatform 项目。指定的最低 Android SDK 版本({0})不受支持。\n支持的 Android SDK 版本范围是从 API {1} 到 {2}。\n请将您项目的最低 SDK 版本更新至该范围内。
kmp.wizard.failed.to.generate.project.validation.failed=由于输入数据无效，无法创建 Kotlin Multiplatform 项目. {0}.
kmp.wizard.failed.to.get.server.config=无法连接到 Kotlin Multiplatform 项目生成器。请检查您的互联网连接以及对 <a href\="https\://{0}">{0}</a> 的访问权限。
kmp.wizard.go.to.template.gallery=有关示例项目的列表，请参阅模板库
kmp.wizard.go.to.template.gallery.href=有关示例项目的列表，请参阅<a href\="{0}">模板库</a>
kmp.wizard.include.tests=包含测试
kmp.wizard.ios=iOS
kmp.wizard.ios.comment=使用 Compose Multiplatform UI 框架，或者使用 SwiftUI
kmp.wizard.ios.not.ui.share=不共享 UI
kmp.wizard.ios.ui.share=共享 UI
kmp.wizard.ios.ui.title=UI 实现
kmp.wizard.notification.group=Kotlin Multiplatform 向导
kmp.wizard.notification.unsupported.dsl.message=Kotlin Multiplatform 向导不支持 Groovy Gradle DSL，生成的项目将使用 Kotlin Gradle DSL。
kmp.wizard.notification.unsupported.dsl.title=所选 Gradle DSL 不受支持
kmp.wizard.server=服务器
kmp.wizard.server.comment=使用 Ktor 框架
kmp.wizard.server.comment.href=使用 <a href\="{0}">Ktor</a> 框架
kmp.wizard.web=Web
kmp.wizard.web.comment=使用 Compose Multiplatform UI 框架，或者使用 React
kmp.wizard.web.comment.no.react=使用 Compose Multiplatform UI 框架
kmp.wizard.web.not.ui.share=不共享 UI
kmp.wizard.web.ui.share=共享 UI
kmp.wizard.web.ui.title=UI 实现
presentable.name.kmp.wizard=Kotlin Multiplatform
