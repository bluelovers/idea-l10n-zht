LLMInstallerWizardPanel.progress.failed=无法安装插件\: {0}
LLMInstallerWizardPanel.progress.failed.unknown.error=未知错误
LLMInstallerWizardPanel.try.again=重试
action.AIHub.NotInstalled.DiscoverFeatures.text=发现功能…
action.AIHub.NotInstalled.InlineCompletionSettings.text=设置…
ai.hub.enable.button=我们开始吧
ai.hub.incompatible.assistant.message=要访问全部功能，请更新 AI<br>Assistant。
ai.hub.incompatible.assistant.update=更新
ai.hub.not.installed.error.unknown=无法安装插件
ai.hub.not.installed.free.and.junie.description=• 无限制代码补全<br>• 与代码库聊天<br>• 云模型和您自己的模型<br>• 编码智能体<br>• 30 天 AI Pro 使用权限
ai.hub.not.installed.free.and.no.junie.description=• 无限制代码补全<br>• 与代码库聊天<br>• 云模型和您自己的模型<br>• 30 天 AI Pro 使用权限<br>• 绝不使用您的代码进行训练
ai.hub.not.installed.no.free.and.junie.description=• AI 赋能功能<br>• 与代码库聊天<br>• 云模型和您自己的模型<br>• 编码智能体<br>•30 天 AI Pro 使用权限
ai.hub.not.installed.no.free.and.no.junie.description=• AI 赋能功能<br>• 与代码库聊天<br>• 云模型和您自己的模型<br>• 30 天 AI Pro 使用权限<br>• 绝不使用您的代码进行训练
ai.hub.not.installed.restart=请重启 IDE
ai.hub.not.installed.tos.comment=点击“{0}”，即表示您同意 <br><a href\="{1}">JetBrains AI 服务条款</a>
ai.hub.title={0} 拥抱 AI
ai.hub.tooltip.description=解锁更高水平的开发
ai.hub.tooltip.text=JetBrains AI
ai.installer.notification.group.name=AI Assistant 安装程序
ai.promo.feature.AIEnterprise.description=贵组织的 AI 使用情况由您掌控
ai.promo.feature.CloudCompletion.description=云代码补全
ai.promo.feature.CommandGenerationInTerminal.description=终端中的命令生成
ai.promo.feature.ContextAwareChat.description=上下文感知 AI 聊天
ai.promo.feature.FixWithAI.description=使用 AI 修正
ai.promo.feature.GenerateTests.description=生成单元测试
ai.promo.feature.LocalCompletion.description=本地代码补全
ai.promo.feature.MergeWithAI.description=使用 AI 合并 Git 冲突
ai.promo.window.cloud.enable.button=启用
ai.promo.window.cloud.features.label=提供一系列 AI 赋能的功能
ai.promo.window.cloud.models.label=提供尖端云模型，包括独特的 JetBrains 模型
ai.promo.window.cloud.status=已禁用
ai.promo.window.cloud.terms.comment=点击“启用”，即表示您同意 <a>JetBrains AI 服务条款</a>
ai.promo.window.cloud.title=AI Cloud
ai.promo.window.enterprise.liability.label=知识产权责任保护
ai.promo.window.enterprise.models.label=与贵组织批准的 OpenAI 模型集成
ai.promo.window.enterprise.more.button=了解详情
ai.promo.window.enterprise.organization.label=组织范围内的访问控制
ai.promo.window.enterprise.privacy.label=高级安全和隐私设置
ai.promo.window.enterprise.title=AI Enterprise
ai.promo.window.enterprise.zdr.label=零数据保留
ai.promo.window.local.completion.label=无需网络连接即可提供 AI 代码补全
ai.promo.window.local.configure.button=配置
ai.promo.window.local.disconnected.label=绝不会将您的代码或数据发送到您的计算机之外
ai.promo.window.local.licensed.label=仅使用具有宽松许可证的代码进行训练
ai.promo.window.local.status=已启用
ai.promo.window.local.title=AI Local
ai.promo.window.privacy.label=绝不会使用您的代码或数据进行训练
ai.promo.window.title=自定义您的 AI 体验
auto.install.restart.action=重新启动
auto.install.restart.required=插件“{0}”要求重启 IDE 才能完成安装
auto.install.started=正在安装“{0}”插件
install.error.fetch.plugins=could not fetch plugins from Marketplace
install.error.fetch.plugins.with.details=could not fetch plugins from Marketplace\: {0}
install.error.pending.update=an update for this plugin is already pending. Please restart IDE to complete the update
install.error.plugin.not.found=unable to find the plugin at JetBrains Marketplace
install.error.something.went.wrong=something went wrong during plugin installation
install.error.unknown=未知错误
installation.looking.for.plugin=Looking for plugin…
installation.started=正在安装 {0}…
panel.activate.30.day.free.trial.available=可免费试用 30 天
panel.activate.all.features=<a href\="{0}">了解详情</a>
panel.activate.community.prompt=仅在符合公司政策的情况下才激活 {0} 用于工作目的
panel.activate.foot.note=JetBrains AI 不会使用您的数据或代码来训练模型。<br><a href\="https\://jb.gg/logindcup">数据收集和使用政策</a>
panel.activate.free.trial.available=提供 7 天免费试用
panel.activate.free.trial.checking.access=正在验证访问权限…
panel.activate.organization.disabled.ai.assistant=您的组织已禁用 {0}
panel.activate.organization.disabled.ai.assistant.confirmation.button=仍要安装
panel.activate.organization.disabled.ai.assistant.confirmation.text=安装后请联系您的系统管理员以激活 {0} 功能
panel.activate.organization.disabled.ai.assistant.confirmation.title={0} 已禁用
panel.activate.organization.disabled.ai.assistant.how.to.enable=如何启用
panel.activate.organization.disabled.ai.assistant.install.plugin=安装插件
panel.activate.organization.disabled.ai.assistant.via.services=您的组织已通过 JetBrains IDE Services 禁用 {0}
panel.activate.suggestion.ask.anything=向 AI 聊天询问任何编程问题
panel.activate.suggestion.enjoy.ai.features=试用上下文感知 AI 功能
panel.activate.suggestion.explain.errors=获得错误解释和修正建议
panel.activate.suggestion.generate.code=直接在编辑器中生成代码
panel.activate.suggestion.generate.commit.messages=自动编写提交消息和文档
panel.disabled.comment=<center>{0} 插件已禁用</center>
panel.disabled.enable.plugin=启用插件
panel.wizard.cancel.tooltip=取消
panel.wizard.downloading=正在下载…
panel.wizard.downloading.error.message=无法下载 {0}。<br>{1}
panel.wizard.downloading.error.title=插件安装失败
panel.wizard.downloading.not.found.error=找不到插件“{0}”
panel.wizard.install=安装插件
panel.wizard.installed=已安装
panel.wizard.installing=正在安装…
panel.wizard.restart.ide=重启 IDE
panel.wizard.task.title={0} 安装
plugin.install.llm.tos=点击“安装”，即表示您同意 <a href\="{0}">JetBrains AI 服务条款</a>
promo2.action.button=我们开始吧\!
promo2.action.legal1=点击“{0}”，即表示您同意
promo2.action.legal2=JetBrains AI 服务条款
promo2.action2.button=知道了\!
promo2.footnote.1=我们的 AI 绝不使用您的代码进行训练
promo2.reason.access=30 天 AI Pro 使用权限
promo2.reason.chat=借助更好的上下文感知功能与代码库聊天
promo2.reason.cloud=利用尖端云模型
promo2.reason.completion=受益于无限制的代码补全
promo2.reason.junie=使用编码智能体处理任务
promo2.reason.local=通过 Ollama 和 LM Studio 接入您自己的模型
promo2.reason.multiline.changes=使用多行更改和智能应用
promo2.subtitle=利用免费 AI 解锁更高水平的开发\!
promo2.title={0} 进入 AI 时代
toolwindow.install.title=安装 {0}
toolwindow.stripe.AIAssistant=AI 聊天
welcome.discover.ai.agents={0} 智能体
welcome.discover.ai.ask.ai=在聊天中提问
welcome.discover.ai.automate.routine=自动执行例程
welcome.discover.ai.close=关闭
welcome.discover.ai.fix.problems.in.queries=修正查询中的问题
welcome.discover.ai.get.explanations.find.bugs=获取解释
welcome.discover.ai.must.have=必备
welcome.discover.ai.text.to.sql=文本转 SQL
welcome.discover.ai.write.code=编写代码
welcome.discover.discover.all=发现所有功能
welcome.discover.discover.features=发现功能
welcome.feature.ask.about.code.after.steps=<b>提示</b>\: {0} 知道编辑器、当前文件和打开的标签页中的文本光标位置和所选代码。<br><br><b>提示示例</b>\:<ul><li><b>secretMethod</b> 有什么作用?<li>在项目中的什么地方可以找到<b>授权</b>?<li>解释文本光标处的代码。<li>所选代码有什么作用?<li>描述我当前文件中的代码。<li>打开了哪些文件?</ul>
welcome.feature.ask.about.code.steps=在编辑器中选择特定的代码段，然后点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>使用选区新建聊天</b>。
welcome.feature.ask.about.code.title=询问项目代码
welcome.feature.ask.about.local.changes.and.commits.beforeSteps=您可以询问 {0} VCS 相关的问题。<p><b>提示示例</b>\:<ul><li>最后一次提交是什么?<li>显示提交历史记录。<li>显示最近两次提交之间的差异。<li>显示未提交的更改。<li>传出的更改是什么?</ul>
welcome.feature.ask.about.local.changes.and.commits.title=询问 VCS
welcome.feature.ask.questions.before.steps=您可以向 {0} 询问一般编程问题。<br><br><b>提示示例</b>\:<ul><li>什么是 CAP 定理?<li>如何使用正则表达式验证电子邮件地址?<li>如何在 Java 中生成特定范围内的随机整数?<li>解释如何编写高效的 Docker 文件以部署 Spring Boot 应用程序。<li>提供有关如何搭配使用 Ktor 和 RESTful API 创建 CRUD 应用程序的分步说明。</ul>
welcome.feature.ask.questions.title=询问编程问题
welcome.feature.code.generation.steps=将文本光标放在编辑器中的任意位置或选择一个代码段，然后按 {0}。<p>在输入字段中，编写您的提示，然后按 <kbd>Enter</kbd>。<p>要改进结果，请在输入字段中编写您的后续提示，然后按 <kbd>Enter</kbd>。<p>按 <shortcut actionId\="ViewSource"/> 接受生成的代码，或按 <kbd>Esc</kbd> 拒绝。
welcome.feature.code.generation.title=根据描述生成代码
welcome.feature.convert.to.another.language.steps=打开要转换的文件，将文本光标放在编辑器中，然后点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>将文件转换为另一种语言</b>。<p>选择要将当前文件转换为的语言。
welcome.feature.convert.to.another.language.title=转换成另一种语言
welcome.feature.craft.prompt.library.before.steps=要创建您自己的提示，您可以\:<ul><li>右键点击编辑器打开上下文菜单，然后转到 <b>AI 操作 | 添加您的提示</b>。<li>点击 {0} 聊天输入字段中的 <icon src\="com.intellij.icons.AllIcons.Actions.MenuSaveall"/> <b>保存当前提示</b>以保存您的提示。<li>或打开设置，然后选择<b>工具 | {0} | 提示库</b>。</ul><br><b>提示</b>\: 使用 <b>$SELECTION</b> 变量可以将当前代码选区添加到提示。
welcome.feature.craft.prompt.library.title=创建提示库
welcome.feature.ds.connection.agent.before.steps={0} 可以通过聊天创建数据库连接。
welcome.feature.ds.connection.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 连接到数据库并提供所需信息<p>审查并执行建议的操作。
welcome.feature.ds.connection.agent.title=通过聊天创建数据库连接
welcome.feature.ds.data.agent.before.steps={0} 可以通过聊天管理您工作区中的表和数据文件。
welcome.feature.ds.data.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 将 CSV/XLS 文件或数据库表附加到工作区或从工作区分离<p>审查并执行建议的操作。
welcome.feature.ds.data.agent.title=通过聊天管理附加到工作区的数据
welcome.feature.ds.data.wrangler.agent.before.steps={0} 可以通过聊天来转换数据。
welcome.feature.ds.data.wrangler.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 执行数据操作<p>审查并执行建议的操作。
welcome.feature.ds.data.wrangler.agent.title=通过聊天转换数据
welcome.feature.ds.export.agent.before.steps={0} 可以通过聊天将数据和 Notebook 导出为不同的格式。
welcome.feature.ds.export.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 导出您的 Notebook 或数据<p>审查并执行建议的操作。
welcome.feature.ds.export.agent.title=通过聊天导出数据和 Notebook
welcome.feature.ds.jupyter.agent.before.steps={0} 可以通过聊天创建不同类型的单元并运行 Notebook。
welcome.feature.ds.jupyter.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 在您的 Notebook 中创建特定类型的单元(例如，将 CSV 文件导入数据帧)<p>审查并执行建议的操作。
welcome.feature.ds.jupyter.agent.title=通过聊天创建单元并运行 Notebook
welcome.feature.ds.python.env.agent.before.steps={0} 可以通过聊天安装/卸载 Python 软件包。
welcome.feature.ds.python.env.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 安装/卸载软件包<p>审查并执行建议的操作。
welcome.feature.ds.python.env.agent.title=通过聊天管理 Python 软件包
welcome.feature.ds.workspace.agent.before.steps={0} 可以通过聊天管理您工作区中的文件和文件夹。
welcome.feature.ds.workspace.agent.steps=打开 <i>AI 聊天</i><p>要求 {0} 将文件夹附加到工作区或创建/移除文件<p>审查并执行建议的操作。
welcome.feature.ds.workspace.agent.title=通过聊天管理工作区文件
welcome.feature.explain.code.afterSteps=这也适用于正则表达式、SQL 查询、cron 表达式和其他注入的片段。
welcome.feature.explain.code.steps=选择一个代码段并点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>解释代码</b>。
welcome.feature.explain.code.title=解释代码
welcome.feature.explain.commit.steps=打开 <icon src\="com.intellij.icons.AllIcons.General.Vcs"/> <b>Git 工具窗口</b>。<p>在提交窗格中，选择一个或多个提交以供 {0} 解释。<p>点击右键并在上下文菜单中选择<b>使用 {0} 解释提交</b>。
welcome.feature.explain.commit.title=解释提交
welcome.feature.explain.runtime.error.title=解释运行时错误
welcome.feature.explain.runtime.errors.before.steps=如果出现运行时错误\:
welcome.feature.explain.runtime.errors.steps=在控制台中点击 <icon src\="com.intellij.llmInstaller.LLMInstallerAIAssistantBrandingIcons.Logo16"/> <b> 使用 AI 解释</b>。<p>或者，选择错误消息，打开上下文菜单，然后点击<b>使用 AI 解释错误消息</b>。
welcome.feature.find.potential.problems.steps=选择一个代码段并点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>查找问题</b>。
welcome.feature.find.potential.problems.title=查找错误并提出修正建议
welcome.feature.generate.commit.messages.after.steps=<b>提示自定义</b>\:<br>打开提交消息字段右下角的提交设置。<p>或者，转到<b>设置 | 工具 | {0} | 提示库 | 提交消息生成</b>。
welcome.feature.generate.commit.messages.before.steps=如果有更改\:
welcome.feature.generate.commit.messages.steps=打开 <icon src\="com.intellij.icons.AllIcons.Actions.Commit"/> <b>提交工具窗口</b>。<p>点击 <icon src\="com.intellij.llmInstaller.LLMInstallerAIAssistantBrandingIcons.Logo16"/> <b>使用 {0} 生成提交消息</b>。
welcome.feature.generate.commit.messages.title=生成提交消息
welcome.feature.inline.code.completion.after.steps=您也可以通过按 <shortcut actionId\="CallInlineCompletionAction"/> 手动调用代码补全。<p><b>提示</b>\: 将鼠标悬停在代码建议上可以更改接受 {0} 建议的键。
welcome.feature.inline.code.completion.steps=开始在编辑器中输入以获取即时建议。<p>要接受建议的代码，请按 <shortcut actionId\="InsertInlineCompletionAction"/>。<p>要拒绝建议，请按 <kbd>Esc</kbd>。
welcome.feature.inline.code.completion.title=补全代码
welcome.feature.name.suggestions.steps=将文本光标放在要重命名的内容上。<p>点击右键以打开上下文菜单，选择<b>重构</b>，然后选择<b>重命名</b>。
welcome.feature.name.suggestions.title=建议名称
welcome.feature.refactoring.suggestions.afterSteps=<b>提示</b>\: 您可以在不选择特定代码段的情况下使用此功能和其他 <b>AI 操作</b>。将文本光标放在所需的类或方法中，选择 AI 操作，然后选择所需的代码段。
welcome.feature.refactoring.suggestions.steps=选择一个代码段，然后点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>建议重构</b>。<p>在重构代码的字段中，点击<b>显示差异</b>打开差异查看器。
welcome.feature.refactoring.suggestions.title=建议重构
welcome.feature.reference.files.before.steps=在您的项目中执行有针对性的查询。<br><br><b>提示示例</b>\:<ul><li><b>\#thisFile</b> 中的什么地方出现了差一错误?<li>我的哪个 <b>\#localChanges</b> 引入了差一错误?<li><b>\#file\:Foo.kt</b> 中的什么地方出现了差一错误?<li><b>\#symbol\:Foo</b> 中的什么地方出现了差一错误?<li><b>\#jupyter_var\:foo</b> 有什么值?</ul>
welcome.feature.reference.files.title=引用文件
welcome.feature.sql.ask.insights.before.steps=由于 {0} 聊天知道您的架构，您可以询问有关数据库对象的问题。提示示例\:<ul><li><i>哪些表包含 BLOB 类型的列?</i><li><i><code>film_actor</code> 通过外键连接到哪些表?</i><li><i>哪些表已分区?</i><li><i>哪些表没有主键?</i></ul>
welcome.feature.sql.ask.insights.title=询问有关您的数据库的见解
welcome.feature.sql.attach.schema.before.steps=您可以通过提供正在使用的数据库架构的上下文来提高生成的 SQL 查询的质量。
welcome.feature.sql.attach.schema.steps=打开 AI 聊天。<p>借助下拉列表附加架构。<p>{0} 将获得所附加架构结构的访问权限，并向 LLM 提供相关信息。<p>开始聊天。
welcome.feature.sql.attach.schema.title=附加架构以改善交互
welcome.feature.sql.correct.syntax.steps=将文本光标放在 SQL 代码中的语法错误上。<p>选择 <i>AI 操作</i>，然后选择<i>修正 SQL 问题</i>。<p>代码将在编辑器中得到更正。<p>如果您对结果不满意，请使用<i>撤消</i>操作。
welcome.feature.sql.correct.syntax.title=更正 SQL 语法
welcome.feature.sql.create.prompt.library.after.steps=<b>提示</b>\: 您可以使用 <code>$SELECTION$</code> 变量将当前代码选区添加到提示中。<br/><br/>提示示例\:<ul><li><i>将此 SQL 转换为 PostgreSQL 方言。</i><li><i>编写重复此查询功能的 Python 代码。</i><li><i>重构此 SQL\: 使用 CTE 替换子查询。</i><li><i>为此查询中的所有表添加别名。</i></ul>
welcome.feature.sql.create.prompt.library.steps=在编辑器中点击右键以打开上下文菜单，然后转到 <i>AI 操作</i> | <i>添加您的提示</i>。<p>在 {0} 聊天输入字段中点击<i>保存当前提示</i>。<p>或者，打开设置，然后选择<i>工具</i> | <i>{0}</i> | <i>提示库</i>。
welcome.feature.sql.create.prompt.library.title=创建提示库
welcome.feature.sql.explain.queries.after.steps=<b>提示</b>\: 这也适用于正则表达式、Python 代码段和其他代码段。
welcome.feature.sql.explain.queries.steps=将文本光标放在查询上，然后点击右键以打开上下文菜单。<p>选择 <i>AI 操作</i>，然后选择<i>解释代码</i>。
welcome.feature.sql.explain.queries.title=解释查询
welcome.feature.sql.generate.by.nl.request.steps=将文本光标放在编辑器中的任意位置或选择一个代码段，然后按 <shortcut actionId\="AIAssistant.Editor.ForceGenerateCodeInEditor"/>。<p>在输入字段中，编写您的查询提示，然后按 <kbd>Enter</kbd>。<p>要微调结果，请在输入字段中编写您的后续提示，然后按 <kbd>Enter</kbd>。<p>按 {0} 接受生成的查询，或按 <kbd>Esc</kbd> 拒绝。
welcome.feature.sql.generate.by.nl.request.title=根据自然语言请求生成 SQL 查询
welcome.feature.sql.optimize.query.before.steps=您可以将查询连同使用 <i>Explain Plan</i> 得到的结果一起发送到 AI 聊天，{0} 将为您提供可能的优化。
welcome.feature.sql.optimize.query.steps=将架构附加到聊天中 – 上下文将帮助 {0} 优化您的查询。<p>编写一条带有优化请求的提示，包括查询、<i>Explain Plan</i> 结果和请求。<p>粘贴建议的重构并进行测试。
welcome.feature.sql.optimize.query.title=请求查询优化
welcome.feature.sql.use.correct.objects.before.steps={0} 能够完美处理数据库对象的误用。了解数据库架构后，它可以检测出您应该使用哪个对象。
welcome.feature.sql.use.correct.objects.steps=将文本光标放在 SQL 代码中的语法错误上。<p>选择 <i>AI 操作</i>，然后选择<i>修正 SQL 问题</i>。<p>代码将在编辑器中得到更正。<p>如果您对结果不满意，请使用<i>撤消</i>操作。
welcome.feature.sql.use.correct.objects.title=请求使用正确的数据库对象
welcome.feature.unit.tests.generation.afterSteps=<b>提示自定义</b>\:<br>转到<b>设置 | 工具 | {0} | 提示库 | 生成单元测试</b>。
welcome.feature.unit.tests.generation.steps=将文本光标放在方法内的任意位置，然后点击右键以打开上下文菜单。<br>或者，按 <shortcut actionId\="ShowIntentionActions"/>。<p>选择 <b>AI 操作</b>，然后选择<b>生成单元测试</b>。<p>要改进生成的代码，请点击<b>指定</b>，并在 <b>AI 差异</b>标签页中添加新要求。
welcome.feature.unit.tests.generation.title=生成测试
welcome.feature.write.documentation.after.steps=<b>提示自定义</b>\:<br>转到<b>设置 | 工具 | {0} | 提示库 | 编写文档</b>。
welcome.feature.write.documentation.steps=选择一个代码段，然后点击右键以打开上下文菜单。<p>选择 <b>AI 操作</b>，然后选择<b>编写文档</b>。
welcome.feature.write.documentation.title=生成文档
welcome.install.plugin.banner.action=安装 {0}
welcome.install.plugin.banner.message=尝试此功能以及更多功能
welcome.next.feature.button=下一个\: {0}
welcome.previous.feature.button=上一个
welcome.short.discover.description=嗨，{0}\! 我可以为您提供以下帮助\:
welcome.short.discover.link.discover.all=发现所有功能
welcome.short.discover.link.discover.all.short=发现全部
welcome.short.discover.noname.description=嗨\! 我可以为您提供以下帮助\:
welcome.short.discover.title=欢迎使用 {0}
welcome.short.discover.title.features.title=功能
