UnresolvedRestParamInspection.display.name=未解析的 @PathParam 引用
action.WebServicesPlugin.CreateRestfulWebService.text=RESTful Web 服务
action.WebServicesPlugin.CreateRestfulWebServiceClient.text=RESTful Web 服务客户端
action.export.openapi.draft=生成 OpenAPI 草稿
annotate.field.with.path.param=作为 @PathParam("{1}") 注解字段 {0}
cant.convert.to=无法将 ''{0}'' 转换为 {1}
category.name.mappings=映射
create.field.annotated.path.param=创建作为 @PathParam("{0}") 注解的 String 字段
create.method.parameter=创建方法形参
gutter.open.in.http.client.name=在 HTTP 客户端 JAX-RS RequestMapping 中打开
remove.annotation=移除注解
resource.methods.inspection=没有资源方法的 @Path 类
resource.methods.inspection.class.has.no.public.methods=类不包含任何 JAX-RS 注解的方法
resource.methods.inspection.method.must.be.public={0}方法必须为 public
wadl.config.inspection=不正确的 WADL 配置
webservices.file.templates.group.name=JAX-RS
webservices.inspections.ambiguous.path.annotation.display.name=不正确的 @Path URI 模板
webservices.inspections.default.value.display.name=不正确的 @DefaultValue 形参值
webservices.inspections.group.name=RESTful Web 服务(JAX-RS)
webservices.inspections.rest.multiple.method.designators.inspection=有多个 HTTP 方法注解的资源方法
webservices.inspections.rest.void.method.annotated.as.get.display.name=@GET 注解方法返回 void 值
webservices.inspections.rest.void.method.annotated.as.get.fix.name=将返回值类型更改为 String
webservices.inspections.rest.void.method.annotated.as.get.problem=@GET 注解方法返回 void 值
webservices.inspections.unused.path.template=从未使用模板 ''{0}''
webservices.inspections.wrong.path.annotation.value.problem=路径语法错误
