action.Qodana.AddQodanaToCiAction.text=将 Qodana 添加到 CI 管道
action.Qodana.ClearQodanaCacheAction.text=清除 Qodana 报告缓存
action.Qodana.NewInspectionKts.text=自定义检查
action.Qodana.OpenReportAction.text=打开本地报告…
action.Qodana.ProblemTree.ExcludeDirectory.text=排除目录 ''{0}''
action.Qodana.ProblemTree.ExcludeDirectoryForInspection.text=在目录 ''{1}'' 中禁用检查 ''{0}''
action.Qodana.ProblemTree.ExcludeFile.text=排除文件 ''{0}''
action.Qodana.ProblemTree.ExcludeFileForInspection.text=禁用文件 ''{1}'' 的检查 ''{0}'' 
action.Qodana.ProblemTree.ExcludeInspection.text=禁用检查 ''{0}''
action.Qodana.ProblemTree.ExcludeModule.text=排除模块 ''{0}''
action.Qodana.ProblemTree.ExcludeModuleForInspection.text=在模块 ''{1}'' 中禁用检查 ''{0}''
action.Qodana.ProblemsView.GroupByDirectory.text=目录
action.Qodana.ProblemsView.GroupByInspection.text=检查
action.Qodana.ProblemsView.GroupByModule.text=模块
action.Qodana.ProblemsView.GroupBySeverity.text=严重性
action.Qodana.ProblemsView.OpenWebUI.text=在浏览器中显示 Qodana
action.Qodana.ProblemsView.RefreshReportAction.text=刷新报告
action.Qodana.ProblemsView.ShowBaseline.text=显示基线
action.Qodana.ProblemsView.ShowPreview.description=点击所选问题以打开其预览
action.Qodana.ProblemsView.ShowPreview.text=打开编辑器预览
action.Qodana.ProblemsViewCloseReportAction.text=关闭报告
action.Qodana.RunQodanaAction.text=尝试使用 Qodana 进行代码分析
action.Qodana.SarifFileReportAction.text=使用 Qodana 打开 SARIF
action.Qodana.ShowBrowserPage.text=在浏览器中打开 Qodana
action.Qodana.ShowBuildPage.text=打开“构建”页面
action.open.qodana.cloud.open.in.ide.report.action=Qodana Cloud {0}
apply.fixes.command=应用修正
apply.fixes.inspections.option.description=应用所有可用的快速修复，包括清理。默认情况下，修正被禁用。
baseline.include.absent.option.description=将基线中缺少的问题添加到报告
baseline.option.description=在基线模式下运行 Qodana - 将实际报告与基线报告比较
changes.deprecated.option.description=已弃用\: 请改用 --changes
changes.option.description=仅分析项目的本地更改
check.go.display.name=检查 GO 源代码覆盖率
check.js.display.name=检查 JavaScript 和 TypeScript 源代码覆盖率
check.jvm.display.name=检查 Kotlin 和 Java 源代码覆盖率
check.php.display.name=检查 PHP 源代码覆盖率
check.python.display.name=检查 Python 源代码覆盖率
class.coverage.below.threshold=类 <code>{0}</code> 覆盖率低于阈值 {1}%
class.coverage.threshold.value=类覆盖率阈值
cleanup.inspections.option.description=运行项目清理。默认情况下，修正被禁用。
cli.baseline.results.grouping.message=根据基线对问题进行分组\: 未更改\: {0}，新\: {1}{2,choice,0\#|1\#，不存在\: {3}}
cli.baseline.results.title=Qodana - 基线汇总
cli.coverage.covered.title=行已覆盖
cli.coverage.fresh.title=Fresh 覆盖率
cli.coverage.lines=行
cli.coverage.lines.title=行已分析
cli.coverage.no.coverage=警告\! 未计算覆盖率，可能覆盖率文件与源不匹配。请检查您的设置
cli.coverage.percent=%
cli.coverage.title=Qodana – 覆盖率摘要
cli.coverage.total.title=总覆盖率
cli.main.results.grouping.message.by.severity=按严重性\: {0}
cli.main.results.title=Qodana - 详细汇总
cli.metrics.cyclomatic.complexity.complexity=复杂度
cli.metrics.cyclomatic.complexity.title=循环复杂度
cli.metrics.dfa.complexity.complexity=复杂度
cli.metrics.dfa.complexity.title=DFA 复杂度
cli.metrics.dfa.consistency.consistency=一致性
cli.metrics.dfa.consistency.title=DFA 一致性
cli.metrics.lines.of.code.lines=行
cli.metrics.lines.of.code.title=代码行
cli.metrics.no.metrics=没有计算代码质量指标
cli.metrics.title=代码质量指标
cli.promo.results.grouping.message=我们在您的代码库中发现了更多问题。探索建议的检查，如果您发现这些问题很重要，请启用它们。这里我们仅显示建议的检查发现的部分问题。
cli.promo.results.title=Qodana - 问题示例
cli.results.problems.count=分析结果\: 检测到 {0} 个{0,choice,1\#问题|2\#问题}
cli.results.table.header.baseline=基线
cli.results.table.header.inspection.name=名称
cli.results.table.header.problems.count=问题计数
cli.results.table.header.severity=严重性
cli.sanity.results.grouping.message=在健全性检查过程中检测到 {0} 个可疑{0,choice,1\#问题|2\#问题}。也许相应的{0,choice,1\#检查|2\#检查}存在有一些问题。您可以修正{0,choice,1\#问题|2\#问题}或将包含{0,choice,1\#问题|2\#这些问题}的文件从分析中排除
cli.sanity.results.table.header.file=文件
cli.sanity.results.table.header.inspection.name=检查
cli.sanity.results.title=Qodana - 健全性汇总
code.metrics.file.description=指标描述
code.metrics.group.display.name=代码指标
code.metrics.jvm.display.name=计算 Kotlin 和 Java 代码指标
compiling.kts.file=正在编译 {0}…
config.dir.option.description=应用程序将使用此目录中的 effective.qodana.yaml 文件作为配置，目录中的其他配置文件也将保存到输出中。由 CLI 计算
config.option.description=应用程序将使用此文件而不是 qodana.yaml 作为配置文件。相对路径的基为此配置文件或项目目录。
configurable.name=Qodana
constructor.coverage.below.threshold=构造函数 <code>{0}</code> 覆盖率低于阈值 {1}%
coverage.group.display.name=代码覆盖率
disable.sanity.inspections.option.description=应用程序将不会运行由 'sanity' 配置文件配置的检查。默认情况下，启用健全性检查。
eap.license.message=使用此 linter，即表示您同意\n- JetBrains 隐私政策(https\://jb.gg/jetbrains-privacy-policy)\n- JetBrains EAP 用户协议(https\://jb.gg/jetbrains-user-eap)\n\n此 linter 包括评估许可证。\n该许可证将在 {0} 天后到期。\n请确保您按时拉取新映像。
eap.license.message.with.expiration.date=使用此 linter，即表示您同意\n- JetBrains 隐私政策(https\://jb.gg/jetbrains-privacy-policy)\n- JetBrains EAP 用户协议(https\://jb.gg/jetbrains-user-eap)\n\n此 linter 包括评估许可证。\n该许可证将于 {0} 到期。\n请确保您按时拉取新映像。
exit.failure.summary={0,choice,1\#失败条件|2\#失败条件}已触发\:{1}
exit.runtime.error.notifications=Qodana 配置为在收到任何错误通知时失败
exit.threshold.count.exceeded=在所有严重性中检测到 {0} 个{0,choice,1\#问题|2\#问题}，失败阈值\: {1}
exit.threshold.coverage.not.met=未达到 {0} 最小值。获得的值为 {1}%，失败阈值为 {2}%
exit.threshold.severity.exceeded=检测到严重性为 {1} 的 {0} 个{0,choice,1\#问题|2\#问题}，失败阈值\: {2}
fail.threshold.option.description=如果问题数超出指定值，应用程序将以 255 退出代码退出
file.coverage.below.threshold=文件 <code>{0}</code> 覆盖率低于阈值 {1}%
file.coverage.threshold.value=文件覆盖率阈值
file.sarif.close.report.action.text=在 Qodana 中关闭 SARIF
filetype.sarif.chooser.error=所选文件不是有效的 SARIF 报告
filetype.sarif.chooser.label=SARIF 文件
filetype.sarif.description=静态分析结果交换格式
fixes.strategy.inspections.option.description=已弃用\: 改用 --cleanup 和 --apply-fixes。
gh.workflow.file.location.can.t.be.empty=工作流文件位置不能为空
gh.workflow.file.must.be.located.in.project.directory=工作流文件必须位于 ''{0}'' 项目目录中
gh.workflow.must.be.yaml.file=工作流必须是 YAML 文件
gh.workflow.path.must.be.absolute=路径必须是绝对路径
gh.workflow.value.not.path=值不是路径
group.Qodana.ProblemTreeActionGroup.description=Qodana
group.Qodana.ProblemTreeActionGroup.text=从 Qodana 分析中排除…
group.Qodana.ProblemsView.Options.description=允许对问题进行分组
group.Qodana.ProblemsView.Options.text=视图选项
group.Qodana.ProblemsView.OtherActions.text=其他…
group.Qodana.ShowReportGroup.description=Qodana
group.Qodana.ShowReportGroup.text=Qodana
inspection.java.annotator=Java 注解器
inspection.java.sanity.inspection=Java 健全性
inspection.kotlin.sanity.inspection=Kotlin 健全性
inspection.message.unresolved.reference=未解析的引用 {0}
inspection.qodana.sanity.display.name=健全性
inspection.qodana.tools.group.name=Qodana
inspectionKts.action.compile.inspection.file.text=编译检查文件
inspectionKts.ignore.error=忽略
inspectionKts.open.log=打开日志
inspectionkts.analysis.error=由于发生错误，分析失败
inspectionkts.analysis.no.error=分析成功
inspectionkts.banner.examples=示例
inspectionkts.banner.examples.title=检查示例
inspectionkts.compilation.cancelled=编译取消
inspectionkts.compilation.failed=编译失败，与源代码保持同步
inspectionkts.compilation.failed.no.match=编译失败，与源代码不匹配
inspectionkts.compiled=编译检查与源代码同步
inspectionkts.compiled.no.match=编译检查与源代码不匹配
inspectionkts.compiling=正在编译…
inspectionkts.example.java=Java
inspectionkts.example.js=JavaScript 和 TypeScript
inspectionkts.example.json=JSON 和 YAML
inspectionkts.example.kotlin=Kotlin
inspectionkts.open.psi.viewer=打开 PSI 查看器
inspectionkts.open.psi.viewer.tooltip.description=检查代码与源代码的 PSI 树协同工作。选择文件以查看 PSI 树
inspectionkts.open.psi.viewer.tooltip.link=关于 PSI
inspectionkts.template.any.language.global.inspection=空全局检查
inspectionkts.template.any.language.local.inspection=空局部检查
inspectionkts.template.java.local.inspection=Java 局部检查模板
inspectionkts.template.js.local.inspection=JavaScript 和 TypeScript 局部检查模板
inspectionkts.template.kotlin.local.inspection=Kotlin 局部检查模板
local.run.advanced.configuration=高级配置
local.run.baseline.comment=之前 Qodana 运行的输出可以用作基线。基线问题与其他问题分开
local.run.baseline.file.location=基线文件位置
local.run.baseline.filter=报告文件
local.run.baseline.location.can.t.be.empty=基线位置不能为空
local.run.file.does.not.exist=文件 {0} 不存在
local.run.file.does.not.exist.no.name=文件不存在
local.run.file.must.be.sarif.json.or.sarif=文件必须是 SARIF (.json 或 .sarif)
local.run.use.qodana.analysis.baseline=使用 Qodana 分析基线
local.run.value.not.path=值不是路径
method.coverage.below.threshold=方法 <code>{0}</code> 覆盖率低于阈值 {1}%
method.coverage.threshold.value=方法覆盖率阈值
missing.coverage.tracking.message=警告缺失的覆盖率
no.problems.content.action.choose.another.project=选择另一个项目
no.problems.content.action.open.another.report=打开其他报告
no.problems.content.baseline.action=显示基线
no.problems.content.baseline.description=基线中{0,choice,|1\#仍存在 1 个问题|2\#仍存在 {0} 个问题}
no.problems.content.baseline.title=没有发现新问题
no.problems.content.no.problems.cloud.report.action=打开 Qodana Cloud
no.problems.content.no.problems.cloud.report.description=如果需要，调整检查或更新 Qodana Cloud 中的分析文件列表
no.problems.content.no.problems.local.report.no.browser.description=所有应用的检查均顺利通过
no.problems.content.no.problems.local.report.w.browser.action=在浏览器中打开 Qodana UI
no.problems.content.no.problems.local.report.w.browser.description=如果需要，调整检查或更新 Qodana UI 中的分析文件列表
no.problems.content.no.problems.title.no.problems.found=没有发现问题
no.problems.content.not.matched.cloud.report.title=Qodana Cloud 项目与当前项目不匹配
no.problems.content.not.matched.linked.report.action=链接其他 Qodana Cloud 项目
no.problems.content.not.matched.linked.report.description=存在 {1,choice,|1\#1 个问题|2\#{1} 个问题}的链接项目 {0} 与 {2} 不一致
no.problems.content.not.matched.local.report.description=存在 {0,choice,|1\#1 个问题|2\#{0} 个问题}的已打开报告与项目 {1} 不对应
no.problems.content.not.matched.local.report.title=报告与项目不匹配
no.problems.content.not.matched.open.in.ide.report.description=Qodana Cloud 项目 {0} 中存在 {1,choice,|1\#1 个问题|2\#{1} 个问题}的报告与 {2} 不一致
no.problems.content.show.marker.description=在项目 {1} 中找不到问题 {0}
no.problems.content.show.marker.title=项目中不存在问题
notification.action.about.qodana.sarif.format=关于 Qodana SARIF 格式…
notification.action.link.default.cloud.project=链接项目以查看结果
notification.action.login.default.cloud.project=登录以查看 Qodana 结果
notification.action.open.file.with.qodana.report.revision=使用 Qodana 报告修订打开文件
notification.content.cant.find.file=找不到 Qodana 问题的文件 ''{0}''
notification.content.cant.find.file.in.revision=在修订 {1} 中找不到 {0}
notification.content.cant.parse.report.from.file=无法解析文件 ''{0}'' 中的 Qodana 报告，\n错误\: ''{1}''
notification.content.cant.parse.report.from.file.w.id=无法解析文件 ''{1}'' 中的 Qodana 报告 ''{0}''，\n错误\: ''{2}''
notification.content.cloud.failed.to.authorize.other.error=无法授权给 {0}。错误消息\: {1}
notification.content.cloud.incorrect.oauth.url=无法授权给 {0}。提供的 oauth URL ''{1}'' 不正确
notification.content.failed.validation.empty.runs={0} 中的 ''runs'' 字段为空
notification.content.failed.validation.no.results=第一个 ''run'' 在 {0} 中没有 ''results'' 字段
notification.content.failed.validation.no.runs={0} 中没有 ''runs'' 字段
notification.content.failed.validation.no.tool=第一个 ''run'' 在 {0} 中没有 ''tool'' 字段
notification.content.failed.validation.report.from.file=来自文件 ''{0}'' 的 Qodana 报告
notification.content.failed.validation.report.from.file.with.id=来自文件 ''{1}'' 的 Qodana 报告 ''{0}''
notification.content.problem.not.present.in.file=在文件 ''{1}'' 中找不到问题 ''{0}''
notification.content.report.file.does.not.exist=Qodana 报告的文件 ''{0}'' 不存在
notification.content.report.file.does.not.exist.w.id=Qodana 报告 ''{1}'' 的文件 ''{0}'' 不存在
notification.group.qodana=Qodana
notification.group.qodana.problems=Qodana 问题标签页
notification.group.qodana.tips=Qodana 提示
notification.link.default.cloud.project=默认的 Qodana Cloud 项目在 intellij.yaml 中指定。\n将默认项目与 Qodana Cloud 链接以查看检查结果。
notification.link.project.to.cloud.action.text=链接
notification.link.project.to.cloud.text=在 IDE 中接收来自 {0} 的最新分析结果
notification.link.project.to.cloud.title=将 {0} 链接到 Qodana Cloud
notification.login.default.cloud.project=默认的 Qodana Cloud 项目在 intellij.yaml 中指定。\n登录 Qodana Cloud 查看检查结果。
notification.run.in.ide.stopped=IDE 中的 Qodana 运行已停止
notification.title.can.t.obtain.user.license=无法获取用户许可证
notification.title.cannot.navigate.to.problem=无法导航到问题
notification.title.cant.parse.report=无法解析报告
notification.title.cloud.artifact.failed.load=无法加载 Qodana Cloud 报告的工件 ''{0}''
notification.title.cloud.failed.to.authorize=无法授权
notification.title.cloud.project.failed.load=无法加载 Qodana Cloud 项目
notification.title.cloud.project.name.failed.load=无法加载 Qodana Cloud 项目名称
notification.title.cloud.report.failed.load=无法加载 Qodana Cloud 报告
notification.title.cloud.report.loading.list=正在搜索与当前分支匹配的 Qodana Cloud 报告…
notification.title.failed.to.obtain.user.info=无法获取用户信息
notification.title.failed.to.open.file.with.report.revision=无法使用 Qodana 报告修订打开文件
notification.title.failed.uploading.results.to.qodana.cloud=无法将结果上传到 Qodana Cloud
notification.title.qodana.cloud=Qodana Cloud
offline.inspections.library.urls.were.not.resolved=未解析模块 ''{2}'' 中库 ''{1}'' 的根 {0}
offline.inspections.library.was.not.resolved=请配置库''{0}''用于模块''{1}''
open.report.dialog.ok.button.text=打开报告
open.report.dialog.title=打开 Qodana 分析报告
problems.toolwindow.banner.add.qodana.to.ci=将 Qodana 添加到 CI/CD 管道
problems.toolwindow.banner.run.cloud.openWebUi.text=打开 Qodana Cloud
problems.toolwindow.banner.run.cloud.text=本地分析已完成。结果可在 Qodana Cloud 中获取。
problems.toolwindow.banner.run.local.run.openWebUi.text=在浏览器中打开 Qodana 报告
problems.toolwindow.banner.run.local.text=本地分析已完成。Qodana 结果可在浏览器中获取。
problems.toolwindow.link.action.linked=已与 Cloud 链接
problems.toolwindow.link.action.not.linked=将项目与 Cloud 链接
problems.toolwindow.login.action.authorized=已登录 Qodana
problems.toolwindow.login.action.authorizing=正在登录 Qodana
problems.toolwindow.qodana.panel.name=Qodana
problems.toolwindow.qodana.panel.no.loaded.qodana.report=Qodana 报告未加载
problems.toolwindow.qodana.panel.open.qodana.report=打开
problems.toolwindow.qodana.panel.or=或者
product.name.qodana=Qodana
profileName.deprecated.option.description=已弃用\: 请改用 --profile-name
profileName.option.description=要在应用程序运行中使用的配置文件名称。配置文件要么在项目中配置，要么是某个嵌入式配置文件('empty'、'qodana.starter'、'qodana.recommended')。
profilePath.deprecated.option.description=已弃用\: 请改用 --profile-path
profilePath.option.description=要在项目中配置的运行中使用的配置文件路径
progress.message.qodana.jdk.configuring=正在从 qodana.yaml 配置项目 JDK
progress.message.qodana.js.npm.configuring=正在配置 JS 项目…
progress.message.qodana.php.composer.configuring=正在使用 Composer 配置 PHP 项目…
progress.title.apply.jdk.configured.by.qodana.to.gradle.settings=将 Qodana 配置的 JDK 应用于 Gradle 设置
progress.title.qodana.collecting.problems=正在收集问题...
progress.title.qodana.computing.modules=正在计算模块…
progress.title.qodana.computing.problems=正在收集有问题的文件…
progress.title.qodana.highlight.calc=正在为 ''{0}'' 计算高亮显示
progress.title.qodana.loading.coverage.data.from.cloud=正在从 Qodana Cloud 加载覆盖率数据…
progress.title.qodana.loading.report=正在加载 Qodana 报告…
progress.title.qodana.loading.report.data.from.cloud=正在从 Qodana Cloud 加载数据…
progress.title.qodana.reading.report=正在读取 Qodana 报告…
progress.title.qodana.retry.loading.report=正在重新尝试加载 Qodana 报告…
property.getter.coverage.below.threshold=属性 getter <code>{0}</code> 覆盖率低于阈值 {1}%
property.setter.coverage.below.threshold=属性 setter <code>{0}</code> 覆盖率低于阈值 {1}%
psi.viewer.kotlin.api.in.analyze.block=分析块中可用的 Kotlin API
qdcloud.server.error=状态代码\: {0} {1}
qodana.TreeNode.excluded=已排除
qodana.add.to.ci.add.ci.file=添加 {0} 文件
qodana.add.to.ci.azure.pipelines=Azure Pipelines
qodana.add.to.ci.azure.pipelines.about=<a href\='https\://www.jetbrains.com/help/qodana/qodana-azure-pipelines.html'>关于 Qodana Azure Pipelines 集成</a>
qodana.add.to.ci.azure.pipelines.description.new=要在 <a href\='https\://learn.microsoft.com/en-us/azure/devops/pipelines/?view\=azure-devops'>Azure Pipelines</a> 中运行 Qodana 分析，请将以下 'azure-pipelines.yml' 文件添加到项目中
qodana.add.to.ci.azure.pipelines.description.patch=要在 <a href\='https\://learn.microsoft.com/en-us/azure/devops/pipelines/?view\=azure-devops'>Azure Pipelines</a> 中运行 Qodana 分析，请将以下配置添加到 'azure-pipelines.yml' 文件中
qodana.add.to.ci.azure.pipelines.description.physical=要在 <a href\='https\://learn.microsoft.com/en-us/azure/devops/pipelines/?view\=azure-devops'>Azure Pipelines</a> 中运行 Qodana 分析，请使用 'azure-pipelines.yml' 文件的以下配置
qodana.add.to.ci.bitbucket=Bitbucket Cloud
qodana.add.to.ci.bitbucket.about=<a href\='https\://www.jetbrains.com/help/qodana/bitbucket.html'>关于 Qodana Bitbucket Cloud 集成</a>
qodana.add.to.ci.bitbucket.description.new=要在 <a href\='https\://support.atlassian.com/bitbucket-cloud/docs/get-started-with-bitbucket-pipelines/'>Bitbucket Cloud</a> 中运行 Qodana 分析，请将以下 'bitbucket-pipelines.yml' 文件添加到项目中
qodana.add.to.ci.bitbucket.description.patch=要在 <a href\='https\://support.atlassian.com/bitbucket-cloud/docs/get-started-with-bitbucket-pipelines/'>Bitbucket Cloud</a> 中运行 Qodana 分析，请将以下配置添加到 'bitbucket-pipelines.yml' 文件中
qodana.add.to.ci.bitbucket.description.physical=要在 <a href\='https\://support.atlassian.com/bitbucket-cloud/docs/get-started-with-bitbucket-pipelines/'>Bitbucket Cloud</a> 中运行 Qodana 分析，请使用 'bitbucket-pipelines.yml' 文件的以下配置
qodana.add.to.ci.circleci=CircleCI
qodana.add.to.ci.circleci.about=<a href\='https\://www.jetbrains.com/help/qodana/circleci.html'>关于 Qodana CircleCI 集成</a>
qodana.add.to.ci.circleci.description.new=要在 <a href\='https\://circleci.com/docs/concepts/\#pipelines'>CircleCI</a> 中运行 Qodana 分析，请将以下 '.circleci/config.yml' 文件添加到项目中
qodana.add.to.ci.circleci.description.patch=要在 <a href\='https\://circleci.com/docs/concepts/\#pipelines'>CircleCI</a> 中运行 Qodana 分析，请将以下配置添加到 '.circleci/config.yml' 文件中
qodana.add.to.ci.circleci.description.physical=要在 <a href\='https\://circleci.com/docs/concepts/\#pipelines'>CircleCI</a> 中运行 Qodana 分析，请使用 '.circleci/config.yml' 文件的以下配置
qodana.add.to.ci.cloud.token.is.required.banner.azure.text=<html><body>将结果上传到 Qodana Cloud<br>在 Azure Pipelines 中添加 'QODANA_TOKEN' 变量</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.bitbucket.text=<html><body>将结果上传到 Qodana Cloud<br>在 Bitbucket Cloud 中添加 'QODANA_TOKEN' 变量</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.circleci.text=<html><body>将结果上传到 Qodana Cloud<br>在 CircleCI 中添加 'QODANA_TOKEN' 变量</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.get.token=获取令牌
qodana.add.to.ci.cloud.token.is.required.banner.github.text=<html><body>将结果上传到 Qodana Cloud<br>在 GitHub 中添加 'QODANA_TOKEN' 密钥</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.gitlab.text=<html><body>To upload results to Qodana Cloud<br>Add the 'QODANA_TOKEN' variable in GitLab</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.how.add.token=如何添加令牌
qodana.add.to.ci.cloud.token.is.required.banner.jenkins.text=<html><body>将结果上传到 Qodana Cloud<br>在 Jenkins 中添加 'qodana_token' 形参</html></body>
qodana.add.to.ci.cloud.token.is.required.banner.teamcity.text=<html><body>将结果上传到 Qodana Cloud<br>在 TeamCity 中设置 Cloud 令牌值</html></body>
qodana.add.to.ci.edit.ci.file=编辑 {0} 文件
qodana.add.to.ci.finish.notification.azure.pipelines.title=Qodana Azure Pipelines 配置已添加
qodana.add.to.ci.finish.notification.bitbucket.title=Qodana Bitbucket Cloud 配置已添加
qodana.add.to.ci.finish.notification.circleci.title=Qodana CircleCI 配置已添加
qodana.add.to.ci.finish.notification.github.title=Qodana GitHub 配置已添加
qodana.add.to.ci.finish.notification.gitlab.title=Qodana GitLab 配置已添加
qodana.add.to.ci.finish.notification.jenkins.title=Qodana Jenkins 配置已添加
qodana.add.to.ci.finish.notification.text=当更改被推送到远程时，Qodana 将监控代码质量
qodana.add.to.ci.github.actions=GitHub Actions
qodana.add.to.ci.github.actions.about=<a href\='https\://www.jetbrains.com/help/qodana/github.html'>关于 Qodana GitHub 操作</a>
qodana.add.to.ci.github.actions.add.workflow.file=添加 GitHub Actions 工作流文件
qodana.add.to.ci.github.actions.edit.workflow.file=编辑 GitHub Actions 工作流文件
qodana.add.to.ci.github.actions.workflow.file.description.new=要在 <a href\='https\://github.com/features/actions'>GitHub Actions</a> 中运行 Qodana 分析，请将以下工作流文件添加到项目中
qodana.add.to.ci.github.actions.workflow.file.description.patch=要在 <a href\='https\://github.com/features/actions'>GitHub Actions</a> 中运行 Qodana 分析，请将以下配置添加到工作流文件中
qodana.add.to.ci.github.actions.workflow.file.description.physical=要在 <a href\='https\://github.com/features/actions'>GitHub Actions</a> 中运行 Qodana 分析，请使用以下工作流文件
qodana.add.to.ci.github.actions.workflow.file.location=工作流文件位置
qodana.add.to.ci.github.actions.workflow.location=位置\:
qodana.add.to.ci.gitlab.ci=GitLab CI/CD
qodana.add.to.ci.gitlab.ci.about=<a href\='https\://www.jetbrains.com/help/qodana/gitlab.html'>关于 Qodana GitLab 集成</a>
qodana.add.to.ci.gitlab.ci.description.new=要在 <a href\='https\://docs.gitlab.com/ee/ci/'>GitLab CI/CD</a> 中运行 Qodana 分析，请将以下 '.gitlab-ci.yml' 文件添加到项目中
qodana.add.to.ci.gitlab.ci.description.patch=要在 <a href\='https\://docs.gitlab.com/ee/ci/'>GitLab CI/CD</a> 中运行 Qodana 分析，请将以下配置添加到 '.gitlab-ci.yml' 文件中
qodana.add.to.ci.gitlab.ci.description.physical=要在 <a href\='https\://docs.gitlab.com/ee/ci/'>GitLab CI/CD</a> 中运行 Qodana 分析，请使用 '.gitlab-ci.yml' 文件的以下配置
qodana.add.to.ci.jenkins=Jenkins
qodana.add.to.ci.jenkins.about=<a href\='https\://www.jetbrains.com/help/qodana/jenkins.html'>关于 Qodana Jenkins 集成</a>
qodana.add.to.ci.jenkins.description.new=要在 <a href\='https\://www.jenkins.io/doc/book/'>Jenkins</a> 中运行 Qodana 分析，请将以下 'Jenkinsfile' 文件添加到项目中
qodana.add.to.ci.jenkins.description.patch=要在 <a href\='https\://www.jenkins.io/doc/book/'>Jenkins</a> 中运行 Qodana 分析，请将以下配置添加到 'Jenkinsfile' 文件中
qodana.add.to.ci.jenkins.description.physical=要在 <a href\='https\://www.jenkins.io/doc/book/'>Jenkins</a> 中运行 Qodana 分析，请使用 'Jenkinsfile' 文件的以下配置
qodana.add.to.ci.teamcity=TeamCity
qodana.add.to.ci.teamcity.snippet=TeamCity 集成
qodana.add.to.ci.teamcity.text=TeamCity 具有内置的 Qodana 集成。<a href\='https\://www.jetbrains.com/help/qodana/teamcity.html'>如何在 TeamCity UI 中设置 Qodana</a>
qodana.add.to.ci.teamcity.tip=或者，可以使用以下 TeamCity DSL 将 Qodana 添加到项目中。<br>您可以将其用于默认设置，或在您的项目中重用部分。<br><a href\='https\://www.jetbrains.com/help/teamcity/kotlin-dsl.html'>如何使用 TeamCity Kotlin DSL</a>
qodana.add.to.ci.title=将 Qodana 添加到 CI 管道
qodana.application.startup=正在启动 {0}… 完成。
qodana.cloud.available.report.text=Qodana Cloud 报告可用
qodana.cloud.failed.loading.token=无法加载 Qodana Cloud 令牌
qodana.cloud.new.report.action.load=加载报告
qodana.cloud.new.report.appeared.text=有可用的新 Qodana Cloud 报告
qodana.cloud.new.report.auto.load=始终加载最新报告
qodana.cloud.no.report.found=在 Qodana Cloud 中找不到 SARIF 报告
qodana.cloud.no.runs.found=在链接的项目中找不到任何运行
qodana.cloud.offline=无法连接到 Qodana Cloud
qodana.cloud.report.from.commit.available=与当前分支匹配的提交 {0} 的 Qodana Cloud 报告可用
qodana.cloud.url=https\://qodana.cloud/
qodana.create.cloud.project.dialog.create.in.team=选择团队\:
qodana.create.cloud.project.dialog.errors.creation.failed=项目创建失败。{0}
qodana.create.cloud.project.dialog.errors.failed.loading.teams=加载团队失败。{0}
qodana.create.cloud.project.dialog.errors.no.teams=在 Qodana Cloud 中找不到团队
qodana.create.cloud.project.dialog.errors.not.logged.in=未登录 Qodana Cloud
qodana.create.cloud.project.dialog.errors.project.name.empty=项目名称不能为空
qodana.create.cloud.project.dialog.errors.project.name.invalid=项目名称只能包含拉丁字母、数字、点、连字符和空格
qodana.create.cloud.project.dialog.ok.button=创建
qodana.create.cloud.project.dialog.project.name=项目名称\:
qodana.create.cloud.project.dialog.title=在 Qodana Cloud 中创建项目
qodana.documentation.ci.url=https\://www.jetbrains.com/help/qodana/ci.html
qodana.documentation.ide.plugin.url=https\://www.jetbrains.com/help/qodana/qodana-ide-plugin.html\#Open+a+Qodana+report+in+the+IDE
qodana.documentation.website.url=https\://www.jetbrains.com/help/qodana/
qodana.explore.promo.button=探索 Qodana
qodana.failed.parse.qodana.yaml.no.details=无法解析 qodana.yaml
qodana.failed.parse.qodana.yaml.with.details=无法解析 qodana.yaml\: {0}，位于 {1}，{2}
qodana.get.report.help.button=如何获得 Qodana 报告?
qodana.github.promo.notification.add.workflow.button.text=添加工作流
qodana.github.promo.notification.bubble.qodana.github.workflow.not.added.default.text=由于内部错误，未添加工作流文件
qodana.github.promo.notification.bubble.qodana.github.workflow.not.added.file.exists.text=已存在名为 {0} 的工作流文件
qodana.github.promo.notification.bubble.qodana.github.workflow.not.added.title=未添加 Qodana 工作流
qodana.github.promo.notification.dismiss.button.text=关闭
qodana.github.promo.notification.explore.button.text=探索
qodana.github.promo.notification.text=使用 Qodana 在 GitHub 工作流中自动化代码分析
qodana.intentions.family.name=Qodana 意图
qodana.intentions.ignore.text=忽略 Qodana 高亮显示
qodana.intentions.stop.showing.report=关闭报告
qodana.link.project.action=将项目与 Cloud 链接
qodana.link.project.dialog.create.project=创建项目
qodana.link.project.dialog.error=无法加载用户数据，{0}
qodana.link.project.dialog.linked=链接到 {0}
qodana.link.project.dialog.loading=正在加载项目…
qodana.link.project.dialog.no.projects.found=<a href\=''{0}''>Qodana Cloud</a> 中没有项目。
qodana.link.project.dialog.ok.button.text=应用
qodana.link.project.dialog.project.id=项目 {0}
qodana.link.project.dialog.project.no.branch=无分支
qodana.link.project.dialog.project.no.runs=无运行
qodana.link.project.dialog.project.problems={1,choice,0\#|1\#在基线中{1} }{0,choice,0\#0 个问题|1\#1 个问题|2\#{0} 个问题}
qodana.link.project.dialog.team.description={0,choice,0\#0 个项目|1\#1 个项目|2\#{0} 个项目} {1,choice,0\#0 个成员|1\#1 个成员|2\#{1} 个成员}
qodana.link.project.dialog.team.id=团队 {0}
qodana.link.project.dialog.title=将项目与 Qodana Cloud 链接
qodana.link.project.dialog.unlink.button=取消链接
qodana.link.project.last.run={0}运行
qodana.linked.project.highlight=从 Cloud 打开 ''{0}'' 报告
qodana.linked.project.highlighted=Cloud 项目 ''{0}''
qodana.linked.project.loading.data=正在加载 Cloud 数据…
qodana.open.in.ide.log.in.dialog.authorizing=正在授权…
qodana.open.in.ide.log.in.dialog.continue.button=继续
qodana.open.in.ide.log.in.dialog.log.in.description=<center>登录 Qodana Cloud 查看<br>来自 {0} 的问题</center>
qodana.open.in.ide.log.in.dialog.logged.in.another.account=您已登录到其他服务器
qodana.open.in.ide.log.in.dialog.logged.in.another.account.description=<center>您当前以 {0} 身份登录了其他 Qodana 服务器。<br>请切换帐户以查看来自 {1} 的问题</center>
qodana.open.in.ide.log.in.dialog.logged.in.description=<center>以 {0} 身份登录<br>继续查看来自 {1} 的问题</center>
qodana.open.in.ide.log.in.dialog.logged.it=已登录 Qodana
qodana.open.in.ide.log.in.dialog.title=在 {0} 中打开
qodana.open.settings.log.in=登录 Qodana…
qodana.open.settings.other=Qodana Cloud…
qodana.panel.action.link=与 Qodana Cloud 链接
qodana.panel.action.log.in=登录 Qodana…
qodana.panel.action.start=启动 Qodana
qodana.panel.authorized.linked.ci.present.label=准备就绪\! 正在等待来自 CI 管道的数据
qodana.panel.authorized.linked.ci.present.text=<html><body>如果此过程花费的时间太长，<br>您的 CI 管道的设置可能存在问题。如需了解更多信息，请参阅我们的 <a href\='https\://www.jetbrains.com/help/qodana/ci.html'>CI 集成<br>指南</a>或<a href\='mailto\:qodana-support@jetbrains.com'>联系支持团队</a>。</body></html>
qodana.panel.authorized.linked.no.ci.label.with.link=项目 <a href\=''{0}''>{1}</a> 已成功链接
qodana.panel.authorized.linked.no.ci.text=<html><body>要完成设置并开始直接在 IDE 中接收报告<br>在 CI 管道中配置 Qodana 或在本地运行。</body></html>
qodana.panel.authorized.linked.with.report.text=<html><body>加载<a href\=''{0}''>报告</a>以查看 Qodana 发现的问题。</body></html>
qodana.panel.authorized.not.linked.no.ci.label=项目未链接到 Qodana Cloud
qodana.panel.authorized.not.linked.no.ci.text=<html><body>要开始接收报告，请将您的项目链接到 <a href\=''{0}''>Qodana Cloud</a>。</body></html>
qodana.panel.authorizing=正在授权…
qodana.panel.ci.location.tooltip.text=在 ''{1}'' 中检测到 Qodana {0}。
qodana.panel.documentation.action=文档
qodana.panel.explore=探索
qodana.panel.learn.more=了解详情
qodana.panel.link.project.action=将项目与云链接
qodana.panel.link.text=<html><center>将项目与 Qodana Cloud 链接<br>以直接在 IDE 中查看服务器端分析结果</center></html>
qodana.panel.loading.results=正在加载分析结果…
qodana.panel.local.run.disabled.androidstudio=Android Studio 目前不支持<br>本地运行。
qodana.panel.local.run.disabled.clion=CLion 目前不支持<br>本地运行。
qodana.panel.login.action=登录以使用所有功能
qodana.panel.logout.action=<html>退出登录<font color\=''gray''>({0})</font></html>
qodana.panel.more.actions=更多操作
qodana.panel.not.authorized.ci.present.label=似乎您的 CI 管道中已有 Qodana
qodana.panel.not.authorized.ci.present.text=<html><body>要开始在 IDE 中接收报告，请登录 <a href\='https\://qodana.cloud/'>Qodana Cloud</a> 并链接<br>您的项目。</body></html>
qodana.panel.not.authorized.no.ci.label=使用 Qodana 提升代码质量
qodana.panel.not.authorized.no.ci.text=<html><body><ul style\="margin-top\: 0; margin-bottom\: 0;"> <li style\="margin-bottom\: 7;">识别代码问题、错误和漏洞</li> <li style\="margin-bottom\: 7;">在您的 CI 道中运行代码分析</li> <li>直接在您的 IDE 中修复问题</li></ul></body></html>
qodana.panel.open.report.action=打开报告
qodana.panel.promo.text=<html><center>适合您最喜爱的 CI 工具的代码质量平台<br>与 JetBrains IDE 集成的智能静态代码分析</center></html>
qodana.panel.run.locally.action=在本地运行
qodana.panel.running=正在分析项目…
qodana.panel.setup.ci.action=CI 管道中的设置
qodana.panel.setup.ci.disabled.clion=目前，CLion 不支持<br>设置 CI。
qodana.panel.try.locally.action=本地尝试
qodana.panel.unlink.project.action=<html>取消链接项目<font color\=''gray''>({0})</font></html>
qodana.preview.url=https\://www.jetbrains.com/qodana/\#\:~\:text\=See%20how%20Qodana%20works
qodana.problem.baseline=基线
qodana.problem.count={0,choice,0\#无问题|1\#1 个问题|2\#{0} 个问题}
qodana.problem.default.message=问题
qodana.problem.description.with.level=[{0}]{1,choice,0\#|1\# Qodana\:} {2}
qodana.problem.description.without.level={0,choice,0\#|1\# Qodana\:} {1}
qodana.problem.fixed=已修正
qodana.problem.navigation.next=下一个问题
qodana.problem.navigation.previous=上一个问题
qodana.problem.not.present=找不到
qodana.promo.banner.watch.overview=查看 Qodana 概述
qodana.promo.text.full=适用于您最喜欢的 CI 工具的代码质量平台。<br/>评估您拥有、外包或购买的代码的完整性。使用 JetBrains IDE 提供的所有智能功能丰富您的 CI/CD 管道。
qodana.report.local.analysis=本地分析
qodana.run.action=运行 Qodana
qodana.run.action.only.cloud=运行 Qodana 并将结果发送到 Cloud
qodana.run.wizard.finish.button=运行
qodana.run.wizard.finish.ci.button=添加
qodana.run.wizard.finish.ci.button.ok=确定
qodana.run.wizard.get.token=获取令牌
qodana.run.wizard.next.button=下一步
qodana.run.wizard.previous.button=上一步
qodana.run.wizard.send.results.to.cloud=将结果发送到 Qodana Cloud
qodana.run.wizard.step.add.qodana.yam.about=<a href\='https\://www.jetbrains.com/help/qodana/qodana-yaml.html'>关于 qodana.yaml 配置文件</a>
qodana.run.wizard.step.add.qodana.yam.title=添加 qodana.yaml
qodana.run.wizard.step.add.qodana.yaml.save=将 qodana.yaml 保存到项目根中
qodana.run.wizard.step.edit.qodana.yam.title=编辑 qodana.yaml
qodana.run.wizard.step.initial.ci.scenario.button=添加到 CI 管道
qodana.run.wizard.step.initial.ci.scenario.line1=在 CI/CD 工具中运行代码质量分析
qodana.run.wizard.step.initial.ci.scenario.line2=并将结果发送到 <a href\='https\://qodana.cloud/'>Qodana Cloud</a>
qodana.run.wizard.step.initial.ci.scenario.title=添加到 CI 管道
qodana.run.wizard.step.initial.local.scenario.button=本地尝试
qodana.run.wizard.step.initial.local.scenario.line1=运行代码质量分析
qodana.run.wizard.step.initial.local.scenario.line2=并预览 Qodana 报告
qodana.run.wizard.step.initial.local.scenario.title=本地尝试
qodana.run.wizard.title=运行 Qodana
qodana.run.wizard.uploading.data=正在将分析结果上传到 Qodana Cloud
qodana.running.progress.text=正在运行 Qodana…
qodana.settings.pane.link.description=IDE 会提取与当前分支(HEAD)最匹配的报告，如果找不到匹配的报告，则加载最新报告.
qodana.settings.panel.auto.load.linked.report=始终加载最相关的 Qodana 报告
qodana.settings.panel.auto.load.linked.report.description=IDE 将在后台自动加载新的 Qodana 报告
qodana.settings.panel.cancel.button=取消
qodana.settings.panel.check.license=如果用时过长，请<a>手动刷新</a>
qodana.settings.panel.connecting.label=正在连接到 {0}
qodana.settings.panel.error=无法加载用户数据，{0}。
qodana.settings.panel.fetching.user.data=正在提取数据
qodana.settings.panel.link.description=将项目与 Qodana Cloud 链接即可在 IDE 中查看服务器端分析结果
qodana.settings.panel.link.only.related.projects=仅相关项目
qodana.settings.panel.log.in.button=登录
qodana.settings.panel.log.in.label=登录 Qodana
qodana.settings.panel.log.out.button=退出登录
qodana.settings.panel.offline=无法连接到 Qodana Cloud。
qodana.settings.panel.organization.url=Qodana URL\:
qodana.settings.panel.organization.url.another.error=无法解析 URL
qodana.settings.panel.organization.url.template=例如 mycompany.qodana.com
qodana.settings.panel.refresh=刷新
qodana.unlink.project.action=取消项目与 Cloud 的链接
qodana.web.ui.loading=正在加载 Qodana UI
qodana.web.ui.write.baseline.notification.text=基线文件 {0} 存储在项目根中
qodana.web.ui.write.baseline.notification.title={0,choice,0\#已更新|1\#已保存}来自 Qodana UI 的基线
qodana.web.ui.write.yaml.notification.action.text=在编辑器中打开 {0}
qodana.web.ui.write.yaml.notification.title={0,choice,0\#已更新|1\#已保存}来自 Qodana UI 的 {1}
qodana.website.url=https\://www.jetbrains.com/qodana/
qodana.yaml.configuration=Qodana 配置
qodana.yaml.exclude.scope.name=qodana.yaml.exclude.{0}
qodana.yaml.include.scope.name.default.severity=qodana.yaml.include.{0}
qodana.yaml.include.scope.name.w.severity=qodana.yaml.{0}.{1}
qodana.yaml.inspection.hints.provider.name=qodana.yaml 中的检查描述
qodana.yaml.intention.category=Qodana 配置
qodana.yaml.intention.family=Qodana 配置
qodana.yaml.intention.show.inspection=在检查配置文件中显示检查
release.community.license.message=使用此 linter，即表示您同意\n- JetBrains 隐私政策(https\://jb.gg/jetbrains-privacy-policy) \n- Qodana 社区 Linter 协议(https\://jb.gg/qodana-community-linters)
release.license.message=使用此 linter，即表示您同意\n- JetBrains 隐私政策(https\://jb.gg/jetbrains-privacy-policy)\n- Qodana Linter 协议(https\://www.jetbrains.com/legal/docs/agreements/qodana/license/)
run.promo.inspections.option.description=设置为 'true'，使应用程序运行由 'promo' 配置文件配置的检查；否则设置为 'false'。默认情况下，如果使用 'default' 配置文件执行应用程序，则启用 'promo' 运行，否则禁用。
sanity.suspend.inspection.notification.message=由于问题数量较多，健全性{0,choice,1\#检查|2\#检查} {1} 已被挂起。
script.migrate.classes.custom.migration=临时迁移
script.migrate.classes.found.usages=在 {1} 个文件中找到 {0} 个替换候选项。正在开始替换…
script.migrate.classes.modified.migration={0}(已修改)
script.migrate.classes.no.usages=找不到要替换的候选项
script.option.description=应用程序将使用特定脚本作为 Qodana 执行的方案。
separator.Qodana.ProblemsView.Options.GroupBy=分组依据
source.directory.option.description=要分析的项目目录的绝对路径。默认情况下，将分析整个项目。
stubProfile.option.description=已弃用\: 不起任何作用
teamcity.changes.file.is.absent=缺少更改为 ''{0}'' 的文件
third.party.plugins.privacy.note.text=安装插件类似于安装和运行应用程序。\n这些插件会安装在 Qodana 中，因为您在 qodana.yaml 文件中显式地列出了它们。\n插件会获得与 IDE 进程本身相同的权限。仅当您信任插件时才继续。\n还建议您查看插件供应商的文档，了解该供应商如何处理您的个人数据的详细信息。\nJetBrains 不对任何第三方插件及其供应商的任何行为负责，包括对您个人数据的处理。
third.party.plugins.title=以下插件并非来自 JetBrains\:
usage.help.description=inspect.sh qodana [OPTIONS] PROJECT_PATH RESULT_PATH\n在 PROJECT_PATH 目录上运行检查。\n结果和日志存储在 RESULT_PATH 中。\n选项\:
wrong.teamcity.changes.file.line.format=意外的行格式 ''{0}''。正确格式为 ''%path%\:ADDED/CHANGED/REMOVED\:%hash%''
