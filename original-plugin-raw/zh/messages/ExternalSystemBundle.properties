# Import.
module.type.description={0} 模块用于开发具有由 <b>{0}</b> 管理的依赖关系的<b>JVM-based</b>应用程序。
orphan.modules.dialog.title=孤立模块
orphan.modules.dialog.text=<html>以下模块已从项目中移除。<br/>选择您需要恢复的模块。<html>
orphan.modules.text=下面的 IDE 模块已被 {0} 项目重新加载移除: <p>{1}</p><br/>您可以<a href="#">打开对话框</a>以选择需要恢复的模块。
local.history.remove.orphan.modules=项目重新加载后移除孤立模块

unlinked.project.notification.title=找到 {0} 构建脚本
unlinked.project.notification.load.action=加载 {0} 项目
unlinked.project.notification.skip.action=跳过
unlinked.project.notification.help.text=IDE 可以从 {0} 构建脚本导入项目信息(例如源和依赖项)。<br><br>如果不确定或这不是 {0} 项目，请按“跳过”。<br>您可以稍后从 {0} 构建脚本的上下文菜单导入 {0} 项目。

untrusted.project.notification.execution.error={0} 项目不受信任，因此无法执行其任务。

# Settings.
settings.build.tools.display.name=构建工具
settings.build.tools.auto.reload.hit=自动重新加载项目
settings.build.tools.auto.reload.radio.button.group.title=在构建脚本发生任何变更后重新加载项目:
settings.build.tools.auto.reload.radio.button.all.label=任何变更
settings.build.tools.auto.reload.radio.button.selective.label=外部变更
settings.build.tools.auto.reload.radio.button.selective.comment=IDE 以外或来自版本控制的变更。

setting.type.location.deduced=推导出 {0} 位置
setting.type.location.unknown={0} 位置未知
setting.type.location.explicit.correct={0} 位置已定义
setting.type.location.explicit.incorrect={0} 位置不正确
settings.label.select.project={0}项目:
# suppress inspection "UnusedProperty": used by 3-party plugins
settings.label.project.format=项目格式：

settings.title.projects.settings={0} 项目
settings.title.system.settings=常规设置

# Progress.
progress.import.text=正在构建 ''{0}'' {1} 项目信息
progress.refresh.text=正在导入 ''{0}'' {1} 项目
progress.update.text={0}：{1}
progress.update.refresh=导入 {0}
progress.cancel.failed=取消失败

# Errors.
error.project.import.error.title=项目重新加载失败
error.project.does.not.exist=未找到 {0} 脚本文件 ''{1}''
error.project.already.registered=该项目已经注册
error.resolve.with.reason={0}\n\n请参阅 IDE 日志以获取更多详细信息(帮助|显示日志)
error.resolve.already.running=该项目当前正在运行另一个“重新加载项目”任务:  {0}

# Tool window
external.system.view.nodes.run_configurations.name=运行配置
external.system.view.nodes.dependency_reference_node_tooltip=依赖项已省略(之前已列出)。 <br/>按 Enter 或双击鼠标左键导航至依赖项。

# Action.
action.refresh.all.projects.text=重新加载所有 {0} 项目
action.refresh.all.projects.description=强制重新加载所有链接的 {0} 项目
action.refresh.project.text=重新加载 {0} 项目
action.refresh.project.description=强制重新加载选定的链接 {0} 项目
action.detach.external.project.text=取消链接 {0} 项目
action.detach.external.project.description=取消链接所选项目
action.detach.external.confirmation.prompt={0} {1, choice, 1#模块|2#模块} {2} 将取消链接。\n将不会删除文件。
action.ignore.external.projects.text=忽略 {0} {1,choice,1#项目|2#项目}
action.ignore.external.projects.description=忽略所选 {0} {1,choice,1#项目|2#项目}
action.unignore.external.projects.text=取消忽略 {0} {1,choice,1#项目|2#项目}
action.unignore.external.projects.description=取消忽略所选 {0} {1,choice,1#项目|2#项目}
action.open.config.text=打开 {0} 配置
action.open.config.description=在编辑器中打开 {0} 项目文件

action.open.settings.text={0}设置…
action.open.settings.description=编辑当前项目的 {0} 设置

# Notification
notification.project.refresh.fail.title={0} ''{1}'' 项目重新加载失败
notification.messages.project.sync.tab.name={0} 同步
notification.messages.task.execution.tab.name={0} 任务

# Tasks
external.system.keymap.group=外部构建系统
external.system.task.before.sync=同步前
external.system.task.after.sync=同步后
external.system.task.before.compile=构建之前
external.system.task.after.compile=构建之后
external.system.task.before.rebuild=重新构建之前
external.system.task.after.rebuild=重新构建之后
external.system.task.before.run=运行前
## Tasks UI
external.system.task.activation.title=任务激活
external.system.task.activation.description=编辑 {0} 任务激活设置

# Execution
run.configuration.description={0} 构建
run.configuration.tooltip.choose.registered.project=选择一个已注册的 {0} 项目
run.configuration.title.choose.registered.project=选择 {0} 项目
run.configuration.settings.label.project={0} 项目：
run.configuration.settings.label.tasks=任务：
run.configuration.settings.label.vmoptions=VM 选项:
run.configuration.settings.label.arguments=实参:
run.invalid.jvm.agent.configuration=无效的 JVM 代理配置使用 ''{0}''

external.system.java.in.resolving=正在解析...
external.system.java.internal.jre=使用内部 JRE
external.system.java.project.jdk=使用项目 SDK
external.system.java.home.env=使用 JAVA_HOME
external.system.project_jdk.not_specified=未指定项目的 JDK。<a href=''{0}''>打开项目 SDK 配置</a>
external.system.java.home.undefined=未定义 JAVA_HOME 环境变量
external.system.java.home.invalid=JAVA_HOME 环境变量未指向有效的 JDK 或 JRE({0})
external.system.platform.sdk.invalid=平台 SDK 未指向有效的 JDK({0})

external.system.sdk.hint.path=路径: {0}
external.system.sdk.hint.path.and.version={0}，路径: {1}

tasks.select.task.title=选择 {0} 任务
tasks.edit.task.title=编辑 {0} 任务
tasks.before.run.empty=运行 {0} 任务
tasks.before.run=运行 {0} 任务 ''{1}''
# Debugger
debugger.status.connected=已连接到由 ''{0}'' {1} 启动的 VM
debugger.open.session.tab=打开调试器会话选项卡

external.system.mavenized.structure.wizard.artifact.coordinates.title=工件坐标

external.system.mavenized.structure.wizard.parent.label=父项:
external.system.mavenized.structure.wizard.name.label=名称:
external.system.mavenized.structure.wizard.location.label=位置:
external.system.mavenized.structure.wizard.group.id.label=组 ID:
external.system.mavenized.structure.wizard.artifact.id.label=工件 ID:
external.system.mavenized.structure.wizard.version.label=版本:

external.system.mavenized.structure.wizard.name.presentation=名称
external.system.mavenized.structure.wizard.location.presentation=位置
external.system.mavenized.structure.wizard.group.id.presentation=groupId
external.system.mavenized.structure.wizard.artifact.id.presentation=artifactId
external.system.mavenized.structure.wizard.version.presentation=版本

external.system.mavenized.structure.wizard.group.id.help=工件组的名称，通常是公司域名
external.system.mavenized.structure.wizard.artifact.id.help=组内工件的名称，通常是 {0} 名称

external.system.mavenized.structure.wizard.missing.error=缺少{0}{1}
external.system.mavenized.structure.wizard.directory.not.writable.error=目录不可写
external.system.mavenized.structure.wizard.directory.not.empty.warning=目录不为空
external.system.mavenized.structure.wizard.file.not.directory.error=指定的路径不是目录
external.system.mavenized.structure.wizard.directory.already.taken.error=目录已被项目“{0}”占用
external.system.mavenized.structure.wizard.directory.invalid=无效路径: ''{0}''

external.system.reload.notification.action.reload.text.empty=加载变更
external.system.reload.notification.action.reload.text=加载{0}变更
external.system.reload.notification.action.reload.description.empty=将构建系统变更加载到 {0} 中。
external.system.reload.notification.action.reload.description={0} 项目结构已更改。将变更加载到 {1} 中以使其正常工作。
external.system.reload.notification.action.hide.text=隐藏此通知
0.task.action={0}任务操作
confirmation=确认
delete.0=删除 “{0}”?
select.modules.depended.on.currently.selected.modules=选择依赖于当前所选模块的模块
select.required=选择所需项
show.selected.only=仅显示所选项
action.text.unselect.all=取消全选
action.text.select.all=全选
disable.modules.with.dependency.on.this=禁用依赖于此的模块
disable.modules.with.dependency.on.this.message=<html>以下{0,choice,1#模块|1<模块} <br><b>{1}</b><br>{0,choice,1#已|1<已}启用，并且{0,choice,1#依赖|1<依赖}于选定模块。<br>是否也将{0,choice,1#其|1<其}禁用?</html>
disable.modules.with.dependency.on.this.max.message={0} 个启用的模块依赖于选定模块。是否也将其禁用?
enable.dependant.modules=启用依赖模块
enable.dependant.modules.message=<html>以下{0,choice,1#模块|1<模块}受 <b>{1}</b> {2,choice,1#依赖|1<依赖}，且{0,choice,1#已|1<已}禁用:<br><b>{3}</b><br>是否将{0,choice,1#其|1<其}启用?</html>
enable.dependant.modules.max.message={0} 个禁用的{0,choice,1#模块|1<模块}依赖于 {1} 个选定{1,choice,1#模块|1<模块}。是否也将{0,choice,1#其|1<其}启用?
duplicate.content.roots.removed=模块 [{1}] 的路径 [{0}] 已从模块 [{2}] 中移除
duplicate.content.roots.extra="<br>还有另外 {0} 条{0,choice,1#路径|1<路径}{0,choice,1#已|1<已}重名删除。详细信息见 idea 日志
duplicate.content.roots.detected=检测到重复的内容根
initializing.0.projects.data=正在初始化 {0} 项目数据…
action.text.none=无 (&N)

unknown.sdk.type=未知
label.please.select.the.modules.data.to.include.in.the.project=请选择要包含在项目中的模块/数据。
popup.title.choose.project=选择项目
popup.title.choose.activation.phase=选择激活阶段
popup.title.choose.task=选择任务
activity.name.select.external.data=选择外部数据
build.event.title.sync=同步
dialog.title.project.data.to.import=要导入的 {0} 项目数据
please.wait=请稍候...
there.are.not.selected.module.dependencies.of.the.module.br.b.0.b=没有选择模块的模块依赖项: <br><b>{0}</b>
link.label.choose.task.to.assign.shortcut=选择要分配快捷键的任务
dialog.message.before.build.triggering.task.failed=构建前触发任务失败
dialog.message.after.build.triggering.task.failed=构建后触发任务失败
dialog.title.choose.task=选择 {0} 任务
dialog.title.select.project=选择 {0} 项目
label.modules.selected={0} 个模块。已选择 {1} 个
dialog.message.can.t.store.external.task.settings.into.run.configuration=无法将外部任务设置存储到运行配置中。原因: 目标运行配置未定义。任务: ''{0}''，外部项目: ''{1}''，vm 选项: ''{2}''，实参: ''{3}''

external.project.structure.project=项目
external.project.structure.project.location=位置
external.project.structure.project.root.module=根模块
external.system.api.error.message.prefix=处理外部系统期间出现异常: {0}

run.configuration.project.path.label={0} 项目(&P):
run.configuration.project.path.name={0} 项目(&P)
external.system.mavenized.structure.wizard.entity.name.exists.error={0} ''{1}'' 已存在
run.configuration.project.path.empty.error=未指定 {0} 项目
run.text.starting.task={0}: 正在执行{1}…
run.text.ended.task={0}: 执行完成{1}。
external.system.mavenized.structure.wizard.entity.coordinates.already.exists.error=坐标为 ''{1}'' 的{0,choice,0#模块|1#项目}已存在
external.system.mavenized.structure.wizard.name.and.artifact.id.is.different.error={0,choice,0#模块|1#项目}名称和工件 ID 必须相同
external.system.dependency.analyzer.editor.tab.name=Dependency Analyzer
external.system.dependency.analyzer.action.name=分析依赖关系…
external.system.dependency.analyzer.projects.empty=无项目
external.system.dependency.analyzer.scope.label=范围:
external.system.dependency.analyzer.scope.any=任意
external.system.dependency.analyzer.resolved.title=已解析的依赖项
external.system.dependency.analyzer.resolved.empty=找不到任何内容。
external.system.dependency.analyzer.usages.title={0} 的用法
external.system.properties.error.title=属性无效
external.system.properties.error.empty.message=不允许名称为空的属性
external.system.properties.error.space.message=不允许名称中包含空格的属性
external.system.properties.error.assign.message=不允许名称中包含 '=' 的属性
external.system.mavenized.structure.wizard.advanced.settings.title=高级设置
external.system.dependency.analyzer.scope.n={0} 范围
external.system.dependency.analyzer.resolved.tree.show=作为树显示
external.system.dependency.analyzer.resolved.tree.collapse=收起
external.system.dependency.analyzer.resolved.tree.expand=展开
external.system.dependency.analyzer.scope.none=无
external.system.dependency.analyzer.conflicts.show=仅显示冲突
external.system.dependency.analyzer.groupId.show=显示组 ID
external.system.dependency.analyzer.warning.version.conflict=与 {0} 冲突
external.system.dependency.analyzer.warning.unresolved=未解决
external.system.dependency.analyzer.dependency.loading=正在加载依赖项列表…
notification.group.external.system.autolink=找到外部系统构建脚本
notification.group.orphan.modules=不再被外部系统引用的模块
notification.group.duplicate.content.roots=检测到重复的内容根
notification.group.unindexed.repositories=找到无索引的 Maven 仓库
notification.group.gradle.wrapper.update=Gradle 包装器更新失败
external.system.dependency.analyzer.go.to.action.name=转到 {0} 依赖项
external.system.dependency.analyzer.go.to.action.description=导航到父 {0} 配置文件中的依赖项
external.system.dependency.analyzer.open.action.name=打开 {0} 配置
external.system.dependency.analyzer.open.action.description=打开所选模块或库的 {0} 配置文件