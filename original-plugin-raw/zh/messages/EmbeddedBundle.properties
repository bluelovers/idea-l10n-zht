action.com.intellij.clion.embedded.execution.wizard.GdbServerWizardAction.description=GDB 服务器配置向导
action.com.intellij.clion.embedded.execution.wizard.GdbServerWizardAction.text=新建嵌入式配置…
action.com.jetbrains.cidr.embedded.stm32cubemx.update.text=使用 STM32CubeMX 更新 CMake 项目
action.intellij.clion.embedded.mcu.reset.text=重置 MCU
action.intellij.clion.embedded.run.stm32cubemx.text=通过 STM32CubeMX 打开
border.title.connection=连接
build.configuration.executable=可执行的二进制文件
checkbox.start.monitor.after.upload=上传后启动监控
comment.download=<a href\="{0}">下载…</a>
compiler.implicit.include.not.found=找不到隐式 include 文件 {0}
compiler.run.failed=无法运行编译器\: {0} \n{1}
configurable.RtosSettingsConfigurable.display.name=RTOS 集成
connection.arguments.hint={0} 实参
console=控制台
console.rtt=RTT
console.semihosting=半托管
console.swo=SWO
cube.file.is.empty=文件名为空
cube.file.is.not.file={0} 不是文件
cube.file.is.not.found={0} 不存在
cube.mx.editor.open=通过 STM32CubeMX 打开
cube.mx.editor.opened=在 STM32CubeMX 中打开
cube.mx.file.not.found=找不到文件
cube.mx.file.not.found.description=在项目目录 {1} 中找不到文件 {0}。\n请在 STM32CubeMX 中运行“Generate Code”
cube.mx.file.read.error=文件读取错误
cube.mx.file.read.error.description=无法在项目目录 {1} 中读取 {0}\n({2})
cube.mx.file.write.error=文件写入错误
cube.mx.invalid.file.content=无效文件内容
cube.mx.more.information.link=更多信息
cube.mx.open.external.editor=打开外部编辑器
cube.mx.project.sources.not.generated=没有生成项目源。在 STM32CubeMX 中运行 'GENERATE CODE'
cube.mx.project.sources.outdated=生成的源似乎已过时。在 STM32CubeMX 中运行 'GENERATE CODE'
cube.mx.project.updated=已更新 STM32CubeMX 项目
cube.mx.wrong.ide=选择了错误的目标 IDE。在“STM32CubeMX -> Project Manager”中将目标设置为 'CMake'
cube.valid.title=此 {0} 似乎有效。\n没有可用的版本信息。
debug.tooltip.esp32=在 ESP32 上调试 ''{0}''
debug.tooltip.generic=在 {1} 上调试 ''{0}''
debug.tooltip.jlink=将 ''{0}'' 调试至目标
debug.tooltip.stlink=在 ''{1}'' 上调试 ''{0}''
dialog.message.cmake.not.loaded=CMake 项目未加载
dialog.message.cmake.profile.not.defined=CMake 配置文件未定义
dialog.message.debugger.not.defined=调试器未定义
dialog.message.device.not.found=找不到设备
dialog.message.device.not.selected=未选择设备
dialog.message.failed.to.parse.project.description.json=无法解析 project_description.json\: {0} - {1}
dialog.message.failed.to.read.project.description=无法从 project_description.json 中检索 `{0}`\: {1}
dialog.message.invalid.debugger.path=调试器路径无效
dialog.message.project_description.json.not.found=未找到文件\: project_description.json。请确保 ESP-IDF 项目正确
dialog.message.wrong.cmake.profile.name=CMake 配置文件名称错误
dialog.title.configure.gdb.server=新的嵌入式 GDB 服务器运行配置
dialog.title.segger.jlinkgdbserver=SEGGER J-Link GDB 服务器
edit.configuration.action=运行/调试
embedded.display.name=嵌入式
embedded.gdb.server.description=使用第三方的 GDB 服务器上传并运行应用程序
embedded.gdb.server.title=嵌入式 GDB 服务器
embedded.settings.fix=修正…
enable.console=启用控制台
error.convert.generic.not.possible=无法转换为通用调试服务器 — 项目不正确或不支持 ESP-IDF
esp.idf=ESP-IDF
expected.gdbserver.name=预期名称\: {0}
export.name.embedded.development=嵌入式开发
export.name.embedded.gdbserver.wizard=嵌入式 GDB 服务器向导
file.cannot.be.executed={0} 无法执行
file.extension.not.found=找不到 .{0} 文件。
file.is.not.valid.cube.executable={0} 不是有效的 {1} 可执行文件
filetype.stm32cubemx.project.description=STM32CubeMX 项目
firmware.downloaded=已下载固件
freertos.heap.allocations.label=分配次数
freertos.heap.block.table.address.range.column=地址范围
freertos.heap.block.table.details.column=详细信息
freertos.heap.block.table.size.column=大小
freertos.heap.free.label=释放
freertos.heap.frees.label=释放计数
freertos.heap.info.not.available=堆信息仅对 HEAP_[2,4,5] 可用
freertos.heap.panel.name=FreeRTOS 堆
freertos.heap.table.address.range.column=地址范围
freertos.heap.type.label=类型
freertos.heap.usage.label=用法
freertos.integration.enabled=FreeRTOS 集成已启用
freertos.integration.not.full=缺少可选定义。某些功能可能不可用。
freertos.integration.sizeof.failed=无法检索 sizeof {0}
freertos.panel.name=FreeRTOS 对象
freertos.queue.data.table.address.column=地址
freertos.queue.data.table.data.dec.column=十进制数据
freertos.queue.data.table.number.column=顺序编号
freertos.queue.enable.text=添加 \#define configQUEUE_REGISTRY_SIZE > 0
freertos.queue.table.address.column=地址
freertos.queue.table.head.label=头
freertos.queue.table.length.column=长度
freertos.queue.table.name=队列数据
freertos.queue.table.name.column=名称
freertos.queue.table.read.from.label=读取自
freertos.queue.table.rx.column=RX
freertos.queue.table.size.column=条目大小
freertos.queue.table.tail.label=尾部
freertos.queue.table.tx.column=TX
freertos.queue.table.type.column=类型
freertos.queue.table.write.to.label=写入到
freertos.task.table.event.object.column=事件对象
freertos.task.table.handle.column=任务句柄
freertos.task.table.id.column=TCB №
freertos.task.table.name=任务数据
freertos.task.table.name.column=任务名称
freertos.task.table.priority.column=优先级
freertos.task.table.runtime.column=运行时
freertos.task.table.stack.end.label=堆栈结束
freertos.task.table.stack.hwmark.label=堆栈 HW 标记
freertos.task.table.stack.start.label=堆栈开始
freertos.task.table.stack.usage.column=堆栈使用情况
freertos.task.table.state.column=任务状态
freertos.timer.enable.text=添加 \#define configUSE_TIMERS 1
freertos.timer.table.handle.column=期间 [Ticks]
freertos.timer.table.id.column=ID
freertos.timer.table.name=定时器数据
freertos.timer.table.name.column=名称
freertos.timer.table.stack.usage.column=回调函数
freertos.timer.table.state.column=状态
gdb.parameters.panel.reset.command=重置命令
gdb.parameters.panel.reset.command.field=监视器重置
gdb.parameters.reset.type.after.download=上传后
gdb.parameters.reset.type.always=始终
gdb.parameters.reset.type.before.download=上传前
gdb.parameters.reset.type.never=从不
gdb.servers.wizard.devices.parse.error=无法从输入行解析设备\: {0}，可能是 GDB 服务器位置错误
gdb.servers.wizard.download.binary=上传二进制文件\:
gdb.servers.wizard.exception.occurred.while.executable.invoke=运行 {0} 时出现异常\:\n{1}
gdbserver.app.cannot.report.supported.devices=GDB 服务器 {0} 无法报告支持的设备列表。
gdbserver.cannot.report.supported.devices=GDB 服务器无法报告支持的设备列表。
gdbserver.progress=正在启动 GDB 服务器… {0}s
generic=泛型
identify.utility.version=正在识别 {0} 版本
ioc.file.not.found.comment=这可能不是 STM32CubeMX 项目。
jlink.device.dialog.button.tooltip=选择…
jlink.device.dialog.search.textfield.empty.text=搜索
jlink.device.dialog.search.tree.empty.text=找不到任何设备
jlink.device.dialog.title=选择设备
jlink.gdb.server.displayname=Segger JLink
label.device=设备\:
label.executable=可执行的二进制文件\:
label.gdb=调试器\:
label.gdb.server.type=GDB 服务器类型\:
label.gdbserver.port=GDB 服务器端口\:
label.initial.speed=初始速度\:
label.jlink.gdb.server=Segger J-Link
label.khz=kHz
label.location=位置\:
label.name.config=名称\:
label.pemicro=PE Micro Cyclone、Multilink 或 OpenSDA
label.port=端口\:
label.pyocd=PyOCD
label.qemu=QEMU 模拟器
label.reset.strategy=重置策略\:
label.st.util.gdb.server=st-util
label.stlink.gdb.server=STM32CubeIDE ST-LINK GDB 服务器
label.swo.cpu.freq=CPU 频率\:
label.swo.freq=频率\:
label.swo.mask=掩码\:
label.target=目标\:
label.tcp.ip.port=TCP/IP 端口\:
label.transport.interface=传输接口\:
label.uart=UART\:
label.unit.hz=Hz
label.unit.khz=kHz
link.label.edit=编辑…
mcu.chip.detected=检测到芯片\: {0} (ARM {1})
mcu.communication.failure.detailed=MCU 通信故障。请检查您的<i>运行配置</i>
mcu.is.configured=已配置 {0}。
mcu.reset.type.HALT=停止
mcu.reset.type.INIT=初始化
mcu.reset.type.NONE=无
mcu.reset.type.RUN=运行
message.expected.name=预期名称为 {0}
message.read.error=读取错误({0}\: {1})
modal.progress.title.exporting=正在导出…
no.mcu.configured=未配置 MCU
notification.group.embedded.development=嵌入式开发
openocd.assist.button=辅助…
openocd.board.config.file.label=面板配置文件\:
openocd.board.config.not.defined=未定义面板配置文件
openocd.download.label=下载\:
openocd.download.run.description=使用 OpenOCD 下载并运行嵌入式应用程序
openocd.download.run.title=OpenOCD 下载并运行
openocd.gdb.port.label=GDB 端口\:
openocd.invalid.run.file=运行文件 {0} 无效
openocd.is.not.valid.executable={0} 不是有效的可执行文件
openocd.ports.should.be.different=端口值应不同
openocd.reset.label=重置\:
openocd.telnet.port.label=Telnet 端口\:
openocd.wrong.installation=OpenOCD 安装错误\n找不到面板配置文件夹({0})
pemicro.gdb.server.displayname=PE Micro (OpenSDA)
please.enter.port.number=请输入介于 {0} 到 {1} 之间的 TCP 端口号
please.enter.positive.number=请输入一个正数
port.number.auto=自动
progress.title.loading.devices=正在加载设备…
progress.title.looking.for.installed.utility=正在查找已安装的实用程序
pyocd.gdb.server.displayname=PyOCD
qemu.displayname=QEMU 模拟器
queue.data.text.double.click.to.see.more=… (双击查看更多内容)
radio.jtag=JTAG
radio.swd=SWD
reset.strategy.attach=附加
reset.strategy.default=默认
reset.strategy.halt=停止
reset.strategy.pre_reset=Pre-Reset
reset.strategy.under_reset=Init-Under-Reset
rtos.auto.display.name=自动
rtos.azure.display.name=Azure RTOS ThreadX
rtos.freertos.display.name=FreeRTOS
rtos.panel.selector.hint=需要支持 Python 的 GDB 7.4 或更高版本
rtos.panel.selector.label=启用 RTOS 集成
rtos.panel.threads.hint=如果您使用的调试服务器支持类似功能，则可能需要禁用此选项。
rtos.panel.threads.label=启用线程感知
rtos.zephyr.display.name=Zephyr
rtos.zephyr.integration.error=Zephyr 配置失败
rtos.zephyr.thread.monitor.missing=Define CONFIG_THREAD_MONITOR 未设置
rtos.zephyr.thread.name.missing=Define CONFIG_THREAD_NAME 未设置
run.configuration.name.is.taken=运行配置名称“{0}”已被占用
run.tooltip.esp32=监控 ESP32
run.tooltip.generic=将 ''{0}'' 上传到 {1}
run.tooltip.jlink=将 ''{0}'' 刷写至目标
run.tooltip.stlink=将 ''{0}'' 刷写到 ''{1}''
segger.jlink=SEGGER J-Link
select.board.dialog.copy.and.use.action=复制到项目并使用
select.board.dialog.overwrite.file=文件 {0} 已存在于项目中。是否覆盖?
select.board.dialog.overwrite.title=是否覆盖面板配置?
select.board.dialog.title=选择面板配置文件
set.openocd.location=请通过嵌入式开发设置对 OpenOCD 位置进行设置
show.settings.action=设置
show.toolchains.action=工具链
skip.board.button=跳过
st.link.gdb.server.displayname=STM32CubeIDE ST-LINK GDB 服务器
st.link.gdbserver.not.found=找不到 ST-LINK_gdbserver
stlink.dialog.title.st.link.gdb.server.executable=ST-LINK GDB 服务器可执行文件
stlink.dialog.title.stm32cubeprogrammer.bin.directory=STM32CubeProgrammer bin 目录
stlink.gdb.server.tab.name=ST-LINK GDB 服务器
stlink.group.label.multicore=多核
stlink.group.label.swo=SWO
stlink.groupname=ST-LINK
stlink.label.apid=访问端口\:
stlink.label.halt=停止所有核心
stlink.label.programmer=程序员\:
stlink.label.reset.type=重置类型\:
stlink.label.shared=共享 ST-LINK
stlink.label.swo.clock.divider=SWO 时钟分频器\:
stlink.label.swo.cpu.frequency=CPU 频率\:
stlink.label.verify.flash.download=验证闪存下载
stlink.programmer.validation.warning.bin=预期目录名称为 {0}
stlink.programmer.validation.warning.exe=预期文件名名称为 {0}
stlink.reset.connect.under.reset=重置时连接
stlink.reset.strategy.core=核心
stlink.reset.strategy.hardware=硬件
stlink.reset.strategy.software=软件
stm32.cube.ide.wrong.executable=指定了错误的 STM32CubeIDE 可执行文件
stm32.cube.mx.is.not.found=STM32CubeMX 未找到
stm32.cube.mx.project.generation.failure=项目生成失败
stm32.cube.mx.project.wizard.button=继续
stm32.cube.mx.project.wizard.cmake.fail.text=无法从 {0} 导入。
stm32.cube.mx.project.wizard.cmake.fail.title=CMake 错误
stm32.cube.mx.project.wizard.html=<ol style\="margin-top\: 0;"><li>在 STM32CubeMX 中\:<ol type\="a"><li>在 <i>New Project</i> 面板中，点击 <i>ACCESS TO MCU SELECTOR</i>。您也可以选择 <i>ACCESS TO BOARD SELECTOR</i>。</li><li>选择您的 MCU 或开发板。</li><li>点击 <i>Start Project</i>。</li><li>在生成的设备配置窗口中，配置必要的外设和中间件。</li><li>导航到 <i>Project Manager</i> 标签页。</li><li>从 <i>Toolchain / IDE</i> 下拉菜单中选择 <i>CMake</i>。</li><li>在 <i>Project Name</i> 字段中输入您的项目的名称。</li><li>点击 <i>GENERATE CODE</i>。</li><li>使用键盘快捷键 <i>{0}</i> 从 <i>Toolchain Folder Location</i> 字段复制路径。</li></ol></li><li>在 CLion 中\:<ol type\="a"><li>在此对话框顶部的<i>位置</i>字段中输入您复制的路径。</li><li>点击<i>{1}</i>。</li><li>在显示的<i>打开项目向导</i>对话框中，从列表中选择 CMake <i>调试 – 调试</i>配置文件，点击<i>启用</i>，然后点击<i>确定</i>。</li></ol></li><li>您的 STM32CubeMX 项目现已创建完成。</li></ol>
stm32.cube.mx.project.wizard.notice=需要由 STM32CubeMX 生成一个 STM32CubeMX 项目。
stm32.cube.mx.project.wizard.open.failed.text=打开 STM32CubeMX 项目 ''{0}'' 失败。
stm32.cube.mx.project.wizard.open.failed.title=打开项目
stm32cubeclt=STM32CubeCLT
stm32cubeclt.not.detected=找不到 STM32CubeCLT。请确保您已安装兼容的工具链。
stm32cubeclt.valid=STM32CubeCLT 似乎有效
stm32cubemx=STM32CubeMX
stm32cubemx.is.not.found=STM32CubeMX 未找到或无效。
stm32cubemx.launch=启动 STM32CubeMX
stm32cubeprogrammer.not.found=找不到 STM32CubeProgrammer
stutil.displayname=st-util
target.device.is.not.selected=未选择目标设备
template.do.not.change=此文件从模板自动生成\! 请勿更改\!
text.uart.auto=自动
tool.checking=正在检查 {0}
tool.found=已找到
tool.location={0} 位置\:
tool.not.found=找不到
tool.test.action=测试
uart.comment=(例如 /dev/ttyS4 或 COM1)
unknown.binary=未知二进制文件 {0}
use.board.button=使用
validation.intl.characters=Stm32CubeMX 和 OpenOCD 在“项目位置”中不支持国际字符或空格。
validation.missing.cmake.file=找不到 {0}。请确保该项目是为 CMake 生成的。
validation.missing.directory=目录不存在。生成项目并在“位置”字段中输入其路径。
wrong.gdb.server.location=GDB 服务器位置错误
