classpath.add.reflection=将 'kotlin-reflect.jar' 添加到类路径
classpath.add.script.runtime=将 'kotlin-script-runtime.jar' 添加到类路径
classpath.add.kotlin.test=将 'kotlin-test.jar' 添加到类路径

scratch.clear.button=清除结果
scratch.inlay.output.mode=嵌入式输出模式\n\n输出将显示在表达式旁边的代码编辑器中。非常适合短的单行输出。
scratch.inlay.output.mode.description=嵌入式输出模式
scratch.side.panel.output.mode=侧边面板输出模式\n\n输出显示在单独的面板中。如果输出是长行或多行，则很有用。
scratch.side.panel.output.mode.description=侧边面板输出模式

scratch.module.combobox=使用模块的类路径
scratch.run.button=运行临时文件
scratch.run.from.here.button=从这里运行临时文件
scratch.stop.button=停止临时文件执行

scratch.is.repl.checkbox=使用 REPL
scratch.is.repl.checkbox.description=在 Kotlin REPL 中运行。只执行添加到草稿末尾的新表达式

scratch.is.interactive.checkbox=交互模式
scratch.is.interactive.checkbox.description=在你停止键入 {0} 秒后运行

scratch.make.before.run.checkbox=运行前构建模块
scratch.make.before.run.checkbox.description=在运行 scratch 之前构建模块 {0}。只有已编译的代码才能从此作用域访问

incompatible.api.report=报告为不兼容的 API
choose.module.modules={0}、{1} 和<a href="#">其他 {2,number,#} 个模块</a>
choose.module.modules.with.kotlin=带 Kotlin 文件的模块

choose.path.title=选择目标文件夹
choose.path.description=选择文件夹

configure.kotlin.title=使用 {0} 配置 Kotlin
configure.kotlin.find.maven.versions=查找 Kotlin Maven 插件版本
configure.kotlin.loading=正在加载…
configure.kotlin.cant.load.versions=无法从 search.maven.org 加载版本列表

copy.into.title=复制到…
copy.into.description=选择将复制文件的文件夹

file.exists.single=文件 ''{0}'' 已存在于 {1} 中。要覆盖吗?
file.exists=文件已存在:\n{0}\n要覆盖它们吗?
file.overwrite.title=覆盖文件
file.overwrite.overwrite=覆盖
file.overwrite.cancel=取消
file.destination.folder=目标文件夹
file.error.new.folder=创建文件夹时出错: {0}
file.error.copy=复制 {0} 时出错

frameworks.remove.conflict.title=框架冲突
frameworks.remove.conflict.question=当前模块已使用 ''{0}'' 框架配置。\n要将其移除吗?

library.label.jvm=Kotlin 运行时
library.label.javascript=Kotlin JS 库

library.no.kotlin.library.title=未指定 Kotlin 运行时
library.no.kotlin.library.question=要在没有 Kotlin 运行时库的情况下继续吗?

run.configuration.error.no.module=未指定模块
run.configuration.error.no.main.class=未指定主类
run.configuration.error.run.class.should.be.defined=应为配置 ''{0}'' 定义运行类
run.configuration.error.class.not.found=在模块 ''{1}'' 中找不到类 ''{0}''
run.configuration.error.class.no.main.method=类 ''{0}'' 没有 ''main()'' 方法
run.configuration.error.main.not.found=未在类 ''{0}'' 中找到函数 ''main()''
run.configuration.error.main.not.found.top.level=未在软件包 ''{0}'' 中找到顶级函数 ''main()''

script.choose.file=选择脚本文件

editor.editor.only=仅编辑器
editor.preview.only=仅预览
editor.editor.and.preview=编辑器和预览
title.choose.configurator=选择配置器
action.text.ignore=忽略
action.text.configure=配置
kotlin.not.configured=未配置 Kotlin
there.aren.t.configurators.available=没有可用的配置器
all.modules.with.kotlin.files.are.configured=已配置包含 Kotlin 文件的所有模块
lookup.project.configurators.progress.text=正在查找项目配置器…
lookup.modules.configurations.progress.text=正在查找模块配置…
lookup.kotlin.modules.configurations.progress.text=正在查找 Kotlin 模块配置…
added.0.requirement.to.module.info.in.1=已将 {0} 要求添加到 {1} 中的 module-info
updated.javascript.libraries.in.module.0=已更新模块 {0} 中的 JavaScript 库
added.0.to.library.configuration=已将 {0} 添加到库配置
couldn.t.configure.library.jar.file.0.may.be.corrupted=无法配置库；JAR 文件 {0} 可能已损坏
can.t.find.library.jar.file.0=无法找到库 JAR 文件 {0}
0.was.copied.to.1={0} 已复制到 {1}
0.library.scope.has.changed.from.1.to.2.for.module.3={0} 库范围已从 {1} 变更为 {2} (适用于模块 {3})
0.library.was.added.to.module.1={0} 库已添加到模块 {1}
0.library.was.created={0} 库已创建
configure.kotlin=配置 Kotlin
configure.kotlin.language.settings=配置 Kotlin 语言设置
configure.kotlin.language.settings.0.module=在模块 {0} 中配置语言设置
configure.0.in.1.project.br.2=在 ''{1}'' 项目中配置 {0}<br/> {2}
configure.0.module=''{0}'' 模块
configure.modules=模块
libraries.for.the.following.platform.are.also.present.in.the.module.dependencies.0=以下平台的库也存在于模块依赖项中: {0}
no.target.platforms.selected=未选择目标平台
kotlin.common.standard.library=Kotlin 常用标准库
create.kotlin.common.standard.library=创建 Kotlin 常用标准库
presentable.name.kotlin.js=Kotlin/​JS
kotlin.java.runtime.library=Kotlin Java 运行时库
create.kotlin.java.runtime.library=创建 Kotlin Java 运行时库
kotlin.javascript.library=Kotlin JavaScript 库
create.kotlin.javascript.library=创建 Kotlin JavaScript 库
javascript.library.creation=JavaScript 库创建
java.runtime.library.creation=Java 运行时库创建
presentable.type.js.files=JS 文件
kotlin.project.with.a.javascript.target.based.on.the.intellij.idea.build.system=具有基于 IntelliJ IDEA 构建系统的 JavaScript 目标的 Kotlin 模块
kotlin.project.with.a.jvm.target.based.on.the.intellij.idea.build.system=具有基于 IntelliJ IDEA 构建系统的 JVM 目标的 Kotlin 模块
command.action.add.injection.comment=添加注入注释
command.action.add.injection.annotation=添加注入注解
command.action.remove.injection.in.code.instructions=移除注入代码内说明
this.java.file.is.outside.of.java.source.roots.and.won.t.be.added.to.the.classpath=此 .java 文件位于 Java 源根之外且不会添加到类路径中。
reason.incompatible.api=不兼容的 API
kotlin.bytecode.decompiler=Kotlin 字节码反编译器
failed.to.decompile.0.1=无法反编译 {0}: {1}
button.text.decompile=反编译
checkbox.text.ir=IR
checkbox.text.jvm.8.target=JVM 8 目标
checkbox.text.assertions=断言
checkbox.text.optimization=优化
checkbox.text.inline=内联
cannot.compile.0.to.bytecode=无法将 {0} 编译为字节码。
create.backup.for.debugging.kotlin.incremental.compilation=创建用于调试 Kotlin 增量编译的备份
creating.backup.for.debugging.kotlin.incremental.compilation=正在创建用于调试 Kotlin 增量编译的备份
creating.patch.0=正在创建补丁 {0}
copying.logs=正在复制日志
copying.project.s.system.dir=正在复制项目的系统目录
scanning.project.dir.0=正在扫描项目目录: {0}
adding.file.to.backup.0=正在将文件添加到备份: {0}
created.backup=已创建备份
successfully.created.backup.0=已成功创建备份 {0}
update.runtime.library=更新运行时库
this.language.feature.requires.version.0.or.later.of.the.kotlin.runtime.library.would.you.like.to.update.the.runtime.library.in.your.project=此语言功能需要 {0} 或更高版本的 Kotlin 运行时库。是否要更新项目中的运行时库?
could.not.find.script.file.0=无法找到脚本文件: {0}
file.was.not.specified=未指定文件
run.kotlin.script=运行 Kotlin 脚本
name.kotlin.script=Kotlin 脚本
exception.occurs.during.run.scratch.action=运行临时操作时出现异常
there.were.compilation.errors.in.module.0=模块 {0} 中存在编译错误
other.scratch.file.execution.is.in.progress=正在执行其他临时文件
exception.occurs.during.run.scratch.action1=运行临时操作时出现异常
couldn.t.extract.line.info.from.line.0=无法从行提取行信息: {0}
couldn.t.compile.0=无法编译 {0}
couldn.t.find.ktfile.for.current.editor=无法找到当前编辑器的 KtFile
couldn.t.get.scratch.execution.result.stopped.by.timeout.0.ms=无法获取临时执行结果 - 因超时而停止({0} ms)
analyzing.kotlin.scratch=正在分析 Kotlin 临时文件…
running.kotlin.scratch=正在运行 Kotlin 临时文件…
couldn.t.execute.statement.0=无法执行语句: {0}
couldn.t.stop.repl.process=无法停止 REPL 进程
check.bunch.files=Check bunch files(&B)
button.text.commit=提交
button.text.review=审查
button.text.forgotten.bunch.files=Forgotten Bunch Files
several.bunch.files.haven.t.been.updated.0.do.you.want.to.review.them.before.commit=Several bunch files haven''t been updated:\n\n{0}\n\nDo you want to review them before commit?
update.kotlin.runtime.library=更新 Kotlin 运行时库
automatic.library.version.update.for.maven.and.gradle.projects.is.currently.unsupported.please.update.your.build.scripts.manually=当前不支持为 Maven 和 Gradle 项目进行自动库版本更新。请手动更新您的构建脚本。
library.update.failed=库更新失败
failed.to.update.0.1=无法更新 {0}: {1}
library.update.failed1=库更新失败
failed.to.find.root.for.file.0=无法找到文件的根: {0}
html.b.0.choice.0.1.1.some.kotlin.runtime.librar.0.choice.0.1.y.1.ies.b.1.choice.0.1.and.one.other.jar.1.and.1.other.jars.1.choice.0.has.0.have.an.unsupported.binary.format.html=<b>{0,choice,0#|1#|1<一些 }Kotlin 运行时库{0,choice,0#|1#|1<}</b>{1,choice,0#|1#和另外一个 jar|1<和 {1} 个其他 jar} {1,choice,0#包含|0<包含}不受支持的二进制文件格式。
button.text.replace.library=替换
button.text.downgrade.library=降级
button.text.update.library=更新
0.choice.0.1.1.all.kotlin.runtime.librar.0.choice.0.1.y.1.ies={0,choice,0#|1#|1<全部 }Kotlin 运行时库{0,choice,0#|1#|1<}
html.kotlin.library.b.0.b.has.outdated.binary.format.and.can.t.be.read.by.current.plugin.please.update.the.library.html=Kotlin 库 <b>'{'0'}'</b> 包含过时的二进制文件格式且无法被当前插件读取。请更新库。
html.kotlin.library.b.0.b.was.compiled.with.a.newer.kotlin.compiler.and.can.t.be.read.please.update.kotlin.plugin.html=Kotlin 库 <b>'{'0'}'</b> 使用了一个较新的 Kotlin 编译器编译且无法被读取。请更新 Kotlin 插件。
some.kotlin.libraries.attached.to.this.project.have.unsupported.binary.format.please.update.the.libraries.or.the.plugin=关联到此项目的一些 Kotlin 库包含不受支持的二进制文件格式。请更新库或插件。
some.kotlin.libraries.attached.to.this.project.have.outdated.binary.format.and.can.t.be.read.by.current.plugin.please.update.found.libraries=关联到此项目的一些 Kotlin 库包含过时的二进制文件格式且无法被当前插件读取。请更新找到的库。
some.kotlin.libraries.attached.to.this.project.were.compiled.with.a.newer.kotlin.compiler.and.can.t.be.read.please.update.kotlin.plugin=关联到此项目的一些 Kotlin 库使用了一个较新的 Kotlin 编译器编译且无法被读取。请更新 Kotlin 插件。
button.text.go.to.0=转到 {0}
button.text.details=详细信息
progress.action.text.update.plugin=更新插件
progress.action.text.check=\     检查…
can.t.show.all.paths.during.index.update=索引更新期间无法显示全部路径
unsupported.format.plugin.version.0=不受支持的格式，插件版本: {0}
no.updates.found=未找到更新
0.1.expected.2={0} ({1}) - 应为: {2}
choose.library.copy.to=复制到(&C):
use.library.from.plugin=使用插件中的库(&U)
all.modules.containing.kotlin.files=包含 Kotlin 文件的所有模块:
all.modules=所有模块
single.module=单个模块:
kotlin.compiler.and.runtime.version=Kotlin 编译器和运行时版本:
copy.into=复制到(&C):
using.compiler.bundled.into.plugin=使用插件捆绑的编译器
api.dialog.reason=原因(&R)
api.dialog.reference=引用(&F)
configuration.title.script.file=脚本文件
presentable.name.js.idea=JS | IDEA
presentable.name.jvm.idea=JVM | IDEA
language.name.kotlin=Kotlin
language.name.java=Java
language.name.javascript=JavaScript
as.kotlin.1.module=作为 Kotlin ({0}) {1,choice,0#模块|2#模块}
presentable.name.kotlin.jvm=Kotlin/JVM
fix.0.in.current.module=在当前模块中 {0}
fix.0.in.the.project=在项目中 {0}
short.feature.name.coroutine=协同程序
enable.feature.family=提高{0,choice,0#模块|1#项目}{1,choice,0#API版本|1#语言版本}
enable.feature.text=将{0,choice,0#模块|1#项目}{1,choice,0#API版本|1#语言版本}设置为 {2}
list.item.no.module=<无模块>
dialog.message.script.file.was.not.specified=未指定脚本文件
dialog.message.script.file.was.not.found.in.project=在项目中找不到脚本文件
