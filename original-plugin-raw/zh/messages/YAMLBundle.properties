YAMLAliasResolveNodeProvider.action.description=解析别名并在结构中显示引用的值
YAMLAliasResolveNodeProvider.action.name=别名子树
YAMLAnchorRenameProcessor.lost.alias=别名将引用另一个定位标记
YAMLAnchorRenameProcessor.reuse=定位标记已经具有相同的名称
YAMLBreadcrumbsInfoProvider.copy.key.to.clipboard=将键复制到剪贴板
YAMLDuplicatedKeysInspection.duplicated.key=键 ''{0}'' 重复
YAMLDuplicatedKeysInspection.merge.quickfix.name=合并重复部分
YAMLDuplicatedKeysInspection.remove.key.quickfix.name=移除键
YAMLElementDescriptionProvider.type.anchor=定位标记
YAMLKeysSearchEverywhereContributor.group.name=配置键
YAMLLanguageCodeStyleSettingsProvider.align.options.colon=冒号上
YAMLLanguageCodeStyleSettingsProvider.align.options.no=不对齐
YAMLLanguageCodeStyleSettingsProvider.align.options.value=值上
YAMLLanguageCodeStyleSettingsProvider.align.values=对齐映射中的值
YAMLLanguageCodeStyleSettingsProvider.autoinsert.sequence.marker=按 Enter 时自动插入连字符
YAMLLanguageCodeStyleSettingsProvider.block.mapping.on.new.line=块映射位于新行中
YAMLLanguageCodeStyleSettingsProvider.group.sequence.value=序列值
YAMLLanguageCodeStyleSettingsProvider.indent.sequence.value=缩进序列值
YAMLLanguageCodeStyleSettingsProvider.label.before=在 '\:' 前
YAMLLanguageCodeStyleSettingsProvider.sequence.on.new.line=序列位于新行中
YAMLParser.invalid.header.symbols=块标量头无效
YAMLParser.multiple.anchors=不允许使用多个定位标记
YAMLParser.multiple.tags=不允许使用多个标记
YAMLStructureViewDocument.element.name=YAML 文档
YAMLStructureViewSequenceItem.element.name=序列条目
YamlBooleanType.validation.error.quoted.value=应为布尔值
YamlDeprecatedKeysInspectionBase.deprecated.key=键 ''{0}'' 已弃用
YamlDeprecatedKeysInspectionBase.deprecated.value=值 ''{0}'' 已弃用
YamlEnumType.validation.error.value.unknown=此处不需要值 ''{0}''
YamlEnumType.validation.warning.value.deprecated=值 ''{0}'' 已弃用
YamlIntegerType.error.integer.value=应为整数值
YamlKeyCompletionInsertHandler.insert.value=插入值
YamlKeyCompletionInsertHandler.remove.key=移除键
YamlMetaClass.error.scalar.value=此处不允许标量值
YamlMissingKeysInspectionBase.add.missing.keys.quickfix.name=添加缺少的键
YamlMissingKeysInspectionBase.missing.keys=缺少必需的键\: ''{0}''
YamlNonEditableKeyInspectionBase.strip.noneditable.keys.quickfix.name=从文件中移除所有不可编辑的键
YamlNonEditableKeysInspectionBase.noneditable.key=键 ''{0}'' 不能由用户修改
YamlNumberType.error.numeric.value=应为数值
YamlScalarType.error.scalar.value=应为标量值
YamlUnknownKeysInspectionBase.unknown.key=此处不需要键 ''{0}''
YamlUnknownValuesInspectionBase.error.array.is.required=需要数组
YamlUnknownValuesInspectionBase.error.array.not.allowed=应为单值
YamlUnknownValuesInspectionBase.error.value.is.required=值为必填项
annotator.same.line.composed.value.message=禁止在与键相同的行中指定块组成值
color.settings.yaml.anchor=定位标记/别名
color.settings.yaml.comment=注释
color.settings.yaml.dstring=带双引号的字符串
color.settings.yaml.key=键
color.settings.yaml.name=YAML
color.settings.yaml.scalar.list='|' 块
color.settings.yaml.scalar.text='>' 块
color.settings.yaml.sign=符号\: 大括号、逗号等
color.settings.yaml.string=字符串
color.settings.yaml.text=文本
element.presentation.document.type=YAML 文档
filetype.yaml.description=YAML
find.usages.document=文档
find.usages.key.value=键-值
find.usages.mapping=映射
find.usages.scalar=标量
find.usages.sequence=序列
find.usages.unnamed=<unnamed>
inspections.duplicated.keys.name=重复的 YAML 键
inspections.group.name=YAML
inspections.incompatible.types.message=值的类型为 ''{0}'' ，而其他值使用类型 ''{1}''
inspections.incompatible.types.quickfix.wrap.all.quotes.message=使用引号将所有标量按顺序括起来
inspections.incompatible.types.quickfix.wrap.quotes.message=使用引号括起来
inspections.invalid.child.in.block.mapping=块映射中的子元素无效
inspections.invalid.child.in.block.sequence=块序列中的子元素无效
inspections.invalid.key.indent=块映射键缩进无效
inspections.invalid.list.item.indent=列表项缩进无效
inspections.recursive.alias.message=别名无法递归
inspections.recursive.alias.name=递归别名
inspections.schema.deprecation.name=弃用的 YAML 键
inspections.schema.deprecation.text=键 ''{0}'' 已弃用\: {1}
inspections.schema.validation.name=由 JSON 架构验证
inspections.schema.validation.prefix=架构验证\:
inspections.types.mismatch.name=可疑的类型不匹配
inspections.unresolved.alias.message=无法解析别名 {0}
inspections.unresolved.alias.name=未解析的别名
inspections.unused.anchor.message=定位标记 {0} 从未使用
inspections.unused.anchor.name=未使用的定位标记
inspections.unused.anchor.quickfix.name=移除定位标记
new.name.conflicts.with=键与现有键冲突\: ''{0}''
parsing.error.sequence.item.expected=应为序列条目
rename.invalid.name=''{0}'' 不是有效的键名称
rename.same.name=名称相同
settings.comment.label=注释
suppress.inspection.file=对文件 ''{1}'' 禁止 ''{0}''
suppress.inspection.key=对键 ''{1}'' 禁止 ''{0}''
yaml.intention.category.name=YAML
yaml.intention.name.expand.all.collections.inside=展开内部的所有集合
yaml.intention.name.expand.collection=展开集合
yaml.intention.name.inline.collection=内联集合
yaml.progress.title.expanding.yaml.collection=正在展开 yaml 集合…
yaml.progress.title.inlining.collection=正在内联集合…
yaml.smartkeys.option.paste=粘贴时自动展开键序列
yaml.smartkeys.option.title=YAML
