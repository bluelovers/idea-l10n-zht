annotator.notification.action.configure=配置 'golangci-lint'
annotator.notification.action.do.not.show.again=不再显示
annotator.notification.action.open.custom.config.file=打开 {0}
annotator.notification.action.setup.goroot=设置 GOROOT
annotator.notification.content.diff.needed.for.running.gofmt.goimports.gci=运行 'gofmt/goimports/gci' 需要差异。要么将 <a href\="https\://ftp.gnu.org/gnu/diffutils/">GNU 差异</a> 和 <a href\="https\://ftp.gnu.org/pub/gnu/libiconv/">GNU LibIconv</a> 二进制文件放入 PATH，要么将其禁用
annotator.notification.content.goroot.must.be.set=必须设置 'GOROOT'
annotator.notification.content.invalid.format.config.file=配置文件格式无效
annotator.notification.content.must.enable.at.least.one.linter=必须启用至少一个 linter
annotator.notification.content.syntax.or.typechecking.error=语法或类型检查错误\: {0}
annotator.notification.content.update.golangci.lint=将 'golangci-lint' 更新到最新版本，以便与当前的 Go 语言版本兼容。
annotator.notification.title.go.linter.running.error=Go linter 运行错误
dialog.message.could.not.determine.golangci.lint.executable.version=无法确定可执行文件 {0} 的版本
dialog.message.could.not.find.selected=找不到所选文件 {0}
dialog.title.failed.to.select.linter=无法选择 Linter
download.progress.title.decompressing=正在解压缩到 {0}
download.progress.title.downloading=正在下载 {0}
download.progress.title.getting.metadata=正在获取最新的版本元数据
inspection.go.linter.display.name='golangci-lint' 发出的警告
inspection.message.golangci.lint=golangci-lint ({0})\: {1}
intention.family.name.delete.constant=删除常量
intention.family.name.delete.variable=删除变量
intention.family.name.dereference=解引用
intention.name.add.space.before.comment=添加空格
intention.name.add.switch.cases=添加 case ''{0}''
intention.name.convert.if.to.switch=重写为 'switch'
intention.name.decapitalize.string=将字符串变为小写
intention.name.delete.constant=删除常量 ''{0}''
intention.name.delete.field=删除字段 ''{0}''
intention.name.delete.function=删除函数
intention.name.delete.method=删除方法
intention.name.delete.type=删除类型
intention.name.delete.variable=删除变量 ''{0}''
intention.name.dereference=解引用 ''{0}''
intention.name.end.commit.with.a.dot=在末尾添加 '.'
intention.name.escape.string=转义字符串
intention.name.format.err.with.w=使用 '%w' 设置错误的格式
intention.name.insert.new.line.before=在之前插入新行
intention.name.introduce.const.string=引入常量字符串 {0}
intention.name.merge.import=合并 import
intention.name.outdent.else.branch=减少 'else' 分支的缩进
intention.name.outdent.inner.if.branch=减少内部 'if' 分支的缩进
intention.name.remove.branch=移除分支
intention.name.remove.condition.true=移除条件 'true'
intention.name.remove.whitespace=移除空格
intention.name.rename.package=重命名为 ''{0}'' (注意\: 届时 private 字段将无法访问)
intention.name.rename.to.blank=重命名为 '_'
intention.name.reorder.parameters=对形参重新排序
intention.name.reorder.result.parameters=对结果形参重新排序
intention.name.replace.element.with=替换为 ''{0}''
intention.name.replace.fatal.with.panic=替换为 ''{0}''
intention.name.replace.parameter.type.with=替换为 ''{0}''
intention.name.replace.single.switch.case=重写为 'if'
intention.name.replace.with=替换为 ''{0} \:\= {1}''
intention.name.replace.with.errors.is=重写为 errors.Is
intention.name.replace.with.raw.string=使用原始字符串
intention.name.rewrite.to.errors.is=重写为 'errors.Is'
intention.name.shorten.if.with.assignment=使用赋值缩短 'if'
intention.name.shorten.parameters=缩短形参
intention.name.simplify.chan.select=重写为 'if'
intention.name.simplify.if.return=替换为 ''{0}''
intention.name.suppress.linter.for.func=对函数 ''{1}'' 禁止 linter ''{0}''
intention.name.suppress.linter.here=在此处禁止 linter ''{0}''
intention.name.swap.operands=交换操作数
intention.name.unlambda.defer=Unlambda 推迟
intention.name.unwrap.escape.call=解包 ''{0}''
intention.name.what.is.it=它是什么?
intention.name.why=为什么?
intention.name.wrap.func.with.all=替换为 ''{0}All''
notification.group.go.linter.notifications=Go linter 通知
settings.concurrency.label=并发性\:
settings.configuration.file.checkbox=使用配置\:
settings.configuration.file.edit.button=编辑配置…
settings.configuration.file.edit.dialog.message.invalid.config.file=配置文件无效
settings.configuration.file.edit.dialog.message.no.valid.config.file=没有有效的配置文件
settings.configuration.file.edit.dialog.title.failed.to.open.config=无法打开配置
settings.configuration.path.label.golangci.lint.configuration.files.type='golangci-lint' 配置文件
settings.configuration.path.link.label.documentation=<a href\="https\://golangci-lint.run/usage/configuration/\#config-file">文档</a>
settings.dialog.message.failed.to.discover.linters=无法发现 Linter
settings.download.dialog.title.failed.to.get.latest.release=无法获取最新版本
settings.enable.comment=golangci-lint 发出的警告将显示在编辑器和“问题”视图中。
settings.enable.label=启用 golangci-lint
settings.executable.button.browse=浏览…
settings.executable.button.download=下载…
settings.executable.download.dialog.location.label=位置\:
settings.executable.download.dialog.title=下载 golangci-lint
settings.executable.label=可执行文件\:
settings.executable.list.empty.item=<无 golangci-lint>
settings.fast.label=仅快速 linter
settings.linter.table.column.name.description=描述
settings.linter.table.column.name.linter=Linter
settings.progress.title.downloading.latest.golangci.lint=正在下载最新的 golangci-lint
settings.severity.link.label=配置严重性…
settings.title=Linter
startup.notification.action.configure=配置 'golangci-lint'
startup.notification.action.disable.for.this.project=对此项目禁用
startup.notification.action.enable.for.this.project=对此项目启用
startup.notification.content.configure=配置 'golangci-lint' 形参以启用集成。之后，'golangci-lint' 配置发出的警告将显示在编辑器和“问题”工具窗口中。
startup.notification.content.enable=启用 'golangci-lint' 检查，以便在编辑器和“问题”工具窗口中根据您的 'golangci-lint' 配置显示警告。
startup.notification.content.onboarding=现在，您可以直接在编辑器和“问题”工具窗口中根据您的 'golangci-lint' 配置查看警告。
startup.notification.content.select.config=由于缺少提供的配置文件，已禁用 `golangci-lint` 集成。选择一个新配置以在 GoLand 中启用其集成，并在编辑器和“问题”工具窗口中查看 linter 警告。
startup.notification.title.golangci.lint.config.found=找到 'golangci-lint' 配置文件
startup.notification.title.golangci.lint.config.missing=缺少 'golangci-lint' 配置文件
traffic.light.golangci.lint.running.progress=golangci-lint 检查
