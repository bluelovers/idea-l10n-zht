inspection.checked.exceptions=Kotlin 中的未检查异常
inspection.checked.exceptions.message=未检查的异常\: {0}
inspection.dispatchers.edt.display.name=考虑使用 'Dispatchers.UI'
inspection.dispatchers.edt.text='Dispatchers.EDT' 默认持有写意图锁。这可能会导致 UI 冻结
inspection.dispatchers.edt.to.dispatchers.ui.fix.text=将 'Dispatchers.EDT' 替换为 'Dispatchers.UI'
inspection.extension.class.should.not.be.open.text=扩展类不应打开
inspection.light.service.must.not.be.open.message=轻量服务不能为开放
inspection.public.extension.function.in.test.display.name=intelij.driver.tests 中 Driver/Finder/IdeaFrameUI 上的 public 扩展函数
inspection.use.platform.process.await.exit.display.name=使用 'com.intellij.util.io.ProcessKt.awaitExit()'
inspections.an.explicit.method.should.be.used.to.retrieve.an.application.service.message=提供显式的 'getInstance()' 方法来访问应用程序服务而不是属性
inspections.application.service.as.static.immutable.property.with.backing.field.message=应用程序服务不得指定至具有支持字段的 static 不可变属性
inspections.companion.object.in.extension=扩展中的伴生对象
inspections.companion.object.in.extension.message=IDE 扩展实现中的伴生对象只能包含记录器和常量
inspections.create.object.and.move.prohibited.declarations.fix.text=创建对象并移动禁止的声明
inspections.empty.companion.object.in.extension.message=扩展不应包含伴生对象
inspections.forbidden.method.in.suspend.context=禁止在 suspend 上下文方法中使用
inspections.forbidden.method.in.suspend.context.check.canceled.fix.text=将 'ProgressManager.checkCanceled' 替换为协程友好的 'checkCancelled'
inspections.forbidden.method.in.suspend.context.check.canceled.text=不在 suspend 上下文中调用 'ProgressManager.checkCanceled'。使用顶层 'checkCancelled' 函数
inspections.forbidden.method.in.suspend.context.default.modality.state.text='defaultModalityState()' 在 suspend 上下文中不起作用。如果确实有必要，请使用 'contextModality()'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.fix.text=将 'invokeAndWait' 调用替换为 'withContext(Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.text='invokeAndWait' 可能会阻塞当前协程。请改用 'Dispatchers.EDT'
inspections.forbidden.method.in.suspend.context.invoke.later.fix.launch.text=将 'invokeLater' 替换为 'launch(Dispatchers.EDT)'
inspections.forbidden.method.in.suspend.context.invoke.later.fix.with.context.text=(可能会改变语义)将 'invokeLater' 调用替换为 'withContext(Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.later.text='invokeLater' 在 suspend 上下文中非惯用。请改用 'Dispatchers.EDT'
inspections.forbidden.method.in.suspend.context.navigate.to.suspend.context=导航到 suspend 上下文
inspections.forbidden.method.in.suspend.context.text=使用 @RequiresBlockingContext 注解的方法 ''{0}''。它不是为在 suspend 函数中调用而设计的
inspections.move.prohibited.declarations.to.top.level.fix.text=将禁止的声明移至顶层
inspections.plugin.extension.registers.kotlin.object=扩展类为 Kotlin 对象
inspections.plugin.kotlin.object.registered.as.extension=注册为扩展的 Kotlin 对象
inspections.remove.empty.companion.object.fix.text=移除空的伴生对象
intention.checked.exceptions.add.annotation=添加用于重新抛出已检查异常的注解
intention.checked.exceptions.surround.with.try.catch=使用 try/catch 包围
