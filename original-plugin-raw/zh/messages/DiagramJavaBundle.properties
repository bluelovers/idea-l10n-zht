action.NewJavaDiagram.text=Java 类图
command.name.create.new.java.class.diagram=创建新 Java 类图
dialog.message.undo.creating.java.class.diagram.0=撤消创建 Java 类图 {0}?
dialog.description.set.diagram.name=设置图表名称
dialog.message.do.you.want.to.remove.dependency.from.0.to.1=您是否希望从 {0} 中移除对 {1} 的依赖?
dialog.message.error=错误
dialog.message.expression.0.is.invalid=表达式 ''{0}'' 无效
dialog.title.create.0=创建 {0}
dialog.title.create.java.class.diagram=创建 Java 类图
dialog.title.remove.dependency=移除依赖项
dialog.title.undo=撤消
popup.title.select.target.module=选择目标模块                         
popup.title.usages.of.0={0} 的用法
task.title.calculating.module.cyclic.dependencies=计算模块循环依赖关系
task.title.calculating.paths.between.modules=计算模块之间的路径
validation.info.0.already.exists={0} 已存在
validation.info.bad.class.name=类名错误
validation.info.directory.shouldn.t.be.empty=目录不应为空
notification.message.no.paths.to.module.0.have.been.found=未找到模块 {0} 的路径
action.name.create.new.java.interface=创建新 Java 接口
action.name.create.new.java.record=创建新 Java 记录
notification.message.no.cyclic.dependencies=未找到模块 {0} 的循环依赖关系
action.name.new.enum.constant=新建枚举常量
notification.message.only.few.paths.have.been.shown=仅显示了很少的路径
action.name.create.new.java.field=创建新 Java 字段
action.name.create.new.java.enum=创建新 Java 枚举
action.name.create.new.java.class=创建新 Java 类
action.name.new.java.constructor=新建 Java 构造函数
action.name.create.new.method=创建新方法
show.module.cyclic.dependencies=显示模块循环依赖关系
add.elements.to.diagram=向图表中添加元素
show.paths.to.a.module=显示模块路径
add.dependency=添加依赖项…
add.dependency.for.a.module=添加模块的依赖项
create.new.modifier=修饰符:
none.modifier=[无]
java.diagram.implementation.title={0} 的实现
enter.module.name=输入模块名称
action.NewModulesDiagram.text=模块依赖关系图
action.NewJigsawModuleDiagram.text=Java 模块图
group.Uml.Analyze.text=分析
config.element.show.one.to.one=显示一对一
config.element.show.one.to.many=显示一对多
config.element.show.usages=显示用法
config.element.show.cyclic=显示循环
config.element.others=其他
category.name.libraries=库
category.name.test.dependencies=测试依赖关系
create.new.field.empty.type=类型为空
create.new.field.empty.name=名称为空
create.edge.command.name.annotation=使用 {1} 注解 {0}
create.edge.command.name.extends=使 {0} 扩展 {1}
create.edge.command.name.implements=使 {0} 实现 {1}
create.edge.command.name.remove.link=移除 {0} 与 {1} 之间的链接
unknown.node.tooltip=未知
package.info.message=<html><body>软件包 <font color=green>{0}</font><br>包含:<br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<font color=blue>{1}</font> 个{2,choice,0#类|1#class|2#类}<br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<font color=blue>{3}</font> 个{4,choice,0#子软件包|1#子软件包|2#子软件包}<br>总共: <br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<font color=blue>{5}</font> 个{6,choice,0#类|1#类|2#类}<br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<font color=blue>{7}</font> 个{8,choice,0#子软件包|1#子软件包|2#子软件包}</body></html>
unknown.module.item=-未知-
unnamed.empty.library=未命名的空库
new.class.choose.package=选择软件包
create.new.field.visibility=可见性:
create.new.field.type=类型:
create.new.field.name=名称:
create.new.field.initializer=初始值设定项(如需要)
create.new.field.make.final=<html><body>设为 <b color="#000080">final</b></body></html>
create.new.field.make.static=<html><body>设为 <b color="#000080">static</b></body></html>
new.class.dialog.name=名称:
new.class.dialog.package=软件包:
new.class.dialog.target.dir=目标目录(&D):
node.constructor.tooltip=构造函数
node.constructor.tooltip.description=创建新的构造函数