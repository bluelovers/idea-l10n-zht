ChangeSetWrapItem.noId=无 ID
LiquibaseGitAuthorProvider.source=Git 用户
LiquibaseSettingsAuthorProvider.source=Liquibase 设置
LiquibaseSystemUserAuthorProvider.source=系统用户
SettingsPage.liquibase.autoDetectedVersion=自动检测版本\: {0}
SettingsPage.liquibase.libraryNotFound=找不到 Liquibase 库
Validation.cannot.compile.custom.naming.strategy=无法编译自定义命名物理策略类
Validation.changeLogFileExists=指定目录中已存在使用此名称的更改日志文件
Validation.maxIdentifier.incorrect.number=最大数据库标识符长度无效\:“{0}”
Validation.maxIdentifier.less.10=最大数据库标识符长度必须大于 10
action.AddLiquibaseChangeLog.text=添加更改日志
action.AddLiquibaseChangeSet.text=添加更改集
action.CreateDiffLiquibaseChangeLog.text=创建 Liquibase 更改日志
action.CreateInitLiquibaseChangeLog.text=Liquibase 初始化更改日志
action.CreateLiquibaseChangelogFromTemplate.description=为版本化数据库更改创建新的 Liquibase 更改日志文件
action.CreateLiquibaseChangelogFromTemplate.text=Liquibase 更改日志
action.CreateLiquibaseDiff.description=创建 Liquibase 差异更改
action.CreateLiquibaseDiff.text=Liquibase 差异更改
action.CreateLiquibaseInit.description=创建 Liquibase 初始化架构
action.CreateLiquibaseInit.text=Liquibase 初始化架构
action.CreateLiquibaseSnapshot.text=数据模型快照
action.LiquibaseRemoveAndIgnore.text=移除并忽略
action.LiquibaseRemoveFromChangeLog.text=从更改日志中移除
action.MoveToAnotherLiquibaseChangeLogFile.text=移至另一个更改日志
action.RemoveFromLiquibaseIgnore.text=从忽略状态还原
action.RemoveLiquibaseChangesActionGroup.text=从更改日志中移除
action.RunLiquibaseUpdate.text=Liquibase 更新
action.SetLiquibaseContext.text=设置上下文
action.SetLiquibaseLabel.text=设置标签
action.reload=重新加载
actions.create.liquibase.changelog.name=创建 Liquibase 更改日志文件
add.liquibase.change=添加 Liquibase 更改
all.foreign.key.constraints=所有外键约束
alter.sequence=改变序列
append.changes=追加更改
attribute.not.found=找不到实体特性\: {0}
attribute.table=特性表
attribute.type.is.empty=“{0}”特性类型为空
audit.table.prefix=审核表前缀
audit.table.suffix=审核表后缀
author=作者
auto.increment=自动递增
base.column.names=基列名
base.table.name=基表名称
button.show.sql=显示 SQL
button.update=更新
cache.db.schema=数据库架构缓存
cannot.map.sql.type=无法将 Java 类型映射到 SQL/Liquibase 类型
change.createNew=创建新更改集
change.log=更改日志
change.log.dir.outside.root=源或资源根之外的更改日志目录
change.log.field.is.required=数据库更改日志“{1}”需要字段“{0}”
change.set=更改集
change.set.already.contains.index=更改集“{0}”已包含名称为“{1}”的创建索引
change.set.already.contains.procedure=更改集“{0}”已包含名称为“{1}”的创建过程
change.set.already.contains.sequence=更改集“{0}”已包含名称为“{1}”的创建序列
change.set.already.contains.table=更改集“{0}”已包含名称为“{1}”的创建表
change.set.already.contains.view=更改集“{0}”已包含名称为“{1}”的创建视图
change.set.field.is.required=更改集“{1}”需要字段“{0}”
changeSet.addRollback=向不支持隐式更改集的更改集添加空回滚
changeSet.author=更改集作者
changeSet.createPreconditions=创建前提条件
changeSet.fileType=文件类型
changeSet.templates=更改集模板
changelog.command.addIncludeChangelogTags=添加 Include 更改日志标记
changelog.field.empty.text=例如 src/main/resources/db/changelog/db.changelog-master.xml
changelog.preview=更改日志预览
changelog.save=保存
changelog.tag.add.not.null.constraint.not.found=找不到添加非 null 约束的数据库更改日志标记
changelog.velocity.template.description=<ul><li>宏 <b>\#date([format])</b> - 根据 SimpleDateFormat 规范返回处理的当前系统日期。</li><li>宏 <b>\#increment([start], [step], [decimalFormat])</b> - 根据 DecimalFormat 规范返回起始值。<br>如果名称不唯一，则继续添加步骤。</li><li>变量 <b>semVer</b> - 语义版本控制是一种广泛采用的版本方案，它使用三位数字序列(主版本号.次版本号.修订号)、可选的预发布标记和可选的构建元标记。</li></ul>
choose.change.log=选择更改日志
choose.change.set=选择更改集
class=类
column=列
column.name.attribute.type=特性类型
column.name.name=名称
column.name.table.column.constraint.index.name=表/列/约束/索引名称
column.name.tag.name=标记名称
column.name.target.type=目标类型
column.name.type=类型
column.name.type.parameter=类型形参
column.name.value=值
columns=列
columns.field.tooltip=列的名称。如有多个则用逗号分隔
columns.field.tooltip.constraint=要在上面创建{0}的列的名称。如有多个则用逗号分隔
command.name.append.changes.to.exists.changelog.file=将更改追加到现有更改日志文件
command.name.create=创建{0}
command.name.create.change.set=创建更改集和{0}
command.name.create.changelog.file=创建更改日志文件
command.name.writing.changelog.file=正在写入更改日志文件
constraint.name=约束名称
context=上下文
copy.query.to.console=将查询复制到数据库控制台
create.index.for.fk=为关联外键约束创建索引
custom.change=自定义更改
database.mappingTypes=映射类型
database.migration.description=<html>数据库迁移设置允许您定义和重新定义现有映射 SQL 类型。</html>
database.migration.not.empty.dbms=数据库应具有非空 DBMS 类型
database.migration.unsedDbId=<取消设置数据库 ID>
database.versioning=数据库版本控制
db=数据库
db.change.log.files.already.exists=<html>以下文件已存在。</br>是否要将生成的更改添加到这些文件?<ul>{0}</ul></html>
db.connection=数据库连接
db.not.synchronized=当数据库与 JPA 实体不同步时，会发生此异常。<br/>生成 DDL 以升级数据库，运行它并重复该操作。
db.to.snapshot.diff.unavailable=数据库到快照差异不可用
db.type=数据库类型
db.type.selection=数据库类型选择
db.type.selection.descr=<html>请选择数据库类型以生成更改日志文件。<br>将来，您可以在设置中更改您的选择\: <i>文件</i> -> <i>设置…</i> -> <i>工具</i> -> <i>数据库版本控制</i> -> <i>Liquibase</i></html>
ddl.by.entities.preview=按实体的 DDL 预览
ddl.preview=DDL 预览
default.connection.persistence.unit=持久性单元的默认连接
default.value=默认值
delete=删除
description=描述
diff.changes.generator.error=差异更改生成器错误
diff.changes.location=位置
diff.context=上下文
diff.danger.level=危险等级
diff.database.change.log=差异数据库更改日志
diff.ddl=差异 DDL
diff.labels=标签
diff.liquibase.changelog=差异 Liquibase 更改日志
diff.source.description=比较的源。referenceURL 特性代表您的源数据库，它是您要比较的数据库的起点和基础。
diff.source.description.title=模型的实际状态
diff.source.title=源(referenceURL)
diff.target.description=比较的目标。url 特性代表您要与源数据库进行比较的目标数据库。您通常会针对此数据库执行操作并运行命令。
diff.target.description.title=模型的上一个状态
diff.target.title=目标(URL)
diffChanges.configurable.title=差异更改
directory=目录
driver.class=驱动程序类
empty.changeSet=空 changeSet
envers.audit.version=将乐观锁定属性视为未进行版本管理
envers.default.schema=包含审核表的架构的默认名称
envers.global.with.modified.flag=激活修改的属性标志功能
envers.modified.flag.suffix=修改的标志列的后缀
envers.revision.field.name=修订字段名
envers.revision.type.field.name=修订类型字段名称
envers.track.entities.changed=跟踪每次修订期间更改的实体名称
envers.use.spring.properties=使用 *.properties 文件中指定的值
exclude.from.liquibase.diff.generation=排除来自 liquibase/flyway 差异生成的更改
existing.column.name=现有列名
existing.table.name=现有表名
explicitly.specify.map.sql.type=您可以在<a href\="{0}"><b>类型映射</b>设置</a>中显式指定 SQL/Liquibase 映射类型。
file=文件
file.name=文件名
file.type=文件类型
final.column.name=最终列名
final.column.type=最终列类型
first.column.name=第一列名称
fixes.createChangelogFamily=创建更改日志
fixes.createDiffChangelogFile=创建差异更改日志文件
fixes.createEmptyChangelogFile=创建空更改日志文件
foreign.key.constraint=外键约束
generate.diff.changes=生成差异更改
generate.liquibase.diff.change.log=正在生成差异更改
generate.liquibase.diff.schema=生成 Liquibase 差异更改
generate.liquibase.init.change.log=正在生成初始化更改
generate.liquibase.init.schema=生成 Liquibase 初始化架构
generate.liquibase.snapshot=生成数据模型快照
generated.empty.ddl=已生成空 DDL
generating.diff.canceled=生成差异更改已被取消
generating.snapshot.canceled=生成快照已被取消
generating.sql=正在生成 SQL…
generating.sql.canceled=生成 SQL 已被取消
generation.time=生成时间 - {0} 秒
hsqldb.file.path.not.absolute=仅支持文件 HSQL 数据库的绝对路径。请提供 ''{0}'' 数据库的绝对路径。
id=ID
include=包含
include.all=包含全部
include.context=包含上下文
include.folder=包含文件夹
include.to=包含到
incorrect.increment.by=按值递增不正确 -“{0}”
incorrect.start.value=起始值不正确 -“{0}”
increment.by=递增方式
index=索引
index.name=索引名称
init.ddl=初始化 DDL
init.schema.changelog=初始化架构更改日志
insert=插入
inspection.message.unknown.table=未知表 ''{0}''
integratedSecurityInstructionForIdeaUltimate=如果您使用 <b>Windows 凭据</b>身份验证，为了成功连接，请按照以下步骤操作\:<ol><li>确保 JDBC URL 包含 <b>;integratedSecurity\=true</b> 形参。请参阅<a href\="https\://docs.microsoft.com/sql/connect/jdbc/building-the-connection-url?view\=sql-server-ver15\#connection-examples">详细信息</a>。</li><li>下载 <a href\="{0}">Windows 身份验证库归档</a></li><li>将下载的 jar 文件解压到“{1}”目录</li><li>重启 IDEA</li></ol>
invalid.snapshot.path=快照文件不存在或无效
invalid.update.change.log.file=无效的更改日志文件
java.type=特性/转换器/Hibernate 类型
join.string=联接字符串
json.snapshot=数据模型快照
labels=标签
liquibase=Liquibase
liquibase.change.category.column=列
liquibase.change.category.comment=评论
liquibase.change.category.foreignKey=外键
liquibase.change.category.index=索引
liquibase.change.category.primaryKey=主键
liquibase.change.category.sequence=序列
liquibase.change.category.table=表
liquibase.change.category.uniqueConstraint=唯一约束
liquibase.change.location.hide=忽视
liquibase.change.location.ignore=标记为忽略
liquibase.change.location.primary=主要
liquibase.change.location.secondary=辅助
liquibase.changelog=新建 Liquibase 更改日志
liquibase.changelog.templates=更改日志模板
liquibase.changelog.xml=XML 格式
liquibase.changelog.yaml=YAML 格式
liquibase.common.panel.use.persistent.unit.strategy=使用持久单元策略
liquibase.common.panel.useByDefault=默认使用 {0}
liquibase.db.types=数据库类型
liquibase.init.changelog=Liquibase 初始化更改日志
liquibase.library.not.found=找不到 Liquibase 库
liquibase.library.not.found.description=<html>无法执行“Liquibase 更新”操作。<br/>请向 Liquibase 添加依赖项(maven、gradle 等)或通过<b>项目结构</b>对话框添加 Liquibase 库。
liquibase.run.configuration.type.description=Liquibase 更新配置
liquibase.run.configuration.type.name=Liquibase
liquibase.successful.message=更新已成功
liquibase.update=Liquibase 更新
liquibase.version=Liquibase 版本
load.data=加载数据
load.schema.from.db.each.time=每次从数据库加载架构
load.update.data=加载更新数据
loading.database.model.canceled=加载数据库模型已被取消
loading.database.model.error=加载数据库模型时出错
log.level=日志级别
lookup.table=查找表
mapping.type.editor=映射类型编辑器
max.db.identifier.length=最大数据库标识符长度
merge.changes.successful=合并更改成功\!
merge.columns=合并列
model=模型
modify.data.type=修改数据类型
modifying.type.is.not.available.during.indexing=索引更新期间无法修改映射类型。<br>请关闭设置对话框并等待索引编制完成。
name=姓名
named=命名
navigate.parent.changelog=导航到父更改日志
new.column.name=新列名
new.data.type=新数据类型
new.liquibase.database.change.log=新 Liquibase 数据库更改日志
new.sequence.name=新序列名称
new.table.name=新表名
new.view.name=新视图名称
no.changes.found=未检测到更改\!
no.exclude.changes=没有排除的更改
no.override.mappings=没有重写映射
no.select.db.type=请至少选择一个数据库类型
not.null.constraint=非 null 约束
notification.content.db.changelog.file=数据库更改日志文件\: {0}\n{1}
notification.specify.liquibase.version=显式指定版本以激活 Liquibase 功能
notification.title.error.liquibase.updating=Liquibase 更新时出错
old.column.name=旧列名
old.sequence.name=旧序列名称
old.table.name=旧表名
old.view.name=旧视图名称
path=路径
physical.naming.strategy=物理命名策略
primary.changelog.dir=主目录
primary.changelog.name=主名称
primary.key=主键
primary.key.constraint=主键约束名称
problem.closing.connection=无法正确关闭数据库连接。以下步骤可能会失败。
procedure=过程
procedure.name=过程名称
property=属性
referenced.column.names=被引用的列名
referenced.column.names.tooltip=外键指向的列。如有多个则用逗号分隔
referenced.table.name=被引用的表名
refresh.custom.naming.strategy=重新加载自定义物理命名策略类
relative.to.changelog.file=相对于更改日志文件
remarks=备注
remove.selected=移除所选
root.changelog.file=根更改日志文件\:
same.column.names=列名不能相同
same.sequence.names=序列名称不能相同
same.table.names=表名不能相同
same.view.names=视图名称不能相同
save=保存
save.and.run.generation=保存并运行生成
save.as=另存为
save.mapping=保存映射类型
save.mapping.description=<html>无法自动将某些数据库类型映射到 Java 类型。请在下表中定义映射。IDEA 会记住您的选择并将其应用于进一步的逆向工程操作。您可以随时在设置中更改保存的映射配置(工具 -> JPA 逆向工程 -> 映射类型)。
scope=作用域\:
scratch.file=临时文件
second.column.name=第二列名称
secondary.changelog.dir=次级目录
secondary.changelog.name=次级名称
select.all.danger.level=选择全部 {0}
select.change.dialog.newChangeLog=新更改日志
select.change.dialog.newChangeSet=新更改日志
select.db.connection=选择数据库连接
select.mapping.type=请至少选择一个要保存的映射类型
select.persistence.unit=选择持久性单元
select.snapshot.file=选择快照文件
sequence=序列
sequence.name=序列名称
sequence.naming.strategy=序列命名策略
sequence.naming.strategy.AUTO_DETECT=自动检测
sequence.naming.strategy.SEQUENCE_PER_ENTITY=按实体的序列
sequence.naming.strategy.SINGLE_SEQUENCE=单序列
sequence.naming.strategy.comment=仅适用于 Hibernate 6
set.column.remarks=设置列备注
set.table.remarks=设置表备注
set.value=设置值
settings.changes.title=高亮显示级别用于 <b>Liquibase 更改日志</b>或 <b>Flyway 版本化迁移</b><br>预览对话框，允许您一次性进行多项选择并轻松处理许多类似的更改集。<br>您还可以完全禁用某些类别的更改生成。
show.other.actions=显示其他操作
show.project.snapshots=显示项目快照
show.sql.error=显示 SQL 错误
slow.loading.detected.msg=如果逆向工程时未更改数据库架构，我们建议启用数据库架构缓存。
slow.loading.detected.title=检测到数据库连接速度缓慢
snapshot=快照
snapshot.dir=快照目录
snapshot.file.exist.message=快照文件“{0}”已存在。\n是否要替换它?
snapshot.file.exist.title=替换文件
snapshot.filename=快照文件名
source.root=源根
source.type=源类型
source.value=源值
sql=SQL
sql.file=SQL 文件
start.value=起始值
tab.title.liquibase.update=Liquibase 更新
table=表
table.name=表名
tag=标记
tag.database=标记数据库
target.type=目标类型
target.type.help=<html>为了简化类型映射，数据库版本控制引入了与数据库无关的 SQL 类型，这些类型会被转换为特定于数据库的类型。例如，对于 Oracle 数据库，<code>varchar</code> 会被转换为 <code>varchar2</code>，而对于 PostgreSQL，则会保留为 <code>varchar</code>。<br><br>每种与数据库无关的类型都具有一组别名(例如 <code>java.sql.Types.VARCHAR</code> 或 <code>character varying</code>)，这些别名在大多数情况下可以互换。<br><br>未知类型按原样使用，不进行任何转换。<html>
target.type.is.empty=“{0}”目标类型为空
trustServerCertificateInstructionForIdeaUltimate=确保 JDBC URL 包含 <b>;trustServerCertificate\=true</b> 形参。请参阅<a href\="https\://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-with-ssl-encryption">详细信息</a></li>。
turn.on.cache.db.schema=启用数据库架构缓存
type.parameters=类型形参
type.parameters.help=<html>数据库版本控制允许指定在生成脚本时应考虑哪些形参。您可以自定义每个数据库的行为。<br><br>假设在持久层上设置特性精度和小数位数值。在这种情况下，您可以选择 "nothing" 值，将生成不带这些形参的脚本。<html>
typeMappings.configurable.title=类型映射
unable.to.resolve.changelog.info=无法解析更改日志信息
undefined.mapping.detected.description=<html>无法自动将某些 Java 类型映射到 SQL/Liquibase 类型。<br>请在下表中定义映射并再次运行脚本生成。
undefined.mapping.detected.title=检测到未定义的映射
unique.constraint=唯一约束
unlimited.db.identifier.length=无限制数据库标识符长度
unnamed=未命名
unnecessary.changes.columns.change=更改
unnecessary.changes.detected=检测到不必要的更改
unnecessary.changes.detected.description=<html>合并更改后，很可能不再需要以下更改。<br>选择要移除的更改。
update=更新
update.null.values=更新 NULL 值
update.successful=数据库“{0}”已更新
updating.database.canceled=更新数据库已被取消
value=值
value.type=值类型
view=查看
view.name=视图名称
