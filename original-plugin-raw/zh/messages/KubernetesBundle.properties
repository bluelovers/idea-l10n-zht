ApplyCrdIntentionAction.text=将此自定义资源定义用作验证架构
ChartElementDescriptionProvider.helm.object.title=Helm 对象
ChartElementDescriptionProvider.helm.value.title=Helm 值
ChartRenameHandler.code.references.text={0} 与 {1} 个文件中出现的图表值匹配
ChartRenameHandler.command.name=重命名图表值
ChartRenameHandler.file.already.exists={0} 中已存在使用此名称的文件或目录
ChartRenameHandler.illegal.char.in.value=值包含非法字符
ChartRenameHandler.invalid.go.template.identifier=值不是有效的 Go 模板标识符(在模板文件中使用)
ChartRenameHandler.label.text.1=重命名图表值“{0}”
ChartRenameHandler.label.text.3=重命名图表 {0} 及其所有引用
ChartRenameHandler.preliminary.finding.usage.process.name=正在查找用法…
ChartRenameHandler.processed.elements.header.1=重命名图表值
ChartRenameHandler.processed.elements.header.2=重命名图表
ContextsTree.root.node.text=所有上下文
ContextsTree.search.empty.text=搜索
ContextsTreeDialog.ask.to.merge.description=其他 Kubernetes 客户端也可以使用此文件。您只能通过手动修改文件来从中移除上下文。
ContextsTreeDialog.ask.to.merge.text=将所选上下文添加到 {0}
ContextsTreeDialog.context.0.defined.in.multiple.kubeconfig.files.1.and.2=无法将上下文 ''{0}'' 添加到 {1}，因为其已在该处定义。<br>''{0}'' 已在多个 kubeconfig 文件中定义\:<br>{1}，<br>{2}
ContextsTreeDialog.context.already.exists.text=上下文已存在
ContextsTreeDialog.merge.text=上下文将被添加到 {0}
ContextsTreeDialog.saving.contexts.progressTitle=正在将上下文保存到 {0}
ContextsTreeDialog.selected.nodes.count.text={0}/{1}
ConvertListToMultiDocumentIntentionAction.text=将列表转换为多文档 YAML
ConvertMultiDocumentToListIntentionAction.text=将多文档 YAML 转换为列表
DateTimeUtilities.formatAge.day=1 天
DateTimeUtilities.formatAge.days={0} 天
DateTimeUtilities.formatAge.fewSeconds=几秒
DateTimeUtilities.formatAge.hour=1 小时
DateTimeUtilities.formatAge.hours={0} 小时
DateTimeUtilities.formatAge.minute=1 分钟
DateTimeUtilities.formatAge.minutes={0} 分钟
DateTimeUtilities.formatAge.month=1 个月
DateTimeUtilities.formatAge.months={0} 个月
DateTimeUtilities.formatAge.year=1 年
DateTimeUtilities.formatAge.years={0} 年
DeprecatedResourcesInspection.deprecated.kind=''{0}'' 在 ''{1}'' 中被弃用
EmbeddedKustomizeVersion.EMBEDDED.title=2.0.3(嵌入 kubectl v1.14-v1.20)
EmbeddedKustomizeVersion.STANDALONE.title=4.x (组件、内联补丁、'replicas'、'envs' 等)
FindAndApplyMatchingCrdQuickFix.no.crd.found.text=在此项目中找不到与该资源相匹配的自定义资源定义。<p\\>如果您知道它位于项目外部，可以考虑将它<a href\="\#">包含</a>在外部架构规范列表中，以进行适当验证
FindAndApplyMatchingCrdQuickFix.text=查找并将匹配的自定义资源定义用作验证架构
FlowProcessExecutor.process.not.started=进程未启动
HelmActionBase.notification.error.text=无法执行 Helm 命令。确保 Helm 已安装，并且其位置在 PATH 变量中。
HelmActionBase.notification.title=Kubernetes
HelmAddRepository.no.spaces.allowed.message=不允许使用空格
HelmAddRepositoryDialog.authentication.parameters=身份验证形参
HelmAddRepositoryDialog.basic.parameters=基本形参
HelmAddRepositoryDialog.invalid.url.message=URL 无效
HelmAddRepositoryDialog.must.not.be.empty.message=不得为空
HelmAddRepositoryDialog.password=密码
HelmAddRepositoryDialog.username=用户名
HelmChartMissingKeysInspection.display.name=缺少 Chart.yaml 键
HelmChartUnknownKeysInspection.display.name=未知 Chart.yaml 键
HelmChartUnknownValuesInspection.add.repository.quickfix.adding.repo.task.name=添加 Helm 仓库
HelmChartUnknownValuesInspection.add.repository.quickfix.enter.repository.name=Helm 仓库名称\:
HelmChartUnknownValuesInspection.add.repository.quickfix.enter.repository.url=Helm 仓库 URL\:
HelmChartUnknownValuesInspection.add.repository.quickfix.getting.repo.list.task.name=正在从 Helm Hub 获取 Helm 仓库列表
HelmChartUnknownValuesInspection.add.repository.quickfix.name=添加仓库
HelmChartUnknownValuesInspection.add.repository.quickfix.name.preview=运行 'helm repo add' 命令以添加仓库连接。
HelmChartUnknownValuesInspection.cannot.find.added.repository.name.message=找不到名称为 ''{0}'' 的仓库
HelmChartUnknownValuesInspection.cannot.find.added.repository.url.message=尚未添加仓库 ''{0}''
HelmChartUnknownValuesInspection.cannot.find.chart.in.repository.message=无法在仓库中找到此图表
HelmChartUnknownValuesInspection.chart.deprecated.message=图表已弃用
HelmChartUnknownValuesInspection.display.name=Chart.yaml 值无效
HelmChartUnknownValuesInspection.invalid.chart.name.message=图表名称必须等于图表的目录名称
HelmChartUnknownValuesInspection.invalid.chart.name.quickfix.name=使图表名称等于图表的目录名称
HelmChartUnknownValuesInspection.invalid.repository.url.message=URL 无效
HelmChartUnknownValuesInspection.invalid.semver.message=SemVer 值无效
HelmChartUnknownValuesInspection.invalid.semver.requirement.message=SemVer 要求无效
HelmChartUnknownValuesInspection.move.dependencies.to.chart.yaml.quickfix.name=将依赖项移至 Chart.yaml 并移除 requirements.yaml
HelmChartUnknownValuesInspection.no.suitable.chart.message=无法在仓库中找到合适的图表版本
HelmChartUnknownValuesInspection.requirements.no.longer.used.message=Helm 3.0 和更高版本中不再使用 requirements.yaml
HelmCommandParametersDialog.additional.values.comment=指定以 <code>\\&lt;key expression\\&gt;\=\\&lt;value expression\\&gt;</code> 形式传递 <code>--set</code> 形参的值(查看<a href\='https\://helm.sh/docs/intro/using_helm/\#customizing-the-chart-before-installing'>更多信息</a>)。用逗号或行分隔不同的值
HelmCommandParametersDialog.additional.values.label=附加值
HelmCommandParametersDialog.default.title=Helm 命令形参
HelmCommandParametersDialog.do.not.show.message=在此图表上执行 Helm 命令时跳过此对话框
HelmCommandParametersDialog.ok.button.title=继续
HelmCommandParametersDialog.values.files.popup.title=可用的值文件
HelmCommandParametersDialog.values.files.table.comment=Helm 要使用的值文件列表
HelmCommandParametersDialog.values.files.table.empty.text=添加 Helm 要使用的值文件
HelmCommandParametersDialog.values.files.table.empty.text.no.files.exist=在此图表中找不到值文件
HelmCommandParametersDialog.values.files.table.label=值文件
HelmConsoleServiceViewContributor.presentation.text=Helm 控制台
HelmConvertRepositoryAliasToUrlAction.family.name=将 Helm 仓库别名转换为 URL
HelmConvertRepositoryAliasToUrlAction.text=转换为 URL
HelmConvertRepositoryUrlToAliasAction.family.name=将 Helm 仓库 URL 转换为别名
HelmConvertRepositoryUrlToAliasAction.text=转换为别名
HelmCreateChartAction.input.dialog.label.text=名称\:
HelmCreateChartAction.mkdir.failure.message=无法在 {0} 下创建图表目录
HelmCreateChartAction.notification.subtitle=正在创建 Helm 图表
HelmCreateChartAction.notification.title=Kubernetes
HelmCreateChartAction.task.title=创建新的 Helm 图表
HelmIndex.refresh.helm.configuration.task.title=正在刷新 Helm 配置
HelmIndex.refresh.helm.repository.list.task.title=正在刷新 Helm 仓库列表
HelmInstallAction.description=自动下载并安装 Helm
HelmInstallAction.title=安装 Helm
HelmJsonSchemaService.schema.file.provider.name=自定义值架构
HelmLintAction.task.title=Helm Lint
HelmPanel.repeat.last.command.text=重复上一条命令
HelmRepositoryAnnotator.name=Helm 仓库操作
HelmUpdateDependenciesAction.task.title=Helm 依赖项更新
HelmUpdateDependenciesIntentionAction.family.name=更新 Helm 图表依赖项
HelmUpdateDependenciesIntentionAction.text=更新依赖项
HelmUpdateRepositoryAction.task.title=正在更新 Helm 仓库
HelmUpdateRepositoryAction.text=更新仓库
HelmViewTemplateRenderAction.diff.window.left.title=模板源
HelmViewTemplateRenderAction.diff.window.right.title=结果
HelmViewTemplateRenderAction.diff.window.title={0} 的模板结果
HelmViewTemplateRenderAction.no.result.message=Helm 未返回 {0} 的模板结果
HelmViewTemplateRenderAction.notification.subtitle=正在渲染 Helm 模板
HelmViewTemplateRenderAction.notification.title=Kubernetes
HelmViewTemplateRenderAction.select.context.dialog.text=选择呈现上下文
HelmViewTemplateRenderAction.task.title=呈现 Helm 模板
KubectlExecutor.BaseProcessListener.progressTitle.template=Kubernetes\: {0}
KubectlExecutor.BaseResultProcessListener.notCompleteAuthentication.message=身份验证信息不完整
KubectlExecutor.apply.progressTitle=正在将配置应用到集群
KubectlExecutor.create.progressTitle=正在创建新资源
KubectlExecutor.delete.progressTitle=正在从集群中删除资源
KubectlExecutor.download.deployment.log.progressTitle=正在下载部署日志
KubectlExecutor.download.pod.log.progressTitle=正在下载 Pod 日志
KubectlExecutor.downloadOpenApi.progressTitle=正在下载 OpenAPI 规范
KubectlExecutor.getConfiguration.progressTitle=正在获取配置
Kubernetes=Kubernetes
Kubernetes.ConfigFileJsonSchemaProvider.name=kubeconfig 架构
Kubernetes.Executables.NotificationGroup.title=Kubernetes\: 可执行文件
Kubernetes.General.NotificationGroup.title=Kubernetes
Kubernetes.db.container.port=容器端口\:
Kubernetes.db.data.load.error=从集群获取数据时出错\: 
Kubernetes.db.host.port=主机端口\:
Kubernetes.db.invalid.port={0} 端口号应介于 0 和 65535 之间
Kubernetes.db.kubernetes.key=Kubernetes 面板
Kubernetes.db.no.error.message=<no error message> 
Kubernetes.db.panel.name=Kubernetes
Kubernetes.db.use.port.forwarding.label=使用 Kubernetes 端口转发
Kubernetes.template.context.type=Kubernetes
KubernetesAnyOfType.value.matches.none.schemas.error=该值与任意 anyOf 架构都不匹配
KubernetesApiVersionType.validation.unknown.api.version=未知 API 版本
KubernetesBackgroundableProcessIndicator.cancel.text=取消
KubernetesBackgroundableProcessIndicator.cancel.tooltip=取消请求
KubernetesCachedValueBasedServiceViewContributorBase.refreshing.text=正在刷新…
KubernetesConfigurable.apiVersionTitle=Kubernetes API 版本
KubernetesConfigurable.check.configuration.error.text=无法检查配置
KubernetesConfigurable.check.configuration.inprogress.text=正在检查
KubernetesConfigurable.check.configuration.problems.detected.details.text=检测到问题。请参阅外部规范列表了解详细信息。
KubernetesConfigurable.check.configuration.success.text=成功检查
KubernetesConfigurable.check.configuration.title=检查配置
KubernetesConfigurable.configure.cluster.link.title=配置集群设置
KubernetesConfigurable.context.not.configured=<未配置上下文>
KubernetesConfigurable.context.to.use.title=要使用的上下文
KubernetesConfigurable.crdSpec.add.files.title=添加文件
KubernetesConfigurable.crdSpec.add.url.title=添加 URL
KubernetesConfigurable.crdSpec.column.title=自定义资源定义(CRD)或 OpenAPI 规范的本地路径或 URL
KubernetesConfigurable.crdSpec.empty.text.files=文件
KubernetesConfigurable.crdSpec.empty.text.url=URL
KubernetesConfigurable.crdSpec.empty.text1=未添加外部规范。 通过以下方式添加规范 {0}\:
KubernetesConfigurable.crdSpec.empty.text2=或
KubernetesConfigurable.crdSpec.help.link.title=关于支持的外部规范格式
KubernetesConfigurable.displayName=Kubernetes
KubernetesConfigurable.get.spec.from.cluster.title=使用活动集群中的 API 架构(如果可用)
KubernetesConfigurable.kustomizeVersionTitle=Kustomize 版本
KubernetesConfigurable.latestVersion=最新版本
KubernetesConfigurable.reset.schema.cache.success.text=完成
KubernetesConfigurable.reset.schema.cache.title=重置架构缓存
KubernetesConfigurable.reset.schema.cache.tooltip=导致重新下载/重新读取所有架构规范
KubernetesConfigurable.scope.column.title=作用域
KubernetesConfigurable.scope.ide=IDE
KubernetesConfigurable.scope.project=项目
KubernetesConfigurable.spec.status.available=可用
KubernetesConfigurable.status.column.title=状态
KubernetesConfigurable.status.column.tooltip=上次读取尝试的结果
KubernetesConfigurationServiceViewContributor.RefreshAction.description=刷新配置
KubernetesConfigurationServiceViewContributor.descriptorName=配置
KubernetesConfigurationSettingsPanel.PathColumn.name=路径
KubernetesConfigurationSettingsPanel.ValidityColumn.name=有效
KubernetesConfigurationSettingsPanel.callRefreshAfterPerformingAction.text=执行某些操作后刷新集群资源
KubernetesConfigurationSettingsPanel.invalid.kubeconfig.file=无效的 kubeconfig\: {0}
KubernetesConfigurationSettingsPanel.panel.emptyText=由 kubectl 确定
KubernetesConfigurationSettingsPanel.watchKubeConfigCheckbox.text=自动重新加载配置
KubernetesCreateNewSecretDialog.dialog.create=创建
KubernetesCreateNewSecretDialog.edit.entry.dialog=编辑条目
KubernetesCreateNewSecretDialog.new.entry.dialog=新建条目
KubernetesCreateNewSecretDialog.new.entry.dialog.file=文件\:
KubernetesCreateNewSecretDialog.new.entry.dialog.file.data.validation=文件路径不得为空
KubernetesCreateNewSecretDialog.new.entry.dialog.file.doesnt.exist=指定路径下的文件不存在
KubernetesCreateNewSecretDialog.new.entry.dialog.key=密钥\:
KubernetesCreateNewSecretDialog.new.entry.dialog.key.validation=“键”字段不得为空
KubernetesCreateNewSecretDialog.new.entry.dialog.value=值\:
KubernetesCreateNewSecretDialog.new.entry.dialog.value.validation=“值”字段不得为空
KubernetesCreateNewSecretDialog.secret.action.add.data.from.file.text=使用文件数据…
KubernetesCreateNewSecretDialog.secret.action.add.data.manually.text=手动添加…
KubernetesCreateNewSecretDialog.secret.annotation.name.validation=注解限定符名称不能为空
KubernetesCreateNewSecretDialog.secret.annotation.name.validation.characters=注解限定符名称必须由小写字母数字字符(az 或 0-9)、'-'、'_' 或 '.' 组成
KubernetesCreateNewSecretDialog.secret.annotation.name.validation.end=注解限定符名称必须以小写字母数字字符(az 或 0-9)结尾
KubernetesCreateNewSecretDialog.secret.annotation.name.validation.length=注解限定符名称不得包含超过 63 个字符，但{0}
KubernetesCreateNewSecretDialog.secret.annotation.name.validation.start=注解限定符名称必须以小写字母数字字符(az 或 0-9)开头
KubernetesCreateNewSecretDialog.secret.annotation.prefix.validation=注解键前缀不能为空
KubernetesCreateNewSecretDialog.secret.annotations=注解
KubernetesCreateNewSecretDialog.secret.dns.name.validation.characters={0} 必须由小写字母数字字符(az 或 0-9)、''-'' 或 ''.'' 组成
KubernetesCreateNewSecretDialog.secret.dns.name.validation.domain={0} 中的每个子域都必须以小写字母数字字符(az 或 0-9)开头和结尾
KubernetesCreateNewSecretDialog.secret.dns.name.validation.end={0} 必须以小写字母数字字符(az 或 0-9)结尾
KubernetesCreateNewSecretDialog.secret.dns.name.validation.length={0} 不得超过 253 个字符，但{1}
KubernetesCreateNewSecretDialog.secret.dns.name.validation.start={0} 必须以小写字母数字字符(az 或 0-9)开头
KubernetesCreateNewSecretDialog.secret.entry.key=密钥
KubernetesCreateNewSecretDialog.secret.entry.validation=必须指定所需密钥 `{0}` 的值
KubernetesCreateNewSecretDialog.secret.entry.value=值
KubernetesCreateNewSecretDialog.secret.name=名称\:
KubernetesCreateNewSecretDialog.secret.name.validation=名称不能为空
KubernetesCreateNewSecretDialog.secret.namespace=命名空间\:
KubernetesCreateNewSecretDialog.secret.stringData=数据
KubernetesCreateNewSecretDialog.secret.type=类型\:
KubernetesCreateNewSecretDialog.secret.validation.annotation.prefix=注解键前缀
KubernetesCreateNewSecretDialog.secret.validation.name=名称
KubernetesCreateNewSecretDialog.title=创建新密钥
KubernetesCronJobMapper.activeField.name=有效
KubernetesCronJobMapper.lastScheduleField.name=最后一个调度
KubernetesCronJobMapper.lastScheduleField.tooltip.template={0} 最后调度
KubernetesCronJobMapper.scheduleField.name=计划
KubernetesCronJobMapper.suspendField.name=挂起
KubernetesCustomResourceDefinitionContent.resourcesContent.displayName=资源
KubernetesCustomResourceDefinitionMapper.scopeField.name=作用域
KubernetesDeploymentContent.log.title=日志\: {0}
KubernetesDeprecatedPropertiesInspection.display.name=弃用的 Kubernetes 资源属性
KubernetesDeprecatedResourcesInspection.display.name=弃用的 Kubernetes 资源
KubernetesDocumentationProvider.any.combination=任意 <b>string\:string</b> 键值组合
KubernetesDocumentationProvider.any.value=任意值
KubernetesDocumentationProvider.no.description.message=未提供描述
KubernetesDocumentationProvider.unstructured.object=任意对象
KubernetesDuplicatedEnvVarInspection.display.name=重复的 EnvVar 定义
KubernetesDuplicatedEnvVarInspection.duplicated.message=EnvVar ''{0}'' 重复
KubernetesEnvVarInspection.quickfix.name=移除此 EnvVar
KubernetesEventMapper.creationTimestampField.name=创建时间戳
KubernetesEventMapper.lastSeenField.name=上次见到
KubernetesEventMapper.lastSeenField.tooltip.template=上次见于 {0}
KubernetesEventMapper.messageField.name=消息
KubernetesEventMapper.objectField.name=对象
KubernetesFoldingSettings.collapse.env.vars=YAML 文件中的 EnvVar 定义
KubernetesFoldingSettings.collapse.exec.actions=YAML 文件中的 ExecAction 定义
KubernetesFoldingSettings.collapse.helm.values=Helm 模板中的值引用
KubernetesIngressMapper.endpointsField.name=端点
KubernetesJobMapper.inProgressField.name=进行中
KubernetesJson6902JsonSchemaProvider.name=RFC6902 JSON 补丁架构
KubernetesLabelKeyRenameHandler.code.references.text={0} 个文件中的 {0} 个匹配标签匹配项
KubernetesLabelKeyRenameHandler.command.name=重命名 Kubernetes 对象标签键
KubernetesLabelKeyRenameHandler.full.name=“{0}”键
KubernetesLabelKeyRenameHandler.processed.elements.header=正在重命名以下位置的键 ''{0}''
KubernetesLabelType.inspection.invalid.key.message=标签键无效
KubernetesLabelType.inspection.invalid.value.message=标签值无效
KubernetesLabelValueRenameHandler.code.references.text={0} 个文件中的 {0} 个匹配标签匹配项
KubernetesLabelValueRenameHandler.command.name=重命名 Kubernetes 对象标签
KubernetesLabelValueRenameHandler.full.name=“{0}”标签值
KubernetesLabelValueRenameHandler.processed.elements.header=正在重命名以下位置的标签 ''{0}\: {1}''
KubernetesLogsSettingsPanel.askWhereToDownloadRadioButton.text=下载前询问日志的保存位置
KubernetesLogsSettingsPanel.downloadPath.emptyText=下载到临时目录
KubernetesLogsSettingsPanel.downloadPath.errorMessage=路径不存在或不代表目录
KubernetesLogsSettingsPanel.downloadPathRadioButton.text=下载日志的路径\:
KubernetesLogsSettingsPanel.selectDownloadPath.title=选择下载路径
KubernetesLogsSettingsPanel.timestampedLogNameCheckbox.text=将时间戳附加到日志文件名
KubernetesMapResourceEntryDescriptionProvider.UsageViewLongNameLocation.text={0} 条目 ''{1}''
KubernetesMapResourceEntryDescriptionProvider.UsageViewNodeTextLocation.inCluster.text=在集群中
KubernetesMapResourceEntryDescriptionProvider.UsageViewTypeLocation.text={0} 条目
KubernetesMapResourceEntryRenameHandler.code.references.text={1} 个文件中的 {0} 个用法
KubernetesMapResourceEntryRenameHandler.command.name=重命名映射条目
KubernetesMapResourceEntryRenameHandler.invalid.name.error=条目名称无效
KubernetesMapResourceEntryRenameHandler.processed.elements.header=正在重命名以下位置的条目 ''{0}''
KubernetesMissingKeysInspection.display.name=缺少 Kubernetes YAML 键
KubernetesMissingKeysInspection.kustomize.add.name.quick.fix.name=添加缺少的资源名称
KubernetesMissingKeysInspection.kustomize.missing.patch.name.message=Kustomize 资源补丁元数据对象中缺少名称字段
KubernetesModelDefinition.directory.not.exist.error=该目录不存在
KubernetesModelDefinition.file.not.exist.error=该文件不存在
KubernetesModelDefinition.file.or.dir.not.exist.error=该文件或目录不存在
KubernetesModelDefinition.json.file.expected.error=此处应为 JSON 补丁文件的路径
KubernetesModelDefinition.missing.required.property.error=缺少必需属性 ''{0}''
KubernetesModelDefinition.string.value.expected.error=应为字符串值
KubernetesModelDefinition.value.should.match.error=该值应匹配 {0}
KubernetesModelDefinition.value.should.not.greater.error=该值不应大于 {0}
KubernetesModelDefinition.value.should.not.greater.or.equal.error=该值不应大于或等于 {0}
KubernetesModelDefinition.value.should.not.less.error=该值不应小于 {0}
KubernetesModelDefinition.value.should.not.less.or.equal.error=该值不应小于或等于 {0}
KubernetesModelDefinition.value.too.long.error=该值的长度不应大于 {0} 个字符
KubernetesModelDefinition.value.too.short.error=该值的长度不应小于 {0} 个字符
KubernetesModelDefinition.yaml.file.expected.error=此处应为 YAML Kubernetes 资源文件的路径
KubernetesModelDefinition.yaml.k8sResourceOrJsonPatch.expected.error=此处应为 YAML Kubernetes 资源文件或 JSON 补丁的路径
KubernetesModelProvider.model.cluster.spec.loading.error=无法从集群检索 API 规范\: {0}\:\n
KubernetesModelProvider.model.loading.background.task.title=正在下载 Kubernetes 外部规范
KubernetesModelProvider.model.loading.bad.urls.error=无法从 URL 加载外部规范\:\n
KubernetesModelProvider.model.loading.file.error=无法从 {0} 读取 OpenAPI 规范\: {1}
KubernetesModelProvider.model.loading.missing.files.error=找不到外部规范文件\:
KubernetesModelProvider.model.loading.processing.definition.error=在文件 {1} 中处理定义 {0} 时出错\: {2}
KubernetesModelProvider.model.loading.unresolved.definition.error=文件 {1} 中存在未解析的类型引用 {0}
KubernetesNamespacedApiHelper.AllNamespaces.namespace=所有命名空间
KubernetesNamespacedResourceMapper.imagesField.name=图像
KubernetesNamespacedResourceMapper.namespaceField.name=命名空间
KubernetesNamespacedResourceMapper.readyField.name=就绪
KubernetesNamespacedResourceMapper.resourceDisplayableName.template=命名空间 ''{1}'' 中的 {0}
KubernetesNamespacedResourceMapper.typeField.name=类型
KubernetesNamespacesSettingsPanel.NamespaceColumn.name=命名空间
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line1=添加命名空间
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line2=以在无法从集群
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line3=加载时使用
KubernetesNetworkServiceViewContributor.descriptorName=网络
KubernetesNodeMapper.conditionsField.name=条件
KubernetesNonEditablePropertiesInspection.display.name=不可编辑的 Kubernetes 资源属性
KubernetesNonEditableResourcesInspection.display.name=不可编辑的 Kubernetes 资源
KubernetesNotType.value.not.valid.error=该值对 NOT 架构无效\: {0}
KubernetesNotification.external.spec.added.message={0} 已添加到外部架构规范列表中
KubernetesNotification.model.loading.subtitle=正在加载模型
KubernetesNotification.title=Kubernetes
KubernetesNotificationManager.message.title=Kubernetes
KubernetesNotificationManager.requestError.title=Kubernetes 请求错误
KubernetesOneOfType.value.must.match.one.schema.error=该值必须与 oneOf 架构之一完全匹配
KubernetesPersistentVolumeClaimMapper.volumeField.name=卷
KubernetesPersistentVolumeMapper.claimField.name=声明
KubernetesPersistentVolumeMapper.reclaimPolicyField.name=回收策略
KubernetesPodContainerDownloadLogAction.title=将日志下载到
KubernetesPodContent.console.title=控制台\: {0}
KubernetesPodContent.log.title=日志\: {0}
KubernetesPodContent.ports.title=地址\: {0} 端口\:{1}
KubernetesPodContent.shell.title=Shell\: {0}
KubernetesPodMapper.nodeField.name=节点
KubernetesPodMapper.restartsField.name=重启
KubernetesPodShellSettingsPanel.projectShellCommand.emptyText=继承的全局 shell 命令\: {0}
KubernetesPodShellSettingsPanel.resetProjectShellCommand.message=为此项目配置的 Shell 命令可以针对所有项目进行全局设置，或者还原为当前全局命令
KubernetesPodShellSettingsPanel.resetProjectShellCommand.title=项目 shell 命令
KubernetesPodShellSettingsPanel.setShellCommandGlobalCheckbox.text=针对所有项目全局设置此 shell 命令
KubernetesPodShellSettingsPanel.shellCommandLabel.text=在容器中运行 shell 的命令\:
KubernetesPortForwardingPanel.contexts.row.label=上下文\:
KubernetesPortForwardingPanel.loading.contexts.progress.title=正在加载上下文
KubernetesPortForwardingPanel.loading.namespaces.progress.title=正在加载命名空间
KubernetesPortForwardingPanel.loading.resources.progress.title=正在加载资源
KubernetesPortForwardingPanel.namespaces.row.label=命名空间\:
KubernetesPortForwardingPanel.resource.type.not.configured=<未配置资源类型>
KubernetesPortForwardingPanel.resource.types.row.label=资源类型\:
KubernetesPortForwardingPanel.resources.row.label=资源\:
KubernetesResourceContent.informationContent.displayName=信息
KubernetesResourceInformationPanel.CopyValueAction.description=将选中的值复制到剪贴板
KubernetesResourceInformationPanel.CopyValueAction.text=复制值
KubernetesResourceInformationPanel.nameColumn.name=名称
KubernetesResourceInformationPanel.valueColumn.name=值
KubernetesResourceKindType.validation.unknown.resource.kind=未知资源
KubernetesResourceMapper.accessModesField.name=访问模式
KubernetesResourceMapper.ageField.name=存在时间
KubernetesResourceMapper.ageField.tooltip.template={0} 创建
KubernetesResourceMapper.capacityField.name=容量
KubernetesResourceMapper.labelsField.name=标签
KubernetesResourceMapper.nameField.name=名称
KubernetesResourceMapper.reasonField.name=原因
KubernetesResourceMapper.resourceDisplayableName.template={0} ''{1}''
KubernetesResourceMapper.statusField.name=状态
KubernetesResourceMapper.storageClassField.name=存储类
KubernetesResourceRenameHandler.code.references.text={1} 个文件中的 {0} 个用法
KubernetesResourceRenameHandler.command.name=重命名 Kubernetes 资源
KubernetesResourceRenameHandler.invalid.name.error=资源名称无效
KubernetesResourceRenameHandler.processed.elements.header=正在重命名以下位置的资源 ''{0}''
KubernetesResourceRenameHandler.unable.noInClusterRenames.warning=注意\: 集群内资源不会重命名
KubernetesRootType.displayName=Kubernetes 文件
KubernetesSecretKeyValueServiceViewDescriptor.showValue.text=显示值…
KubernetesSecretServiceViewContributor.binaryData.message=二进制数据
KubernetesServiceMapper.clusterIPField.name=集群 IP
KubernetesServiceMapper.externalIPsField.name=外部 IP
KubernetesServiceMapper.portsField.name=端口
KubernetesServiceViewContributor.Descriptor.name=Kubernetes
KubernetesStorageClassMapper.parametersField.name=形参
KubernetesStorageClassMapper.provisionerField.name=配置程序
KubernetesStorageServiceViewContributor.descriptorName=存储
KubernetesStringSetting.resetProjectValue.no=还原
KubernetesStringSetting.resetProjectValue.yes=设为全局
KubernetesStructureViewBuilder.kubernetes.resource.definition=Kubernetes 资源
KubernetesTestButtonComponent.installButton.text=安装
KubernetesTestButtonComponent.testButton.text=测试
KubernetesTestButtonComponent.testResultLabel.download.progress.title=正在下载 {0}…
KubernetesTestButtonComponent.testResultLabel.not.found=找不到 {0}
KubernetesTestButtonComponent.testResultLabel.progressTitle=测试…
KubernetesTestButtonComponent.testResultLabel.tool.installed={0} 已安装
KubernetesTestButtonComponent.testResultLabel.tool.not.installed=无法安装 {0}
KubernetesToolLocationsPanel.helm.not.found.text=找不到 Helm
KubernetesToolLocationsPanel.helmPathLabel.text=Helm 可执行文件的路径\:
KubernetesToolLocationsPanel.kubectl.not.installed=kubectl 未安装
KubernetesToolLocationsPanel.kubectl.version.progressTitle=正在获取 kubectl 版本
KubernetesToolLocationsPanel.kubectl.version.unrecognized.message=无法识别的 kubectl 版本\: {0}
KubernetesToolLocationsPanel.kubectlPathLabel.text=kubectl 可执行文件路径\:
KubernetesToolLocationsPanel.selectHelmExecutable.title=选择 Helm 可执行文件
KubernetesToolLocationsPanel.selectKubectlExecutable.title=选择 kubectl 可执行文件
KubernetesUnknownKeysInspection.display.name=未知 Kubernetes YAML 键
KubernetesUnknownResourcesInspection.display.name=未知 Kubernetes 资源
KubernetesUnknownValuesInspection.display.name=未知 Kubernetes YAML 值
KubernetesViewConfigurable.configurationRow.title=配置
KubernetesViewConfigurable.displayName=Kubernetes
KubernetesViewConfigurable.logsRow.title=日志(全局设置)
KubernetesViewConfigurable.namespacesRow.title=命名空间(无法从集群加载时应用)
KubernetesViewConfigurable.podShellRow.title=Pod Shell
KubernetesViewConfigurable.toolLocations.title=工具位置(全局设置)
KubernetesWorkloadsServiceViewContributor.descriptorName=工作负载
KustomizePatchNotificationProvider.message=此文件配置为 Kustomize 补丁
KustomizePatchNotificationProvider.popup.title=转到 kustomization
LabelContainerAnnotator.name=Kubernetes 标签导航
LabelContainerAnnotator.targetList.definitions.title=标签定义
LabelContainerAnnotator.targetList.notFound=未找到匹配 {0}
LabelContainerAnnotator.targetList.selectors.title=标签选择器
LabelContainerAnnotator.targetList.title=转到匹配 {0}
MapObjectDefinitions.entry.not.found=找不到 {0} 条目
MapObjectDefinitions.resource.not.found=找不到 {0}
MapObjectValidator.duplicate.entry=重复 {0} 条目
MapObjectValidator.quickfix.name=移除此条目
MapObjectValidator.unquoted.value.entry=不推荐 `{0}` 部分中未加引号的值
MapObjectValidator.unquoted.value.quickfix.name=添加引号
MarkFileAsNonKubernetesQuickFix.text=将此文件标记为非 Kubernetes
MissingGoTemplatePluginNotificationProvider.enable.plugin=启用 Go 模板插件
MissingGoTemplatePluginNotificationProvider.install.plugin=安装 Go Template 插件
MissingGoTemplatePluginNotificationProvider.message=需要 Go Template 插件才能完全支持 Helm 文件
NonEditableResourcesInspection.noneditable.apiVersion=''{0}'' 没有可编辑的资源
NonEditableResourcesInspection.noneditable.kind=''{0}'' 在 ''{1}'' 中为只读
OutdatedModelNotificationProvider.ignore.title=忽略此修改
OutdatedModelNotificationProvider.message=用于验证的外部规范文件之一已被修改
OutdatedModelNotificationProvider.reload.title=重新加载架构
Scope.Column.name=范围
Scope.Global.displayName=全局
Scope.Project.displayName=项目
SetKubeConfigFile.text=将 ''{0}'' 设置为当前项目的 kubeconfig 文件
Telepresence.install.traffic.manager.prompt=在上下文 ''{0}'' 和命名空间 ''{1}'' 中找不到 Telepresence 流量管理器，是否安装?
Telepresence.install.traffic.manager.title=安装流量管理器
Telepresence.upgrade.traffic.manager.prompt=在上下文 ''{0}'' 和命名空间 ''{1}'' 中找到的流量管理器已过时，是否升级?
Telepresence.upgrade.traffic.manager.title=升级流量管理器
TelepresenceInterceptionDialog.button.telepresence.intercept=拦截
TelepresenceInterceptionDialog.dialog.message.specify.ports.to.intercept=指定要拦截的端口
TelepresenceInterceptionDialog.dialog.title.telepresence.intercept.options=Telepresence 拦截选项
TelepresenceInterceptionDialog.label.telepresence.advanced.options=高级选项\:
TelepresenceInterceptionDialog.label.telepresence.ports=端口\:
TelepresenceInterceptionDialog.label.telepresence.service=服务
TelepresenceInterceptionDialog.label.text.select.service.to.intercept=选择要拦截的服务
TelepresenceInterceptionDialog.notification.content.no.services.to.intercept=没有要拦截的服务
TelepresenceInterceptionDialog.text.specify.additional.options.for.telepresence.html=<p>为 `telepresence intercept` 命令指定任何其他选项。示例\: <code>--mechanism tcp</code></p>
TelepresenceInterceptionDialog.text.specify.ports.to.intercept.html=<p>指定要拦截的端口，用空格或逗号分隔。示例\: <code>8080, 8443\:grpc</code></p>
TelepresenceNotificationGroup.title=Telepresence
ValueOverrideAnnotator.name=被重写的图表值
ValueOverrideAnnotator.overridden.list.emptyMessage=未找到被重写的值
ValueOverrideAnnotator.overridden.list.title=被重写的值
ValueOverrideAnnotator.overridden.tooltip=转到被重写的值
ValueOverrideAnnotator.overriding.list.emptyMessage=未找到重写值
ValueOverrideAnnotator.overriding.list.title=重写值
ValueOverrideAnnotator.overriding.tooltip=转到重写值
action.Kubernetes.AddContext.description=从默认目录添加 Kubernetes 上下文
action.Kubernetes.AddContext.text=来自默认目录…
action.Kubernetes.AllNamespaces.description=显示来自所有命名空间的信息
action.Kubernetes.AllNamespaces.text=所有命名空间
action.Kubernetes.Apply.description=将文件中的配置应用于集群
action.Kubernetes.Apply.text=应用(未配置当前上下文)
action.Kubernetes.Apply.text.confirmation=将 {0} 个{0, choice, 1\#文件|2\#文件}应用于上下文 ''{1}'' 和命名空间 ''{2}''
action.Kubernetes.Apply.text.updated=应用于上下文 ''{0}'' 和命名空间 ''{1}''
action.Kubernetes.AttachContext.description=从 kubeconfig 文件附加 Kubernetes 上下文
action.Kubernetes.AttachContext.text=从自定义 kubeconfigs…
action.Kubernetes.ClusterResourceWatcher.description=启用/禁用自动监视启动
action.Kubernetes.ClusterResourceWatcher.text=默认自动刷新各个集群资源
action.Kubernetes.CompareWithCluster.description=从集群加载内容并显示与当前文件的差异
action.Kubernetes.CompareWithCluster.text=与集群比较
action.Kubernetes.CompareWithCluster.text.updated=与上下文 ''{0}'' 和命名空间 ''{1}'' 进行比较
action.Kubernetes.ConfigureExternalSchema.description=配置外部架构规范
action.Kubernetes.ConfigureExternalSchema.text=配置
action.Kubernetes.ConfigureHelmParameters.description=配置此图表的常用 Helm 命令形参
action.Kubernetes.ConfigureHelmParameters.text=配置 Helm 形参(&P)
action.Kubernetes.CreateNewSecret.description=创建新密钥
action.Kubernetes.CreateNewSecret.text=创建新密钥…
action.Kubernetes.CreateResource.description=创建 Kubernetes 资源文件(YAML)
action.Kubernetes.CreateResource.name=创建 Kubernetes 资源“{0}”
action.Kubernetes.CreateResource.text=Kubernetes 资源
action.Kubernetes.CustomizeNamespaces.description=自定义命名空间列表
action.Kubernetes.CustomizeNamespaces.text=自定义命名空间…
action.Kubernetes.CustomizeNotifications.description=自定义通知
action.Kubernetes.CustomizeNotifications.text=自定义通知…
action.Kubernetes.Delete.description=从集群中删除文件中定义的资源
action.Kubernetes.Delete.text=删除(未配置当前上下文)
action.Kubernetes.Delete.text.updated=从上下文 ''{0}'' 和命名空间 ''{1}'' 中删除
action.Kubernetes.DeleteResource.confirmation.message=删除{0}?
action.Kubernetes.DeleteResource.confirmation.title=删除
action.Kubernetes.DeleteResource.confirmation.yes=删除
action.Kubernetes.DeleteResource.description=从集群删除资源
action.Kubernetes.DeleteResource.text=删除资源
action.Kubernetes.DeploymentDownloadLog.description=下载日志…
action.Kubernetes.DeploymentDownloadLog.named.description=下载部署日志 ''{0}''
action.Kubernetes.DeploymentDownloadLog.text=下载日志
action.Kubernetes.DeploymentFollowLog.description=关注日志…
action.Kubernetes.DeploymentFollowLog.named.description=关注部署日志 ''{0}''
action.Kubernetes.DeploymentFollowLog.text=关注日志
action.Kubernetes.DescribeResource.description=描述集群中的资源，并在编辑器中显示结果
action.Kubernetes.DescribeResource.text=描述资源
action.Kubernetes.FindUsages.description=在项目源中查找用法
action.Kubernetes.FindUsages.text=查找用法
action.Kubernetes.HelmCreateChart.description=创建新图表
action.Kubernetes.HelmCreateChart.text=Helm 图表
action.Kubernetes.HelmDependencyUpdate.description=更新图表的依赖项
action.Kubernetes.HelmDependencyUpdate.text=Helm 依赖项更新(&D)
action.Kubernetes.HelmGenerateDependency.description=向 'dependencies' 部分添加新的依赖项
action.Kubernetes.HelmGenerateDependency.text=Helm 依赖项
action.Kubernetes.HelmLint.description=检查图表中可能存在的问题
action.Kubernetes.HelmLint.text=Helm Lint(&L)
action.Kubernetes.HelmTemplateDiff.description=显示图表模板结果
action.Kubernetes.HelmTemplateDiff.text=Helm 模板(&T)
action.Kubernetes.HowToInstallKubectlAction.description=如何安装 kubectl…
action.Kubernetes.HowToInstallKubectlAction.text=如何安装 Kubectl…
action.Kubernetes.InstallKubectl.description=下载并安装最新的稳定版 kubectl
action.Kubernetes.InstallKubectl.text=安装 kubectl
action.Kubernetes.Namespace.description=显示来自命名空间 ''{0}'' 的信息
action.Kubernetes.Namespaces.description=选择命名空间
action.Kubernetes.Namespaces.text=命名空间(&N)
action.Kubernetes.OpenKubeConfig.text=在编辑器中打开 kubeconfig 文件
action.Kubernetes.PasteContextContent.description=从 kubeconfig 内容附加 Kubernetes 上下文
action.Kubernetes.PasteContextContent.editor.dialog.row.title=粘贴 kubeconfig 内容\:
action.Kubernetes.PasteContextContent.text=粘贴 kubeconfig 内容…
action.Kubernetes.PodDownloadLog.description=下载容器 ''{0}'' 的日志
action.Kubernetes.PodDownloadLog.text=下载日志
action.Kubernetes.PodFollowLog.description=关注容器 ''{0}'' 的日志
action.Kubernetes.PodFollowLog.text=关注日志
action.Kubernetes.PodForwardPorts.Dialog.addresses.incorrect.message=地址不正确\: `{0}`。仅允许 IP 地址或 `localhost`
action.Kubernetes.PodForwardPorts.Dialog.addresses.labelText=地址\:
action.Kubernetes.PodForwardPorts.Dialog.okButton.text=转发
action.Kubernetes.PodForwardPorts.Dialog.ports.incorrect.message=端口映射不正确
action.Kubernetes.PodForwardPorts.Dialog.ports.labelText=端口\:
action.Kubernetes.PodForwardPorts.Dialog.title=转发端口
action.Kubernetes.PodForwardPorts.description=将端口转发到 pod
action.Kubernetes.PodForwardPorts.text=转发端口…
action.Kubernetes.PodOpenConsole.description=打开容器 ''{0}'' 的控制台
action.Kubernetes.PodOpenConsole.text=打开控制台
action.Kubernetes.PodRunShell.description=在容器 ''{0}'' 中运行 shell
action.Kubernetes.PodRunShell.text=运行 Shell
action.Kubernetes.RefreshConfiguration.description=从集群重新加载缓存配置和信息并重新读取 API 架构
action.Kubernetes.RefreshConfiguration.text=重新加载配置
action.Kubernetes.RefreshModel.custom.description=刷新{0}
action.Kubernetes.RefreshModel.description=从集群刷新信息
action.Kubernetes.RefreshModel.text=刷新(&R)
action.Kubernetes.RefreshResourcesDumbAwareAction.text=刷新集群操作
action.Kubernetes.ReloadContent.description=从集群重新加载内容，并在编辑器中更新
action.Kubernetes.ReloadContent.text=从集群重新加载内容
action.Kubernetes.ReloadContent.text.updated=从上下文 ''{0}'' 和命名空间 ''{1}'' 重新加载内容
action.Kubernetes.SetCurrentContext.not.selected.text=将当前上下文设置为 ''{0}''
action.Kubernetes.SetCurrentContext.selected.text=当前上下文 ''{0}''
action.Kubernetes.ShowSettings.description=显示集群视图设置
action.Kubernetes.ShowSettings.text=显示集群设置…
action.Kubernetes.StopPortForwarding.description=停止进程并关闭标签页
action.Kubernetes.StopPortForwarding.text=停止并关闭
action.Kubernetes.ToggleKubeConfigWatcher.description=配置在 kubeconfig 文件更改时重新加载
action.Kubernetes.ToggleKubeConfigWatcher.text=自动重新加载配置
action.Kubernetes.ToggleWatcher.start.watching.description=停止自动刷新集群资源
action.Kubernetes.ToggleWatcher.stop.watching.description=开始自动刷新集群资源
action.Kubernetes.ToggleWatcher.watching.text=自动刷新集群(&R)
action.Kubernetes.ViewYAML.description=从集群加载 YAML 并在编辑器中显示
action.Kubernetes.ViewYAML.text=查看 YAML
action.Kubernetes.go.to.file.text=转到文件
action.Kubernetes.new.file.command.name=创建新的 Kubernetes 文件
action.Kubernetes.reload.content.command.name=重新加载内容
action.KubernetesPod.ForwardPorts.Dialog.addresses.comment=<p>要侦听的地址(逗号分隔)。仅接受 IP 地址或 localhost 作为值</p>
action.KubernetesPod.ForwardPorts.Dialog.ports.comment.template=<p>端口映射格式为 <code>\\&lt;local port\\&gt;\:\\&lt;remote port\\&gt;</code>，<br>例如\: {0}</p>
action.Telepresence.ConnectInterception.description=将 Telepresence 连接到集群，启用拦截
action.Telepresence.ConnectInterception.text=连接 Telepresence
action.Telepresence.ConnectInterception.text.alt=连接 Telepresence…
action.Telepresence.CreateInterception.description=创建 Telepresence 拦截
action.Telepresence.CreateInterception.text=使用 Telepresence 拦截
action.Telepresence.CreateInterceptionFromList.description=创建 Telepresence 拦截
action.Telepresence.CreateInterceptionFromList.sentence.text=创建新拦截
action.Telepresence.CreateInterceptionFromList.text=创建新拦截
action.Telepresence.LeaveInterception.description=移除现有拦截
action.Telepresence.LeaveInterception.dialog.message=是否退出拦截 ''{0}''?
action.Telepresence.LeaveInterception.dialog.title=移除
action.Telepresence.LeaveInterception.dialog.yes=退出
action.Telepresence.LeaveInterception.text=退出拦截
action.Telepresence.Quit.description=退出 Telepresence 并停止守护进程
action.Telepresence.Quit.text=退出 Telepresence
action.refresh.interceptions.description=刷新拦截
advanced.setting.kubernetes.config.maxFileSizeMb=要加载的 kubeconfig 文件的最大大小
advanced.setting.kubernetes.crd.maxFileSizeMb=要加载的 CRD YAML 文件的最大大小
binary.installation.calculating.hash.progress.title=正在计算下载的二进制文件的校验和…
binary.installation.download.failed=无法下载 {0}''
binary.installation.downloading.binary.progress.title=正在从 ''{0}'' 下载二进制文件…
binary.installation.failed=二进制文件安装失败
binary.installation.make.executable.failed=无法将 ''{0}'' 设为可执行文件
binary.installation.move.to.installation.dir=正在将二进制文件移至 ''{0}''
binary.installation.move.to.installation.dir.failed=无法将二进制文件移至安装目录\: ''{0}''
binary.installation.progress.title=正在安装二进制文件…
binary.installation.search.failed=找不到所下载的具有预期名称的二进制文件\: ''{0}''
binary.installation.succeeded=已成功将二进制文件 ''{0}'' 安装到 ''{1}''
binary.installation.verification.failed=无法验证下载。预期校验和与实际校验和不匹配
connecting.telepresence.sudo.prompt=输入您的 sudo 帐户密码以启动 Telepresence 守护进程\:
connecting.telepresence.sudo.title=Telepresence 守护进程启动
create.resource.certificatesigningrequest.title=CertificateSigningRequest
create.resource.clusterrole.title=ClusterRole
create.resource.clusterrolebinding.title=ClusterRoleBinding
create.resource.configmap.title=ConfigMap
create.resource.cronjob.title=CronJob
create.resource.daemonset.title=DaemonSet
create.resource.deployment.title=部署
create.resource.ingress.title=Ingress
create.resource.job.title=作业
create.resource.namespace.title=命名空间
create.resource.pod.title=Pod
create.resource.popup.title=新建 Kubernetes 资源
create.resource.role.title=角色
create.resource.rolebinding.title=RoleBinding
create.resource.secret.title=Secret
create.resource.service.title=服务
custom.resource.definitions.download.progressTitle=正在下载自定义资源定义
default.tab.name=Kubernetes 内容
dialog.Telepresence.install.suggest=在当前机器上找不到 Telepresence，要安装吗?
dialog.Telepresence.install.suggest.upgrade=Telepresence 版本低于 ''{0}''，是否要将其升级到 ''{1}''?
dialog.Telepresence.install.suggest.win=请<a href\="{0}">访问 Telepresence 网站</a>获取说明
dialog.Telepresence.install.telepresence.not.installed=Telepresence 未安装
dialog.Telepresence.install.telepresence.upgrade=Telepresence 应升级
empty.content.editor.text=在“服务”中选择 Kubernetes 节点
group.Kubernetes.AddContexts.getting.contexts.progressTitle=正在获取上下文
group.Kubernetes.AddContexts.text=添加上下文
group.Kubernetes.AddServiceActions.text=Kubernetes
group.Kubernetes.ClusterInteractionActions.text=与集群交互
group.Kubernetes.HelmActions.text=Helm(&H)
group.Kubernetes.MoreActions.description=显示其他操作…
group.Kubernetes.MoreActions.text=更多(&M)
group.Kubernetes.PodDownloadLog.description=下载日志…
group.Kubernetes.PodDownloadLog.text=下载日志
group.Kubernetes.PodFollowLog.description=关注日志…
group.Kubernetes.PodFollowLog.text=关注日志
group.Kubernetes.PodOpenConsole.description=打开控制台…
group.Kubernetes.PodOpenConsole.text=打开控制台
group.Kubernetes.PodRunShell.description=Shell 运行位置…
group.Kubernetes.PodRunShell.text=运行 Shell
group.Kubernetes.RefreshResources.text=刷新集群操作
group.Kubernetes.SetCurrentContext.description=设置要使用的上下文
group.Kubernetes.SetCurrentContext.text=设置当前上下文
kubectl.not.found.notification.content=请确保 kubectl 已安装并添加到 PATH 或在设置中设置自定义 kubectl 位置
kubectl.not.found.notification.title=在 PATH 中找不到 kubectl 可执行文件
kubectl.version.progressTitle=正在获取 kubectl 版本
kubernetes.conflicting.contexts.found.message=kubeconfig 文件中定义的上下文 ''{0}''\: {1} 和 {2}
label.telepresence.interceptions=Telepresence 拦截
progress.title.checking.telepresence.status=正在检查 Telepresence 状态
progress.title.connecting.telepresence.to.cluster=正在将 Telepresence 连接到集群
progress.title.getting.telepresence.version=正在获取 Telepresence 版本
progress.title.install.traffic.manager=正在安装 Telepresence 流量管理器
progress.title.leaving.interception=正在退出拦截 {0}
progress.title.loading.content=正在从集群加载内容
progress.title.quiting.interception=正在退出 Telepresence
progress.title.refreshing.list.interceptions.for=正在刷新拦截列表
progress.title.starting.interception.for=正在启动 {0} 的拦截
progress.title.update.availability=更新可用性
resources.delete.progressTitle=正在删除集群中的 {0}
resources.describe.progressTitle=正在描述集群中的 {0}
resources.list.progressTitle=正在获取{0}
resources.read.progressTitle=正在从集群加载 YAML
setting.size.MB=MB
telepresence.resource.destination=目标
telepresence.resource.intercepting=正在拦截
telepresence.resource.name=名称
telepresence.resource.state=状态
telepresence.resource.workload=工作负载
