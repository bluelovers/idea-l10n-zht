KubernetesUnknownKeysInspection.display.name=未知 Kubernetes YAML 键
KubernetesMissingKeysInspection.display.name=缺少 Kubernetes YAML 键
KubernetesMissingKeysInspection.kustomize.missing.patch.name.message=Kustomize 资源补丁的元数据中缺少名称
KubernetesMissingKeysInspection.kustomize.add.name.quick.fix.name=添加缺少的资源名称
KubernetesUnknownValuesInspection.display.name=未知 Kubernetes YAML 值
KubernetesNonEditableResourcesInspection.display.name=不可编辑的 Kubernetes 资源
KubernetesUnknownResourcesInspection.display.name=未知 Kubernetes 资源
KubernetesNonEditablePropertiesInspection.display.name=不可编辑的 Kubernetes 资源属性
KubernetesDeprecatedPropertiesInspection.display.name=弃用的 Kubernetes 资源属性
KubernetesDeprecatedResourcesInspection.display.name=弃用的 Kubernetes 资源
NonEditableResourcesInspection.noneditable.apiVersion=''{0}'' 没有可编辑的资源
NonEditableResourcesInspection.noneditable.kind=''{0}'' 在 ''{1}'' 中为只读
DeprecatedResourcesInspection.deprecated.kind=''{0}'' 在 ''{1}'' 中被弃用
KubernetesApiVersionType.validation.unknown.api.version=未知 API 版本
KubernetesResourceKindType.validation.unknown.resource.kind=未知资源
FindAndApplyMatchingCrdQuickFix.no.crd.found.text=在此项目中找不到与该资源相匹配的自定义资源定义。<p\\>如果您知道它位于项目外部，可以考虑将它<a href="#">包含</a>在外部架构规范列表中，以进行适当验证
FindAndApplyMatchingCrdQuickFix.text=查找并将匹配的自定义资源定义用作验证架构
MarkFileAsNonKubernetesQuickFix.text=将此文件标记为非 Kubernetes
ApplyCrdIntentionAction.text=将此自定义资源定义用作验证架构
ConvertListToMultiDocumentIntentionAction.text=将列表转换为多文档 YAML
ConvertMultiDocumentToListIntentionAction.text=将多文档 YAML 转换为列表

LabelContainerAnnotator.name=Kubernetes 标签导航
LabelContainerAnnotator.targetList.title=转到匹配 {0}
LabelContainerAnnotator.targetList.notFound=未找到匹配 {0}
# suppress inspection "UnusedProperty"
LabelContainerAnnotator.targetList.definitions.title=标签定义
# suppress inspection "UnusedProperty"
LabelContainerAnnotator.targetList.selectors.title=标签选择器
KubernetesDuplicatedEnvVarInspection.display.name=重复的 EnvVar 定义
KubernetesDuplicatedEnvVarInspection.duplicated.message=EnvVar ''{0}'' 重复
KubernetesEnvVarInspection.quickfix.name=移除此 EnvVar
Kubernetes.template.context.type=Kubernetes
KubernetesDocumentationProvider.no.description.message=未提供描述
KubernetesDocumentationProvider.any.combination=任意 <b>string:string</b> 键值组合
KubernetesDocumentationProvider.unstructured.object=任意对象
KubernetesDocumentationProvider.any.value=任意值
KubernetesStructureViewBuilder.kubernetes.resource.definition=Kubernetes 资源
KubernetesLabelType.inspection.invalid.key.message=标签键无效
KubernetesLabelType.inspection.invalid.value.message=标签值无效
MissingGoTemplatePluginNotificationProvider.message=需要 Go Template 插件才能完全支持 Helm 文件
MissingGoTemplatePluginNotificationProvider.install.plugin=安装 Go Template 插件
MissingGoTemplatePluginNotificationProvider.enable.plugin=启用 Go 模板插件

OutdatedModelNotificationProvider.message=用于验证的外部规范文件之一已被修改
OutdatedModelNotificationProvider.reload.title=重新加载架构
OutdatedModelNotificationProvider.ignore.title=忽略此修改

KustomizePatchNotificationProvider.message=此文件配置为 Kustomize 补丁
KustomizePatchNotificationProvider.popup.title=转到 kustomization

KubernetesConfigurable.get.spec.from.cluster.title=使用活动集群中的 API 架构(如果可用)
KubernetesConfigurable.apiVersionTitle=Kubernetes API 版本
KubernetesConfigurable.kustomizeVersionTitle=Kustomize 版本
KubernetesConfigurable.displayName=Kubernetes
KubernetesConfigurable.latestVersion=最新版本
KubernetesConfigurable.crdSpec.column.title=自定义资源定义(CRD)或 OpenAPI 规范的本地路径或 URL
KubernetesConfigurable.scope.column.title=范围
KubernetesConfigurable.scope.project=项目
KubernetesConfigurable.scope.ide=IDE
KubernetesConfigurable.status.column.title=状态
KubernetesConfigurable.status.column.tooltip=上次读取尝试的结果
# suppress inspection "TrailingSpacesInProperty"
KubernetesConfigurable.crdSpec.empty.text1=未添加外部规范。 通过以下方式添加规范 {0}:
# suppress inspection "TrailingSpacesInProperty"
KubernetesConfigurable.crdSpec.empty.text2=或
KubernetesConfigurable.crdSpec.empty.text.files=文件
KubernetesConfigurable.crdSpec.empty.text.url=URL
KubernetesConfigurable.crdSpec.help.link.title=关于支持的外部规范格式
KubernetesConfigurable.crdSpec.add.files.title=添加文件
KubernetesConfigurable.crdSpec.add.url.title=添加 URL
KubernetesConfigurable.check.configuration.title=检查配置
KubernetesConfigurable.check.configuration.problems.detected.details.text=检测到问题。请参阅外部规范列表了解详细信息。
KubernetesConfigurable.check.configuration.error.text=无法检查配置
KubernetesConfigurable.check.configuration.inprogress.text=正在检查
KubernetesConfigurable.check.configuration.success.text=成功检查
KubernetesConfigurable.reset.schema.cache.title=重置架构缓存
KubernetesConfigurable.reset.schema.cache.tooltip=导致重新下载/重新读取所有架构规范
KubernetesConfigurable.reset.schema.cache.success.text=完成
KubernetesConfigurable.spec.status.available=可用
KubernetesConfigurable.configure.cluster.link.title=配置集群设置

KubernetesResourceRenameHandler.processed.elements.header=正在重命名以下位置的资源 ''{0}''
KubernetesResourceRenameHandler.code.references.text={1} 个文件中的 {0} 个用法
KubernetesResourceRenameHandler.command.name=重命名 Kubernetes 资源
KubernetesResourceRenameHandler.invalid.name.error=资源名称无效
KubernetesResourceRenameHandler.unable.noInClusterRenames.warning=注意: 集群内资源不会重命名


MapObjectValidator.duplicate.entry=重复 {0} 条目
MapObjectValidator.quickfix.name=移除此条目
KubernetesMapResourceEntryRenameHandler.processed.elements.header=正在重命名以下位置的条目 ''{0}''
KubernetesMapResourceEntryRenameHandler.code.references.text={1} 个文件中的 {0} 个用法
KubernetesMapResourceEntryRenameHandler.command.name=重命名映射条目
KubernetesMapResourceEntryRenameHandler.invalid.name.error=条目名称无效
KubernetesMapResourceEntryDescriptionProvider.UsageViewTypeLocation.text={0} 条目
KubernetesMapResourceEntryDescriptionProvider.UsageViewLongNameLocation.text={0} 条目 ''{1}''
KubernetesMapResourceEntryDescriptionProvider.UsageViewNodeTextLocation.inCluster.text=在集群中

KubernetesLabelValueRenameHandler.full.name=“{0}”标签值
KubernetesLabelValueRenameHandler.processed.elements.header=正在重命名以下位置的标签 ''{0}: {1}''
KubernetesLabelValueRenameHandler.code.references.text={0} 个文件中的 {0} 个匹配标签匹配项
KubernetesLabelValueRenameHandler.command.name=重命名 Kubernetes 对象标签

KubernetesLabelKeyRenameHandler.full.name=“{0}”键
KubernetesLabelKeyRenameHandler.processed.elements.header=正在重命名以下位置的键 ''{0}''
KubernetesLabelKeyRenameHandler.code.references.text={0} 个文件中的 {0} 个匹配标签匹配项
KubernetesLabelKeyRenameHandler.command.name=重命名 Kubernetes 对象标签键

# suppress inspection "UnusedProperty"
# suppress inspection "UnusedProperty"

KubernetesFoldingSettings.collapse.helm.values=Helm 模板中的值引用
KubernetesFoldingSettings.collapse.env.vars=YAML 文件中的 EnvVar 定义
KubernetesFoldingSettings.collapse.exec.actions=YAML 文件中的 ExecAction 定义

HelmViewTemplateRenderAction.task.title=渲染 Helm 模板文件
HelmViewTemplateRenderAction.notification.title=Kubernetes
HelmViewTemplateRenderAction.notification.subtitle=正在渲染 Helm 模板
HelmViewTemplateRenderAction.no.result.message=Helm 未返回 {0} 的模板结果
HelmViewTemplateRenderAction.diff.window.title={0} 的模板结果
HelmViewTemplateRenderAction.diff.window.left.title=模板源
HelmViewTemplateRenderAction.diff.window.right.title=结果
HelmUpdateDependenciesAction.task.title=Helm 依赖项更新
HelmLintAction.task.title=Helm Lint
HelmCreateChartAction.task.title=创建新的 Helm 图表
HelmCreateChartAction.notification.title=Kubernetes
HelmCreateChartAction.notification.subtitle=正在创建 Helm 图表
HelmCreateChartAction.mkdir.failure.message=无法在 {0} 下创建图表目录
HelmCreateChartAction.input.dialog.label.text=名称:
HelmActionBase.notification.title=Kubernetes
HelmActionBase.notification.error.text=无法执行 Helm 命令。确保 Helm 已安装，并且其位置在 PATH 变量中。
HelmConvertRepositoryUrlToAliasAction.family.name=将 Helm 仓库 URL 转换为别名
HelmConvertRepositoryUrlToAliasAction.text=转换为别名
HelmConvertRepositoryAliasToUrlAction.family.name=将 Helm 仓库别名转换为 URL
HelmConvertRepositoryAliasToUrlAction.text=转换为 URL
HelmUpdateDependenciesIntentionAction.family.name=更新 Helm 图表依赖项
HelmUpdateDependenciesIntentionAction.text=更新依赖项
HelmJsonSchemaService.schema.file.provider.name=自定义值架构
HelmConsoleServiceViewContributor.presentation.text=Helm 控制台

HelmChartMissingKeysInspection.display.name=缺少 Chart.yaml 键
HelmChartUnknownValuesInspection.display.name=Chart.yaml 值无效
HelmChartUnknownValuesInspection.requirements.no.longer.used.message=Helm 3.0 和更高版本中不再使用 requirements.yaml
# suppress inspection "UnusedProperty"
HelmChartUnknownValuesInspection.invalid.chart.name.message=图表名称必须等于图表的目录名称
# suppress inspection "UnusedProperty"
HelmChartUnknownValuesInspection.invalid.chart.name.quickfix.name=使图表名称等于图表的目录名称
HelmChartUnknownValuesInspection.invalid.semver.message=SemVer 值无效
HelmChartUnknownValuesInspection.invalid.semver.requirement.message=SemVer 要求无效
HelmChartUnknownValuesInspection.no.suitable.chart.message=无法在仓库中找到合适的图表版本
HelmChartUnknownValuesInspection.chart.deprecated.message=图表已被弃用
HelmChartUnknownValuesInspection.cannot.find.chart.in.repository.message=无法在仓库中找到此图表
HelmChartUnknownValuesInspection.move.dependencies.to.chart.yaml.quickfix.name=将依赖项移至 Chart.yaml 并移除 requirements.yaml
HelmChartUnknownValuesInspection.invalid.repository.url.message=URL 无效
HelmChartUnknownValuesInspection.cannot.find.added.repository.name.message=找不到名称为 ''{0}'' 的仓库
HelmChartUnknownValuesInspection.cannot.find.added.repository.url.message=尚未添加仓库 ''{0}''
HelmChartUnknownValuesInspection.add.repository.quickfix.name=添加仓库
HelmChartUnknownValuesInspection.add.repository.quickfix.getting.repo.list.task.name=从 Helm Hub 获取 Helm 仓库列表
HelmChartUnknownValuesInspection.add.repository.quickfix.adding.repo.task.name=添加 Helm 仓库
HelmChartUnknownValuesInspection.add.repository.quickfix.enter.repository.url=Helm 仓库 URL:
HelmChartUnknownValuesInspection.add.repository.quickfix.enter.repository.name=Helm 仓库名称:

HelmChartUnknownKeysInspection.display.name=未知 Chart.yaml 键

KubernetesModelProvider.model.loading.file.error=无法从 {0} 读取 OpenAPI 规范: {1}
KubernetesModelProvider.model.loading.unresolved.definition.error=文件 {1} 中存在未解析的类型引用 {0}
KubernetesModelProvider.model.loading.processing.definition.error=在文件 {1} 中处理定义 {0} 时出错: {2}
# suppress inspection "TrailingSpacesInProperty"
KubernetesModelProvider.model.loading.missing.files.error=找不到外部规范文件:
# suppress inspection "TrailingSpacesInProperty"
KubernetesModelProvider.model.loading.bad.urls.error=无法从 URL 加载外部规范:\n
# suppress inspection "TrailingSpacesInProperty"
KubernetesModelProvider.model.cluster.spec.loading.error=无法从集群检索 API 规范: {0}:\n
KubernetesModelProvider.model.loading.background.task.title=正在下载 Kubernetes 外部规范

# suppress inspection "UnusedProperty"
# used in plugin.xml
KubernetesNotificationGroup.title=Kubernetes
KubernetesNotification.title=Kubernetes
KubernetesNotification.model.loading.subtitle=正在加载模型
KubernetesNotification.configuration.changed.subtitle=配置已更改
KubernetesNotification.external.spec.added.message={0} 已添加到外部架构规范列表中

KubernetesModelDefinition.file.or.dir.not.exist.error=该文件或目录不存在
KubernetesModelDefinition.file.not.exist.error=该文件不存在
KubernetesModelDefinition.directory.not.exist.error=该目录不存在
KubernetesModelDefinition.json.file.expected.error=此处应为 JSON 补丁文件的路径
KubernetesModelDefinition.yaml.file.expected.error=此处应为 YAML Kubernetes 资源文件的路径
KubernetesModelDefinition.yaml.k8sResourceOrJsonPatch.expected.error=此处应为 YAML Kubernetes 资源文件或 JSON 补丁的路径
KubernetesModelDefinition.value.should.match.error=该值应匹配 {0}
KubernetesModelDefinition.value.too.short.error=该值的长度不应小于 {0} 个字符
KubernetesModelDefinition.value.too.long.error=该值的长度不应大于 {0} 个字符
KubernetesModelDefinition.value.should.not.less.error=该值不应小于 {0}
KubernetesModelDefinition.value.should.not.less.or.equal.error=该值不应小于或等于 {0}
KubernetesModelDefinition.value.should.not.greater.error=该值不应大于 {0}
KubernetesModelDefinition.value.should.not.greater.or.equal.error=该值不应大于或等于 {0}
KubernetesModelDefinition.missing.required.property.error=缺少必需属性 ''{0}''
KubernetesModelDefinition.string.value.expected.error=应为字符串值

MapObjectDefinitions.entry.not.found=找不到 {0} 条目
MapObjectDefinitions.resource.not.found=找不到 {0}

KubernetesAnyOfType.value.matches.none.schemas.error=该值与任意 anyOf 架构都不匹配
KubernetesNotType.value.not.valid.error=该值对 NOT 架构无效: {0}
KubernetesOneOfType.value.must.match.one.schema.error=该值必须与 oneOf 架构之一完全匹配

KubernetesServiceViewContributor.Descriptor.name=Kubernetes
KubectlExecutor.BaseResultProcessListener.notCompleteAuthentication.message=身份验证信息不完整
KubernetesApiProvider.noContexts.message=未定义上下文
KubernetesApiProvider.noCurrentContext.message=未指定当前上下文
KubernetesApiProvider.noSuchContext.message=未定义上下文 ''{0}''
KubernetesApiModel.unknownContext.text=未知上下文
KubernetesApiModel.unknownNamespace.text=未知命名空间
KubernetesRefreshModelAction.text=刷新
KubernetesRefreshModelAction.description=从集群刷新信息
group.Kubernetes.AddServiceActions.text=Kubernetes
KubernetesRefreshConfigurationAction.text=刷新配置
KubernetesRefreshConfigurationAction.description=从集群刷新缓存配置和信息并重新读取 API 架构
KubernetesAllNamespacesAction.text=所有命名空间
KubernetesAllNamespacesAction.description=显示来自所有命名空间的信息
KubernetesNamespaceAction.description=显示来自命名空间 ''{0}'' 的信息
KubernetesRefreshCachedValuesAction.text=刷新
KubernetesWorkloadsServiceViewContributor.descriptorName=工作负荷
KubernetesWorkloadsServiceViewContributor.RefreshAction.description=刷新工作负荷
KubernetesPodsServiceViewContributor.descriptorName=Pod
KubernetesPodsServiceViewContributor.RefreshAction.description=刷新 Pod
KubernetesDeploymentsServiceViewContributor.descriptorName=部署
KubernetesDeploymentsServiceViewContributor.RefreshAction.description=刷新部署
KubernetesStatefulSetsServiceViewContributor.descriptorName=有状态集
KubernetesStatefulSetsServiceViewContributor.RefreshAction.description=刷新有状态集
KubernetesDaemonSetsServiceViewContributor.descriptorName=守护进程集
KubernetesDaemonSetsServiceViewContributor.RefreshAction.description=刷新守护进程集
KubernetesJobsServiceViewContributor.descriptorName=作业
KubernetesJobsServiceViewContributor.RefreshAction.description=刷新作业
KubernetesCronJobsServiceViewContributor.descriptorName=Cron 作业
KubernetesCronJobsServiceViewContributor.RefreshAction.description=刷新 Cron 作业
KubernetesReplicaSetsServiceViewContributor.descriptorName=副本集
KubernetesReplicaSetsServiceViewContributor.RefreshAction.description=刷新副本集
KubernetesReplicationControllersServiceViewContributor.descriptorName=副本控制器
KubernetesReplicationControllersServiceViewContributor.RefreshAction.description=刷新副本控制器
KubernetesNetworkServiceViewContributor.descriptorName=网络
KubernetesNetworkServiceViewContributor.RefreshAction.description=刷新网络
KubernetesServicesServiceViewContributor.descriptorName=服务
KubernetesServicesServiceViewContributor.RefreshAction.description=刷新服务
KubernetesIngressesServiceViewContributor.descriptorName=Ingress
KubernetesIngressesServiceViewContributor.RefreshAction.description=刷新 Ingress
KubernetesConfigurationServiceViewContributor.descriptorName=配置
KubernetesConfigurationServiceViewContributor.RefreshAction.description=刷新配置
KubernetesNamespacesServiceViewContributor.descriptorName=命名空间
KubernetesNamespacesServiceViewContributor.RefreshAction.description=刷新命名空间
KubernetesNodesServiceViewContributor.descriptorName=节点
KubernetesNodesServiceViewContributor.RefreshAction.description=刷新节点
KubernetesClusterRolesServiceViewContributor.descriptorName=集群角色
KubernetesClusterRolesServiceViewContributor.RefreshAction.description=刷新集群角色
KubernetesRolesServiceViewContributor.descriptorName=角色
KubernetesRolesServiceViewContributor.RefreshAction.description=刷新角色
KubernetesConfigMapsServiceViewContributor.descriptorName=配置映射
KubernetesConfigMapsServiceViewContributor.RefreshAction.description=刷新配置映射
KubernetesSecretsServiceViewContributor.descriptorName=Secret
KubernetesSecretsServiceViewContributor.RefreshAction.description=刷新 Secret
KubernetesSecretServiceViewContributor.binaryData.message=二进制数据
KubernetesSecretKeyValueServiceViewDescriptor.showValue.text=显示值…
KubernetesStorageServiceViewContributor.descriptorName=存储
KubernetesStorageServiceViewContributor.RefreshAction.description=刷新存储
KubernetesPersistentVolumesServiceViewContributor.descriptorName=持久化卷
KubernetesPersistentVolumesServiceViewContributor.RefreshAction.description=刷新持久化卷
KubernetesPersistentVolumeClaimsServiceViewContributor.descriptorName=持久化卷声明
KubernetesPersistentVolumeClaimsServiceViewContributor.RefreshAction.description=刷新持久化卷声明
KubernetesStorageClassesServiceViewContributor.descriptorName=存储类
KubernetesStorageClassesServiceViewContributor.RefreshAction.description=刷新存储类
KubernetesCachedValueBasedServiceViewContributorBase.refreshing.text=正在刷新…
KubernetesCustomResourceDefinitionsServiceViewContributor.descriptorName=自定义资源
KubernetesCustomResourceDefinitionsServiceViewContributor.RefreshAction.description=刷新自定义资源
KubernetesCustomResourceDefinitionServiceViewContributor.RefreshAction.description=刷新{0}
KubernetesCustomResourceDefinitionServiceViewContributor.unrecognizedScope.message=无法识别范围 ''{0}''
KubernetesNamespacedApiHelper.AllNamespaces.namespace=所有命名空间
DateTimeUtilities.formatAge.fewSeconds=几秒
DateTimeUtilities.formatAge.minute=1 分钟
DateTimeUtilities.formatAge.minutes={0} 分钟
DateTimeUtilities.formatAge.hour=1 小时
DateTimeUtilities.formatAge.hours={0} 小时
DateTimeUtilities.formatAge.day=1 天
DateTimeUtilities.formatAge.days={0} 天
DateTimeUtilities.formatAge.month=1 个月
DateTimeUtilities.formatAge.months={0} 个月
DateTimeUtilities.formatAge.year=1 年
DateTimeUtilities.formatAge.years={0} 年
KubernetesResourceInformationPanel.nameColumn.name=名称
KubernetesResourceInformationPanel.valueColumn.name=值
KubernetesResourceInformationPanel.CopyValueAction.text=复制值
KubernetesResourceInformationPanel.CopyValueAction.description=将选中的值复制到剪贴板
KubernetesResourceContent.informationContent.displayName=信息
KubernetesCustomResourceDefinitionContent.resourcesContent.displayName=资源
KubernetesResourceMapper.nameField.name=名称
KubernetesResourceMapper.resourceDisplayableName.template={0} ''{1}''
KubernetesNamespacedResourceMapper.namespaceField.name=命名空间
KubernetesNamespacedResourceMapper.resourceDisplayableName.template=命名空间 ''{1}'' 中的 {0}
KubernetesClusterRoleMapper.resourceDisplayableKind=集群角色
KubernetesConfigMapMapper.resourceDisplayableKind=配置映射
KubernetesCronJobMapper.scheduleField.name=调度
KubernetesCronJobMapper.suspendField.name=挂起
KubernetesCronJobMapper.activeField.name=有效
KubernetesCronJobMapper.lastScheduleField.name=最后一个调度
KubernetesCronJobMapper.resourceDisplayableKind=cron 作业
KubernetesCustomResourceDefinitionMapper.scopeField.name=范围
KubernetesCustomResourceDefinitionMapper.resourceDisplayableKind=自定义资源定义
KubernetesDaemonSetMapper.resourceDisplayableKind=守护进程集
KubernetesDeploymentMapper.resourceDisplayableKind=部署
KubernetesIngressMapper.endpointsField.name=端点
KubernetesIngressMapper.resourceDisplayableKind=ingress
KubernetesJobMapper.inProgressField.name=进行中
KubernetesJobMapper.resourceDisplayableKind=作业
KubernetesNamespaceMapper.resourceDisplayableKind=命名空间
KubernetesNodeMapper.conditionsField.name=条件
KubernetesNodeMapper.resourceDisplayableKind=节点
KubernetesPersistentVolumeClaimMapper.volumeField.name=卷
KubernetesPersistentVolumeClaimMapper.resourceDisplayableKind=持久化卷声明
KubernetesPersistentVolumeMapper.reclaimPolicyField.name=回收策略
KubernetesPersistentVolumeMapper.claimField.name=声明
KubernetesPersistentVolumeMapper.resourceDisplayableKind=持久化卷
KubernetesPodMapper.nodeField.name=节点
KubernetesPodMapper.restartsField.name=重启
KubernetesPodMapper.resourceDisplayableKind=pod
KubernetesReplicaSetMapper.resourceDisplayableKind=副本集
KubernetesReplicationControllerMapper.resourceDisplayableKind=副本控制器
KubernetesRoleMapper.resourceDisplayableKind=角色
KubernetesSecretMapper.resourceDisplayableKind=密钥
KubernetesServiceMapper.clusterIPField.name=集群 IP
KubernetesServiceMapper.externalIPsField.name=外部 IP
KubernetesServiceMapper.portsField.name=端口
KubernetesServiceMapper.resourceDisplayableKind=服务
KubernetesStatefulSetMapper.resourceDisplayableKind=有状态集
KubernetesStorageClassMapper.provisionerField.name=配置程序
KubernetesStorageClassMapper.parametersField.name=形参
KubernetesStorageClassMapper.resourceDisplayableKind=存储类
KubernetesNotificationManager.requestError.title=Kubernetes 请求错误
KubernetesNotificationManager.message.title=Kubernetes
KubernetesApplyAction.text=应用
KubernetesApplyAction.text.template=应用于上下文 ''{0}'' 和命名空间 ''{1}''
KubernetesApplyAction.description=将文件中的配置应用于集群
KubernetesDeleteAction.text=删除
KubernetesDeleteAction.text.template=从上下文 ''{0}'' 和命名空间 ''{1}'' 中删除
KubernetesDeleteAction.description=从集群中删除文件中定义的资源
KubernetesDeleteAction.confirmation.title=删除
KubernetesDeleteAction.confirmation.message=删除资源?
KubernetesDeleteAction.confirmation.yes=删除
KubernetesContextsActionGroup.text=上下文
KubernetesContextsActionGroup.description=选择上下文…
KubernetesContextAction.description=切换到上下文 ''{0}''
KubernetesStringSetting.resetProjectValue.yes=设为全局
KubernetesStringSetting.resetProjectValue.no=还原
KubernetesConfigurationSettingsPanel.selectKubeconfigFile.title=选择 kubeconfig 文件
KubernetesConfigurationSettingsPanel.setKubeconfigPathGlobalCheckbox.text=针对所有项目全局设置此 kubeconfig 文件路径
KubernetesConfigurationSettingsPanel.resetProjectKubeconfigPath.message=为此项目配置的 kubeconfig 文件路径可以针对所有项目进行全局设置，或者还原为当前全局路径
KubernetesConfigurationSettingsPanel.resetProjectKubeconfigPath.title=项目 kubeconfig 文件路径
KubernetesConfigurationSettingsPanel.globalKubeconfigPath.emptyText=由 kubectl 确定
KubernetesConfigurationSettingsPanel.projectKubeconfigPath.emptyText=继承的全局路径: {0}
KubernetesConfigurationSettingsPanel.kubeconfigPathLabel.text=kubeconfig 文件路径:
KubernetesConfigurationSettingsPanel.checkConfigurationButton.text=检查配置
KubernetesConfigurationSettingsPanel.checkConfigurationResultLabel.checking.message=正在检查…
KubernetesConfigurationSettingsPanel.checkConfigurationResultLabel.checked.message=成功检查
KubernetesPodShellSettingsPanel.setShellCommandGlobalCheckbox.text=针对所有项目全局设置此 shell 命令
KubernetesPodShellSettingsPanel.resetProjectShellCommand.message=为此项目配置的 Shell 命令可以针对所有项目进行全局设置，或者还原为当前全局命令
KubernetesPodShellSettingsPanel.resetProjectShellCommand.title=项目 shell 命令
KubernetesPodShellSettingsPanel.projectShellCommand.emptyText=继承的全局 shell 命令: {0}
KubernetesPodShellSettingsPanel.shellCommandLabel.text=在容器中运行 shell 的命令:
KubernetesPodLogsSettingsPanel.selectDownloadPath.title=选择下载路径
KubernetesPodLogsSettingsPanel.downloadPathRadioButton.text=用于下载 Pod 日志的路径:
KubernetesPodLogsSettingsPanel.askWhereToDownloadRadioButton.text=下载前询问 Pod 日志的保存位置
KubernetesPodLogsSettingsPanel.timestampedLogNameCheckbox.text=将时间戳附加到 pod 日志文件名
KubernetesPodLogsSettingsPanel.downloadPath.emptyText=下载到临时目录
KubernetesPodLogsSettingsPanel.downloadPath.errorMessage=路径不存在或不是目录
KubernetesViewConfigurable.displayName=Kubernetes
KubernetesViewConfigurable.configurationRow.title=配置
KubernetesViewConfigurable.podShellRow.title=Pod Shell
KubernetesViewConfigurable.podLogsRow.title=Pod 日志(全局设置)
KubernetesShowSettingsAction.text=显示设置…
KubernetesShowSettingsAction.description=显示集群视图设置
KubernetesFindUsagesAction.text=查找用法
KubernetesFindUsagesAction.description=在项目源中查找用法
KubernetesPodContainerFollowLogAction.text=关注日志
KubernetesPodContainerFollowLogAction.description=关注容器 ''{0}'' 的日志
KubernetesPodContainerFollowLogAction.group.text=关注日志
KubernetesPodContainerFollowLogAction.group.description=关注日志:
KubernetesPodContainerDownloadLogAction.text=下载日志
KubernetesPodContainerDownloadLogAction.description=下载容器 ''{0}'' 的日志
KubernetesPodContainerDownloadLogAction.title=下载日志到
KubernetesPodContainerDownloadLogAction.group.text=下载日志
KubernetesPodContainerDownloadLogAction.group.description=下载以下组的日志:
KubernetesPodContainerOpenConsoleAction.text=打开控制台
KubernetesPodContainerOpenConsoleAction.description=打开容器 ''{0}'' 的控制台
KubernetesPodContainerOpenConsoleAction.group.text=打开控制台
KubernetesPodContainerOpenConsoleAction.group.description=打开控制台…
KubernetesPodContainerRunShellAction.text=运行 Shell
KubernetesPodContainerRunShellAction.description=在容器 ''{0}'' 中运行 shell
KubernetesPodContainerRunShellAction.group.text=运行 Shell
KubernetesPodContainerRunShellAction.group.description=运行 Shell 于…
KubernetesPodContent.log.title=日志: {0}
KubernetesPodContent.console.title=控制台: {0}
KubernetesPodContent.shell.title=Shell: {0}
KubernetesRootType.displayName=Kubernetes 文件
KubernetesDeleteResourceAction.text=删除资源
KubernetesDeleteResourceAction.description=从集群删除资源
KubernetesDeleteResourceAction.confirmation.title=删除
KubernetesDeleteResourceAction.confirmation.message=确定删除 {0}?
KubernetesDeleteResourceAction.confirmation.yes=删除

#actions
action.Kubernetes.HelmCreateChart.text=Helm 图表
action.Kubernetes.HelmCreateChart.description=创建新图表
group.KUBERNETES_ACTIONS.text=Kubernetes(&K)
action.Kubernetes.HelmTemplateDiff.text=Helm 模板(&T)
action.Kubernetes.HelmTemplateDiff.description=显示图表模板结果
action.Kubernetes.HelmDependencyUpdate.text=Helm 依赖项更新(&D)
action.Kubernetes.HelmDependencyUpdate.description=更新图表的依赖项
action.Kubernetes.HelmLint.text=Helm Lint(&L)
action.Kubernetes.HelmLint.description=检查图表中可能存在的问题
action.Kubernetes.ConfigureHelmParameters.text=配置 Helm 形参(&P)
action.Kubernetes.ConfigureHelmParameters.description=配置此图表的常用 Helm 命令参数
action.Kubernetes.HelmGenerateDependency.text=Helm 依赖项
action.Kubernetes.HelmGenerateDependency.description=向 'dependencies' 部分添加新的依赖项
action.Kubernetes.configure.link.title=配置
action.Kubernetes.configure.link.description=配置外部架构规范
action.Kubernetes.go.to.file.text=转到文件

KubernetesJson6902JsonSchemaProvider.name=RFC6902 JSON 补丁架构
Kubernetes=Kubernetes

HelmCommandParametersDialog.values.files.table.label=值文件
HelmCommandParametersDialog.values.files.table.comment=Helm 要使用的值文件列表
HelmCommandParametersDialog.values.files.table.empty.text.no.files.exist=在此图表中找不到值文件
HelmCommandParametersDialog.values.files.table.empty.text=添加 Helm 要使用的值文件
HelmCommandParametersDialog.values.files.popup.title=可用的值文件
HelmCommandParametersDialog.ok.button.title=继续
HelmCommandParametersDialog.do.not.show.message=在此图表上执行 Helm 命令时跳过此对话框
HelmCommandParametersDialog.default.title=Helm 命令参数
HelmCommandParametersDialog.additional.values.label=附加值
HelmCommandParametersDialog.additional.values.comment=指定以 <code>\\&lt;key expression\\&gt;=\\&lt;value expression\\&gt;</code> 形式传递 <code>--set</code> 参数的值(查看<a href='https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing'>更多信息</a>)。用逗号或行分隔不同的值

ValueOverrideAnnotator.name=被重写的图表值
ValueOverrideAnnotator.overriding.tooltip=转到重写值
ValueOverrideAnnotator.overriding.list.title=重写值
ValueOverrideAnnotator.overriding.list.emptyMessage=未找到重写值
ValueOverrideAnnotator.overridden.tooltip=转到被重写的值
ValueOverrideAnnotator.overridden.list.title=被重写的值
ValueOverrideAnnotator.overridden.list.emptyMessage=未找到被重写的值
ChartRenameHandler.illegal.char.in.value=值包含非法字符
ChartRenameHandler.file.already.exists={0} 中已存在使用此名称的文件或目录
ChartRenameHandler.label.text.1=重命名图表值 "{0}"
ChartRenameHandler.label.text.3=重命名图表 {0} 及其所有引用
ChartRenameHandler.processed.elements.header.1=重命名图表值
ChartRenameHandler.processed.elements.header.2=重命名图表
ChartRenameHandler.code.references.text={0} 与 {1} 个文件中出现的图表值匹配
ChartRenameHandler.command.name=重命名图表值
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line1=添加命名空间
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line2=以在无法从集群
KubernetesNamespacesSettingsPanel.NamespacesTable.emptyText.line3=加载时使用
KubernetesNamespacesSettingsPanel.NamespaceColumn.name=命名空间
KubernetesNamespacesSettingsPanel.ScopeColumn.name=范围
KubernetesNamespacesSettingsPanel.Scope.Project.displayName=项目
KubernetesNamespacesSettingsPanel.Scope.Global.displayName=全局
KubernetesViewConfigurable.namespacesRow.title=命名空间(无法从集群加载时应用)
KubernetesCustomizeNamespacesAction.text=自定义命名空间…
KubernetesCustomizeNamespacesAction.description=自定义命名空间列表
HelmViewTemplateRenderAction.select.context.dialog.text=选择呈现上下文
KubernetesNamespacesAction.text=命名空间…
KubernetesNamespacesAction.description=选择命名空间
ChartElementDescriptionProvider.helm.object.title=Helm 对象
ChartElementDescriptionProvider.helm.value.title=Helm 值
ChartRenameHandler.invalid.go.template.identifier=值不是有效的 Go 模板标识符(在模板文件中使用)
ChartRenameHandler.preliminary.finding.usage.process.name=正在查找用法…
HelmPanel.repeat.last.command.text=重复上一条命令
KubernetesResourceMapper.ageField.name=Age
KubernetesResourceMapper.ageField.tooltip.template={0} 创建
KubernetesResourceMapper.labelsField.name=标签
KubernetesResourceMapper.statusField.name=状态
KubernetesResourceMapper.capacityField.name=容量
KubernetesResourceMapper.accessModesField.name=访问模式
KubernetesResourceMapper.storageClassField.name=存储类
KubernetesNamespacedResourceMapper.readyField.name=就绪
KubernetesNamespacedResourceMapper.imagesField.name=图像
KubernetesCronJobMapper.lastScheduleField.tooltip.template=最后调度于 {0}
KubernetesBackgroundableProcessIndicator.cancel.text=取消
KubernetesBackgroundableProcessIndicator.cancel.tooltip=取消请求
KubernetesMoreActionGroup.text=更多
KubernetesMoreActionGroup.description=显示其他操作…
KubectlExecutor.getConfiguration.progressTitle=正在获取配置
KubectlExecutor.downloadPodLog.progressTitle=正在下载 Pod 日志
KubectlExecutor.apply.progressTitle=正在将配置应用到集群
KubectlExecutor.delete.progressTitle=正在从集群中删除资源
KubectlExecutor.downloadOpenApi.progressTitle=正在下载 OpenAPI 规范
KubectlExecutor.setNamespace.progressTitle=设置命名空间
KubectlExecutor.setContext.progressTitle=设置上下文
KubernetesApiProviderImpl.namespaces.list.progressTitle=正在获取命名空间
KubernetesApiProviderImpl.nodes.list.progressTitle=正在获取节点
KubernetesApiProviderImpl.clusterRoles.list.progressTitle=正在获取集群角色
KubernetesApiProviderImpl.persistentVolumes.list.progressTitle=正在获取持久化卷
KubernetesApiProviderImpl.storageClasses.list.progressTitle=正在获取存储类
KubernetesApiProviderImpl.customResourceDefinitions.list.progressTitle=正在获取自定义资源定义
KubernetesApiProviderImpl.deployments.list.progressTitle=正在获取部署
KubernetesApiProviderImpl.statefulSets.list.progressTitle=正在获取有状态集
KubernetesApiProviderImpl.daemonSets.list.progressTitle=正在获取守护进程集
KubernetesApiProviderImpl.jobs.list.progressTitle=正在获取作业
KubernetesApiProviderImpl.cronJobs.list.progressTitle=正在获取 Cron 作业
KubernetesApiProviderImpl.pods.list.progressTitle=正在获取 Pod
KubernetesApiProviderImpl.roles.list.progressTitle=正在获取角色
KubernetesApiProviderImpl.replicaSets.list.progressTitle=正在获取副本集
KubernetesApiProviderImpl.replicationControllers.list.progressTitle=正在获取副本控制器
KubernetesApiProviderImpl.services.list.progressTitle=正在获取服务
KubernetesApiProviderImpl.ingresses.list.progressTitle=正在获取 Ingress
KubernetesApiProviderImpl.configMaps.list.progressTitle=正在获取配置映射
KubernetesApiProviderImpl.persistentVolumeClaims.list.progressTitle=正在获取持久化卷声明
KubernetesApiProviderImpl.secrets.list.progressTitle=正在获取密钥
KubernetesApiProviderImpl.downloadCustomResourceDefinitions.progressTitle=正在下载自定义资源定义
KubernetesApiProviderImpl.resources.read.progressTitle=正在从集群加载 YAML
KubernetesApiProviderImpl.resources.delete.progressTitle=正在从集群中删除资源
KubernetesApiProviderImpl.customResources.list.progressTitle=正在获取{0}
KubernetesCustomizeNotificationsAction.text=自定义通知…
KubernetesCustomizeNotificationsAction.description=自定义通知
KubernetesViewerPanel.changeLanguage.text=更改…
KubectlExecutor.BaseProcessListener.progressTitle.template=Kubernetes: {0}
HelmUpdateRepositoryAction.text=更新仓库
HelmUpdateRepositoryAction.task.title=正在更新 Helm 仓库
HelmRepositoryAnnotator.name=Helm 仓库操作
HelmIndex.refresh.helm.repository.list.task.title=正在刷新 Helm 仓库列表
HelmIndex.refresh.helm.configuration.task.title=正在刷新 Helm 配置
HelmAddRepositoryDialog.basic.parameters=基本形参
HelmAddRepositoryDialog.authentication.parameters=身份验证参数
HelmAddRepositoryDialog.username=用户名
HelmAddRepositoryDialog.password=密码
HelmAddRepositoryDialog.invalid.url.message=URL 无效
HelmAddRepository.no.spaces.allowed.message=不允许使用空格
HelmAddRepositoryDialog.must.not.be.empty.message=不得为空
KubectlExecutor.version.progressTitle=正在获取 kubectl 版本
KubectlExecutor.version.unrecognized.message=无法识别的 kubectl 版本: {0}
KubernetesKubectlSettingsPanel.selectKubectlExecutable.title=选择 kubectl 可执行文件
KubernetesKubectlSettingsPanel.testButton.text=测试
KubernetesKubectlSettingsPanel.testResultLabel.testing.message=正在测试…
KubernetesKubectlSettingsPanel.kubectlPathLabel.text=kubectl 可执行文件路径:
KubernetesPodForwardPortsAction.text=转发端口...
KubernetesPodForwardPortsAction.description=将端口转发到 pod
KubernetesPodForwardPortsAction.Dialog.title=转发端口
KubernetesPodForwardPortsAction.Dialog.okButton.text=前进
KubernetesPodForwardPortsAction.Dialog.ports.incorrect.message=端口映射不正确
KubernetesPodForwardPortsAction.Dialog.ports.labelText=端口:
KubernetesPodForwardPortsAction.Dialog.ports.comment.template=端口映射格式为 <code>\\&lt;local port\\&gt;:\\&lt;remote port\\&gt;</code>，<br>例如: {0}
KubernetesPodContent.ports.title=端口: {0}
KubernetesApiProviderImpl.resources.describe.progressTitle=正在描述集群中的资源
KubernetesDescribeResourceAction.text=描述资源
KubernetesDescribeResourceAction.description=描述集群中的资源，并在编辑器中显示结果
KubernetesApiProviderImpl.events.list.progressTitle=正在获取事件
KubernetesEventsServiceViewContributor.descriptorName=事件
KubernetesEventsServiceViewContributor.RefreshAction.description=刷新事件
KubernetesResourceMapper.reasonField.name=原因
KubernetesNamespacedResourceMapper.typeField.name=类型
KubernetesEventMapper.lastSeenField.name=上次见到
KubernetesEventMapper.lastSeenField.tooltip.template=上次见于 {0}
KubernetesEventMapper.objectField.name=对象
KubernetesEventMapper.messageField.name=消息
KubernetesEventMapper.resourceDisplayableKind=事件
KubernetesViewYAMLAction.text=查看 YAML
KubernetesViewYAMLAction.description=从集群加载 YAML 并在编辑器中显示
KubernetesReloadContentAction.text=重新加载内容
KubernetesReloadContentAction.description=从集群重新加载内容，并在编辑器中更新
KubernetesEditAction.text=编辑资源
KubernetesEditAction.description=创建可编辑的副本并在编辑器中显示
KubernetesHelmSettingsPanel.selectHelmExecutable.title=选择 Helm 可执行文件
KubernetesHelmSettingsPanel.helmPathLabel.text=Helm 可执行文件的路径:
KubernetesHelmSettingsPanel.notHelm.text=未定(非 Helm)
KubernetesViewConfigurable.toolLocations.title=工具位置(全局设置)
EmbeddedKustomizeVersion.EMBEDDED.title=2.0.3(嵌入 kubectl v1.14-v1.20)
EmbeddedKustomizeVersion.STANDALONE.title=4.x (组件、内联补丁、'replicas'、'envs' 等)
action.intercept.service.with.telepresence.text=拦截服务
action.creates.telepresence.interception.description=创建 Telepresence 拦截
button.telepresence.intercept=截获
dialog.title.telepresence.intercept.options=Telepresence 拦截选项
dialog.message.specify.ports.to.intercept=指定要拦截的端口
label.telepresence.ports=端口:
label.telepresence.advanced.options=高级选项:
text.specify.ports.to.intercept.html=<p>指定要拦截的端口，用空格或逗号分隔。示例: <code>8080, 8443:grpc</code></p>
text.specify.additional.options.for.telepresence.html=<p>为 `telepresence intercept` 命令指定任何其他选项。示例: <code>--mechanism tcp</code></p>