action.create.new.file=新建 {0}
action.new.file.creation=创建新文件
c.cpp=C/C++
create.checkbox.cpp.class.header=仅创建头(&H)
create.checkbox.source.associated.header=创建关联头(&H)
create.cpp.class.description=创建新的 C++ 类
create.cpp.class.dialog.title=新建 C++ 类
create.cpp.class.title=C++ 类
create.cpp.enclosing.namespace.title=命名空间\:
create.cpp.header.title=C/C++ 头文件
create.cpp.invalid.namespace.name.message=命名空间名称无效
create.cpp.module.title=C++ 模块接口单元
create.cpp.source.title=C/C++ 源文件
create.directory.failed=无法创建目录
create.directory.failed.message=无法创建目录 ''{0}''\!
create.error.dir.exists=名称为 ''{0}'' 的目录已存在
create.error.file.exists=名称为 ''{0}'' 的文件已存在
create.error.files.in.directory=无法在目录 ''{1}'' 中创建文件 ''{0}''
create.error.invalid.name=名称 ''{0}'' 无效
create.error.missing.target.dir=未找到目标目录
create.field.location=文件夹(&F)\:
create.field.name=名称(&N)\:
create.field.type=类型(&P)\:
create.folder.dialog.description=选择目标文件夹
create.folder.dialog.title=选择目标文件夹
create.tooltip.arrows.type=在编辑器中按向上或向下箭头可更改类型
create.tooltip.no.targets=没有合适的目标
fileExtensions.editFileTypesTooltip=编辑文件类型
fileExtensions.error=错误
fileExtensions.extensionPair=扩展名对
fileExtensions.fileNamingConvention=文件命名约定\:
fileExtensions.headerExtension=头扩展名\:
fileExtensions.moduleExtension=模块扩展\:
fileExtensions.no.extensions=无扩展名
fileExtensions.noCompatibleTypes=未找到兼容的文件类型
fileExtensions.noExtensionsError=请定义至少一对扩展名对
fileExtensions.sourceExtension=源扩展名\:
fileExtensions.tabName=新文件扩展名
goto.definition.settings.title=前往声明或用法
goto.definition.settings.toggle.assoc.off=显示用法弹出窗口
goto.definition.settings.toggle.assoc.on=跳转到预声明
goto.definition.settings.toggle.assoc.title=对包含预声明的符号调用时\:
inspection.general=常规
inspection.interprocedural.analysis.name=过程间分析
inspection.unused.code=未使用的代码
language.cpp.configurable.name=C/C++
objective.c=Objective-C
project.wizard.format.source.files=重新设置项目文件的格式
usage.class.predeclaration=类预声明
usage.in.declaration=声明或预声明中的用法
usage.in.expression=表达式中的用法
usage.in.macro.arguments.list=宏实参列表中的用法
usage.in.macro.substitution=宏替换中的用法
usage.in.property.attribute=属性特性中的用法
usage.in.synthesize.statement=synthesize 语句中的用法
usage.in.template.argument.list=模板实参列表中的用法
usage.in.using.statement=using 语句中的用法
usage.member.access=成员访问
usage.message.receiver=消息接收器
usage.method.call=方法调用
usage.namespace.qualifier=命名空间限定符
usage.parameter.declaration=形参声明
usage.protocol=协议引用
usage.protocol.predeclaration=协议预声明
usage.qualifier=限定符
usage.selector.expression=选择器表达式
usage.superclass=超类引用
usage.variable.declaration=变量声明
