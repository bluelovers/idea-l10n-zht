AbstractDockerProcessConnectionData.docker.account.found=找不到 Docker 帳戶
AbstractDockerProcessConnectionData.docker.account.specified=未指定 Docker 帳戶
AddBacklashesQuickFix.intention.family=新增反斜杠
AddContainerManagementToolActionGroup.text=新增容器工具
AddDockerConnectionAction.title=連線…
AddDockerRegistryAction.title=Docker 註冊表…
AttachedConsoleTab.name=附加的主控台
BuildImageOperation.build.completed=建置已完成
BuildImageOperation.connected=已連線
BuildImageOperation.waiting.for.build.operation=正在等待建置運算…
CommitContainerAction.ok.button=提交
CommitContainerAction.placeholder=新鏡像名稱
CommitContainerAction.task.name=提交容器
CommitContainerAction.title=提交容器
CommitContainerAction.validation.image.name.exists=使用此名稱的鏡像已存在
CommitContainerAction.validation.validate.name=''{0}'' 不是有效的鏡像名稱
CommitContainerAction.validation.validate.tag=''{0}'' 不是有效的鏡像標記
CommitContainerAction.windows.running.container.error=Windows 不支持提交正在執行的 Windows 容器
CommitContainerAction.windows.running.container.stop.button=停止容器並顯示提交對話框
ComposeApplicationRuntime.notification.group=docker-compose
ComposeDeleteServiceAction.confirmation=刪除 `{1}` 服務中的 {0}?
ComposeDeploymentRuntime.process.finished.error.message=`docker-compose` 程序結束，離開程式碼為 {0}\n\n
ComposeRemoveOrphansAction.dialog.message=刪除所有無效服務?
ComposeScaleAction.Dialog.message=容器數量\:
ComposeScaleAction.Dialog.title=擴展
ComposeServiceExecCmd.error.command.required=指令未定義
ComposeServiceExecCmd.error.path.required=Docker Compose 組態路徑未定義
ComposeServiceExecCmd.error.service.name.required=Docker Compose 服務名稱未定義
ComposeServiceRunCmd.error.path.required=Docker Compose 組態路徑未定義
ComposeServiceRunCmd.error.service.required=Docker Compose 服務名稱未定義
ComposeServiceRuntime.status.files.not.exists=從中建立此服務的 ''{1}'' {0,choice,1\#檔案|2\#檔案}{0,choice,1\#不存在|2\#不存在}
ComposeServiceRuntime.status.service.not.exit=在 ''{1}'' {2,choice,1\#檔案|2\#檔案}中找不到 ''{0}'' 服務
ComposeServiceRuntime.status.stopped=已停止
ComposeServiceUpCmd.error.path.required=Docker Compose 組態路徑未定義
ComposeServiceUpCmd.error.service.required=Docker Compose 服務名稱未定義
ConnectNetworkDialog.ok.button.text=連線
ConnectNetworkDialog.popup.title=連線網絡選項
ConnectNetworkDialog.specify.container=指定容器
ConnectNetworkDialog.title=連線網絡
ConnectNetworkDialog.validation.container.not.exist=不存在使用此名稱的容器
ConnectNetworkDialog.validation.container.not.running=容器未執行
ConnectNetworkDialog.validation.empty.container.name=容器名稱不能為空
ConnectNetworkDialog.validation.endpoint.already.exists=網絡 ''{1}'' 中已有名稱為 ''{0}'' 的端點
ConsoleTab.title=主控台
Container.check.health.status.tooltip=檢查執行狀況
Container.health.status.healthy=正常
Container.health.status.starting=執行狀況\: 正在啟動…
Container.health.status.unhealthy=不正常
Container.healthy.status.tooltip=正常
Container.paused.status.tooltip=已暫停
Container.running.status.tooltip=正在執行
Container.stopped.status.tooltip=已停止
Container.unhealthy.status.tooltip=不正常
ContainerLogTab.title=日誌
CreateContainerAction.popup.defaultAction=建立…
CreateContainerAction.popup.title=建立容器
CreateNetworkAction.dialog.attachable.field.popup.description=啟用手動附加容器
CreateNetworkAction.dialog.driver.field.popup.description=用於管理網絡的驅動程序(預設為“網橋”)
CreateNetworkAction.dialog.driver.field.validation.not.in.swarm.mode=此客戶端不是 Swarm 管理器。使用 "docker swarm init" 或 "docker swarm join"。
CreateNetworkAction.dialog.internal.field.popup.description=限制對網絡的外部存取
CreateNetworkAction.dialog.name.field.empty.text=指定網絡名稱
CreateNetworkAction.dialog.name.field.validation.already.exists=已存在使用此名稱的網絡
CreateNetworkAction.dialog.name.field.validation.empty=網絡名稱不能為空
CreateNetworkAction.dialog.popup.title=建立網絡選項
CreateNetworkAction.dialog.tags.group.driver.name=驅動程序
CreateNetworkAction.dialog.title=建立網絡
CreateTerminalAction.tab.title=終端({0})
CreateVolumeAction.dialog.name.field.empty.text=指定卷名
CreateVolumeAction.dialog.name.field.validation.already.exists=已存在使用此名稱的卷
CreateVolumeAction.dialog.popup.title=建立卷選項
CreateVolumeAction.dialog.title=建立卷
Docker.openProject.progress=正在開啟專案…
Docker.running.state=正在執行\: ({0}/{1})
DockerAbstractDashboardTab.action.add=新增…
DockerAbstractDashboardTab.action.edit.hint=編輯
DockerAbstractDashboardTab.action.remove.hint=移除
DockerAgentDeploymentImpl.deployed.successfully=已成功部署 ''{0}''。
DockerAgentDeploymentImpl.deploying=正在部署 ''{0}''…
DockerAgentDeploymentImpl.failed.to.deploy=無法部署 ''{0}''\: {1}
DockerAgentDeploymentImpl.interrupted.by.user=已被使用者中斷…
DockerApplicationRuntime.progress.message.pushed.successfully={0} 已成功推送
DockerApplicationRuntime.progress.message.pushing=正在推送 {0}
DockerAsyncAction.progress.title=正在執行 ''{0}'' 動作
DockerBuildLogTab.title=建置日誌
DockerBuildSettingsFragments.build.args.fragment=建置實參
DockerBuildSettingsFragments.build.options.actionHint=為 `docker build` 指令指定其他選項
DockerBuildSettingsFragments.build.options.fragment=建置選項
DockerBuildSettingsFragments.context.folder.actionHint=指定要在建置期間發送到守護程序的目錄
DockerBuildSettingsFragments.context.folder.fragment=上下文目錄
DockerBuildSettingsUI.BuildArgsField.dialogEmptyText=無建置實參
DockerBuildSettingsUI.BuildArgsField.dialogTitle=建置實參
DockerBuildSettingsUI.DockerBuildOptionsField.onParseError=無法解析建置 CLI 選項\: {0}
DockerBuildSettingsUI.build.args.text=建置實參\:
DockerBuildSettingsUI.build.options.text=建置選項\:
DockerBuildSettingsUI.context.folder.text=上下文目錄\:
DockerBuildSettingsUI.dockerfile.text=Dockerfile\:
DockerBuildSettingsUI.image.tag.text=鏡像標記\:
DockerCliOptionsField.onParseError=無法解析命令行選項\: {0}
DockerCloudConfigurable.certificates.folder.text=憑證目錄\:
DockerCloudConfigurable.chooser.certificates.title=選擇憑證位置
DockerCloudConfigurable.connect.daemon.text=使用以下方式連線到 Docker 守護程序\:
DockerCloudConfigurable.docker.for.mac.radio.title=Docker for Mac
DockerCloudConfigurable.docker.for.windows.radio.title=Docker for Windows
DockerCloudConfigurable.engine.url.text=引擎 API URL\:
DockerCloudConfigurable.error.apiUrlRequired=需要 API URL
DockerCloudConfigurable.error.certificatesFolder.missing={0} 下沒有憑證目錄
DockerCloudConfigurable.error.connectionNotSpecified=指定連線類型
DockerCloudConfigurable.tcp.socket.text=TCP 套接字
DockerCloudConfigurable.unix.socket.text=Unix 套接字\:
DockerCloudType.presentable.name=Docker
DockerCloudType.run.configuration.type.presentable.name=Docker
DockerColorAnnotator.unresolvedVariableRef=無法解析變數 ''{0}''
DockerCompose.failed.to.change.ownership.of.docker.volume=無法更改卷的所有權
DockerCompose.service.user.uid.0=Compose 服務中使用者的 UID\: {0}
DockerComposeActions.UpOneServiceAsTemporaryAction.text=在 ''{0}'' 上 up
DockerComposeApplication.unsupported.version.message=具有不受支援的 Docker Compose 版本的服務
DockerComposeCli.error.cant.find.version.in.output=在 `docker compose version` 輸出中找不到版本\: {0}
DockerComposeCli.error.version.command.nonzero.exit.code=`docker compose version` 指令以非零離開程式碼 {0} 完成
DockerComposeCli.error.version.command.time.out=`docker compose version` 指令超時
DockerComposeCliUtil.error.compose.execution.failed=Docker Compose 執行失敗
DockerComposeCredentialsEditor.configuration.files.text=組態檔案\:
DockerComposeCredentialsEditor.environment.variables.text=環境變數(&E)
DockerComposeCredentialsEditor.error.base.configuration.file.does.not.exist=基礎組態檔案“{0}”不存在
DockerComposeCredentialsEditor.getting.services.from.compose.configuration=正在從 Docker Compose 組態檔案獲取服務列表…
DockerComposeCredentialsEditor.no.service.placeholder=<Select service>
DockerComposeCredentialsEditor.processing=正在處理 Docker Compose 組態…
DockerComposeCredentialsEditor.project.name.text=專案名稱\:
DockerComposeCredentialsEditor.project.name.validate.lowercase=專案名稱必須為小寫。
DockerComposeCredentialsEditor.project.name.validate.symbol=專案名稱中不允許使用“{0}”。
DockerComposeCredentialsEditor.server.text=伺服器\:
DockerComposeCredentialsEditor.service.text=服務\:
DockerComposeCredentialsEditor.validate.files.not.chosen=未選擇組態檔案
DockerComposeCredentialsEditor.validate.no.services.defined=組態檔案中未定義任何服務
DockerComposeCredentialsEditor.validate.server.not.selected=未選擇 Docker 伺服器
DockerComposeCredentialsEditor.validate.service.name.not.selected=未選擇服務名稱
DockerComposeCredentialsType.name=Docker Compose
DockerComposeDeploymentEditor.compose.files.text=Compose 檔案\:
DockerComposeDeploymentEditor.dialog.message.not.valid.project.name=“{0}”不是有效的專案名稱
DockerComposeDeploymentEditor.down.remove.images.all=所有
DockerComposeDeploymentEditor.down.remove.images.all.desc=--rmi all
DockerComposeDeploymentEditor.down.remove.images.all.hint=移除任何服務使用的所有鏡像
DockerComposeDeploymentEditor.down.remove.images.default=無
DockerComposeDeploymentEditor.down.remove.images.default.hint=不移除鏡像
DockerComposeDeploymentEditor.down.remove.images.group=`down` 時移除鏡像
DockerComposeDeploymentEditor.down.remove.images.group.hint=組態終止時應移除的鏡像
DockerComposeDeploymentEditor.down.remove.images.local=區域
DockerComposeDeploymentEditor.down.remove.images.local.desc=--rmi local
DockerComposeDeploymentEditor.down.remove.images.local.hint=僅移除沒有自訂標記的鏡像
DockerComposeDeploymentEditor.down.remove.orphans=`down` 時移除孤立項
DockerComposeDeploymentEditor.down.remove.orphans.actionHint=使用 --remove-orphans 選項執行 `docker-compose down` 以移除在 Compose 檔案中未定義的服務所對應的容器。
DockerComposeDeploymentEditor.down.remove.volumes=`down` 時移除卷
DockerComposeDeploymentEditor.down.remove.volumes.actionHint=使用 --volumes 選項執行 `docker-compose down`，在終止時同時刪除已命名卷和匿名卷
DockerComposeDeploymentEditor.enable.compatibility.mode=啟用相容性模式
DockerComposeDeploymentEditor.enable.compatibility.mode.hint=啟用後，docker-compose 將讀取每個服務定義的 deploy 部分，並嘗試將其轉換為等效的第 2 版參數。
DockerComposeDeploymentEditor.env.file.actionHint=指定用於設定環境變數的檔案
DockerComposeDeploymentEditor.env.file.browse.title=選擇環境變數檔案
DockerComposeDeploymentEditor.env.file.does.not.exist=''{0}'' 中沒有環境變數檔案
DockerComposeDeploymentEditor.env.file.label=環境變數檔案\:
DockerComposeDeploymentEditor.env.file.name=環境變數檔案
DockerComposeDeploymentEditor.env.file.not.valid=無法從 ''{0}'' 讀取環境變數檔案
DockerComposeDeploymentEditor.environment.variables=環境變數
DockerComposeDeploymentEditor.environment.variables.actionHint=設定 Docker Compose 程序的環境變數。這些變數不對任何容器提供。
DockerComposeDeploymentEditor.group.up=docker-compose up
DockerComposeDeploymentEditor.group.up.actionHint=通過附加的 'docker-compose up' 選項執行
DockerComposeDeploymentEditor.group.up.childrenGroupName=docker-compose up 選項
DockerComposeDeploymentEditor.group.up.name=套用 `up` 選項
DockerComposeDeploymentEditor.group.up.v2=docker compose up
DockerComposeDeploymentEditor.incompatible.error.mask=“{0}”與{1}不相容
DockerComposeDeploymentEditor.no.deps.actionHint=不啟動鏈接的服務
DockerComposeDeploymentEditor.no.deps.desc=--no-deps
DockerComposeDeploymentEditor.no.deps.name=所選服務
DockerComposeDeploymentEditor.profiles.actionHint=組態檔案允許通過選擇性地啟用服務來針對各種用法和環境調整 Compose 應用程式模型。
DockerComposeDeploymentEditor.profiles.emptyText=指定以逗號分隔的組態檔案列表
DockerComposeDeploymentEditor.profiles.label=組態檔案\:
DockerComposeDeploymentEditor.profiles.name=組態檔案
DockerComposeDeploymentEditor.project.name=專案名稱\:
DockerComposeDeploymentEditor.project.name.name=指定專案名稱
DockerComposeDeploymentEditor.run=執行
DockerComposeDeploymentEditor.services.name=指定服務
DockerComposeDeploymentEditor.services.popup.title=切換服務
DockerComposeDeploymentEditor.services.text=服務\:
DockerComposeDeploymentEditor.up.abort.on.exit.actionHint=如果任何一個容器停止，則停止所有容器
DockerComposeDeploymentEditor.up.abort.on.exit.desc=--abort-on-container-exit
DockerComposeDeploymentEditor.up.abort.on.exit.name=容器離開時
DockerComposeDeploymentEditor.up.always.recreate.actionHint=重新建立相依的容器
DockerComposeDeploymentEditor.up.always.recreate.desc=--always-recreate-deps
DockerComposeDeploymentEditor.up.always.recreate.name=重新建立相依項
DockerComposeDeploymentEditor.up.attach.deps.actionHint=附加到所有啟動的容器及其相依項
DockerComposeDeploymentEditor.up.attach.deps.desc=--attach-dependencies
DockerComposeDeploymentEditor.up.attach.deps.name=所選部署和相依項
DockerComposeDeploymentEditor.up.build.actionHint=在啟動容器之前建置鏡像
DockerComposeDeploymentEditor.up.build.desc=--build
DockerComposeDeploymentEditor.up.build.name=始終
DockerComposeDeploymentEditor.up.detach.actionHint=在分離模式下執行
DockerComposeDeploymentEditor.up.detach.desc=--detach
DockerComposeDeploymentEditor.up.detach.name=無
DockerComposeDeploymentEditor.up.exit.code.from=服務離開程式碼
DockerComposeDeploymentEditor.up.exit.code.from.actionHint=返回所選服務容器的離開程式碼。在指定服務中的容器停止時停止所有容器。
DockerComposeDeploymentEditor.up.exit.code.from.desc=--exit-code-from
DockerComposeDeploymentEditor.up.exit.code.from.name=返回離開程式碼
DockerComposeDeploymentEditor.up.exit.code.label=離開程式碼\:
DockerComposeDeploymentEditor.up.exit.code.suffix=返回所選服務的離開程式碼
DockerComposeDeploymentEditor.up.force.recreate.actionHint=即使容器的組態和鏡像並未更改，也重新建立所有容器
DockerComposeDeploymentEditor.up.force.recreate.desc=--force-recreate
DockerComposeDeploymentEditor.up.force.recreate.name=所有
DockerComposeDeploymentEditor.up.group.attach.to=附加到
DockerComposeDeploymentEditor.up.group.attach.to.default=所選服務
DockerComposeDeploymentEditor.up.group.attach.to.default.hint=不附加到相依的容器，而是附加到所有已啟動的容器
DockerComposeDeploymentEditor.up.group.attach.to.hint=組態要顯示輸出流的容器
DockerComposeDeploymentEditor.up.group.build=建置
DockerComposeDeploymentEditor.up.group.build.default=僅缺失鏡像
DockerComposeDeploymentEditor.up.group.build.default.hint=僅建置不可用的鏡像
DockerComposeDeploymentEditor.up.group.build.hint=在啟動容器前組態要建置的鏡像
DockerComposeDeploymentEditor.up.group.recreate=重新建立容器
DockerComposeDeploymentEditor.up.group.recreate.default=更改的組態
DockerComposeDeploymentEditor.up.group.recreate.default.hint=如果組態或鏡像更改，則取代容器
DockerComposeDeploymentEditor.up.group.recreate.hint=組態要停止的容器並取代為新容器
DockerComposeDeploymentEditor.up.group.start=啟動
DockerComposeDeploymentEditor.up.group.start.default=所選部署和相依項
DockerComposeDeploymentEditor.up.group.start.default.hint=啟動指定服務和鏈接服務
DockerComposeDeploymentEditor.up.group.start.hint=組態要啟動的服務
DockerComposeDeploymentEditor.up.group.stop.containers=停止容器
DockerComposeDeploymentEditor.up.group.stop.containers.default=手動
DockerComposeDeploymentEditor.up.group.stop.containers.default.hint=手動停止容器
DockerComposeDeploymentEditor.up.group.stop.containers.hint=組態容器停止方式
DockerComposeDeploymentEditor.up.no.build.actionHint=不建置鏡像。如果缺失，則以錯誤停止。
DockerComposeDeploymentEditor.up.no.build.desc=--no-build
DockerComposeDeploymentEditor.up.no.build.name=從不
DockerComposeDeploymentEditor.up.no.recreate.actionHint=即使組態更改，也不重新建立現有容器
DockerComposeDeploymentEditor.up.no.recreate.desc=--no-recreate
DockerComposeDeploymentEditor.up.no.recreate.name=無
DockerComposeDeploymentEditor.up.no.start.actionHint=建立服務後不啟動它們
DockerComposeDeploymentEditor.up.no.start.desc=--no-start
DockerComposeDeploymentEditor.up.no.start.name=無
DockerComposeDeploymentEditor.up.noLogPrefix.actionHint=不在日誌中列印前綴
DockerComposeDeploymentEditor.up.noLogPrefix.desc=--no-log-prefix
DockerComposeDeploymentEditor.up.noLogPrefix.name=不在日誌中列印前綴
DockerComposeDeploymentEditor.up.remove.orphans.actionHint=移除 Compose 檔案中未定義的服務的容器
DockerComposeDeploymentEditor.up.remove.orphans.desc=--remove-orphans
DockerComposeDeploymentEditor.up.remove.orphans.name=移除孤立項
DockerComposeDeploymentEditor.up.renew.anon.volumes.actionHint=重新建立匿名卷，而不是從以前的容器中檢索資料
DockerComposeDeploymentEditor.up.renew.anon.volumes.desc=--renew-anon-volumes
DockerComposeDeploymentEditor.up.renew.anon.volumes.name=重新建立匿名卷
DockerComposeDeploymentEditor.up.scale.desc=--scale
DockerComposeDeploymentEditor.up.scale.hint=設定服務的容器數
DockerComposeDeploymentEditor.up.scale.name=覆寫擴展
DockerComposeDeploymentEditor.up.timeout.desc=--timeout
DockerComposeDeploymentEditor.up.timeout.dialog.message.not.valid.integer={0} 不是有效的整數
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.greater=超時不能超過 1000
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.less=超時不能小於 0
DockerComposeDeploymentEditor.up.timeout.hint=以秒為單位設定終止容器的超時。容器首先會收到 SIGTERM，然後在指定的超時後收到 SIGKILL。
DockerComposeDeploymentEditor.up.timeout.label=超時\:
DockerComposeDeploymentEditor.up.timeout.name=SIGKILL 超時
DockerComposeDeploymentEditor.up.timeout.suffix=秒
DockerComposeDeploymentSourceType.deploymentName=Compose\: {0}
DockerComposeDeploymentSourceType.error.file.does.not.exist=''{0}'' 下沒有 Compose 檔案
DockerComposeDeploymentSourceType.error.path.required=需要 Compose 檔案的路徑
DockerComposeDeploymentSourceType.name=Docker Compose
DockerComposeDeploymentSourceType.suggestRunConfigurationName={0}\: Compose 部署
DockerComposeExecutionFailed.notification.action.title=顯示設定…
DockerComposeFilesTextField.DockerComposeFileDialog.title=Docker Compose 組態檔案
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOnly=選擇組態檔案
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOrFolder=選擇組態檔案或目錄
DockerComposeInspection.groupKey=Docker-compose
DockerComposeIntegrationService.progress.title.updating.volume=正在更新 {0} 卷
DockerComposeProcessUtil.error.container.not.found=找不到 Docker Compose 容器 {0}
DockerComposeService.unsupported.version.message=將 Docker Compose 更新到 1.25.0 或更高版本，然後重新建立此服務以獲得完整的延伸模組支援
DockerComposeServiceScaleDialog.column.name.scale=擴展到
DockerComposeServiceScaleDialog.column.name.service=服務
DockerComposeServiceScaleDialog.dialog.title=選擇要擴展的服務
DockerComposeServiceScaleDialog.scale.to.label=擴展到\:
DockerComposeServiceScaleDialog.service.does.not.exist.error=指定的 docker-compose 檔案中不存在“{0}”服務
DockerComposeServiceScaleDialog.service.label=服務\:
DockerComposeServiceScaleDialog.services.does.not.exist.error=指定的 docker-compose 檔案中不存在 {0} 服務
DockerComposeServiceScaleDialog.title=設定要為每個服務執行的容器數(如果有 compose 檔案，則覆寫該檔案中的擴展)\:
DockerComposeServiceScalePairPanel.dialog.ok.text=儲存
DockerComposeServiceStarter.starting.docker.compose=正在啟動 docker-compose…
DockerComposeServicesField.empty.text=留空將執行所有服務
DockerComposeSettingsEditor.form.command=指令和選項\: 
DockerComposeSettingsEditor.form.command.preview=指令預覽\:
DockerComposeSettingsEditor.form.name=Docker Compose
DockerComposeTargetMainStep.error.service.must.be.selected=未選擇服務
DockerComposeTargetMainStep.step.description=建立一個新的 Docker Compose 目標
DockerConfigureLanguageStep.title.label=專案目錄和語言執行時組態
DockerConnectionConfigurable.checkbox.detect.executable.paths.automatically=自動檢測可執行檔案路徑
DockerConnectionsListConfigurable.AddActionGroup.text=新增容器工具
DockerContainer.settings=容器設定\:
DockerContainerBrowser.DownloadAction.description=將檔案從 Docker 容器下載到臨時檔案
DockerContainerBrowser.DownloadAction.text=下載到臨時目錄
DockerContainerBrowser.ViewInEditorAction.description=在編輯器中檢視 Docker 容器中的檔案
DockerContainerBrowser.ViewInEditorAction.text=在編輯器中檢視
DockerContainerBrowser.downloadTask.title=從 Docker 容器下載檔案
DockerContainerBrowserTab.displayName=檔案
DockerContainerBrowserTab.emptyText=啟動容器以瀏覽檔案
DockerContainerDashboardTab.button.restart=重啟
DockerContainerDashboardTab.button.start=啟動
DockerContainerDashboardTab.button.stop=停止
DockerContainerDashboardTab.button.terminal=終端
DockerContainerDashboardTab.confirm.deletion.message=是否要移除此元素並重新建立容器?
DockerContainerDashboardTab.confirm.deletion.title=確認刪除
DockerContainerDashboardTab.port.read.and.write=讀/寫
DockerContainerDashboardTab.port.read.only=唯讀
DockerContainerDashboardTab.recreate.container=重新建立容器
DockerContainerDashboardTab.segment.env.var=環境變數
DockerContainerDashboardTab.segment.ports=連接埠
DockerContainerDashboardTab.segment.volumes=卷
DockerContainerSettingsFragments.all.ports.actionHint=將所有暴露連接埠發佈到隨機連接埠
DockerContainerSettingsFragments.all.ports.fragment=隨機發佈所有暴露連接埠
DockerContainerSettingsFragments.attach.to.container.name=附加到容器
DockerContainerSettingsFragments.attach.to.container.tooltip=附加到容器並在啟動時開啟 `Attached Console`
DockerContainerSettingsFragments.bind.mounts.actionHint=將主機目錄或命名卷綁定掛載到容器
DockerContainerSettingsFragments.bind.mounts.fragment=綁定掛載
DockerContainerSettingsFragments.bind.ports.actionHint=將容器連接埠映射到主機連接埠
DockerContainerSettingsFragments.bind.ports.fragment=綁定連接埠
DockerContainerSettingsFragments.command.actionHint=要在新容器中執行的指令
DockerContainerSettingsFragments.command.fragment=指令
DockerContainerSettingsFragments.entrypoint.actionHint=覆蓋鏡像的預設 NTRYPOINT
DockerContainerSettingsFragments.entrypoint.fragment=入口點
DockerContainerSettingsFragments.environment.variables.actionHint=設定容器環境變數
DockerContainerSettingsFragments.environment.variables.fragment=環境變數
DockerContainerSettingsFragments.run.options.actionHint=為 `docker run` 指令指定其他選項
DockerContainerSettingsFragments.run.options.fragment=執行選項
DockerContainerSettingsUI.DockerRunOptionsField.onParseError=無法解析執行 CLI 選項\: {0}
DockerContainerSettingsUI.EnvVarsField.dialogEmptyText=無變數
DockerContainerSettingsUI.EnvVarsField.dialogTitle=環境變數
DockerContainerSettingsUI.all.text=所有
DockerContainerSettingsUI.bind.mounts.text=綁定掛載\:
DockerContainerSettingsUI.bind.ports.text=綁定連接埠\:
DockerContainerSettingsUI.command.text=指令\:
DockerContainerSettingsUI.entrypoint.text=入口點\:
DockerContainerSettingsUI.environment.variables.text=環境變數\:
DockerContainerSettingsUI.executable.panel.title=可執行檔案
DockerContainerSettingsUI.exposedPortsHyperlink=<html>將公開連接埠發佈到主機接口\:</html>
DockerContainerSettingsUI.run.options.text=執行選項\:
DockerContainerSettingsUI.specify.text=指定
DockerContainersGroupDetailsProvider.node.tooltip=從鏡像 `{1}` 建立的 `{0}`
DockerConverterProvider.conversion.description=Docker 執行組態將轉換為新格式
DockerCredentialsEditor.image.name.text=鏡像名稱\:
DockerCredentialsEditor.listing.docker.images=正在列出 Docker 鏡像…
DockerCredentialsEditor.server.text=伺服器\:
DockerCredentialsEditor.validate.image.not.specified=未指定 Docker 鏡像名稱
DockerCredentialsEditor.validate.server.not.selected=未選擇 Docker 伺服器
DockerCredentialsType.name=Docker
DockerDashboardTab.title=儀表板
DockerDeleteProvider.background.message=正在刪除…
DockerDeleteProvider.button.collapse.all=全部摺疊
DockerDeleteProvider.button.deselect.all=取消全選
DockerDeleteProvider.button.expand.all=全部展開
DockerDeleteProvider.button.select.all=全選
DockerDeleteProvider.buttons.cancel=取消
DockerDeleteProvider.buttons.force.delete=全部刪除
DockerDeleteProvider.buttons.smart.delete=選擇並刪除…
DockerDeleteProvider.confirmation.container.many={0} 個容器
DockerDeleteProvider.confirmation.container.one=1 個容器
DockerDeleteProvider.confirmation.dialog.text=由於存在相依項，無法刪除。刪除相依項以完成此動作。
DockerDeleteProvider.confirmation.image.many={0} 個鏡像
DockerDeleteProvider.confirmation.image.one=1 個鏡像
DockerDeleteProvider.confirmation.text.both.types=刪除 {0} 和 {1}?
DockerDeleteProvider.confirmation.text.single.type=刪除 {0}?
DockerDeleteProvider.confirmation.text.unspecified.type.many=刪除 {0} 個條目?
DockerDeleteProvider.confirmation.text.unspecified.type.one=刪除條目?
DockerDeleteProvider.confirmation.title=確認刪除
DockerDeleteProvider.dialog.hint=\n只有刪除一個元素的所有相依項後，才能刪除該元素。
DockerDeleteProvider.smart.delete.compose=Compose\: {0}
DockerDeleteProvider.smart.delete.dialog.ok.text=刪除所選項
DockerDeleteProvider.smart.delete.dialog.title=檢測到的相依項
DockerDeploymentEditor.command.preview.text=指令預覽\:
DockerDeploymentEditor.container.name.text=容器名稱\:
DockerDeploymentEditor.image.id.text=鏡像 ID 或名稱\:
DockerDeploymentEditor.run.built.image.text=執行建置的鏡像
DockerDeploymentSourcePathCombo.dialogDescription=指定要建置和執行的 Dockerfile 
DockerDeploymentSourcePathCombo.dialogTitle=Dockerfile
DockerDeploymentStatus.deleting=正在刪除
DockerDeploymentStatus.starting=正在啟動
DockerDeploymentStatus.stopping=正在停止
DockerDownloadVolume.progress.message.executing.command=正在執行\: `{0}`
DockerEnvVarConfigurable.name.required=“名稱”為必填項
DockerEnvVarsEditor.NameColumn.title=名稱
DockerEnvVarsEditor.ValueColumn.title=值
DockerEnvironment.cant.run.process=無法執行程序\: {0}
DockerEnvironment.changing.the.ownership.of.the.named.volume.0=正在更改命名卷 {0} 的所有權
DockerEnvironment.docker.image.user.0=Docker 鏡像使用者\: {0}
DockerEnvironment.failed.to.change.ownership.of.volume=無法更改 Docker 鏡像“{0}”的卷的所有權
DockerEnvironmentFactory.error.cant.find.image=找不到鏡像\: {0}
DockerEnvironmentFactory.progress.text.preparing.docker.target=正在準備 Docker 目標…
DockerExtraHostConfigurable.error.hostname.required=主機名為必填項
DockerExtraHostConfigurable.error.ip.required=IP 為必填項
DockerExtraHostConfigurable.hostname.text=主機名\:
DockerExtraHostConfigurable.ip.text=IP\:
DockerExtraHostsEditor.HostnameColumn.title=主機名
DockerExtraHostsEditor.IPColumn.title=IP
DockerFileAddOrCopySemanticInspection.display.name='ADD'/'COPY' 指令的無效目標
DockerFileAddOrCopySemanticInspection.error.quick.fix=新增尾隨的 '/'
DockerFileAddOrCopySemanticInspection.error.target.must.be.folder=目標必須是目錄，並以 '/' 結尾
DockerFileAndContextFolderUI.ContextFolderField.dialogDescription=指定上下文目錄或預設留空
DockerFileAndContextFolderUI.ContextFolderField.dialogTitle=上下文目錄
DockerFileArgumentCountInspection.display.name=實參數量錯誤
DockerFileArgumentCountInspection.error.at.least.N.arguments.required=至少需要 {0} 個實參
DockerFileArgumentCountInspection.error.exactly.one.argument.required=只需要一個實參
DockerFileAssignmentsInspection.display.name='key\=value' 對中無效的空格
DockerFileAssignmentsInspection.error.spacing.not.allowed=此處不允許空格
DockerFileAssignmentsInspection.remove.spaces=移除空格
DockerFileChooser.RefreshAction.description=重新整理 Docker 容器檔案系統樹
DockerFileChooser.RefreshAction.text=重新整理
DockerFileChooser.emptyPathText=選擇要檢視路徑的專案
DockerFileChooser.emptyText=無法存取檔案系統根。可能尚不支持這種 Docker 容器。
DockerFileChooser.loadingText=正在獲取檔案系統根…
DockerFileCopyHeredocInspection.display.name=heredoc 作為 ADD/COPY 的最後一個實參(目標)
DockerFileCopyHeredocInspection.problem={0} 目標實參不能是 heredoc
DockerFileDeploymentEditor.group.build.title=建置
DockerFileDeploymentEditor.group.run.actionHint=啟動建置鏡像的容器
DockerFileDeploymentEditor.group.run.option.name=執行選項
DockerFileDeploymentEditor.group.run.title=執行
DockerFileDeploymentSourceType.deploymentName={0} Dockerfile\: {1}
DockerFileDeploymentSourceType.error.dockerfile.does.not.exist=''{0}'' 下沒有 Dockerfile
DockerFileDeploymentSourceType.error.path.required=需要 Dockerfile 檔案的路徑
DockerFileDeploymentSourceType.name=Dockerfile
DockerFileDeploymentSourceType.suggestRunConfigurationName={0}
DockerFileDetector.Notifier.disable=不再詢問
DockerFileDetector.Notifier.message.full=您可以為以下檔案建立 Docker 執行組態\:
DockerFileDetector.Notifier.message.limited=您可以為 {0} 個檔案建立 Docker 執行組態，其中包括以下檔案\:
DockerFileDetector.Notifier.message.one=您可以為以下檔案建立 Docker 執行組態\:
DockerFileDetector.Notifier.title=檢測到 {0,choice,1\#Dockerfile|2\#Dockerfile}
DockerFileDetector.notification.group=Docker\: Dockerfile 檢測
DockerFileDuplicatedStageNameInspection.display.name=重複的暫存名稱
DockerFileDuplicatedStageNameInspection.problem=重複的暫存名稱\: {0}
DockerFileEntrypointWithoutExecInspection.display.name=入口點 shell 形式缺少 'exec'
DockerFileEntrypointWithoutExecInspection.problem=ENTRYPOINT shell 指令缺少 'exec'
DockerFileEntrypointWithoutExecInspection.quickfix=在指令前新增 'exec'
DockerFileFindUsagesProvider.usageType.argVar=ARG 變數
DockerFileFindUsagesProvider.usageType.envVar=ENV 變數
DockerFileFindUsagesProvider.usageType.stage=階段宣告
DockerFileFindUsagesProvider.usageType.unknown=宣告
DockerFileHeredocDelimitersInspection.display.name=heredoc 分隔符不符合
DockerFileHeredocDelimitersInspection.problem=未閉合的 heredoc 分隔符\: {0}
DockerFileHeredocDelimitersInspection.quickfix=追加缺失的 heredoc 分隔符
DockerFileRunCommandMissingContinuationInspection.description=缺少連續字元
DockerFileRunCommandMissingContinuationInspection.display.name='RUN' 指令缺少連續字元
DockerFileRunLineMarkerProvider.BuildAsTemporaryRunConfig.text=在 ''{0}'' 上建置鏡像
DockerFileRunLineMarkerProvider.BuildExistingRunConfig.text=為 ''{0}'' 建置鏡像
DockerFileRunLineMarkerProvider.action.group.build=建置鏡像
DockerFileRunLineMarkerProvider.action.group.run=執行
DockerFileSystem.error.can.not.get.contents=無法獲取 {0} 的內容
DockerFileSystem.error.modification.not.supported=Docker 容器檔案系統不支持修改\: {0}
DockerGroupRuntime.ContainersGroup.groupName=容器
DockerGroupRuntime.DevcontainersGroup.groupName=Dev Container
DockerGroupRuntime.ImagesGroup.groupName=鏡像
DockerGroupRuntime.NetworksGroup.groupName=網絡
DockerGroupRuntime.VolumesGroup.groupName=卷
DockerImageDashboardTab.action.create.container=建立容器
DockerImageDashboardTab.action.push.image=推送鏡像
DockerImageDashboardTab.action.show.labels=顯示標籤
DockerImageDashboardTab.segment.containers=容器
DockerImageDashboardTab.segment.tags=標籤
DockerImageDashboardTab.tag.image.dialog.button=標籤
DockerImageDashboardTab.tag.image.dialog.field.repository=儲存庫
DockerImageDashboardTab.tag.image.dialog.field.tag=標籤
DockerImageDashboardTab.tag.image.dialog.title=標記鏡像
DockerImageDashboardTab.tag.main=主
DockerImageDeploymentEditor.pull.image=拉取鏡像
DockerImageDeploymentEditor.pull.image.always=始終
DockerImageDeploymentEditor.pull.image.missing=缺少
DockerImageDeploymentEditor.pull.image.never=從未
DockerImageDeploymentSourceType.deploymentName={0} 鏡像 ID\: {1}
DockerImageDeploymentSourceType.error.image.id.required=需要鏡像 ID 或名稱
DockerImageDeploymentSourceType.name=Docker 鏡像
DockerImageDeploymentSourceType.suggestRunConfigurationName=Docker 鏡像
DockerImageGroupDetails.ImagePullTab.title=鏡像主控台
DockerImageLayersTab.analyzing=正在分析…
DockerImageLayersTab.analyzing.task=正在分析 {0} 的 Docker 鏡像層…
DockerImageLayersTab.column.command=指令
DockerImageLayersTab.column.size=大小
DockerImageLayersTab.element.command=指令
DockerImageLayersTab.element.comment=註釋
DockerImageLayersTab.element.created=已建立
DockerImageLayersTab.element.digest=摘要
DockerImageLayersTab.element.id=ID
DockerImageLayersTab.element.openable=可開啟
DockerImageLayersTab.element.size=大小
DockerImageLayersTab.reproducible.image.tooltip=此鏡像的日期已被省略。這對於“可重現的建置”是必要的。
DockerImageLayersTab.sort.by=排序依據
DockerImageLayersTab.sort.by.name=名稱
DockerImageLayersTab.sort.by.size=大小
DockerImageLayersTab.status.empty.layer=空層
DockerImageLayersTab.status.layer.not.selected1=選擇層以檢視詳細資訊
DockerImageLayersTab.status.need.analyze=分析鏡像以獲得更多資訊
DockerImageLayersTab.title=層
DockerImageLayersTab.value.missing=(缺少)
DockerInlayHintsProvider.name=Docker 執行已命名的階段
DockerInlayHintsProvider.popup.title=“{0}”的動作
DockerInlayHintsProvider.tooltip.all=顯示所有已命名的階段組態
DockerInlayHintsProvider.tooltip.build=建置“{0}”暫存
DockerInlayHintsProvider.tooltip.run=執行“{0}”暫存
DockerInterpreterContainerSettingsEditor.disable.networking.text=停用網絡
DockerInterpreterContainerSettingsEditor.environment.variables=環境變數
DockerInterpreterContainerSettingsEditor.extra.hosts=額外主機
DockerInterpreterContainerSettingsEditor.links=鏈接
DockerInterpreterContainerSettingsEditor.network.mode.text=網絡模式\:
DockerInterpreterContainerSettingsEditor.port.bindings=連接埠綁定
DockerInterpreterContainerSettingsEditor.publish.all.ports.text=發佈所有連接埠
DockerInterpreterContainerSettingsEditor.run.options.text=執行選項\:
DockerInterpreterContainerSettingsEditor.volume.bindings=卷綁定
DockerInterpreterContainerSettingsEditorDialog.title=編輯 Docker 容器設定
DockerJsonFormStringLiteralsInspection.display.name=JSON 陣列格式的帶單引號的字串
DockerJsonFormStringLiteralsInspection.problem=應為帶雙引號的字串字面量
DockerJsonFormStringLiteralsInspection.quickfix=使用雙引號包裝
DockerLinkConfigurable.error.name.required=“名稱”為必填項
DockerLinksEditor.AliasColumn.title=別名
DockerLinksEditor.NameColumn.title=名稱
DockerLogConsoleView.checkbox.show.previous.sessions.lines=顯示以前的會話
DockerLogConsoleView.checkbox.show.timestamps=顯示時間戳
DockerLogConsoleView.folding.action.title=折疊
DockerLogConsoleView.folding.policy.days=天
DockerLogConsoleView.folding.policy.hours=小時
DockerLogConsoleView.folding.policy.minutes=分鐘
DockerLogConsoleView.folding.policy.months=個月
DockerLogConsoleView.folding.policy.none=無
DockerLogConsoleView.folding.policy.seconds=秒
DockerLogConsoleView.folding.policy.years=年
DockerLogConsoleView.label.folding.for.previous.sessions.lines.by=折疊深度
DockerMappingConfigurable.browse.description=選擇共享目錄路徑
DockerMappingConfigurable.browse.title=共享目錄路徑
DockerMappingConfigurable.displayName=路徑映射
DockerMappingConfigurable.error.local.path.required=需要本地路徑
DockerMappingConfigurable.error.remote.path.required=需要虛擬機路徑
DockerMappingConfigurable.local.path.text=本地路徑\:
DockerMappingConfigurable.virtual.machine.path.text=虛擬機路徑\:
DockerMissingShellPluginNotificationProvider.do.not.show.again=不再顯示
DockerMissingShellPluginNotificationProvider.enable.plugin=啟用 `Shell Script` 延伸模組
DockerMissingShellPluginNotificationProvider.install.plugin=安裝 `Shell Script` 延伸模組
DockerMissingShellPluginNotificationProvider.text=需要 `Shell Script` 延伸模組才能提供完整的 Dockerfile 支援
DockerNetworkDetails.ContainersEditor.title=容器
DockerNetworkDetails.DockerNetworkDashboardTab.disconnect=斷開連線
DockerNetworkDetails.DockerNetworkDashboardTab.driver=驅動程序
DockerNetworkDetails.DockerNetworkDashboardTab.gateway=網關
DockerNetworkDetails.DockerNetworkDashboardTab.ip.range=IP 範圍
DockerNetworkDetails.DockerNetworkDashboardTab.ipv6.disabled=IPv6 已停用
DockerNetworkDetails.DockerNetworkDashboardTab.network=網絡
DockerNetworkDetails.DockerNetworkDashboardTab.subnet=子網
DockerNetworkDetails.IpamPropertiesEditor.title=IPAM
DockerNetworkDetails.NetworkPropertiesEditor.property.attachable=可附加
DockerNetworkDetails.NetworkPropertiesEditor.property.driver=驅動程序
DockerNetworkDetails.NetworkPropertiesEditor.property.id=網絡 ID
DockerNetworkDetails.NetworkPropertiesEditor.property.internal=內部
DockerNetworkDetails.NetworkPropertiesEditor.property.ipv6.enabled=已啟用 IPv6
DockerNetworkDetails.NetworkPropertiesEditor.property.scope=作用域
DockerPortBindingDialog.container.port.placeholder=指定容器連接埠
DockerPortBindingDialog.container.port.tooltip=容器連接埠
DockerPortBindingDialog.host.ip.name=主機 IP
DockerPortBindingDialog.host.ip.placeholder=指定主機 IP
DockerPortBindingDialog.host.ip.popup.description=(如未指定，將使用 0.0.0.0)
DockerPortBindingDialog.host.port.name=主機連接埠
DockerPortBindingDialog.host.port.placeholder=指定主機連接埠
DockerPortBindingDialog.host.port.popup.description=(如未指定，將使用第一個可用連接埠)
DockerPortBindingDialog.ports.binding.options=連接埠綁定選項
DockerPortBindingDialog.protocol.group.name=協議
DockerPortBindingDialog.protocol.group.popup.description=(預設 tcp)
DockerPortBindingDialog.validation.container.port.cant.be.empty=容器連接埠不能為空
DockerPortBindingDialog.validation.not.valid.ip=''{0}'' 不是有效的 IP
DockerPortBindingDialog.validation.not.valid.port=''{0}'' 不是有效的端口號
DockerPortBindingDialog.validation.not.valid.port.range=端口號不能小於 0 和大於 65335
DockerPortBindingDialog.validation.port.already.allocated=''{0}\:{1}'' 連接埠已被分配
DockerPortBindingsEditor.containerPort=容器連接埠
DockerPortBindingsEditor.hostIP=主機 IP
DockerPortBindingsEditor.hostPort=主機連接埠
DockerPortBindingsEditor.protocol=協議
DockerPortBindingsField.PortBindingsTable.containerPort=容器連接埠
DockerPortBindingsField.PortBindingsTable.hostIP=主機 IP
DockerPortBindingsField.PortBindingsTable.hostPort=主機連接埠
DockerPortBindingsField.PortBindingsTable.protocol=協議
DockerPortBindingsField.dialogEmptyText=無連接埠綁定
DockerPortBindingsField.dialogTitle=連接埠綁定
DockerPreviewFragments.group.preview=指令預覽
DockerPreviewFragments.preview.action.description=顯示要執行的指令的預覽
DockerPreviewFragments.preview.action.text=顯示指令預覽
DockerPreviewFragments.preview.label=預覽\:
DockerPropertiesRuntimeEditor.NameColumn.title=名稱
DockerPropertiesRuntimeEditor.ValueColumn.title=值
DockerPropertiesRuntimeEditor.action.copy.to.clipboard.name=複製到剪貼簿
DockerPullIntention.missing.docker.configuration.error=找不到已組態的 Docker 連線。
DockerPullIntention.text=拉取 Docker 鏡像
DockerPullToTerminal.error.operation.failed=動作失敗\: {0}，有關詳細資訊，請參閱日誌
DockerRegistryConfigurable.address.text=地址\:
DockerRegistryConfigurable.error.address.required=地址為必填項
DockerRegistryConfigurable.error.invalid.address=地址無效
DockerRegistryConfigurable.error.password.required=密碼為必填項
DockerRegistryConfigurable.error.unsupporded.registry=不支持的註冊表
DockerRegistryConfigurable.error.username.required=用戶名必填
DockerRegistryConfigurable.password.text=密碼\:
DockerRegistryConfigurable.registry.text=註冊表\:
DockerRegistryConfigurable.test.connection.text=測試連線
DockerRegistryConfigurable.token.text=令牌\:
DockerRegistryConfigurable.username.text=用戶名\:
DockerRegistryServiceViewContributor.connecting.message=正在連線到 Docker 伺服器…
DockerRegistryServiceViewContributor.contributor.descriptor.name=Docker 註冊表
DockerRegistryServiceViewContributor.dialog.label=拉取到
DockerRegistryServiceViewContributor.dialog.ok=拉取
DockerRegistryServiceViewContributor.dialog.title=拉取 Docker 鏡像
DockerRegistryServiceViewContributor.error.node.label=錯誤
DockerRegistryServiceViewContributor.login.operation=正在登入…
DockerRegistryServiceViewContributor.pull.repository.action=拉取儲存庫…
DockerRegistryServiceViewContributor.pull.repository.action.description=從儲存庫中拉取所有帶標籤的鏡像
DockerRegistryServiceViewContributor.pull.repository.task=正在從儲存庫中拉取所有 Docker 鏡像…
DockerRegistryServiceViewContributor.registryNode.statusText=錯誤\: {0}
DockerRootType.displayName=Docker 檔案
DockerRunConfigActions.RunOrBuildExistingConfig.text.build=建置 ''{0}''
DockerRunConfigurationCreator.editConfiguration.title.new=建立 Docker 組態
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.dialogTitle=編輯執行組態
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.text=新增執行組態…
DockerRunLineMarkerProviderBase.EditExistingRunConfig.dialogTitle=編輯執行組態
DockerRunLineMarkerProviderBase.EditExistingRunConfig.text=編輯 ''{0}''…
DockerRunLineMarkerProviderBase.RunAsTemporaryRunConfig.text=在 ''{0}'' 上執行
DockerRunLineMarkerProviderBase.RunExistingRunConfig.compose.project=(專案\: {0})
DockerRunLineMarkerProviderBase.RunExistingRunConfig.text=執行 ''{0}''
DockerRunLineMarkerProviderBase.tooltip=在 Docker 上執行
DockerRuntimeLabelsTab.tab.title=標籤
DockerServiceViewContributor.contributor.descriptor.name=Docker
DockerServiceViewContributor.empty.tree.suggestion.connect.to.docker=連線到 Docker 或 Podman
DockerSingletonDeploymentSourceType.unknown.node.text=<unknown>
DockerSshConnectionConfigurator.label=SSH\:
DockerSshConnectionConfigurator.preparing.environment=正在準備 Docker SSH 環境…
DockerTargetBuildImageStep.description=正在建置 Docker 鏡像…
DockerTargetConfigurable.build.args.row.label=建置實參\:
DockerTargetConfigurable.build.options.row.label=建置選項\:
DockerTargetConfigurable.build.radio.text=建置
DockerTargetConfigurable.button.rebuild.image=重新建置鏡像
DockerTargetConfigurable.context.folder.row.label=上下文目錄\:
DockerTargetConfigurable.dockerfile.row.label=Dockerfile\:
DockerTargetConfigurable.image.row.label=鏡像檔案\:
DockerTargetConfigurable.image.tag.row.label=鏡像標記\:
DockerTargetConfigurable.language.runtime.label=語言執行時\:
DockerTargetConfigurable.optional.row.title=可選
DockerTargetConfigurable.pull.radio.text=拉取或使用現有鏡像
DockerTargetConfigurable.rebuild.automatically.checkbox.text=每次執行程式碼之前自動重新建置鏡像
DockerTargetConfigurable.run.options.comment.text=Docker 執行指令的參數。\n例如，用於公開連接埠 8080 的 -p 8080\:8080。
DockerTargetConfigurable.run.options.row.label=執行選項\:
DockerTargetConfigurable.section.title=Docker 容器
DockerTargetConfigurable.server.row.label=Docker 伺服器\:
DockerTargetConfigurable.wizard.title.rebuild.image=重新建置鏡像
DockerTargetEnvironmentConfiguration.error.build.image.options.error=建置鏡像選項錯誤\: {0}
DockerTargetEnvironmentConfiguration.error.connection.to.docker.required=未連線到 Docker
DockerTargetEnvironmentConfiguration.error.container.options.error=容器選項錯誤\: {0}
DockerTargetEnvironmentConfiguration.error.image.tag.to.pull.required=未指定要拉取的鏡像標記
DockerTargetEnvironmentConfiguration.error.path.to.dockerfile.to.build.required=未指定要建置的 Dockerfile 的路徑
DockerTargetIntrospectable.failed.to.execute.command.in.running.container=無法在正在執行的容器中執行指令\: {0}
DockerTargetIntrospectable.introspecting.image.done=完成，在檢查結果中找到 {0} 個變數
DockerTargetIntrospectable.introspecting.introspecting.image.environment.variables=正在內省鏡像環境變數…
DockerTargetIntrospectable.introspecting.variable.not.found=正在內省 ${0}\: 未找到
DockerTargetIntrospectable.introspecting.variable.result=正在內省 ${0}\: {1}
DockerTargetIntrospectable.introspection.container.launched=完成，容器已啟動\: {0}
DockerTargetIntrospectable.launching.introspection.container=正在啟動內省容器…
DockerTargetIntrospectable.removing.introspection.container=正在移除內省容器
DockerTargetMainStep.error.cant.finish.now=現在無法完成
DockerTargetMainStep.error.dockerfile.must.be.selected=未選擇 Dockerfile
DockerTargetMainStep.error.image.tag.is.required=未指定鏡像標記
DockerTargetMainStep.step.description=建立一個新的 Docker 目標
DockerTargetPullImageStep.description=正在拉取 Docker 鏡像…
DockerTargetStepBase.title=Docker
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon=無法連線到 Docker 守護程序。該 docker 守護程序是否正在執行?
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon.at.0=無法連線到 {0} 處的 Docker 守護程序。該 docker 守護程序是否正在執行?
DockerTargetTerminalStepBase.status.connecting.to.docker.daemon=正在連線到 Docker 守護程序…
DockerTargetTerminalStepBase.terminal.title.docker=Docker
DockerTargetType.VolumeContributionUI.mount.as.volume=作為卷安裝
DockerTargetType.error.cant.find.server=找不到 Docker 伺服器 {0}
DockerToolsConfigurable.compose.move.to.v2.comment=Docker Compose V1 已棄用。<a href\='click'>遷移到 Docker Compose V2</a>
DockerToolsConfigurable.message.can't.find.executable=找不到可執行檔案
DockerToolsConfigurable.message.compose.v1.deprecated=Docker Compose V1 已棄用，請使用 Docker Compose V2。
DockerToolsConfigurable.message.does.not.exists={0} 不存在
DockerToolsConfigurable.message.not.executable={0} 不是可執行檔案
DockerToolsConfigurable.message.not.valid.executable={0} 不是有效的可執行檔案
DockerTransferImageAction.background.task=將 {0} 複製到 {1}
DockerTransferImageAction.command=複製到
DockerTransferImageAction.notification=鏡像 ''{0}'' 已成功從 {1} 複製到 {2}
DockerTransferImageAction.ok.text=複製
DockerUtil.error.docker.image.could.be.found=找不到 Docker 鏡像“{0}”
DockerVolumeBindingConfigurable.BrowseFolderAction.description=選擇卷主機路徑
DockerVolumeBindingConfigurable.BrowseFolderAction.title=主機路徑
DockerVolumeBindingConfigurable.container.path.text=容器路徑\:
DockerVolumeBindingConfigurable.error.container.path.required=容器路徑為必填項
DockerVolumeBindingConfigurable.host.path.text=主機路徑\:
DockerVolumeBindingConfigurable.mapping.warning.message=在 Docker 設定中組態路徑映射
DockerVolumeBindingConfigurable.mapping.warning.title=警告
DockerVolumeBindingConfigurable.read.only.text=唯讀
DockerVolumeBindingDialog.commandline.title=--卷
DockerVolumeBindingDialog.containers.tooltip=為檔案或目錄在容器中的掛載路徑
DockerVolumeBindingDialog.containers.validation=容器路徑應為絕對路徑
DockerVolumeBindingDialog.host.tooltip=為主機上檔案或目錄的路徑
DockerVolumeBindingDialog.ro.tooltip=如果存在唯讀選項，則會將綁定掛載以唯讀方式掛載到容器中
DockerVolumeBindingDialog.ro.validation=主機路徑不能為空
DockerVolumeBindingsEditor.ContainerPath.title=容器路徑
DockerVolumeBindingsEditor.ContainerPath.validation.mount.point.already.used=已為此容器指定此掛載點
DockerVolumeBindingsEditor.HostPath.title=主機路徑
DockerVolumeBindingsEditor.HostPath.validation.invalid.name=“{0}”包含本地卷名的無效字元，僅允許 "[a-zA-Z0-9][a-zA-Z0-9_.-]"。如果您打算傳遞主機目錄，請使用j絕對路徑
DockerVolumeBindingsEditor.ReadOnly.title=唯讀
DockerVolumeBindingsField.VolumeBindingsTable.destination=容器路徑
DockerVolumeBindingsField.VolumeBindingsTable.readOnly=唯讀
DockerVolumeBindingsField.VolumeBindingsTable.source=主機路徑
DockerVolumeBindingsField.dialogEmptyText=無綁定掛載
DockerVolumeBindingsField.dialogTitle=綁定掛載
DockerVolumeDashboardTab.in.use=使用中
DockerVolumeDashboardTab.in.use.count=使用中\: ({0}/{1})
DockerVolumeDetails.VolumePropertiesEditor.property.driver=驅動程序
DockerVolumesGroupDetailsProvider.node.tooltip=附加到容器 `{1}` 的 `{0}`
DockerWritingAccessProvider.readOnlyMessage=Docker 容器中的檔案為唯讀檔案
DockerWslConnectionConfigurator.distribution.error=分發 {0} 不存在
DockerWslConnectionConfigurator.label=WSL\:
DockerfileDocumentationProvider.online.documentation=在線文檔
ExecInContainerAction.Case.Dialog.message=指令\:
ExecInContainerAction.Case.Dialog.title=Exec
ExecInContainerAction.ListPopup.textFor.create=建立並執行…
ExecInContainerAction.ListPopup.textFor.manage=管理…
ExecInContainerAction.ListPopup.title=在容器中執行指令
ExecInContainerAction.ManageExecCommandsDialog.column.no.commands=無指令
ExecInContainerAction.ManageExecCommandsDialog.column.title=指令
ExecInContainerAction.ManageExecCommandsDialog.command.is.empty=指令為空
ExecInContainerAction.tab.title=執行\: {0}
ExternalTool.exited.with.error.code={0} 離開，錯誤程式碼為 {1}
ExternalTool.timeout.exceeded=超時
GeneratedComposeFile.header=這是一個生成的檔案。不用於手動編輯。
Ijent.computing.target.platform=正在計算目標平台…
Ijent.copying.remote.agent.binary=正在複製遠端代理二進制檔案…
Ijent.executing.remote.agent.process=正在執行遠端代理程序…
Ijent.setting.executable.permissions=正在設定可執行檔案權限…
ImagePullPanel.action.pull=拉取選定項
ImagePullPanel.image.to.pull.comment=或按 {0} 啟動
ImagePullPanel.image.to.pull.label=要拉取的鏡像\:
ImagePullPanel.queue.label=鏡像在佇列中拉取\: {0}
ImagePullPanel.terminal.error.reference.format=參照格式無效\: {0}
ImagePullPanel.terminal.info.using.default.tag=正在使用預設標記\: 最新
ImagePullPanel.terminal.name=Docker 鏡像
InspectDockerAction.description.container=檢查所選容器
InspectDockerAction.description.image=檢查選定鏡像
InspectDockerAction.description.network=檢查所選網絡
InspectDockerAction.description.volume=檢查所選卷
InspectDockerAction.tab.title=檢查
Loading.label=正在載入…
Minikube.tool.name=Minikube
MinikubeConnectionConfigurator.minikube.not.available=Minikube 不可用
OpenProjectAction.FromLabelPath.action.project.path.text=Docker 專案路徑\: {0}
PodmanConnectionConfigurator.checkbox.detect.executable.paths.automatically=自動檢測可執行檔案路徑
PodmanConnectionConfigurator.label.podman.connection=Podman 連線\:
PodmanConnectionConfigurator.podman.label=Podman
PodmanConnectionExecutableEditor.choose.podman.executable.location=選擇 Podman可執行檔案位置
PodmanConnectionExecutableEditor.connection.must.be.set=必須為 {0} 上的組態設定 Podman 連線
PodmanConnectionExecutableEditor.connection.to.podman.socket.failed=找到了 Podman 可執行檔案，但到 Podman 套接字的連線失敗，{0, choice, 0\#.|1\# 出現以下錯誤\:“{1}”}<br><small><b>注意</b>\: 在 IDE 中整合 Podman 需要 Podman 套接字。請確保 Podman 系統服務正在執行。<a href\="helpInstance\:reference.podman.system.service">了解詳情 ↗</a></small>
PodmanConnectionExecutableEditor.podman.executable=Podman 可執行檔案\:
PrepareImageOperation.failed.to.find.image.for.introspection=找不到用於內省的鏡像\: {0}
PrepareImageOperation.introspection.completed=內省完成
PrepareImageOperation.introspection.completed.with.error=內省完成但有錯誤\: {0}
PrepareImageOperation.unable.to.find.an.image.for.introspection=找不到用於內省的鏡像
ProjectPathOnRootRow.row.project.path.on.target=目標的專案路徑\:
ProjectPathOnRootRow.row.project.path.on.target.comment=預設情況下，執行組態將在有關複製必要檔案的設定中使用此路徑
PruneAction.dialog.all.message=移除所有停止的容器、未使用的卷、網絡、懸空鏡像和所有建置快取?
PruneAction.dialog.containers.message=移除所有停止的容器?
PruneAction.dialog.images.message=移除所有未使用的鏡像?
PruneAction.dialog.networks.message=移除所有未使用的網絡?
PruneAction.dialog.volumes.message=移除所有未使用的卷?
PullImageOperation.connected=已連線
PullImageOperation.pull.completed=拉取完成項
PullImageOperation.waiting.for.pull.operation=正在等待拉取運算…
PushImageConfigurable.error.repository.required=儲存庫為必填項
PushImageConfigurable.error.tag.required=標記為必填項
RegistryRuntimeTask.current.of.total={0}/{1}
RegistryRuntimeTask.notification.group=Docker
RegistrySelectionEditor.default.name.docker.registry=Docker 註冊表
RegistrySelectionEditor.default.registry=<預設\: Docker Hub>
RemoteDockerRuntime.progress.title.pulling.image=正在拉取“{0}”鏡像…
ShowContainerProcessesAction.tab.title=程序
ShowFiles.action.delete.file.text=刪除檔案
ShowFiles.action.download.file.text=下載檔案
ShowFiles.action.progress=顯示檔案…
ShowFiles.action.refresh.file.tree.description=重新整理檔案樹
ShowFiles.action.refresh.text=重新整理
ShowFiles.action.rename.file.text=重新命名檔案
ShowFiles.dialog.message.file.name.cannot.be.empty=檔名不能為空
ShowFiles.dialog.title.invalid.file.name=無效的檔名
ShowFiles.dialog.title.rename.file=重新命名檔案
ShowFiles.notification.content.could.not.resolve.new.file.name=無法解析新檔名
ShowFiles.notification.content.drop.location.invalid=放置位置無效
ShowFiles.notification.content.error.occurred.while.downloading.file=下載檔案時出錯
ShowFiles.notification.content.error.occurred.while.moving.file=移動檔案時出錯\: {0}
ShowFiles.notification.content.error.occurred.while.reading.content.for.file=讀取檔案 {0} 的內容時出錯
ShowFiles.notification.content.error.occurred.while.renaming.file=重新命名檔案 {0} 時出錯
ShowFiles.notification.content.failed.to.commit.changes.to.remote.environment=無法將更改提交到遠端環境\: {0}
ShowFiles.progress.title.moving.file=正在移動檔案
ShowFiles.progress.title.opening.file=正在開啟檔案
ShowFiles.rename.file.to=將“{0}”重命名為\:
SingletonDeploymentSourceType.error.container.name.format=容器名稱無效\: 應為 `[a-zA-Z0-9][a-zA-Z0-9_.-]*`
SingletonDeploymentSourceType.error.image.tag.atMaxOne=最多允許一個標記
SingletonDeploymentSourceType.error.image.tag.format=鏡像標記格式無效
ToolBasedDockerComposeConfigurationParser.progress.title=正在處理 Docker Compose 組態…
action.Docker.AddDockerConnection.description=新增 Docker 連線
action.Docker.AddDockerConnection.text=Docker 連線
action.Docker.AddDockerRegistry.text=新增 Docker 註冊表
action.Docker.EditRegistryConfigAction.text=編輯
action.Docker.FilterDevContainers.text=Dev Container
action.Docker.FilterStoppedContainers.text=已停止容器
action.Docker.FilterUntaggedImages.text=無標記的鏡像
action.Docker.ImageDownloadNonOpenableFile.text=下載檔案
action.Docker.ImageLayerOpenFileAction.text=開啟檔案
action.Docker.ImportContexts.text=來自上下文的連線
action.Docker.RemoteServer.DisconnectServer.text=斷開連線
action.Docker.RemoteServers.Attach2Container.description=附加到所選容器
action.Docker.RemoteServers.Attach2Container.text=附加
action.Docker.RemoteServers.CommitContainer.text=另存為新鏡像
action.Docker.RemoteServers.ConnectServer.text=連線
action.Docker.RemoteServers.CopyContainerId.description=將所選容器的 ID 複製到剪貼簿
action.Docker.RemoteServers.CopyContainerId.text=複製容器 ID
action.Docker.RemoteServers.CopyContainerImageId.description=將所選容器的鏡像 ID 或標記複製到剪貼簿
action.Docker.RemoteServers.CopyContainerImageId.text=複製鏡像 ID
action.Docker.RemoteServers.CopyImageId.description=將所選鏡像的 ID 複製到剪貼簿
action.Docker.RemoteServers.CopyImageId.text=複製鏡像 ID
action.Docker.RemoteServers.CreateContainer.description=為所選鏡像建立並執行容器
action.Docker.RemoteServers.CreateContainer.text=建立容器
action.Docker.RemoteServers.CreateNetwork.text=建立網絡
action.Docker.RemoteServers.CreateTerminal.AsContainerUser.text=作為容器使用者
action.Docker.RemoteServers.CreateTerminal.AsRootUser.text=作為 Root 使用者
action.Docker.RemoteServers.CreateVolume.text=建立卷
action.Docker.RemoteServers.DeleteConnection.text=刪除連線
action.Docker.RemoteServers.DeleteContainer.description=刪除所選容器
action.Docker.RemoteServers.DeleteContainer.text=刪除容器
action.Docker.RemoteServers.DeleteFailedNode.text=刪除
action.Docker.RemoteServers.DeleteImage.description=刪除所選鏡像
action.Docker.RemoteServers.DeleteImage.text=刪除鏡像
action.Docker.RemoteServers.DeleteNetwork.description=刪除所選網絡
action.Docker.RemoteServers.DeleteNetwork.text=刪除網絡
action.Docker.RemoteServers.DeleteService.text=刪除服務
action.Docker.RemoteServers.DeleteVolume.description=刪除所選卷
action.Docker.RemoteServers.DeleteVolume.text=刪除卷
action.Docker.RemoteServers.DownComposeApp.description=停止並移除容器以及關聯的網絡、卷和鏡像
action.Docker.RemoteServers.DownComposeApp.text=下
action.Docker.RemoteServers.EditDeploymentConfig.text=編輯組態
action.Docker.RemoteServers.EditServerConfig.description=編輯所選 Docker 組態
action.Docker.RemoteServers.EditServerConfig.text=編輯組態
action.Docker.RemoteServers.ExecInContainer.description=在所選容器中執行指令
action.Docker.RemoteServers.ExecInContainer.text=Exec
action.Docker.RemoteServers.InspectContainerOrImage.text=檢查
action.Docker.RemoteServers.OpenProject.SelectDirectory.text=選擇目錄…
action.Docker.RemoteServers.PauseContainer.description=暫停所選容器中的所有程序
action.Docker.RemoteServers.PauseContainer.text=暫停容器
action.Docker.RemoteServers.Prune.description=移除所有未使用的元素
action.Docker.RemoteServers.Prune.text=清理
action.Docker.RemoteServers.PullImage.description=從儲存庫中拉取鏡像
action.Docker.RemoteServers.PullImage.text=拉取鏡像…
action.Docker.RemoteServers.PushImage.description=將所選鏡像推送到儲存庫
action.Docker.RemoteServers.PushImage.text=推送鏡像…
action.Docker.RemoteServers.RecreateContainer.description=重新建立並執行所選容器
action.Docker.RemoteServers.RecreateContainer.text=重新建立容器
action.Docker.RemoteServers.Redeploy.text=重新執行
action.Docker.RemoteServers.RemoveOrphans.text=移除孤立項
action.Docker.RemoteServers.RestartComposeApp.description=重啟所有正在執行的 Compose 服務
action.Docker.RemoteServers.RestartComposeApp.text=重啟
action.Docker.RemoteServers.RestartContainer.description=重啟所選容器
action.Docker.RemoteServers.RestartContainer.text=重啟容器
action.Docker.RemoteServers.ScaleComposeService.description=擴展服務
action.Docker.RemoteServers.ScaleComposeService.text=Scale
action.Docker.RemoteServers.SelectContainerImage.description=在服務工具視窗中顯示所選容器的鏡像
action.Docker.RemoteServers.SelectContainerImage.text=顯示鏡像
action.Docker.RemoteServers.ShowContainerFiles.text=顯示檔案
action.Docker.RemoteServers.ShowContainerProcesses.description=顯示所選容器的程序列表
action.Docker.RemoteServers.ShowContainerProcesses.text=顯示程序
action.Docker.RemoteServers.ShowImageLayers.text=顯示層
action.Docker.RemoteServers.StartAllComposeApp.description=啟動所有 Compose 服務
action.Docker.RemoteServers.StartAllComposeApp.text=全部啟動
action.Docker.RemoteServers.StartComposeService.description=啟動服務
action.Docker.RemoteServers.StartComposeService.text=啟動
action.Docker.RemoteServers.StartContainer.description=啟動所選容器
action.Docker.RemoteServers.StartContainer.text=啟動容器
action.Docker.RemoteServers.StopComposeApp.description=停止所有服務
action.Docker.RemoteServers.StopComposeApp.text=停止
action.Docker.RemoteServers.StopComposeService.description=停止服務
action.Docker.RemoteServers.StopComposeService.text=停止
action.Docker.RemoteServers.StopContainer.description=停止所選容器
action.Docker.RemoteServers.StopContainer.text=停止容器
action.Docker.RemoteServers.StopDeploy.description=停止所選部署
action.Docker.RemoteServers.StopDeploy.text=停止部署
action.Docker.RemoteServers.TransferImage.text=複製 Docker 鏡像
action.Docker.RemoteServers.UnpauseContainer.description=取消暫停所選容器中的所有程序
action.Docker.RemoteServers.UnpauseContainer.text=取消暫停容器
action.Docker.RemoveDockerRegistry.text=刪除註冊表
action.NewDockerfile.description=建立 Dockerfile
action.NewDockerfile.text=Dockerfile
advanced.setting.docker.connect.automatically=重啟時自動連接到 Docker
advanced.setting.docker.container.log.is.first.tab=日誌頁籤應該是 Docker 容器的第一個頁籤。
advanced.setting.docker.periodical.check.delay=用於自動重新連線的定期 Docker 狀態檢查之間的延遲
advanced.setting.docker.periodical.check.delay.description=如果要停用 Docker 狀態的定期檢查，請將該值設定為 0。
advanced.setting.docker.registry.loading.limit=鏡像註冊表實體載入限制
advanced.setting.docker.selinux.label.volumes=將 \:z 掛載選項應用於 SELinux 系統的幾乎所有綁定卷。
advanced.setting.docker.selinux.label.volumes.description=這可能會很危險，您應該明白自己在做什麼，並首先閱讀這篇文章\: <a href\="https\://github.com/moby/moby/issues/30934">https\://github.com/moby/moby/issues/30934</a>
advanced.settings.docker=Docker
an.icon.to.quickly.build=用於在 Dockerfile 中快速建置或執行特定已命名階段的圖示。
colima.tool.name=Colima
configurable.DockerConsoleConfigurable.display.name=主控台
configurable.DockerConsoleConfigurable.enable.folding.checkbox.text=在日誌主控台中折疊以前的會話
configurable.DockerEnvVarConfigurable.display.name=環境變數
configurable.DockerEnvVarConfigurable.name.text=名稱\:
configurable.DockerEnvVarConfigurable.value.text=值\:
configurable.DockerLinkConfigurable.ContainerNamesLoader.task.title=正在載入容器名稱…
configurable.DockerLinkConfigurable.alias.text=別名\:
configurable.DockerLinkConfigurable.display.name=鏈接
configurable.DockerLinkConfigurable.name.text=名稱\:
configurable.DockerPortBindingConfigurable.display.name=連接埠綁定
configurable.DockerRegistryListConfigurable.AddRegistryAction.text=新增
configurable.DockerRegistryListConfigurable.display.name=Docker 註冊表
configurable.DockerRegistryListConfigurable.empty.selection.string=要組態 Docker 註冊表，請點擊 '+'
configurable.DockerRemoteServerConfigurable.display.name=Docker
configurable.DockerToolsConfigurable.display.name=Docker
configurable.DockerVolumeBindingConfigurable.display.name=卷綁定
configurable.PushImageConfigurable.display.name=推送鏡像
configurable.PushImageConfigurable.namespace.text=命名空間\:
configurable.PushImageConfigurable.registry.text=註冊表\:
configurable.PushImageConfigurable.repository.text=鏡像\:
configurable.PushImageConfigurable.tag.text=標籤\:
docker.container.settings.label.text=Docker 容器設定\:
docker.intention.category=Docker
docker.path.mapping.editor.table.local.path.header=本地路徑
docker.path.mapping.editor.table.virtual.machine.path.header=虛擬機路徑
docker.periodical.check.delay.milliseconds=毫秒
docker.registry.configurable.connection.status.cannot.connect=無法連線\: {0}
docker.registry.configurable.connection.status.connecting=正在連線…
docker.registry.configurable.connection.status.successful=連線成功
docker.tool.name=Docker
dockerConsole.name=主控台
dockerTools.name=工具
dockerfile.brackets=中括號
dockerfile.comma=逗號
dockerfile.comments=註釋
dockerfile.displayName=Dockerfile
dockerfile.dot=點
dockerfile.keyword=關鍵字
dockerfile.number=數字
dockerfile.parenths=圓括號
dockerfile.string=字串
dockerfile.variable=變數
group.Docker.Filter.text=Docker
group.Docker.RemoteServers.CreateTerminal.description=在所選容器中啟動 Shell
group.Docker.RemoteServers.CreateTerminal.text=建立終端
group.Docker.RemoteServers.OpenProject.Recent.text=最近的專案…
group.Docker.RemoteServers.OpenProject.text=開啟專案
group.Docker.RemoteServersViewPopup.Image.text=鏡像
group.Docker.RemoteServersViewToolbar.text=Docker
group.Docker.Services.Add.text=Docker
minikube.tool.name=Minikube
podman.tool.name=Podman
progress.text.docker.upload.volume.progress.message=來自 {0} 的上傳將掛載為 {1}
progress.text.preparing.volumes=正在準備卷…
progress.title.loading.namespaces.for=正在載入以下物件的命名空間\: {0}
progress.title.loading.repositories.for=正在載入以下物件的儲存庫\: {0}
progress.title.loading.tags.for=正在載入以下物件的標記\: {0}
separator.Docker.Filter=顯示
settings.choose.docker.compose.executable.location=選擇 Docker Compose 可執行檔案位置
settings.choose.docker.executable.location=選擇 Docker 可執行檔案位置
settings.docker.compose.executable=Docker Compose 可執行檔案\:
settings.docker.executable=Docker 可執行檔案\:
