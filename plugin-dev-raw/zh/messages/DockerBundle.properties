action.Docker.AddDockerConnection.text=Docker 連接
action.Docker.AddDockerConnection.description=添加 Docker 連接
action.Docker.FilterUntaggedImages.text=無標記的鏡像
action.Docker.FilterStoppedContainers.text=已停止容器
group.Docker.Filter.text=Docker
action.Docker.RemoteServers.StopDeploy.text=停止部署
action.Docker.RemoteServers.StopDeploy.description=停止所選部署
action.Docker.RemoteServers.PauseContainer.text=暫停容器
action.Docker.RemoteServers.PauseContainer.description=暫停所選容器中的所有行程
action.Docker.RemoteServers.UnpauseContainer.text=取消暫停容器
action.Docker.RemoteServers.UnpauseContainer.description=取消暫停所選容器中的所有行程
action.Docker.RemoteServers.CreateTerminal.text=創建終端
action.Docker.RemoteServers.CreateTerminal.description=在所選容器中啟動 Shell
action.Docker.RemoteServers.ExecInContainer.text=Exec
action.Docker.RemoteServers.ExecInContainer.description=在所選容器中執行指令
action.Docker.RemoteServers.Attach2Container.text=附加
action.Docker.RemoteServers.Attach2Container.description=附加到所選容器
action.Docker.RemoteServers.ShowContainerProcesses.text=顯示行程
action.Docker.RemoteServers.ShowContainerProcesses.description=顯示所選容器的行程列表
action.Docker.RemoteServers.InspectContainerOrImage.text=檢查
action.Docker.RemoteServers.CopyContainerImageId.text=複製鏡像 ID
action.Docker.RemoteServers.CopyContainerImageId.description=將所選容器的鏡像 ID 或標記複製到剪貼簿
action.Docker.RemoteServers.CopyContainerId.text=複製容器 ID
action.Docker.RemoteServers.CopyContainerId.description=將所選容器的 ID 複製到剪貼簿
action.Docker.RemoteServers.CopyImageId.text=複製鏡像 ID
action.Docker.RemoteServers.CopyImageId.description=將所選鏡像的 ID 複製到剪貼簿
action.Docker.RemoteServers.ShowContainerLog.text=顯示日誌
action.Docker.RemoteServers.ShowContainerLog.description=顯示所選容器的日誌
action.Docker.RemoteServers.SelectContainerImage.text=顯示鏡像
action.Docker.RemoteServers.SelectContainerImage.description=在服務工具視窗中顯示所選容器的鏡像
action.Docker.RemoteServers.ScaleComposeService.text=Scale
action.Docker.RemoteServers.ScaleComposeService.description=擴展服務
action.Docker.RemoteServers.StopComposeService.text=停止
action.Docker.RemoteServers.StopComposeService.description=停止服務
action.Docker.RemoteServers.DeleteService.text=刪除服務
action.Docker.RemoteServers.StartComposeService.text=開始
action.Docker.RemoteServers.StartComposeService.description=啟動服務
action.Docker.RemoteServers.PullImage.text=拉取鏡像…
action.Docker.RemoteServers.PullImage.description=從儲存庫中拉取鏡像
action.Docker.RemoteServers.PushImage.text=推送鏡像…
action.Docker.RemoteServers.PushImage.description=將所選鏡像推送到儲存庫
action.Docker.RemoteServers.DeleteImage.text=刪除鏡像
action.Docker.RemoteServers.DeleteImage.description=刪除所選鏡像
action.Docker.RemoteServers.CreateContainer.text=創建容器
action.Docker.RemoteServers.CreateContainer.description=為所選鏡像創建並執行容器
action.Docker.RemoteServers.DeleteConnection.text=刪除連接
action.Docker.RemoteServers.DeleteContainer.text=刪除容器
action.Docker.RemoteServers.DeleteContainer.description=刪除所選容器
action.Docker.RemoteServers.DeleteFailedNode.text=刪除
action.Docker.RemoteServers.StopContainer.text=停止容器
action.Docker.RemoteServers.StopContainer.description=停止所選容器
action.Docker.RemoteServers.StartContainer.text=啟動容器
action.Docker.RemoteServers.StartContainer.description=啟動所選容器
action.Docker.RemoteServers.RestartContainer.text=重啟容器
action.Docker.RemoteServers.RestartContainer.description=重啟所選容器
action.Docker.RemoteServers.DownComposeApp.text=下
action.Docker.RemoteServers.DownComposeApp.description=停止並移除容器以及關聯的網絡、卷和鏡像
action.Docker.RemoteServers.StopComposeApp.text=停止
action.Docker.RemoteServers.StopComposeApp.description=停止所有服務
group.Docker.RemoteServersViewToolbar.text=Docker
DockerConverterProvider.conversion.description=Docker 執行設定將轉換為新格式
DockerFileDetector.notification.group=Docker: Dockerfile 檢測
DockerFileDetector.Notifier.title=檢測到 {0,choice,1#Dockerfile|2#Dockerfile}
DockerFileDetector.Notifier.message.one=您可以為以下檔案創建 Docker 執行設定:
DockerFileDetector.Notifier.message.full=您可以為以下檔案創建 Docker 執行設定:
DockerFileDetector.Notifier.message.limited=您可以為 {0} 個檔案創建 Docker 執行設定，其中包括以下檔案:
DockerFileDetector.Notifier.disable=不再詢問
dockerTools.name=工具
dockerfile.brackets=中括號
dockerfile.comma=逗號
dockerfile.comments=註釋
dockerfile.dot=點
dockerfile.keyword=關鍵字
dockerfile.number=數字
dockerfile.parenths=圓括號
dockerfile.string=字串
dockerfile.variable=變數
dockerfile.displayName=Dockerfile
DockerCloudType.debug.not.supported=''{0}'' 不支持偵錯模式
DockerCloudType.presentable.name=Docker
DockerCloudType.run.configuration.type.presentable.name=Docker
DockerPropertiesRuntimeEditor.containers.names.warning.message=更改容器名稱將中斷與此容器相關的所有鏈接。\n是否仍要更改容器名稱?
DockerPropertiesRuntimeEditor.containers.names.warning.title=正在更改容器名稱
DockerPropertiesRuntimeEditor.container.name.error.empty.message=不允許使用空容器名稱
DockerPropertiesRuntimeEditor.container.name.error.invalid.message=容器名稱 {0} 無效: 僅允許文字、數字和標點 [_.-] 字符
DockerPropertiesRuntimeEditor.container.name.error.title=容器名稱無效
DockerPropertiesRuntimeEditor.container.name.text=容器名稱:
DockerVolumeBindingConfigurable.BrowseFolderAction.title=主機路徑
DockerVolumeBindingConfigurable.BrowseFolderAction.description=選擇卷主機路徑
DockerVolumeBindingConfigurable.mapping.warning.message=在 Docker 設定中設定路徑映射
DockerVolumeBindingConfigurable.mapping.warning.title=警告
DockerVolumeBindingConfigurable.container.path.text=容器路徑:
DockerVolumeBindingConfigurable.host.path.text=主機路徑:
DockerVolumeBindingConfigurable.read.only.text=唯讀
InspectDockerAction.description.container=檢查所選容器
InspectDockerAction.description.image=檢查選定鏡像
InspectDockerAction.tab.title=檢查
ShowContainerProcessesAction.tab.title=行程
CreateContainerAction.popup.title=創建容器
CreateContainerAction.popup.defaultAction=創建…
DockerDeleteProvider.confirmation.title=確認刪除
DockerDeleteProvider.confirmation.text.both.types=刪除 {0} 和 {1}?
DockerDeleteProvider.confirmation.text.single.type=刪除 {0}?
DockerDeleteProvider.confirmation.image.one=1 個鏡像
DockerDeleteProvider.confirmation.image.many={0} 個鏡像
DockerDeleteProvider.confirmation.container.one=1 個容器
DockerDeleteProvider.confirmation.container.many={0} 個容器
DockerCliImageBuilder.output.command=指令:
DockerGroupRuntime.ContainersGroup.groupName=容器
DockerGroupRuntime.ImagesGroup.groupName=鏡像
DockerColorAnnotator.unresolvedVariableRef=無法解析變數 ''{0}''
DockerInlayHintsProvider.name=Docker 執行已命名的階段
DockerInlayHintsProvider.tooltip.run=執行 "{0}" 階段(通過啟用的 BuildKit)
DockerInlayHintsProvider.tooltip.build=建置 "{0}" 階段(通過啟用的 BuildKit)
DockerInlayHintsProvider.tooltip.all=顯示所有已命名的階段設定
DockerInlayHintsProvider.popup.title="{0}" 的操作
DockerFileFindUsagesProvider.usageType.envVar=ENV 變數
DockerFileFindUsagesProvider.usageType.argVar=ARG 變數
DockerFileFindUsagesProvider.usageType.stage=階段宣告
DockerFileFindUsagesProvider.usageType.unknown=宣告
DockerFileRunLineMarkerProvider.action.group.run=執行
DockerFileRunLineMarkerProvider.action.group.build=建置鏡像
DockerFileRunLineMarkerProvider.BuildAsTemporaryRunConfig.text=在 ''{0}'' 上建置鏡像
DockerFileRunLineMarkerProvider.BuildExistingRunConfig.text=為 ''{0}'' 建置鏡像
DockerRunLineMarkerProviderBase.tooltip=在 Docker 上執行
DockerRunConfigActions.RunOrBuildExistingConfig.text.build=建置 ''{0}''
DockerRunLineMarkerProviderBase.RunExistingRunConfig.text=執行 ''{0}''
DockerRunLineMarkerProviderBase.EditExistingRunConfig.text=編輯 ''{0}''…
DockerRunLineMarkerProviderBase.EditExistingRunConfig.dialogTitle=編輯執行設定
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.text=新建執行設定…
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.dialogTitle=編輯執行設定
DockerRunLineMarkerProviderBase.RunAsTemporaryRunConfig.text=在 ''{0}'' 上執行
DockerRunConfigurationCreator.editConfiguration.title.new=創建 Docker 設定
DockerCloudConfigurable.loadMachines.task.title=載入機器
DockerCloudConfigurable.error.apiUrlRequired=需要 API URL
DockerCloudConfigurable.error.machineRequired=需要 Docker 機器
DockerCloudConfigurable.error.connectionNotSpecified=指定連接類型
DockerCloudConfigurable.error.certificatesFolder.missing={0} 下沒有憑證資料夾
DockerCloudConfigurable.chooser.certificates.title=選擇憑證位置
DockerCloudConfigurable.task.loading.machines.title=載入機器設定
DockerCloudConfigurable.docker.for.mac.radio.title=Docker for Mac
DockerCloudConfigurable.docker.for.windows.radio.title=Docker for Windows
DockerCloudConfigurable.connect.daemon.text=使用以下方式連接到 Docker 守護行程:
DockerCloudConfigurable.unix.socket.text=Unix 套接字:
DockerCloudConfigurable.docker.machine.text=Docker 機器:
DockerCloudConfigurable.tcp.socket.text=TCP 套接字
DockerCloudConfigurable.engine.url.text=引擎 API URL:
DockerCloudConfigurable.certificates.folder.text=憑證資料夾:
DockerFileArgumentCountInspection.display.name=參數數量錯誤
DockerFileArgumentCountInspection.error.exactly.one.argument.required=只需要一個參數
DockerFileArgumentCountInspection.error.at.least.N.arguments.required=至少需要 {0} 個參數
DockerFileAssignmentsInspection.display.name='key=value' 對中無效的空格
DockerFileAssignmentsInspection.error.spacing.not.allowed=此處不允許空格
DockerFileAddOrCopySemanticInspection.display.name='ADD'/'COPY' 指令的無效目標
DockerFileAddOrCopySemanticInspection.error.target.must.be.folder=目標必須是目錄，並以 '/' 結尾
DockerFileAddOrCopySemanticInspection.error.quick.fix=添加尾隨的 '/'
DockerFileAssignmentsInspection.remove.spaces=移除空格
DockerMappingConfigurable.browse.title=共享資料夾路徑
DockerMappingConfigurable.browse.description=選擇共享資料夾路徑
DockerMappingConfigurable.displayName=路徑映射
DockerMappingConfigurable.error.local.path.required=需要本地路徑
DockerMappingConfigurable.error.remote.path.required=需要虛擬機路徑
DockerMappingConfigurable.virtual.machine.path.text=虛擬機路徑:
DockerMappingConfigurable.local.path.text=本地路徑:
docker.path.mapping.editor.table.virtual.machine.path.header=虛擬機路徑
docker.path.mapping.editor.table.local.path.header=本地路徑
docker.registry.configurable.connection.status.connecting=正在連接…
docker.registry.configurable.connection.status.successful=連接成功
docker.registry.configurable.connection.status.cannot.connect=無法連接: {0}
DockerContainerSettingsUI.exposedPortsHyperlink=<html>將公開連接埠發佈到主機接口:</html>
DockerContainerSettingsUI.executable.panel.title=可執行檔案
DockerContainerSettingsUI.entrypoint.text=入口點:
DockerContainerSettingsUI.command.text=指令:
DockerContainerSettingsUI.all.text=所有
DockerContainerSettingsUI.specify.text=指定
DockerContainerSettingsUI.bind.ports.text=綁定連接埠:
DockerContainerSettingsUI.bind.mounts.text=綁定掛載:
DockerContainerSettingsUI.environment.variables.text=環境變數：
DockerContainerSettingsUI.run.options.text=執行選項:
## the similar set as above but without a ":" to use in the fragments UI
DockerContainerSettingsFragments.entrypoint.fragment=入口點
DockerContainerSettingsFragments.entrypoint.actionHint=覆蓋鏡像的預設 NTRYPOINT
DockerContainerSettingsFragments.command.fragment=指令
DockerContainerSettingsFragments.command.actionHint=要在新容器中執行的指令
DockerContainerSettingsFragments.bind.ports.fragment=綁定連接埠
DockerContainerSettingsFragments.bind.ports.actionHint=將容器連接埠映射到主機連接埠
DockerContainerSettingsFragments.bind.mounts.fragment=綁定掛載
DockerContainerSettingsFragments.bind.mounts.actionHint=將主機目錄或命名卷綁定掛載到容器
DockerContainerSettingsFragments.environment.variables.fragment=環境變數
DockerContainerSettingsFragments.environment.variables.actionHint=設定容器環境變數
DockerContainerSettingsFragments.attach.to.container.name=附加到容器
DockerContainerSettingsFragments.attach.to.container.tooltip=附加到容器並在啟動時開啟 `Attached Console`
DockerContainerSettingsFragments.run.options.fragment=執行選項
DockerContainerSettingsFragments.run.options.actionHint=為 `docker run` 指令指定其他選項
DockerContainerSettingsFragments.all.ports.fragment=隨機發佈所有暴露連接埠
DockerContainerSettingsFragments.all.ports.actionHint=將所有暴露連接埠發佈到隨機連接埠
DockerPortBindingsField.dialogTitle=連接埠綁定
DockerPortBindingsField.dialogEmptyText=無連接埠綁定
DockerPortBindingsField.PortBindingsTable.hostPort=主機連接埠
DockerPortBindingsField.PortBindingsTable.containerPort=容器連接埠
DockerPortBindingsField.PortBindingsTable.hostIP=主機 IP
DockerPortBindingsField.PortBindingsTable.protocol=協議
DockerPortBindingsEditor.hostPort=主機連接埠
DockerPortBindingsEditor.containerPort=容器連接埠
DockerPortBindingsEditor.hostIP=主機 IP
DockerPortBindingsEditor.protocol=協議
DockerVolumeBindingsField.dialogTitle=綁定掛載
DockerVolumeBindingsField.dialogEmptyText=無綁定掛載
DockerVolumeBindingsField.VolumeBindingsTable.source=主機路徑
DockerVolumeBindingsField.VolumeBindingsTable.destination=容器路徑
DockerVolumeBindingsField.VolumeBindingsTable.readOnly=唯讀
DockerComposeFilesTextField.DockerComposeFileDialog.title=Docker Compose 設定檔案
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOrFolder=選擇設定檔案或資料夾
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOnly=選擇設定檔案
DockerDeploymentSourcePathCombo.dialogTitle=Dockerfile
DockerDeploymentSourcePathCombo.dialogDescription=指定要建置和執行的 Dockerfile 
DockerFileAndContextFolderUI.ContextFolderField.dialogTitle=上下文資料夾
DockerFileAndContextFolderUI.ContextFolderField.dialogDescription=指定上下文資料夾或預設留空
DockerBuildSettingsUI.BuildArgsField.dialogTitle=建置實參
DockerBuildSettingsUI.BuildArgsField.dialogEmptyText=無建置實參
DockerBuildSettingsUI.DockerBuildOptionsField.onParseError=無法解析建置 CLI 選項: {0}
DockerBuildSettingsUI.dockerfile.text=Dockerfile:
DockerBuildSettingsUI.context.folder.text=上下文資料夾:
DockerBuildSettingsUI.image.tag.text=鏡像標記:
DockerBuildSettingsUI.build.args.text=建置實參:
DockerBuildSettingsUI.enable.buildkit.experimental=啟用 BuildKit (實驗性)
DockerBuildSettingsUI.build.options.text=建置選項:
# the same as labels but without ":" for a fragments popup togggle actions
DockerBuildSettingsFragments.context.folder.fragment=上下文資料夾
DockerBuildSettingsFragments.context.folder.actionHint=指定要在建置期間發送到守護程序的資料夾
DockerBuildSettingsFragments.build.args.fragment=建置實參
DockerBuildSettingsFragments.build.options.fragment=建置選項
DockerBuildSettingsFragments.build.options.actionHint=為 `docker build` 指令指定其他選項
DockerContainerSettingsUI.EnvVarsField.dialogTitle=環境變數
DockerContainerSettingsUI.EnvVarsField.dialogEmptyText=無變數
DockerContainerSettingsUI.DockerRunOptionsField.onParseError=無法解析執行 CLI 選項: {0}
DockerCliOptionsField.onParseError=無法解析命令行選項: {0}
SingletonDeploymentSourceType.error.image.tag.atMaxOne=最多允許一個標記
SingletonDeploymentSourceType.error.image.tag.format=鏡像標記格式無效
SingletonDeploymentSourceType.error.container.name.format=容器名稱無效: 應為 `[a-zA-Z0-9][a-zA-Z0-9_.-]*`
DockerImageDeploymentSourceType.name=Docker 鏡像
DockerImageDeploymentSourceType.suggestRunConfigurationName=Docker 鏡像
DockerImageDeploymentSourceType.deploymentName={0} 鏡像 ID: {1}
DockerImageDeploymentSourceType.error.image.id.required=需要鏡像 ID 或名稱
DockerComposeDeploymentSourceType.name=Docker-compose
DockerComposeDeploymentSourceType.deploymentName=Compose: {0}
DockerComposeDeploymentSourceType.suggestRunConfigurationName={0}: Compose 部署
DockerComposeDeploymentSourceType.error.path.required=需要 Compose 檔案的路徑
DockerComposeDeploymentSourceType.error.file.does.not.exist=''{0}'' 下沒有 Compose 檔案
DockerFileDeploymentSourceType.name=Dockerfile
DockerFileDeploymentSourceType.deploymentName={0} Dockerfile: {1}
DockerFileDeploymentSourceType.suggestRunConfigurationName={0}
DockerFileDeploymentSourceType.error.path.required=需要 Dockerfile 檔案的路徑
DockerFileDeploymentSourceType.error.dockerfile.does.not.exist=''{0}'' 下沒有 Dockerfile
DockerBeforeRunTaskProvider.name=偵錯前啟動 Docker
DockerBeforeRunTaskProvider.description=偵錯前啟動 Docker: `{0}`
DockerBeforeRunTaskProvider.notifier=在執行任務前 Docker
DockerBeforeRunTaskProvider.Dialog.title=設定 Docker
DockerEnvVarsRuntimeEditor.name=環境變數
DockerPortBindingRuntimeEditor.name=連接埠綁定
DockerPortBindingRuntimeEditor.publish.ports.checkbox.title=發佈所有連接埠
DockerVolumeBindingsRuntimeEditor.name=卷綁定
DockerPropertiesRuntimeEditor.name=屬性
DockerPropertiesRuntimeEditor.property.container.id=容器 ID
DockerPropertiesRuntimeEditor.property.container.names=容器名稱
DockerPropertiesRuntimeEditor.property.image.id=鏡像 ID
DockerPropertiesRuntimeEditor.property.image.created=已創建
DockerPropertiesRuntimeEditor.property.image.size=大小
DockerPropertiesRuntimeEditor.property.image.tags=標記
DockerPropertiesRuntimeEditor.action.copy.to.clipboard.name=複製到剪貼簿
DockerFileSystem.error.modification.not.supported=Docker 容器檔案系統不支持修改: {0}
DockerFileSystem.error.can.not.get.contents=無法獲取 {0} 的內容
DockerContainerBrowserTab.displayName=檔案
DockerContainerBrowserTab.emptyText=啟動容器以瀏覽檔案
DockerFileChooser.emptyText=無法存取檔案系統根。可能尚不支持這種 Docker 容器。
DockerFileChooser.loadingText=正在獲取檔案系統根…
DockerFileChooser.emptyPathText=選擇要查看路徑的專案
DockerFileChooser.RefreshAction.text=重新整理
DockerFileChooser.RefreshAction.description=重新整理 Docker 容器檔案系統樹
DockerContainerBrowser.downloadTask.title=從 Docker 容器下載檔案
DockerContainerBrowser.DownloadAction.text=下載到臨時目錄
DockerContainerBrowser.DownloadAction.description=將檔案從 Docker 容器下載到臨時檔案
DockerContainerBrowser.ViewInEditorAction.text=在編輯器中查看
DockerContainerBrowser.ViewInEditorAction.description=在編輯器中查看 Docker 容器中的檔案
DockerRootType.displayName=Docker 檔案
DockerWritingAccessProvider.readOnlyMessage=Docker 容器中的檔案為唯讀檔案
#
DockerComposeDeploymentEditor.enable.buildkit.hint=為鏡像建置啟用 BuildKit 支援
DockerComposeDeploymentEditor.env.file.does.not.exist=''{0}'' 中沒有環境變數檔案
DockerComposeDeploymentEditor.env.file.not.valid=無法從 ''{0}'' 讀取環境變數檔案
DockerComposeDeploymentEditor.environment.variables=環境變數
DockerComposeDeploymentEditor.environment.variables.actionHint=設定 Docker Compose 行程的環境變數。這些變數不對任何容器提供。
DockerComposeDeploymentEditor.up.build.desc=--build
DockerComposeDeploymentEditor.up.build.name=建置: 始終
DockerComposeDeploymentEditor.up.build.actionHint=在啟動容器之前建置鏡像
DockerComposeDeploymentEditor.up.scale.name=覆寫擴展
DockerComposeDeploymentEditor.up.scale.desc=--scale
DockerComposeDeploymentEditor.up.scale.hint=設定服務的容器數
DockerComposeDeploymentEditor.up.exit.code.from=服務退出程式碼
DockerComposeDeploymentEditor.up.exit.code.from.name=返回退出程式碼
DockerComposeDeploymentEditor.up.exit.code.from.desc=--exit-code-from
DockerComposeDeploymentEditor.up.exit.code.from.actionHint=返回所選服務容器的退出程式碼。在指定服務中的容器停止時停止所有容器。
DockerComposeDeploymentEditor.up.timeout.name=SIGKILL 超時
DockerComposeDeploymentEditor.up.timeout.desc=--timeout
DockerComposeDeploymentEditor.up.timeout.hint=以秒為單位設定終止容器的超時。容器首先會收到 SIGTERM，然後在指定的超時後收到 SIGKILL。
DockerComposeDeploymentEditor.up.detach.name=附加到: 無
DockerComposeDeploymentEditor.up.detach.desc=--detach
DockerComposeDeploymentEditor.up.detach.actionHint=在分離模式下執行
DockerComposeDeploymentEditor.no.deps.name=啟動: 所選服務
DockerComposeDeploymentEditor.no.deps.desc=--no-deps
DockerComposeDeploymentEditor.no.deps.actionHint=不啟動鏈接的服務
DockerComposeDeploymentEditor.up.force.recreate.name=重新創建容器: 全部
DockerComposeDeploymentEditor.up.force.recreate.desc=--force-recreate
DockerComposeDeploymentEditor.up.force.recreate.actionHint=即使容器的設定和鏡像並未更改，也重新創建所有容器
DockerComposeDeploymentEditor.up.always.recreate.name=重新創建依賴項
DockerComposeDeploymentEditor.up.always.recreate.desc=--always-recreate-deps
DockerComposeDeploymentEditor.up.always.recreate.actionHint=重新創建依賴的容器
DockerComposeDeploymentEditor.up.no.recreate.desc=--no-recreate
DockerComposeDeploymentEditor.up.no.recreate.name=重新創建容器: 無
DockerComposeDeploymentEditor.up.no.recreate.actionHint=即使設定更改，也不重新創建現有容器
DockerComposeDeploymentEditor.up.no.build.name=建置: 從不
DockerComposeDeploymentEditor.up.no.build.desc=--no-build
DockerComposeDeploymentEditor.up.no.build.actionHint=不建置鏡像。如果缺失，則以錯誤停止。
DockerComposeDeploymentEditor.up.group.start=啟動
DockerComposeDeploymentEditor.up.group.start.hint=設定要啟動的服務
DockerComposeDeploymentEditor.up.group.start.default=所選部署和依賴項
DockerComposeDeploymentEditor.up.group.start.default.hint=啟動指定服務和鏈接服務
DockerComposeDeploymentEditor.up.group.attach.to=附加到
DockerComposeDeploymentEditor.up.group.attach.to.hint=設定要顯示輸出流的容器
DockerComposeDeploymentEditor.up.group.attach.to.default=所選服務
DockerComposeDeploymentEditor.up.group.attach.to.default.hint=不附加到依賴的容器，而是附加到所有已啟動的容器
DockerComposeDeploymentEditor.up.group.build=建置
DockerComposeDeploymentEditor.up.group.build.hint=在啟動容器前設定要建置的鏡像
DockerComposeDeploymentEditor.up.group.build.default=僅缺失鏡像
DockerComposeDeploymentEditor.up.group.build.default.hint=僅建置不可用的鏡像
DockerComposeDeploymentEditor.up.group.recreate=重新創建容器
DockerComposeDeploymentEditor.up.group.recreate.hint=設定要停止的容器並取代為新容器
DockerComposeDeploymentEditor.up.group.recreate.default=更改的設定
DockerComposeDeploymentEditor.up.group.recreate.default.hint=如果設定或鏡像更改，則取代容器
DockerComposeDeploymentEditor.up.group.stop.containers=停止容器
DockerComposeDeploymentEditor.up.group.stop.containers.hint=設定容器停止方式
DockerComposeDeploymentEditor.up.group.stop.containers.default=手動
DockerComposeDeploymentEditor.up.group.stop.containers.default.hint=手動停止容器
DockerComposeDeploymentEditor.up.no.start.name=啟動: 無
DockerComposeDeploymentEditor.up.no.start.desc=--no-start
DockerComposeDeploymentEditor.up.no.start.actionHint=創建服務後不啟動它們
DockerComposeDeploymentEditor.up.abort.on.exit.name=停止容器: 容器退出時
DockerComposeDeploymentEditor.up.abort.on.exit.desc=--abort-on-container-exit
DockerComposeDeploymentEditor.up.abort.on.exit.actionHint=如果任何一個容器停止，則停止所有容器
DockerComposeDeploymentEditor.up.attach.deps.name=附加到: 所選部署和依賴項
DockerComposeDeploymentEditor.up.attach.deps.desc=--attach-dependencies
DockerComposeDeploymentEditor.up.attach.deps.actionHint=附加到所有啟動的容器及其依賴項
DockerComposeDeploymentEditor.up.renew.anon.volumes.name=重新創建匿名卷
DockerComposeDeploymentEditor.up.renew.anon.volumes.desc=--renew-anon-volumes
DockerComposeDeploymentEditor.up.renew.anon.volumes.actionHint=重新創建匿名卷，而不是從以前的容器中檢索資料
DockerComposeDeploymentEditor.up.remove.orphans.name=移除孤立項
DockerComposeDeploymentEditor.up.remove.orphans.desc=--remove-orphans
DockerComposeDeploymentEditor.up.remove.orphans.actionHint=移除 Compose 檔案中未定義的服務的容器
DockerComposeDeploymentEditor.group.up=docker-compose up
DockerComposeDeploymentEditor.group.up.actionHint=通過附加的 'docker-compose up' 選項執行
DockerComposeDeploymentEditor.group.up.name=套用 `up` 選項
DockerComposeDeploymentEditor.group.up.childrenGroupName=docker-compose up 選項
DockerComposeDeploymentEditor.up.timeout.label=超時:
DockerComposeDeploymentEditor.up.timeout.suffix=秒
DockerComposeDeploymentEditor.up.exit.code.label=退出程式碼:
DockerComposeDeploymentEditor.up.exit.code.suffix=返回所選服務的退出程式碼
#
DockerComposeDeploymentEditor.enable.compatibility.mode=啟用相容性模式
DockerComposeDeploymentEditor.enable.compatibility.mode.hint=啟用後，docker-compose 將讀取每個服務定義的 deploy 部分，並嘗試將其轉換為等效的第 2 版參數。
DockerComposeDeploymentEditor.down.remove.volumes=移除 `down` 上的卷
DockerComposeDeploymentEditor.down.remove.volumes.actionHint=使用 --volumes 選項執行 `docker-compose down`，在終止時同時刪除已命名卷和匿名卷
DockerComposeDeploymentEditor.down.remove.images.group=`down` 時移除鏡像
DockerComposeDeploymentEditor.down.remove.images.group.hint=設定終止時應移除的鏡像
DockerComposeDeploymentEditor.down.remove.images.default=無
DockerComposeDeploymentEditor.down.remove.images.default.hint=不移除鏡像
DockerComposeDeploymentEditor.down.remove.images.all=`down` 時移除鏡像: 全部
DockerComposeDeploymentEditor.down.remove.images.all.hint=移除任何服務使用的所有鏡像
DockerComposeDeploymentEditor.down.remove.images.all.desc=--rmi all
DockerComposeDeploymentEditor.down.remove.images.local=`down` 時移除鏡像: 本地
DockerComposeDeploymentEditor.down.remove.images.local.hint=僅移除沒有自訂標記的鏡像
DockerComposeDeploymentEditor.down.remove.images.local.desc=--rmi local
DockerComposeDeploymentEditor.incompatible.error.mask="{0}" 與{1}不相容
DockerComposeDeploymentEditor.env.file.label=環境變數檔案:
DockerComposeDeploymentEditor.env.file.name=環境變數檔案
DockerComposeDeploymentEditor.env.file.actionHint=指定用於設定環境變數的檔案
DockerComposeDeploymentEditor.env.file.browse.title=選擇環境變數檔案
DockerComposeDeploymentEditor.services.name=指定服務
DockerComposeDeploymentEditor.run=執行
DockerComposeDeploymentEditor.up.timeout.dialog.message.not.valid.integer={0} 不是有效的整數
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.less=超時不能小於 0
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.greater=超時不能超過 1000
DockerComposeServicesField.empty.text=留空將執行所有服務
DockerComposeServiceScalePairPanel.dialog.ok.text=儲存
DockerComposeServiceScaleDialog.dialog.title=選擇要擴展的服務
DockerComposeServiceScaleDialog.column.name.service=服務
DockerComposeServiceScaleDialog.column.name.scale=擴展到
DockerComposeServiceScaleDialog.service.label=服務:
DockerComposeServiceScaleDialog.scale.to.label=擴展到:
DockerComposeServiceScaleDialog.title=設定要為每個服務執行的容器數(如果有 compose 檔案，則覆寫該檔案中的擴展):
DockerComposeServiceScaleDialog.service.does.not.exist.error=指定的 docker-compose 檔案中不存在“{0}”服務
DockerComposeServiceScaleDialog.services.does.not.exist.error=指定的 docker-compose 檔案中不存在 {0} 服務
#
configurable.DockerLinkConfigurable.display.name=鏈接
configurable.DockerLinkConfigurable.ContainerNamesLoader.task.title=正在載入容器名稱…
configurable.DockerLinkConfigurable.name.text=名稱:
configurable.DockerLinkConfigurable.alias.text=別名：
configurable.DockerMachineConfigurable.display.name=Docker
configurable.DockerEnvVarConfigurable.display.name=環境變數
configurable.DockerEnvVarConfigurable.name.text=名稱:
configurable.DockerEnvVarConfigurable.value.text=值:
configurable.DockerPortBindingConfigurable.display.name=連接埠綁定
configurable.DockerRegistryListConfigurable.empty.selection.string=要設定 Docker 註冊表，請點擊 '+'
configurable.DockerRegistryListConfigurable.display.name=Docker 註冊表
configurable.DockerRegistryListConfigurable.AddRegistryAction.text=添加
configurable.DockerRemoteServerConfigurable.display.name=Docker
configurable.DockerVolumeBindingConfigurable.display.name=卷綁定
configurable.PushImageConfigurable.display.name=推送鏡像
configurable.PushImageConfigurable.registry.text=註冊表:
configurable.PushImageConfigurable.repository.text=儲存庫:
configurable.PushImageConfigurable.tag.text=標籤:
settings.docker.executable=Docker 可執行檔案:
settings.docker.machine.executable=Docker 機器可執行檔案:
settings.docker.compose.executable=Docker Compose 可執行檔案:
settings.select.docker.machine.executable=選擇 Docker 機器可執行檔案:
settings.choose.docker.compose.executable.location=選擇 Docker Compose 可執行檔案位置
settings.choose.docker.executable.location=選擇 Docker 可執行檔案位置
checkbox.wait.for.healthcheck=等待 HEALTHCHECK
DockerRemoteDebugRunConfigurationExtension.editorTitle=Java 遠端偵錯
DockerComposeCredentialsEditor.validate.server.not.selected=未選擇 Docker 伺服器
DockerComposeCredentialsEditor.validate.files.not.chosen=未選擇設定檔案
DockerComposeCredentialsEditor.validate.no.services.defined=設定檔案中未定義任何服務
DockerComposeCredentialsEditor.validate.service.name.not.selected=未選擇服務名稱
DockerComposeCredentialsEditor.server.text=伺服器:
DockerComposeCredentialsEditor.configuration.files.text=設定檔案:
DockerComposeCredentialsEditor.service.text=服務:
DockerComposeCredentialsEditor.environment.variables.text=環境變數(&E)
DockerComposeCredentialsEditor.processing=正在處理 Docker Compose 設定…
DockerComposeCredentialsEditor.no.service.placeholder=<Select service>
DockerComposeCredentialsEditor.getting.services.from.compose.configuration=正在從 Docker Compose 設定檔案獲取服務列表…
DockerComposeSettingsEditor.form.name=Docker Compose
DockerComposeSettingsEditor.form.command=指令和選項: 
DockerComposeSettingsEditor.form.command.preview=指令預覽:
DockerComposeCredentialsType.name=Docker Compose
DockerCredentialsEditor.validate.server.not.selected=未選擇 Docker 伺服器
DockerCredentialsEditor.validate.image.not.specified=未指定 Docker 鏡像名稱
DockerCredentialsEditor.StartDockerMachineDialog.message=啟動 Docker 機器 ''{0}''?
DockerCredentialsEditor.StartDockerMachineDialog.title=Docker 機器未執行
DockerCredentialsEditor.server.text=伺服器:
DockerCredentialsEditor.image.name.text=鏡像名稱:
DockerCredentialsType.name=Docker
DockerInterpreterContainerSettingsEditorDialog.title=編輯 Docker 容器設定
DockerInterpreterContainerSettingsEditor.disable.networking.text=禁用網絡
DockerInterpreterContainerSettingsEditor.network.mode.text=網絡模式:
DockerInterpreterContainerSettingsEditor.publish.all.ports.text=發佈所有連接埠
DockerInterpreterContainerSettingsEditor.run.options.text=執行選項:
DockerTargetMainStep.step.description=創建新的 Docker 目標
DockerTargetBuildImageStep.description=正在建置 Docker 鏡像…
DockerTargetPullImageStep.description=正在拉取 Docker 鏡像…
DockerTargetConfigurable.section.title=Docker 容器
DockerTargetConfigurable.server.row.label=Docker 伺服器:
DockerTargetConfigurable.build.radio.text=建置
DockerTargetConfigurable.pull.radio.text=拉取
DockerTargetConfigurable.image.row.label=鏡像檔案:
DockerTargetConfigurable.dockerfile.row.label=Dockerfile:
DockerTargetConfigurable.context.folder.row.label=上下文資料夾:
DockerTargetConfigurable.optional.row.title=可選
DockerTargetConfigurable.build.options.row.label=建置選項:
DockerTargetConfigurable.build.args.row.label=建置實參:
DockerTargetConfigurable.rebuild.automatically.checkbox.text=每次執行程式碼之前自動重新建置鏡像
DockerTargetConfigurable.image.tag.row.label=鏡像標記:
DockerTargetConfigurable.run.options.row.label=執行選項:
DockerTargetConfigurable.run.options.comment.text=Docker 執行指令的參數。\n例如，用於公開連接埠 8080 的 -p 8080:8080。
AddDockerConnectionAction.title=Docker 連接
ComposeScaleAction.Dialog.message=容器數量:
ComposeScaleAction.Dialog.title=擴展
DockerBeforeRunTaskUI.ports.table.title=連接埠轉发:
DockerBeforeRunTaskUI.command.field.title=自訂指令:
DockerBeforeRunTaskUI.options.field.title=自訂選項:
DockerComposeExecutionFailed.notification.action.title=顯示設定…
DockerMachineUtil.starting.machine.template=正在啟動 Docker 機器 ''{0}''
DockerMachineUtil.starting.machine.title=正在啟動 docker machine
DockerRegistryConfigurable.ConnectionTester.task.title=正在連接…
DockerRegistryConfigurable.address.text=地址:
DockerRegistryConfigurable.username.text=用戶名：
DockerRegistryConfigurable.password.text=密碼:
DockerRegistryConfigurable.test.connection.text=測試連接
DockerRuntimeEditorBase.save.button.title=正在儲存…
DockerServiceViewContributor.contributor.descriptor.name=Docker
ContainerLogTab.title=日誌
DockerBuildLogTab.title=建置日誌
ExecInContainerAction.Case.Dialog.message=指令:
ExecInContainerAction.Case.Dialog.title=Exec
ExecInContainerAction.ListPopup.title=在容器中執行指令
ExecInContainerAction.ListPopup.textFor.create=創建並執行…
ExecInContainerAction.ManageExecCommandsDialog.column.title=指令
ExecInContainerAction.ManageExecCommandsDialog.column.no.commands=無指令
ExecInContainerAction.ManageExecCommandsDialog.command.is.empty=指令為空
ExecInContainerAction.ListPopup.textFor.manage=管理…
ExecInContainerAction.tab.title=執行: {0}
DockerImageGroupDetails.ImagePullTab.title=鏡像主控台
ImagePullPanel.image.to.pull.label=要拉取的鏡像:
ImagePullPanel.image.to.pull.comment=或按 {0} 啟動
ImagePullPanel.action.pull=拉取選定項
ImagePullPanel.terminal.name=Docker 鏡像
ImagePullPanel.terminal.info.using.default.tag=正在使用預設標記: 最新
ImagePullPanel.terminal.error.reference.format=引用格式無效: {0}
ImagePullPanel.queue.label=鏡像在佇列中拉取: {0}
ToolBasedDockerComposeConfigurationParser.progress.title=正在處理 Docker Compose 設定…
DockerSearchContext.BadResponseException.message=響應程式碼: 來自 URL 的 {0}: {1}
DockerRemoteDebugExtensionEditor.port.text=連接埠:
DockerExtraHostConfigurable.hostname.text=主機名:
DockerExtraHostConfigurable.ip.text=IP:
DockerComposeDeploymentEditor.services.popup.title=切換服務
DockerComposeDeploymentEditor.compose.files.text=Compose 檔案:
DockerComposeDeploymentEditor.services.text=服務:
DockerDeploymentEditor.image.id.text=鏡像 ID 或名稱:
DockerDeploymentEditor.run.built.image.text=執行建置的鏡像
DockerDeploymentEditor.container.name.text=容器名稱:
DockerDeploymentEditor.command.preview.text=指令預覽:
DockerFileDeploymentEditor.group.run.title=執行
DockerFileDeploymentEditor.group.run.option.name=執行選項
DockerFileDeploymentEditor.group.run.actionHint=啟動建置鏡像的容器
DockerFileDeploymentEditor.group.build.title=建置

DockerRunConfigurationPanel.configuration.text=Docker 設定:
DockerRunConfigurationPanel.service.text=服務:
DockerRuntimeEditor.save.text=儲存
RegistrySelectionEditor.new.text=新建…
progress.text.preparing.volumes=正在準備卷…
progress.text.docker.upload.volume.progress.message=來自 {0} 的上傳將掛載為 {1}
progress.text.docker.download.volume.progress.message=來自 {1} 的下載將儲存到 {0}
#
DockerDeploymentStatus.image=鏡像
DockerDeploymentStatus.paused=已暫停
DockerDeploymentStatus.stopped=已停止
DockerDeploymentStatus.created=已創建
DockerDeploymentStatus.starting=正在啟動
DockerDeploymentStatus.started=已啟動
DockerDeploymentStatus.stopping=正在停止
DockerDeploymentStatus.deleting=正在刪除
DockerDeploymentStatus.deleted=已刪除
AbstractDockerProcessConnectionData.docker.account.specified=未指定 Docker 帳戶
AbstractDockerProcessConnectionData.docker.account.found=找不到 Docker 帳戶
DockerBeforeRunComposeLauncher.target.service.name.required=“目標服務名稱”為必填項
DockerBeforeRunTaskLauncherBase.error.cant.find.docker=找不到 docker {0}
DockerComposeServiceStarter.starting.docker.compose=正在啟動 docker-compose…
ConfigurationHelpAreaWrapper.run.remote.jvm.with.following.command.line.arguments=<html><body>使用以下命令行實參執行遠端 JVM:</body></html>
DockerEnvironment.cant.run.process=無法執行行程: {0}
DockerEnvVarConfigurable.name.required=“名稱”為必填項
DockerExtraHostConfigurable.error.hostname.required=主機名為必填項
DockerExtraHostConfigurable.error.ip.required=IP 為必填項
DockerLinkConfigurable.error.name.required=“名稱”為必填項
DockerRegistryConfigurable.error.address.required=地址為必填項
DockerRegistryConfigurable.error.username.required=用戶名必填
DockerRegistryConfigurable.error.password.required=密碼為必填項
DockerRemoteDebugExtensionEditor.error.invalid.port.number=端口號無效
DockerSingletonDeploymentSourceType.unknown.node.text=<unknown>
DockerTargetStepBase.title=Docker
DockerTargetType.VolumeContributionUI.mount.as.volume=作為卷安裝
DockerTargetType.error.cant.find.server=找不到 Docker 伺服器 {0}
DockerEnvironmentFactory.error.cant.find.image=找不到鏡像: {0}
DockerEnvironmentFactory.progress.text.preparing.docker.target=正在準備 Docker 目標…
DockerUtil.error.docker.image.could.be.found=找不到 Docker 鏡像“{0}”
DockerVolumeBindingConfigurable.error.container.path.required=容器路徑為必填項
PushImageConfigurable.error.registry.required=註冊表為必填項
PushImageConfigurable.error.repository.required=儲存庫為必填項
PushImageConfigurable.error.tag.required=標記為必填項
DockerComposeCli.error.version.command.time.out=docker-compose 版本指令超時
DockerComposeCli.error.version.command.nonzero.exit.code=docker-compose 版本指令以非零退出程式碼 {0} 完成
DockerComposeCli.error.cant.find.version.in.output=在 docker-compose 輸出中找不到版本: {0}
DockerComposeProcessUtil.error.container.not.found=找不到 Docker Compose 容器 {0}
ComposeServiceExecCmd.error.path.required=Docker Compose 設定路徑未定義
ComposeServiceExecCmd.error.service.name.required=Docker Compose 服務名稱未定義
ComposeServiceExecCmd.error.command.required=指令未定義
ComposeServiceRunCmd.error.path.required=Docker Compose 設定路徑未定義
ComposeServiceRunCmd.error.service.required=Docker Compose 服務名稱未定義
ComposeServiceUpCmd.error.path.required=Docker Compose 設定路徑未定義
ComposeServiceUpCmd.error.service.required=Docker Compose 服務名稱未定義
DockerPullToTerminal.error.operation.failed=操作失敗: {0}，有關詳細資訊，請參閱日誌
ComposeApplicationRuntime.notification.group=docker-compose
RegistryRuntimeTask.notification.group=Docker
DockerMachineNotStartedException.start.docker.machine.and.refresh.skeletons=<a href="#">啟動 Docker Machine ''{0}'' 並重新整理框架</a>
DockerLinksEditor.NameColumn.title=名稱
DockerLinksEditor.AliasColumn.title=別名
DockerVolumeBindingsEditor.ContainerPath.title=容器路徑
DockerVolumeBindingsEditor.HostPath.title=主機路徑
DockerVolumeBindingsEditor.ReadOnly.title=唯讀
DockerPropertiesRuntimeEditor.NameColumn.title=名稱
DockerPropertiesRuntimeEditor.ValueColumn.title=值
DockerBeforeRunTaskUI.DescriptionColumn.title=連接埠
DockerBeforeRunTaskUI.LocalPortColumn.title=本地連接埠
DockerBeforeRunTaskUI.ContainerPortColumn.title=容器連接埠
DockerExtraHostsEditor.HostnameColumn.title=主機名
DockerExtraHostsEditor.IPColumn.title=IP
DockerEnvVarsEditor.ValueColumn.title=值
DockerEnvVarsEditor.NameColumn.title=名稱
DockerComposeCliUtil.error.compose.execution.failed=Docker Compose 執行失敗
DockerComposeIntegrationService.progress.title.updating.volume=正在更新 {0} 卷
DockerBeforeRunTaskProvider.error.unable.to.locate.started.container=無法定位已啟動的容器
DockerBeforeRunTaskProvider.error.configuration.error=設定錯誤: {0}
DockerBeforeRunTaskProvider.error.launch.error=啟動錯誤: {0}
DockerComposeCredentialsEditor.error.base.configuration.file.does.not.exist=基礎設定檔案“{0}”不存在
DockerInterpreterContainerSettingsEditor.port.bindings=連接埠綁定
DockerInterpreterContainerSettingsEditor.links=鏈接
DockerInterpreterContainerSettingsEditor.extra.hosts=額外主機
DockerInterpreterContainerSettingsEditor.volume.bindings=卷綁定
DockerInterpreterContainerSettingsEditor.environment.variables=環境變數
DockerTargetTerminalStepBase.terminal.title.docker=Docker
DockerTargetTerminalStepBase.status.connecting.to.docker.daemon=正在連接到 Docker 守護行程…
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon.at.0=無法連接到 {0} 處的 Docker 守護程序。該 docker 守護程序是否正在執行?
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon=無法連接到 Docker 守護行程。該 docker 守護行程是否正在執行?
RemoteDockerRuntime.progress.title.pulling.image=正在拉取 "{0}" 鏡像…
RegistryRuntimeTask.current.of.total={0}/{1}
RegistrySelectionEditor.default.name.docker.registry=Docker 註冊表
DockerCredentialsEditor.listing.docker.images=正在列出 Docker 鏡像…
DockerApplicationRuntime.progress.message.pushing=正在推送 {0}
DockerApplicationRuntime.progress.message.pushed.successfully={0} 已成功推送
AttachedConsoleTab.name=附加的主控台
#
DockerTargetIntrospectable.launching.introspection.container=正在啟動內省容器…
DockerTargetIntrospectable.introspection.container.launched=完成，容器已啟動: {0}
DockerTargetIntrospectable.removing.introspection.container=正在移除內省容器
DockerTargetIntrospectable.introspecting.variable.not.found=正在內省 ${0}: 未找到
DockerTargetIntrospectable.introspecting.variable.result=正在內省 ${0}: {1}
DockerTargetIntrospectable.introspecting.introspecting.image.environment.variables=正在內省鏡像環境變數…
DockerTargetIntrospectable.introspecting.image.done=完成，在檢查結果中找到 {0} 個變數
DockerDownloadVolume.progress.message.executing.command=正在執行: `{0}`
PrepareImageOperation.unable.to.find.an.image.for.introspection=找不到用於內省的鏡像
PrepareImageOperation.failed.to.find.image.for.introspection=找不到用於內省的鏡像: {0}
BuildImageOperation.build.completed=建置已完成
BuildImageOperation.waiting.for.build.operation=正在等待建置運算…
BuildImageOperation.connected=已連接
PrepareImageOperation.introspection.completed.with.error=內省完成但有錯誤: {0}
PrepareImageOperation.introspection.completed=內省完成
PullImageOperation.pull.completed=拉取完成項
PullImageOperation.waiting.for.pull.operation=正在等待拉取運算…
PullImageOperation.connected=已連接
ProjectPathOnRootRow.row.project.path.on.target=目標的專案路徑:
ProjectPathOnRootRow.row.project.path.on.target.comment=預設情況下，執行設定將在有關複製必要檔案的設定中使用此路徑
DockerTargetConfigurable.button.rebuild.image=重新建置鏡像
DockerTargetConfigurable.wizard.title.rebuild.image=重新建置鏡像
DockerTargetConfigurable.language.runtime.label=語言執行時:
DockerConfigureLanguageStep.title.label=專案目錄和語言執行時設定
DockerTargetMainStep.error.cant.finish.now=現在無法完成
DockerTargetMainStep.error.dockerfile.must.be.selected=未選擇 Dockerfile
DockerTargetMainStep.error.image.tag.is.required=未指定鏡像標記
DockerTargetEnvironmentConfiguration.error.connection.to.docker.required=未連接到 Docker
DockerTargetEnvironmentConfiguration.error.path.to.dockerfile.to.build.required=未指定要建置的 Dockerfile 的路徑
DockerTargetEnvironmentConfiguration.error.image.tag.to.pull.required=未指定要拉取的鏡像標記
DockerTargetEnvironmentConfiguration.error.container.options.error=容器選項錯誤: {0}
DockerTargetEnvironmentConfiguration.error.build.image.options.error=建置鏡像選項錯誤: {0}
DockerMachineConfigurable.message.not.valid.executable={0} 不是有效的 {1} 可執行檔案
DockerMachineConfigurable.message.does.not.exists={0} 不存在
DockerMachineConfigurable.message.not.executable={0} 不是可執行檔案
DockerMachineConfigurable.message.executable.not.specified=可執行檔案未指定
DockerMachineConfigurable.message.can't.find.executable=找不到可執行檔案
CreateTerminalAction.tab.title=終端({0})
DockerCliImageBuilder.image.build.failed.message=鏡像建置失敗，退出程式碼為 {0}。
ComposeDeploymentRuntime.process.finished.error.message=`docker-compose` 行程結束，退出程式碼為 {0}\n\n
RemoteDockerApplicationRuntime.untagged.image=未標記的鏡像
RemoteDockerApplicationRuntime.untagged.container=未標記的容器
#
DockerfileDocumentationProvider.online.documentation=在線文檔
DockerLogConsoleView.checkbox.show.previous.sessions.lines=顯示以前的會話
DockerLogConsoleView.label.folding.for.previous.sessions.lines.by=折疊深度
#
DockerComposeActions.UpOneServiceAsTemporaryAction.text=在 ''{0}'' 上 up
ComposeDeleteServiceAction.confirmation=刪除 `{1}` 服務中的 {0}?



DockerLogConsoleView.checkbox.show.timestamps=顯示時間戳
action.Docker.RemoteServers.RemoveOrphans.text=移除孤立項
action.Docker.RemoteServers.StartAllComposeApp.text=全部啟動
action.Docker.RemoteServers.StartAllComposeApp.description=啟動所有 Compose 服務
action.Docker.RemoteServers.RestartComposeApp.text=重新啟動
action.Docker.RemoteServers.RestartComposeApp.description=重啟所有正在執行的 Compose 服務
DockerComposeDeploymentEditor.project.name=專案名稱:
DockerComposeDeploymentEditor.project.name.name=指定專案名稱
DockerDeleteProvider.buttons.cancel=取消
DockerDeleteProvider.buttons.smart.delete=選擇並刪除…
DockerDeleteProvider.buttons.force.delete=全部刪除
DockerDeleteProvider.smart.delete.dialog.title=檢測到的依賴項
DockerDeleteProvider.smart.delete.dialog.ok.text=刪除所選項
ComposeRemoveOrphansAction.dialog.message=刪除所有無效服務?
dockerConsole.name=主控台
configurable.DockerConsoleConfigurable.display.name=主控台
configurable.DockerConsoleConfigurable.enable.folding.checkbox.text=在日誌主控台中折疊以前的會話
DockerDeleteProvider.background.message=正在刪除…
DockerDeleteProvider.smart.delete.compose=Compose: {0}
InspectDockerAction.description.volume=檢查所選卷
InspectDockerAction.description.network=檢查所選網絡
DockerGroupRuntime.VolumesGroup.groupName=卷
DockerGroupRuntime.NetworksGroup.groupName=網絡
action.Docker.RemoteServers.DeleteVolume.text=刪除卷
action.Docker.RemoteServers.DeleteVolume.description=刪除所選卷
action.Docker.RemoteServers.DeleteNetwork.text=刪除網絡
action.Docker.RemoteServers.DeleteNetwork.description=刪除所選網絡
DockerDeleteProvider.confirmation.text.unspecified.type.one=刪除條目?
DockerDeleteProvider.confirmation.text.unspecified.type.many=刪除 {0} 個條目?
DockerMissingShellPluginNotificationProvider.do.not.show.again=不再顯示
ComposeServiceRuntime.status.stopped=已停止
ComposeServiceRuntime.status.service.not.exit=在 ''{1}'' {2,choice,1#檔案|2#檔案}中找不到 ''{0}'' 服務
ComposeServiceRuntime.status.files.not.exists=從中創建此服務的 ''{1}'' {0,choice,1#檔案|2#檔案}{0,choice,1#不存在|2#不存在}
DockerPreviewFragments.group.preview=指令預覽
DockerPreviewFragments.preview.label=預覽:
DockerPreviewFragments.preview.action.text=顯示指令預覽
DockerPreviewFragments.preview.action.description=顯示要執行的指令的預覽
DockerRuntimeLabelsTab.tab.title=標籤
DockerVolumeDetails.VolumePropertiesEditor.property.name=名稱
DockerVolumeDetails.VolumePropertiesEditor.property.driver=驅動程序
DockerVolumeDetails.VolumePropertiesEditor.property.mount.point=裝入點
DockerVolumeDetails.VolumePropertiesEditor.property.attached.to=已附加到
DockerVolumeDetails.VolumePropertiesEditor.property.not.attached=未附加
DockerNetworkDetails.NetworkPropertiesEditor.property.name=名稱
DockerNetworkDetails.NetworkPropertiesEditor.property.id=網絡 ID
DockerNetworkDetails.NetworkPropertiesEditor.property.scope=範圍
DockerNetworkDetails.NetworkPropertiesEditor.property.driver=驅動程序
DockerNetworkDetails.NetworkPropertiesEditor.property.internal=內部
DockerNetworkDetails.NetworkPropertiesEditor.property.attachable=可附加
DockerNetworkDetails.IpamPropertiesEditor.title=IPAM
DockerNetworkDetails.IpamPropertiesEditor.property.driver=驅動程序
DockerNetworkDetails.IpamPropertiesEditor.property.network.id=網絡 ID
DockerNetworkDetails.IpamPropertiesEditor.property.subnet=子網
DockerNetworkDetails.IpamPropertiesEditor.property.gateway=網關
DockerNetworkDetails.IpamPropertiesEditor.property.ip.range=IP 範圍
action.Docker.RemoteServers.RecreateContainer.text=重新創建容器
action.Docker.RemoteServers.RecreateContainer.description=重新創建並執行所選容器
DockerNetworkDetails.NetworkPropertiesEditor.property.ipv6.enabled=已啟用 IPv6
DockerNetworkDetails.ContainersEditor.title=容器
DockerNetworkDetails.ContainersEditor.header.container=容器
DockerNetworkDetails.ContainersEditor.header.ipv4=IPv4
DockerNetworkDetails.ContainersEditor.header.ipv6=IPv6
DockerComposeApplication.unsupported.version.message=具有不受支援的 Docker Compose 版本的服務
DockerComposeService.unsupported.version.message=將 Docker Compose 更新到 1.25.0 或更高版本，然後重新創建此服務以獲得完整的延伸模組支援
DockerSshConnectionConfigurator.label=SSH:
ConnectNetworkDialog.specify.container=指定容器
ConnectNetworkDialog.title=連接網絡
ConnectNetworkDialog.popup.title=連接網絡選項
ConnectNetworkDialog.ok.button.text=連接
ConnectNetworkDialog.validation.empty.container.name=容器名稱不能為空
ConnectNetworkDialog.validation.container.not.exist=不存在使用此名稱的容器
CreateVolumeAction.dialog.title=創建卷
CreateVolumeAction.dialog.popup.title=創建卷選項
CreateVolumeAction.dialog.name.field.empty.text=指定卷名
CreateVolumeAction.dialog.name.field.validation.already.exists=已存在使用此名稱的卷
CreateNetworkAction.dialog.title=創建網絡
CreateNetworkAction.dialog.popup.title=創建網絡選項
CreateNetworkAction.dialog.name.field.empty.text=指定網絡名稱
CreateNetworkAction.dialog.name.field.validation.empty=網絡名稱不能為空
CreateNetworkAction.dialog.name.field.validation.already.exists=已存在使用此名稱的網絡
CreateNetworkAction.dialog.driver.field.popup.description=用於管理網絡的驅動程序(預設為“網橋”)
CreateNetworkAction.dialog.driver.field.validation.not.in.swarm.mode=此客戶端不是 Swarm 管理器。使用 "docker swarm init" 或 "docker swarm join"。
CreateNetworkAction.dialog.attachable.field.popup.description=啟用手動附加容器
CreateNetworkAction.dialog.internal.field.popup.description=限制對網絡的外部存取
DockerDeleteProvider.dialog.hint=\n只有刪除一個元素的所有依賴項後，才能刪除該元素。
DockerDeleteProvider.button.expand.all=全部展開
DockerDeleteProvider.button.collapse.all=全部摺疊
DockerDeleteProvider.button.select.all=全選
DockerDeleteProvider.button.deselect.all=取消全選
ConnectNetworkDialog.validation.container.not.running=容器未執行
DockerComposeDeploymentEditor.dialog.message.not.valid.project.name="{0}" 不是有效的專案名稱
GeneratedComposeFile.header=這是一個生成的檔案。不用於手動編輯。
action.Docker.RemoteServers.Rerun.text=重新執行
CreateNetworkAction.dialog.tags.group.driver.name=驅動程序
DockerPortBindingDialog.validation.not.valid.port=''{0}'' 不是有效的端口號
DockerPortBindingDialog.validation.not.valid.port.range=端口號不能小於 0 和大於 65335
DockerPortBindingDialog.ports.binding.options=連接埠綁定選項
DockerPortBindingDialog.container.port.placeholder=指定容器連接埠
DockerPortBindingDialog.validation.container.port.cant.be.empty=容器連接埠不能為空
DockerPortBindingDialog.host.ip.placeholder=指定主機 IP
DockerPortBindingDialog.host.ip.name=主機 IP
DockerPortBindingDialog.host.ip.popup.description=(如未指定，將使用 0.0.0.0)
DockerPortBindingDialog.validation.not.valid.ip=''{0}'' 不是有效的 IP
DockerPortBindingDialog.host.port.placeholder=指定主機連接埠
DockerPortBindingDialog.host.port.name=主機連接埠
DockerPortBindingDialog.host.port.popup.description=(如未指定，將使用第一個可用連接埠)
DockerPortBindingDialog.protocol.group.name=協議
DockerPortBindingDialog.protocol.group.popup.description=(預設 tcp)
DockerPortBindingDialog.validation.port.already.allocated=''{0}:{1}'' 連接埠已被分配
group.Docker.RemoteServersViewPopup.Image.text=鏡像
action.Docker.RemoteServers.CommitContainer.text=另存為新鏡像
CommitContainerAction.title=提交容器
CommitContainerAction.ok.button=提交
CommitContainerAction.placeholder=新鏡像名稱
CommitContainerAction.task.name=提交容器
CommitContainerAction.validation.image.name.exists=使用此名稱的鏡像已存在
action.Docker.RemoteServers.ConnectServer.text=連接
action.Docker.RemoteServers.Prune.text=清理
action.Docker.RemoteServers.Prune.description=移除所有未使用的元素
PruneAction.dialog.containers.message=移除所有停止的容器?
PruneAction.dialog.images.message=移除所有未使用的鏡像?
PruneAction.dialog.volumes.message=移除所有未使用的卷?
PruneAction.dialog.networks.message=移除所有未使用的網絡?
CommitContainerAction.validation.validate.name=''{0}'' 不是有效的鏡像名稱
CommitContainerAction.validation.validate.tag=''{0}'' 不是有效的鏡像標記
DockerDeleteProvider.confirmation.dialog.text=由於存在依賴項，無法刪除。刪除依賴項以完成此操作。
DockerImageLayersTab.element.id=ID
DockerImageLayersTab.element.command=指令
DockerImageLayersTab.element.digest=摘要
DockerImageLayersTab.element.comment=註釋
DockerImageLayersTab.element.size=大小
DockerImageLayersTab.title=層
DockerImageLayersTab.column.command=指令
DockerImageLayersTab.column.size=大小
DockerImageLayersTab.analyzing=正在分析…
DockerImageLayersTab.status.empty.layer=空層
DockerImageLayersTab.status.layer.not.selected1=選擇層以查看詳細資訊
DockerImageLayersTab.status.need.analyze=分析鏡像以獲得更多資訊
DockerImageLayersTab.value.missing=(缺少)
DockerImageLayersTab.element.created=已創建
DockerMachineConfigurable.checkbox.use.compose.v2.beta=使用 Compose V2 (測試版)
DockerMachineConfigurable.checkbox.use.compose.v2.comment=從 Docker Desktop 3.4.0 開始，您可以使用新的 Compose V2，它支援將 compose 指令作為 Docker CLI 的一部分。
PruneAction.dialog.all.message=移除所有停止的容器、未使用的卷、網絡、懸空鏡像和所有建置快取?
action.Docker.RemoteServers.CreateNetwork.text=創建網絡
action.Docker.RemoteServers.CreateVolume.text=創建卷
ConnectNetworkDialog.validation.endpoint.already.exists=網絡 ''{1}'' 中已有名稱為 ''{0}'' 的端點
DockerFileRunCommandMissingContinuationInspection.description=缺少連續字符
AddBacklashesQuickFix.intention.family=添加反斜杠
DockerFileRunCommandMissingContinuationInspection.display.name='RUN' 指令缺少連續字符
DockerImageLayersTab.analyzing.task=正在分析 {0} 的 Docker 鏡像層…
DockerPortBindingDialog.container.port.tooltip=容器連接埠
CommitContainerAction.windows.running.container.error=Windows 不支持提交正在執行的 Windows 容器
CommitContainerAction.windows.running.container.stop.button=停止容器並顯示提交對話框
DockerComposeTargetMainStep.step.description=創建新的 Docker Compose 目標
DockerComposeTargetMainStep.error.service.must.be.selected=未選擇服務
AddDockerRegistryAction.action.name=新建 Docker 註冊表
AddDockerRegistryAction.title=Docker 註冊表
DockerRegistryServiceViewContributor.pull.repository.task=正在從儲存庫中拉取所有 Docker 鏡像…
DockerRegistryServiceViewContributor.pull.repository.action=拉取儲存庫…
DockerRegistryServiceViewContributor.login.operation=正在登錄…
DockerRegistryServiceViewContributor.pull.repository.action.description=從儲存庫中拉取所有帶標籤的鏡像
DockerRegistryServiceViewContributor.dialog.title=拉取 Docker 鏡像
DockerRegistryServiceViewContributor.dialog.ok=拉取
DockerRegistryServiceViewContributor.dialog.label=拉取到
DockerRegistryServiceViewContributor.connecting.message=正在連接到 Docker 伺服器…
DockerRegistryServiceViewContributor.registryNode.statusText=錯誤: {0}
DockerRegistryConfigurable.token.text=令牌:
DockerRegistryConfigurable.registry.text=註冊表:
DockerRegistryConfigurable.error.invalid.address=地址無效
configurable.PushImageConfigurable.namespace.text=命名空間:
ExternalTool.exited.with.error.code={0} 退出，錯誤程式碼為 {1}
ExternalTool.exited.with.error.code.and.output={0} 退出，錯誤程式碼為 {1}: {2}
ExternalTool.timeout.exceeded=超時
DockerMachine.tool.name=Docker 機器
Minikube.tool.name=Minikube
DockerRegistryServiceViewContributor.action.edit=編輯
MinikubeConnectionConfigurator.minikube.not.available=Minikube 不可用
DockerRegistryProvider.error.incorrect.credentials=身份驗證憑證不正確
DockerRegistryConfigurable.error.unsupporded.registry=不支持的註冊表
DockerComposeDeploymentEditor.profiles.emptyText=指定以逗號分隔的設定檔案列表
DockerComposeDeploymentEditor.profiles.label=設定檔案:
DockerComposeDeploymentEditor.profiles.name=設定檔案
DockerComposeDeploymentEditor.profiles.actionHint=設定檔案允許通過選擇性地啟用服務來針對各種用法和環境調整 Compose 套用程序模型。
DockerContainer.settings=容器設定:
DockerRegistryServiceViewContributor.error.node.label=錯誤
docker.container.settings.label.text=Docker 容器設定:
action.Docker.RemoteServers.ShowContainerFiles.text=顯示檔案
DockerDashboardTab.title=儀表板
DockerContainerDashboardTab.recreate.container=重新創建容器
DockerContainerDashboardTab.confirm.deletion.title=確認刪除
DockerContainerDashboardTab.confirm.deletion.message=是否要移除此元素並重新創建容器?
DockerContainerDashboardTab.button.start=開始
DockerContainerDashboardTab.button.restart=重新啟動
DockerContainerDashboardTab.button.stop=停止
DockerContainerDashboardTab.button.terminal=終端
DockerContainerDashboardTab.segment.env.var=環境變數
DockerContainerDashboardTab.segment.ports=連接埠
DockerContainerDashboardTab.segment.volumes=卷
DockerContainerDashboardTab.port.read.only=唯讀
DockerContainerDashboardTab.port.read.and.write=讀/寫
DockerLogConsoleView.folding.action.title=折疊
DockerVolumeBindingDialog.commandline.title=--卷
DockerVolumeBindingDialog.containers.tooltip=為檔案或目錄在容器中的掛載路徑
DockerVolumeBindingDialog.containers.validation=容器路徑應為絕對路徑
DockerVolumeBindingDialog.host.tooltip=為主機上檔案或目錄的路徑
DockerVolumeBindingDialog.ro.validation=主機路徑不能為空
DockerVolumeBindingDialog.ro.tooltip=如果存在唯讀選項，則會將綁定掛載以唯讀方式掛載到容器中
DockerVolumeBindingsEditor.ContainerPath.validation.mount.point.already.used=已為此容器指定此掛載點
DockerVolumeBindingsEditor.HostPath.validation.invalid.name="{0}" 包含本地卷名的無效字符，僅允許 "[a-zA-Z0-9][a-zA-Z0-9_.-]"。如果您打算傳遞主機目錄，請使用j絕對路徑
DockerAbstractDashboardTab.action.remove.hint=移除
DockerAbstractDashboardTab.action.edit.hint=編輯
DockerAbstractDashboardTab.action.add=添加...
DockerImageDashboardTab.action.create.container=創建容器
DockerImageDashboardTab.action.push.image=推送鏡像
DockerImageDashboardTab.action.show.layers=顯示層
DockerImageDashboardTab.action.show.labels=顯示標籤
DockerImageDashboardTab.segment.tags=標記
DockerImageDashboardTab.tag.main=主
DockerImageDashboardTab.segment.containers=容器
DockerNetworkDetails.DockerNetworkDashboardTab.disconnect=斷開連接
DockerNetworkDetails.DockerNetworkDashboardTab.ipv6.disabled=IPv6 已禁用
DockerNetworkDetails.DockerNetworkDashboardTab.driver=驅動程序
DockerNetworkDetails.DockerNetworkDashboardTab.subnet=子網
DockerNetworkDetails.DockerNetworkDashboardTab.gateway=網關
DockerNetworkDetails.DockerNetworkDashboardTab.ip.range=IP 範圍
DockerNetworkDetails.DockerNetworkDashboardTab.network=網絡
DockerImageDashboardTab.tag.image.dialog.title=標記鏡像
DockerImageDashboardTab.tag.image.dialog.button=標記
DockerImageDashboardTab.tag.image.dialog.field.repository=儲存庫
DockerImageDashboardTab.tag.image.dialog.field.tag=標記
configurable.DockerConsoleConfigurable.show.header.checkbox.text=在日誌主控台中顯示儀表板標題
an.icon.to.quickly.build=用於在 Dockerfile 中快速建置或執行特定已命名階段的圖標。
advanced.settings.docker=Docker
advanced.setting.docker.connect.automatically=重啟時自動連接到 Docker
DockerLogConsoleView.folding.policy.none=無
DockerLogConsoleView.folding.policy.seconds=秒
DockerLogConsoleView.folding.policy.minutes=分鐘
DockerLogConsoleView.folding.policy.hours=小時
DockerLogConsoleView.folding.policy.days=天
DockerLogConsoleView.folding.policy.months=個月
DockerLogConsoleView.folding.policy.years=年
DockerVolumeDashboardTab.in.use=使用中
advanced.setting.docker.registry.loading.limit=鏡像註冊表實體載入限制
DockerTransferImageAction.command=複製到
DockerTransferImageAction.ok.text=複製
DockerTransferImageAction.background.task=將 {0} 複製到 {1}
action.Docker.RemoteServers.TransferImage.text=複製 Docker 鏡像
advanced.setting.docker.container.log.is.first.tab=日誌頁籤應該是 Docker 容器的第一個頁籤。
ExternalTool.unknown.result=未知結果
DockerMissingShellPluginNotificationProvider.text=需要 `Shell Script` 延伸模組才能提供完整的 Dockerfile 支援
DockerMissingShellPluginNotificationProvider.install.plugin=安裝 `Shell Script` 延伸模組
DockerMissingShellPluginNotificationProvider.enable.plugin=啟用 `Shell Script` 延伸模組