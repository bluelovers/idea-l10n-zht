action.Kotlin.Gradle.ShowDslLogs.text=顯示 Kotlin Gradle DSL 日誌
action.LoadKtGradleConfiguration.description=Gradle Kotlin DSL 腳本組態已更改。載入更改以獲取程式碼洞察，無需匯入外部 Gradle 專案。
action.LoadKtGradleConfiguration.text=載入腳本組態
action.text.show.kotlin.gradle.dsl.logs.in=在 {0} 中顯示 Kotlin Gradle DSL 日誌
error.text.invalid.gradle.libraries.directory=Gradle 庫目錄 {0} 無效
error.text.missing.jars.in.gradle.directory=Gradle 目錄中缺少 jar
error.text.unable.to.get.gradle.home.directory=無法獲取 Gradle 主目錄
gradle.script.configurations.importing.feature=在 Gradle 專案匯入期間載入 Gradle Kotlin DSL 腳本組態
gradle.scripts.settings.title=管理獨立的 Gradle Kotlin DSL 腳本\:
kotlin.build.script.errors=Kotlin 建置腳本錯誤
label.sources.were.not.indexed=為了縮短專案啟動時間，已停用腳本相依項源索引。您可以在“進階設定”中更改此設定。
link.label.opening.advanced.settings=正在開啟“進階設定”
notification.action.text.load.script.configuration=載入組態
notification.gradle.legacy.firstLoad=停用程式碼洞察以避免 Gradle 建置組態。
notification.gradle.legacy.firstLoad.info=<div width\=400><p>需要執行 Gradle 組態階段才可獲取腳本組態。腳本組態載入預設停用，因為其對於大型 Gradle 專案可能會佔用大量資源。</p><p>點擊“載入組態”評估 Gradle Kotlin DSL 腳本。</p><p>或者，要在腳本首次開啟時自動載入組態，並在每次更改建置腳本組態塊時重新載入組態，可以為所有腳本啟用“自動重新載入”。對於組態時間較長的大型 Gradle 專案，不推薦此選項。</p></div>
notification.gradle.legacy.outsideProject=程式碼洞察不可用(相關 Gradle 專案未鏈接)。
notification.gradle.legacy.outsideProject.addToStandaloneHelp=<div width\=400><p>需要匯入評估此腳本的 Gradle 專案，使 IDE 能夠進行分析。嘗試重新匯入鏈接的 Gradle 專案或鏈接評估該腳本的新 Gradle 專案。</p><p>或者，您可以將其新增到獨立腳本中，其組態將自動載入。</p><p><b>注意\: </b>每個獨立腳本都需要在更新時執行單獨的 Gradle 組態階段。對於大型 Gradle 專案，這可能會佔用大量資源。</p></div>
notification.gradle.legacy.standalone.info=<div width\=400><p>評估此腳本的 Gradle 專案未在 IDE 中匯入。<br/><p><b>注意\: </b>每個獨立腳本都需要在更新時執行單獨的 Gradle 組態階段。對於大型 Gradle 專案，這可能會佔用大量資源。</p></div>
notification.notEvaluatedInLastImport.addAsStandaloneAction=新增到獨立腳本
notification.notEvaluatedInLastImport.info=<div width\=400><p>需要匯入評估此腳本的 Gradle 專案，使 IDE 能夠進行分析。嘗試重新匯入鏈接的 Gradle 專案或鏈接評估該腳本的新 Gradle 專案。</p><p>或者，您可以將其新增到獨立腳本中，其組態將單獨載入。</p><p><b>注意\: </b>每個獨立腳本都需要在更新時執行單獨的 Gradle 組態階段。對於大型 Gradle 專案，這可能會佔用大量資源。</p></div>
notification.notEvaluatedInLastImport.text=程式碼洞察不可用(未收到腳本組態)。
notification.outsideAnything.linkAction=鏈接 Gradle 專案
notification.outsideAnything.text=程式碼洞察不可用(相關 Gradle 專案未鏈接)。
notification.standalone.disableScriptAction=從獨立腳本移除
notification.standalone.info=<div width\=400><p>此腳本的組態將與 Gradle 專案同步分別載入。<br/><p><b>注意\:</b> 每個獨立腳本都需要在更新時執行單獨的 Gradle 組態階段。對於大型 Gradle 專案，這可能會佔用大量資源。</p></div>
notification.standalone.text=獨立腳本
notification.text.script.configuration.has.been.changed=需要匯入 Gradle Project 以載入更改。
notification.wasNotImportedAfterCreation.help=<div width\=400><p>Gradle Kotlin DSL 腳本組態丟失。匯入外部 Gradle 專案或載入組態以獲取腳本程式碼洞察。</p></div>
notification.wasNotImportedAfterCreation.text=程式碼洞察不可用(未載入腳本組態)。
open.advanced.settings=開啟“進階設定”
standalone.scripts.settings.column.name=路徑
text.default.kotlin.gradle.script=Kotlin Gradle 錯誤
text.gradle.dsl.logs.cannot.be.found.automatically.see.how.to.find.logs=無法自動找到 Gradle DSL 日誌。<br/>可以在<a href\="{0}">此處</a>了解如何尋找日誌。
