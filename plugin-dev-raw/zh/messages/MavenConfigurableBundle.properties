maven.settings.override=覆寫
maven.settings.environment.home.directory=Maven 主路徑(&H)
maven.settings.on.targets.environment.home.directory={0} 的 Maven 主路徑(&H)
maven.settings.on.targets.environment.home.directory.context.help=已為所選目標設定 Maven 主路徑。編輯目標設定以更改可用 Maven 主路徑。
maven.settings.environment.settings.title=Maven 設定
maven.settings.environment.user.settings=使用者設定檔案(&S)
maven.settings.environment.local.repository=本地儲存庫(&R)
maven.settings.environment.show.advanced.settings=顯示新 Maven 專案的設定對話框(&D)
maven.settings.environment.show.advanced.settings.tooltip=開啟或鏈接新 Maven 專案時顯示包含 Maven 環境專案設定的對話視窗

maven.settings.general.work.offline=脫機工作(&O)
maven.settings.general.work.offline.tooltip=<html>執行 Maven 目標時將選項 <b>--offline</b> 添加到命令行</html>
maven.settings.general.use.plugin.registry=使用延伸模組註冊表(&R)
maven.settings.general.use.plugin.registry.tooltip=<html>如果未選擇此選項，則添加選項 <b>--no-plugin-registry</b></html>
maven.settings.general.execute.recursively=以遞歸方式執行目標(&G)
maven.settings.general.execute.recursively.tooltip=<html>如果未選擇此選項，則添加選項 <b>--non-recursive</b></html>
maven.settings.general.print.stacktraces=列印異常堆疊跟踪(&E)
maven.settings.general.print.stacktraces.tooltip=<html>執行 Maven 目標時將選項 <b>--errors</b> 添加到命令行</html>
maven.settings.general.update.snapshots=始終更新快照(&S)
maven.settings.general.update.snapshots.tooltip=強制檢查遠端儲存庫上有無更新的版本和快照
maven.settings.general.output.level=輸出級別(&L):
maven.settings.general.checksum.policy=校驗和策略(&C):
maven.settings.general.multiproject.build.policy=多項目建置失敗策略(&F):
maven.settings.general.thread.count=執行緒計數
maven.settings.general.thread.count.tooltip=執行緒數，例如 2.0C，其中 C 是核心數量(選項 -T)
maven.settings.general.thread.count.note=-T 選項

maven.settings.importing.create.modules.for.aggregator=為聚合器專案創建 $FULLNAME$ 模組(使用 'pom' 打包)(&M)
maven.settings.importing.create.module.groups=為多模組 Maven 專案創建模組組(&G)
maven.settings.importing.search.recursively=以遞歸方式搜尋專案(&S)
maven.settings.importing.use.output.directories=使用 Maven 輸出目錄(&O)
maven.settings.importing.use.output.directories.tooltip=IDEA 編譯器將使用在 Maven 模型中定義的輸出目錄(預設情況下為 target/classes)
maven.settings.importing.generated.source.folders=生成的源資料夾:
maven.settings.importing.phase.for.source.updates=要用於資料夾更新的階段(&U):
maven.settings.importing.phase.for.source.updates.notes=<html>IntelliJ IDEA 需要執行列出的一個階段以發現通過 Maven 延伸模組設定的所有原始碼資料夾。<br><b>請注意</b>，所有 test-* 階段都會先生成並編譯生產原始碼。</html>

maven.settings.importing.auto.download=自動下載:
maven.settings.importing.auto.download.documentation=文檔(&D)
maven.settings.importing.auto.download.sources=源(&R)
maven.settings.importing.auto.download.annotations=註解
maven.settings.importing.keep.folders.on.reimport=專案重新載入時保持源資料夾和測試資料夾(&F)
maven.settings.importing.project.format=專案格式(&T):
maven.settings.importing.project.files.keep.in=將專案檔案保留在(&K):
maven.settings.importing.project.files.keep.in.tooltip=將 IDEA 指定的檔案(例如 *.iml / .idea)保留在所選目錄中。預設情況下，*.iml 檔案存儲在 pom.xml 旁
maven.settings.importing.project.store.externally=在外部存儲生成的專案檔案
maven.settings.importing.project.exclude.build.directory=排除建置目錄(%PROJECT_ROOT%/target)
maven.settings.importing.project.exclude.build.directory.tooltip=如果選擇此選項，資料夾 /target 將在重新匯入期間從專案中排除。無論如何，都將排除編譯器輸出(/target/classes 和 /target/test-classes)
maven.settings.importing.dependency.type=依賴項類型:
maven.settings.importing.dependency.type.tooltip=應匯入的依賴項類型的逗號分隔列表
maven.settings.importing.vm.options=匯入程序的 VM 選項:
maven.settings.importing.jdk=匯入程序的 JDK:
maven.settings.importing.detect.compiler=自動檢測編譯器

maven.settings.testrun.caption=<html>遵循 <b>maven-surefire-plugin</b> 和 <b>maven-failsafe-plugin</b> 設定傳遞到 JUnit 行程:</html>
maven.settings.testrun.argline=<html><i>argLine(&A)</i></html>
maven.settings.testrun.system.property=<html><i>systemPropertyVariables(&S)</i></html>
maven.settings.testrun.env.variables=<html><i>environmentVariables(&E)</i></html>

maven.settings.repositories.update=更新(&U)

maven.settings.index.edit.repository=編輯 Maven 儲存庫


maven.settings.working.directory=工作目錄(&D)
maven.settings.working.directory.tooltip=選擇 Maven 專案
maven.settings.command.line=命令行(&C)
maven.settings.runner.profiles=設定檔案(用空格分隔)(&P)
maven.settings.runner.profiles.notes=添加前綴 '-' 可以禁用設定檔案，例如“-test”
maven.settings.runner.resolve.workspace.artifacts=解析工作區工件(&W)
maven.settings.runner.resolve.workspace.artifacts.tooltip=如果是多項目工作區，將先在工作區中尋找依賴項，然後才會在本地儲存庫中尋找。
maven.settings.on.targets.runner.resolve.workspace.artifacts.tooltip=非本地目標上的執行不支持此選項
maven.settings.general.use.project.settings.tooltip=使用“偏好設定 | 建置、執行、部署 | 建置工具 | Maven”的設定
maven.settings.on.targets.general.use.project.settings.tooltip=一般專案設定不能重用於具有非本地目標的 Maven 執行設定
maven.settings.runner.use.project.settings.tooltip=使用“偏好設定 | 建置、執行、部署 | 建置工具 | Maven | 執行程序”的設定
maven.settings.on.targets.runner.use.project.settings.tooltip=執行程序專案設定不能重用於具有非本地目標的 Maven 執行設定

maven.settings.ignored.title=已忽略的檔案
maven.settings.ignored.tooltip=路徑模式(允許使用逗號分隔、'*' 和 '?' 萬用字元)
maven.settings.ignored.no.file=無 Maven 檔案


maven.settings.runner.delegate=將 IDE 建置/執行操作委託給 Maven
maven.settings.runner.run.in.background=在背景執行
maven.settings.runner.vm.options=VM 選項:
maven.settings.runner.jre=JRE:
maven.settings.runner.properties=屬性:
maven.settings.runner.skip.tests=跳過測試(&K)
maven.settings.runner.properties.not.defined=未定義屬性
maven.settings.archetype.add.repository=<html>儲存庫<i>(可選)</i></html>
maven.settings.archetype.add.groupid=組 ID
maven.settings.archetype.add.artifactid=工件 ID
maven.settings.archetype.add.version=版本
maven.settings.archetype.create.from.archetype=從 archetype 創建(&A)
maven.settings.archetype.add.archetype=添加 Archetype(&D)…
maven.settings.archetype.add.title=添加 Archetype

maven.settings.edit.goal.select.maven.project=選擇 Maven 專案

maven.settings.repositories.title=已編制索引的 Maven 儲存庫:
maven.settings.repositories.no=無遠端儲存庫


maven.settings.generated.folder.ignore=不檢測
maven.settings.generated.folder.autodetect=自動檢測
maven.settings.generated.folder.targerdir=target/generated-sources
maven.settings.generated.folder.targersubdir=“target/generated-sources”的子目錄
maven.project.file.pom.xml=<b>Maven</b> 專案檔案(pom.xml)
column.name.name=名稱
column.name.value=值
link.label.choose.phase.goal.to.assign.shortcut=選擇要分配快捷鍵的階段/目標

connector.ui.label=Maven 連接器
connector.ui.project=專案名稱
connector.ui.jdk=JDK 名稱
connector.ui.vmOptions=VM 選項
connector.ui.dir=多模組目錄
connector.ui.maven=Maven 分發版
connector.ui.state=狀態
connector.ui.type=類型
connector.ui.stop=停止
connector.ui.refresh=重新整理
connector.ui.dummy=虛擬



maven.settings.vm.options.tooltip=此欄位中指定的選項會覆寫 .mvn/jvm.config 檔案中的選項
maven.run.configuration.distribution.name=Maven 主目錄(&H)
maven.run.configuration.distribution.invalid.home.error=Maven 主目錄無效
maven.run.configuration.specify.distribution.action.name=指定 Maven 主目錄
maven.run.configuration.bundled.distribution.name=Maven {0}
maven.run.configuration.bundled.distribution.description=已捆綁
maven.run.configuration.jre.label=JRE(&J):
maven.run.configuration.jre.name=JRE(&J)
maven.run.configuration.jre.action.hint=指定 JRE 以執行 Maven 目標
maven.run.configuration.command.line.tasks.empty.text=無 Maven 指令
maven.run.configuration.command.line.arguments.empty.text=無 Maven 選項
maven.run.configuration.command.line.task.column=Maven 指令
maven.run.configuration.command.line.argument.column=Maven 選項
maven.run.configuration.command.line.description.column=描述
maven.run.configuration.command.line.hint=範例: 編譯 --debug。使用 {0} 進行自動補全。
maven.run.configuration.command.line.title=Maven 指令
maven.run.configuration.command.line.tooltip=插入 Maven 指令…
maven.run.configuration.command.line.empty.state=命令行
maven.run.configuration.command.line.name=命令行(&C)
maven.run.configuration.profiles.name=設定檔案(&P)
maven.run.configuration.profiles.label=設定檔案(&P):
maven.run.configuration.profiles.hint=用空格分隔。使用 "-" 前綴禁用設定檔案，例如 -test
maven.run.configuration.user.settings.name=使用者設定(&R)
maven.run.configuration.user.settings.label=使用者設定(&R):
maven.run.configuration.user.settings.title=選擇 Maven 使用者設定
maven.run.configuration.local.repository.name=本地儲存庫(&L)
maven.run.configuration.local.repository.label=本地儲存庫(&L):
maven.run.configuration.local.repository.title=選擇 Maven 本地儲存庫
maven.run.configuration.threads.name=執行緒計數(&T)
maven.run.configuration.threads.label=執行緒計數(&T):
maven.run.configuration.checksum.policy=校驗和策略(&C)
maven.settings.environment.use.maven.config.settings=使用 .mvn/maven.config 中的設定
maven.settings.environment.use.maven.config.settings.tooltip=maven.config 檔案中的設定會覆蓋 IDE Maven UI 設定。<br/>如果此選項已啟用，請使用 maven.config 更改設定。<br/>否則，重新匯入後可能會丟失 UI 中所做的任何更改。
maven.settings.environment.use.maven.config.settings.hint=<html>重新匯入後可能會丟失在其設定中所做的任何更改</html>
maven.settings.general.execute.non.recursively=以非遞歸方式執行目標(&G)
maven.run.configuration.distribution.label=Maven 主目錄(&H):
maven.run.configuration.general.options.group.name=Maven 選項(&M)
maven.run.configuration.general.options.group=Maven 選項
maven.run.configuration.runner.options.group.name=Java 選項(&J)
maven.run.configuration.runner.options.group=Java 選項
maven.run.configuration.output.level.name=輸出級別(&L)
maven.run.configuration.output.level.label=輸出級別(&L):
maven.run.configuration.multi.project.build.policy=多項目建置失敗策略(&F)
maven.run.configuration.properties.name=屬性(&R)
maven.run.configuration.properties.label=屬性(&R):
maven.run.configuration.properties.dialog.title=屬性
maven.run.configuration.properties.dialog.tooltip=編輯 Maven 屬性…
maven.run.configuration.properties.dialog.label=屬性:
maven.run.configuration.properties.dialog.empty.state=無屬性
maven.run.configuration.properties.dialog.ok.button=儲存
maven.run.configuration.options.group.inherit=從<a>設定</a>繼承
maven.settings.importing.tree.structure=為生產和測試根創建單獨的模組(實驗性) (&M)
maven.settings.importing.tree.structure.tooltip=如有必要，使用單獨的測試模組在 'Project structure...' 中創建專案的樹形結構