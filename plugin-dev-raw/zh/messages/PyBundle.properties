CONFLICT.name.obscured.by.local.definitions=名稱 ''{0}'' 被區域定義掩蓋
CONFLICT.name.obscured.cannot.convert=名稱 ''{0}'' 被掩蓋。無法轉換。
CONFLICT.occurrence.pl=匹配項
INSP.GROUP.python=Python
INSP.GROUP.requirements=要求
INSP.NAME.pyproject.packages=pyproject.toml 中的相依項
INSP.poetry.package.versions.display.name=Poetry 軟體套件版本
INSP.requirement.uninstalled.name=要求不滿足
INSP.requirements.package.not.installed=軟體套件 {0} 未安裝
INSP.settings.bdd.behave.specific=特定於 BDD 行為的定義不正確
INSP.settings.bdd.step.definition.arguments=步驟定義函式中的實參不正確
INSP.settings.pep8.ignore.errors.label=已忽略的錯誤:
QFIX.FAMILY.NAME.rename.element=重新命名元素
QFIX.NAME.change.signature=更改簽名
QFIX.NAME.implement.methods=實作 abstract 方法
QFIX.NAME.install.all.requirements=安裝所有缺少的軟體套件
QFIX.NAME.install.requirement=安裝軟體套件 {0}
QFIX.NAME.rename.element=重新命名該元素
QFIX.add.import.add.import=新增 "''{0}''"
QFIX.bold.html.text=<b>{0}</b>
QFIX.change.signature.of=更改 {0} 的簽名
QFIX.change.to.same.directory.import=更改為同一目錄匯入
QFIX.fill.paragraph=填充段落
QFIX.generate.binary.stubs=生成二進制存根
QFIX.generating.skeletons.for.binary.module=正在為二進制模組生成框架
QFIX.ignore.unresolved.reference=忽略未解析的參照
QFIX.ignore.unresolved.reference.0=忽略未解析的參照 ''{0}''
QFIX.mark.all.unresolved.attributes.of.0.as.ignored=忽略 ''{0}'' 的所有未解析特性
QFIX.mark.as.namespace.package=將目錄 ''{0}'' 標記為命名空間軟體套件
QFIX.pep8.edit.inspection.profile.setting=編輯檢查組態檔案設定
QFIX.reformat.file=重新設定檔案格式
QFIX.remove.trailing.blank.lines=移除尾隨的空白行
action.AnActionButton.text.show.early.releases=顯示早期版本
action.AnActionButton.text.use.conda.package.manager=使用 Conda 軟體套件管理器
action.CleanPyc.description=刪除所選目錄及其子目錄中已編譯的位元組碼檔案
action.CleanPyc.progress.title.cleaning.up.pyc.files=正在清理 .pyc 檔案…
action.CleanPyc.status.bar.text.deleted.bytecode.files=已刪除 {0} 個位元組碼{0, choice, 0#檔案|1#檔案|2#檔案}
action.CleanPyc.text=清除 Python 編譯檔案
action.CollapsePythonTypeAnnotations.description=折疊 python 類型註解
action.CollapsePythonTypeAnnotations.text=折疊 Python 類型註解
action.CompuleQrc.text=編譯 .qrc 檔案
action.DumbAware.ConcurrencyToolWindowPanel.description.stop.process=停止程序
action.DumbAware.ConcurrencyToolWindowPanel.text.stop.process=停止程序
action.DumbAware.PydevConsoleRunnerImpl.description.stop.python.console=停止 Python 主控台
action.DumbAware.PydevConsoleRunnerImpl.text.stop.console=停止主控台
action.ExecuteInPyConsoleAction.description=在 Python/Django 主控台中執行選定的程式碼段
action.ExecuteInPyConsoleAction.text=在主控台中執行所選內容
action.ExpandPythonTypeAnnotations.description=展開 python 類型註解
action.ExpandPythonTypeAnnotations.text=展開 Python 類型註解
action.ForceStepInto.description=步入，忽略庫、建構函式等步進篩選器。
action.ForceStepInto.text=強制單步執行 (_R)
action.MarkNamespacePackageDirectory.text=命名空間軟體套件
action.NewPythonPackage.description=在其中建立新目錄和 __init__.py
action.NewPythonPackage.text=Python 軟體套件
action.PyConsoleRenameAction.text=重新命名主控台
action.PyConvertModuleToPackage.description=建立同名的軟體套件，並將模組內容移至其 __init__.py
action.PyConvertModuleToPackage.text=轉換為 Python 軟體套件
action.PyConvertPackageToModuleAction.description=建立同名模組，並將 __init__.py 的內容移至該模組
action.PyConvertPackageToModuleAction.text=轉換為 Python 模組
action.PyDebugger.CustomizeDataView.text=自訂資料檢視
action.PyDebugger.ViewArray.text=作為陣列檢視
action.PyExecuteCellAction.text=在主控台中執行單元
action.PyManagePackages.text=管理 Python 軟體套件…
action.PySyncPythonRequirements.description=同步 Python 要求檔案與專案中使用的軟體套件
action.PySyncPythonRequirements.text=同步 Python 要求…
action.PythonGenerateDictionaries.text=生成 Python 拼寫檢查器字典
action.RunPythonToolwindowAction.text=Python 主控台
action.SetNextStatement.description=跳轉到文字游標所在的行
action.SetNextStatement.text=跳轉到游標(&J)
action.StepIntoMyCode.description=跳到已執行的下一行，並忽略庫
action.StepIntoMyCode.text=單步執行我的程式碼
action.XDebugger.CopyValue.description=將所選節點的值複製到剪貼簿
action.XDebugger.CopyValue.text=複製值
action.com.jetbrains.python.console.RunPythonOrDebugConsoleAction.description=允許在執行偵錯會話時快速執行 Python 主控台或偵錯主控台
action.com.jetbrains.python.console.RunPythonOrDebugConsoleAction.text=Python 或偵錯主控台
action.create.python.file.description=從指定的模板建立 Python 檔案
action.create.python.file.title=Python 檔案
action.run.file.in.python.console.description=執行 Python 主控台中的當前檔案
active.sdk.dialog.link.add.interpreter.text=新增解釋器
active.sdk.dialog.project.interpreter=Python 解釋器:
active.sdk.dialog.project.interpreter.path.mappings=路徑映射:
active.sdk.dialog.project.interpreter.path.mappings.default.project.error=開啟或建立專案以組態映射
active.sdk.dialog.show.all.item=全部顯示…
acton.run.file.in.python.console.title=在 Python 主控台中執行檔案
advanced.setting.python.code.vision.usages.limit=Code Vision: 要搜尋的最大用法數
advanced.setting.python.debugger.attach.timeout=偵錯器: 附加到程序連線超時
advanced.setting.python.pytest.show_summary=Pytest: 不新增 "--no-header --no-summary -q"
advanced.setting.python.pytest.swapdiff=在 Pytest 中交換實際斷言和預期斷言的順序
available.to.all.projects=可用於所有專案
black.action.on.save.executable.info=使用 Black 可執行檔案 v{0}
black.action.on.save.executable.path.not.specified=未指定 Black 可執行檔案路徑
black.action.on.save.name=執行 Black
black.action.on.save.package.info=使用 Black 軟體套件 v{0}
black.advanced.settings.panel.title=進階設定
black.advertising.service.configure.button.label=組態
black.advertising.service.dont.show.again.label=不再顯示
black.advertising.service.found.in.PATH=在 {0, choice, 0#%PATH%|1#$PATH} 中檢測到 Black 格式化程序可執行檔案。請嘗試 Black 格式化程序整合！
black.advertising.service.found.in.packages=在專案解釋器上檢測到 Black 格式化軟體套件。請嘗試 Black 格式化程序整合！
black.advertising.service.notification.title=Black 格式化程序整合
black.cli.args.comment=列出由空格分隔的命令行實參。<a href='https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#command-line-options'>了解詳情</a><br>pyproject.toml 中的設定會自動應用於 Black v21.4.0 及更高版本。
black.cli.args.text.field.label=設定:
black.cli.args.validation.notification=沒有為參數 {0} 傳遞任何值
black.configurable.name=Black
black.empty.output.error=Black 格式化程序返回了空輸出
black.empty.path.to.executable.exception.text=Black 可執行檔案未找到或為空
black.enable.action.on.save.label=儲存時
black.enable.black.checkbox.label=重新設定程式碼格式時
black.exception.error.message=Black 格式化程序錯誤
black.executable.auto.detected.path=已自動檢測: {0}
black.executable.label=Black 可執行檔案:
black.executable.not.found=無法在 {0, choice, 0#%PATH%|1#$PATH} 中自動檢測 Black 可執行檔案
black.execution.mode.binary=二進制
black.execution.mode.label=執行模式:
black.execution.mode.package=打包
black.execution.mode.tooltip.text=使用專案解釋器上安裝的可執行檔案或軟體套件
black.failed.to.format.on.save.error.label=Black: 無法設定檔案 {0} 的格式
black.file.ignored.notification.label=Black: 檔案被忽略
black.file.ignored.notification.message=根據 --exclude 或 --force-exclude 規則忽略檔案 {0}
black.format.fragment.inline.error=Black: 無法格式化片段: {0}
black.formatted.n.lines=Black: 已格式化 {0} {1, choice, 0#行|1#行}
black.formatting.service.name=Black 格式化程序
black.formatting.with.black=正在使用 Black 格式化
black.install.button.label=安裝 Black
black.installation.error.title=Black 格式化程序安裝失敗
black.installing.modal.title=正在安裝 Black 格式化程序
black.interpreter.selection.combobox.label=Python 解釋器:
black.no.lines.changed=Black: 未更改行。內容已正確格式化。
black.not.installed.error=當前解釋器上未安裝 Black 格式化程序軟體套件
black.processing.file.name=Black: 正在處理檔案 {0}
black.remote.sdk.error=遠端 SDK 不支持軟體套件模式。請使用二進制模式。
black.remote.sdk.exception.text=不允許在遠端 SDK 上以軟體套件模式呼叫 Black 格式化程序
black.sdk.not.configured.error=沒有為專案 {0} 組態專案 SDK
black.sdk.not.configured.error.title=SDK未組態
black.select.path.to.executable=選擇 Black 格式化程序可執行檔案的路徑
black.use.section.label=使用 Black 格式化程序:
button.install.to.user.site.packages.directory=安裝到使用者的站點軟體套件目錄
choose.packages.to.install=選擇要安裝的軟體套件:
code.insight.create.test=建立測試
code.insight.goto.superclass.attribute.chooser.title=選擇超類別特性
code.insight.ignore.packages.qfix=忽略{0,choice, 1#軟體套件|2#軟體套件}
code.insight.ignore.type.hints=忽略
code.insight.install.type.hints.action=安裝存根軟體套件
code.insight.install.type.hints.content=它們可以使程式碼洞察更出色。
code.insight.select.methods.to.implement=選擇實作的方法
code.insight.select.methods.to.override=選擇要覆寫的方法
code.insight.select.target.directory=選擇目標目錄
code.insight.stub.checked.packages.are.not.installed.message=存根{0,choice,1#軟體套件|2#軟體套件} {1} {0,choice,1#未|2#未}安裝。
code.insight.stub.forced.packages.are.not.installed.message=存根{0,choice,1#軟體套件|2#軟體套件} {1} {0,choice,1#未|2#未}安裝。{0,choice,1#它|2#它們}{0,choice,1#包含|2#包含}提升程式碼洞察所需的類型提示。
code.insight.stub.package.advertiser.notifications.group.title=推薦使用 Python 存根軟體套件
code.insight.stub.packages.ignored.notification.content=建議的 {0} {1,choice,1#與|2#與}您的當前環境不相容。\n{1,choice,1#此|2#這些}存根{1,choice,1#軟體套件|2#軟體套件}將被移除和忽略，直到新版本發佈。
code.insight.stub.packages.install.requirements.fix.name=安裝存根{0,choice,1#軟體套件|2#軟體套件}
code.insight.type.hints.are.not.installed=未安裝類型提示
command.name.create.new.package=建立新軟體套件 {0}
commandLine.commandNotFound={0}: 找不到指令
compile.cython.extensions.error=編譯 Cython 擴展錯誤
compile.cython.extensions.help=運作方式
compile.cython.extensions.install=安裝
compile.cython.extensions.notification=Python 偵錯器擴展可用
compile.cython.extensions.title=編譯 Cython 擴展
conda.packaging.button.install.with.conda=通過 conda 安裝
conda.packaging.button.install.with.pip=通過 pip 安裝
conda.packaging.cache.update.progress=正在更新可用的 Conda 軟體套件列表
conda.packaging.empty.pypi.info=<html><head></head><body><p class="empty_description">在 PyPI 上找不到軟體套件描述。<br/>仍然可以使用 conda 安裝。</p></body></html>
conda.packaging.error.rendering.description=<html><head></head><body><p class="empty_description">無法檢索軟體套件描述。<br/>它仍然可以安裝。</p></body></html>
conda.packaging.exception.non.zero=非零退出程式碼
conda.packaging.exception.timeout=超時
conda.packaging.install.progress=正在安裝 Conda 軟體套件 {0}
conda.packaging.list.progress=正在讀取已安裝的 Conda 軟體套件
conda.packaging.uninstall.progress=正在移除 Conda 軟體套件 {0}
conda.packaging.update.progress=正在更新 Conda 軟體套件 {0}
configurable.PyActiveSdkModuleConfigurable.python.interpreter.display.name=Python 解釋器
configurable.PyConsoleOptionsConfigurable.child.display.name=Python 主控台
configurable.PyConsoleOptionsConfigurable.display.name=主控台
configurable.PyContentEntriesModuleConfigurable.display.name=專案結構
configurable.PyDebuggerConfigurable.display.name=Python 偵錯器
configurable.PyDependenciesConfigurable.display.name=專案相依項
configurable.PyIntegratedToolsConfigurable.display.name=Python 整合工具
configurable.PyIntegratedToolsModulesConfigurable.display.name=Python 整合工具
configurable.PySmartKeysOptions.display.name=Python
configurable.PyUserTypeRenderersConfigurable.display.name=Python 類型呈現器
configurable.PythonContentEntriesConfigurable.display.name=專案結構
configurable.PythonSdkEditorTab.display.name=Python SDK
configurable.choose.path.to.the.package.requirements.file=選擇軟體套件要求檔案的路徑:
configurable.choose.working.directory=選擇工作目錄:
configurable.name.python.language=Python 語言
configurable.pipenv.auto.detected=已自動檢測: {0}
configurable.select.working.directory=選擇工作目錄
configuring.interpreters.link=組態解釋器
connecting.to.console.progress=正在連線到主控台…
connecting.to.console.title=連線主控台
console.attach.debugger=附加偵錯器
console.attach.debugger.description=對主控台中執行的程式碼啟用追踪
console.cannot.connect.to.debugger=無法連線到偵錯器
console.changing.variable=正在更改變數
console.close.console.communication=關閉主控台通信
console.connecting.to.debugger=正在連線到偵錯器
console.error.connecting.debugger=連線偵錯器出錯
console.evaluating.expression.in.console=正在主控台中對表達式求值
console.executing.code.in.console=正在主控台中執行程式碼…
console.executing.dataviewer.command="正在執行 DataViewer 指令"
console.getting.array=陣列
console.getting.completion=補全
console.getting.documentation=文檔
console.getting.frame.variables=框架變數
console.getting.from.runtime=正在從 Python 執行時獲取{0}
console.getting.table.data=表資料
console.getting.variable.value=變量值
console.interrupting.execution=正在中斷執行
console.new.console=新增主控台
console.new.console.description=建立新的 python 主控台
console.restarting.console=正在重啟主控台
console.setting.user.type.renderers=使用者類型呈現器
console.show.variables.description=顯示活動主控台變數
console.show.variables.title=顯示變數
console.stopping.console=正在停止主控台
console.table.failed.to.load=無法載入:
console.waiting.execution.result=正在等待執行結果
create.python.file.action.new.python.file=新增 Python 檔案
create.python.file.action.python.file=Python 檔案
create.python.file.action.python.stub=Python 存根
create.python.file.action.python.unit.test=Python 單元測試
create.python.file.script.action=建立 Python 腳本 {0}
current.interpreter=當前解釋器: {0}
debug.notification.group=Python 偵錯器
debug.notification.title.connection.failed=連線 Python 偵錯器失敗
debug.popup.title.step.into.function=步入函式
debugger.attach.to.process.failed.to.find.free.socket.port=找不到可用的套接字連接埠
debugger.attach.to.process.filter.names=<html>為<b>附加到程序</b>顯示名稱中包含這些內容的程序:</html>
debugger.connected.to.pydev.debugger.build=已連線到 pydev 偵錯器(構建版本 {0})
debugger.cython.extension.gcc=指令 'gcc' 失敗，退出狀態為 1
debugger.cython.extension.gcc.failed=安裝一個 C 編譯器，以便為偵錯器建置 Cython 擴展。
debugger.cython.extension.gcc.not.found=x86_64-linux-gnu-gcc
debugger.cython.extension.gcc.not.found.suggestion=\n\n使用您的軟體套件管理器安裝缺失的 <code>gcc</code>。\n\n嘗試指令:\n<code>sudo apt install gcc</code>
debugger.cython.extension.install.python.command=<code>sudo apt-get install python{0}-dev</code>
debugger.cython.extension.non.zero.exit.code=非零退出程式碼 ({0}):\n{1}
debugger.cython.extension.permission.denied=權限被拒絕
debugger.cython.extension.python.h=Python.h: 無此檔案或目錄
debugger.cython.extension.python.h.not.found=\n\n使用您的軟體套件管理器在系統範圍內為 Python 開發安裝標頭檔和靜態庫。\n\n嘗試指令:\n{0}\n
debugger.cython.extension.speeds.up.python.debugging=Cython 擴展加速 Python 偵錯
debugger.cython.please.enter.your.password.to.compile.cython.extensions=請輸入密碼以編譯 cython 擴展:
debugger.cython.python.run.configuration.should.be.selected=應選擇 Python 執行組態
debugger.data.view.close=關閉
debugger.data.view.close.selected.viewer=關閉所選檢視器
debugger.data.view.close.viewer=關閉檢視器
debugger.data.view.colored=已著色
debugger.data.view.colored.cells=已著色單元
debugger.data.view.connected.to.debug.session=已連線到偵錯會話 ''{0}''
debugger.data.view.connected.to.python.console=已連線到 Python 主控台
debugger.data.view.data=資料
debugger.data.view.empty.tab=空
debugger.data.view.empty.text=執行 Python 主控台或偵錯器以檢視可用資料
debugger.data.view.failed.to.evaluate.expression=無法對表達式 {0} 求值
debugger.data.view.open.new.container.viewer=開啟新容器檢視器
debugger.data.view.resize.automatically=自動調整大小
debugger.data.view.title=資料檢視
debugger.data.view.type.is.not.supported=不支持 {0}
debugger.data.view.view.new.container=檢視新容器
debugger.dataviewer.action.copy.name=複製
debugger.dataviewer.action.copy.properties.dialog.title=複製到剪貼簿設定
debugger.dataviewer.action.copy.properties.include.header=包含標頭
debugger.dataviewer.action.copy.properties.include.indices=包含索引
debugger.dataviewer.action.copy.properties.name=複製到剪貼簿設定
debugger.dataviewer.action.copy.properties.separator=分隔符:
debugger.dataviewer.action.copy.update.message=複製到剪貼簿
debugger.dataviewer.action.export.dialog.description=儲存到
debugger.dataviewer.action.export.name=匯出…
debugger.dataviewer.action.goto.dialog.label=行:列
debugger.dataviewer.action.goto.dialog.title=轉到
debugger.dataviewer.action.remove.filter.name=移除篩選器
debugger.dataviewer.action.set.filter.ad.controls=按 Enter 鍵套用
debugger.dataviewer.action.set.filter.button.set=設定
debugger.dataviewer.action.set.filter.description=篩選列 ''{0}''
debugger.dataviewer.action.set.filter.help.expression=<html>使用 <b>{0}</b> 作為 lambda 函式的變數</html>
debugger.dataviewer.action.set.filter.item.expression=表達式
debugger.dataviewer.action.set.filter.item.substring=子字串
debugger.dataviewer.action.set.filter.name=設定篩選器…
debugger.dataviewer.action.set.filter.use.regex=使用正則表達式
debugger.dataviewer.export.error.invalid.filepath=無效檔案路徑
debugger.dataviewer.export.error.invalid.filepath.content=檔案路徑 ''{0}'' 無效
debugger.dataviewer.export.error.title=表匯出失敗
debugger.dataviewer.export.error.unhandled=未處理的錯誤
debugger.dataviewer.export.error.unhandled.content=無法匯出到 ''{0}'':\n{1}
debugger.dataviewer.header.filter.hint={0}: {1}
debugger.dataviewer.header.filter.hint.mode.expression=表達式
debugger.dataviewer.header.filter.hint.mode.regex=正則表達式
debugger.dataviewer.header.filter.hint.mode.substring=子字串
debugger.dataviewer.modifier.error=修飾符錯誤: {0}
debugger.dataviewer.notification.group.title=資料檢視器錯誤
debugger.debug.process.running=程序正在執行
debugger.delete.signature.cache=刪除快取
debugger.error.in.test.setup.or.teardown.caption=設定或刪除測試時出錯
debugger.exception.breakpoint.activation.policy=啟用策略
debugger.exception.breakpoint.any.exception=任何異常
debugger.exception.breakpoint.ignore.library.files=忽略庫檔案
debugger.exception.breakpoint.on.raise=引發時
debugger.exception.breakpoint.on.termination=終止時
debugger.exception.breakpoint.select.exception.class=選擇異常類別
debugger.exception.breakpoint.type=Python 異常中斷點
debugger.line.breakpoint.type=Python 行中斷點
debugger.numeric.view.as.array=作為陣列檢視
debugger.numeric.view.as.dataframe=作為 DataFrame 檢視
debugger.numeric.view.as.series=作為系列檢視
debugger.progress.title.stackframe.processing=StackFrame processing
debugger.pydev.console.pause.the.process.to.use.command.line=暫停程序以使用命令行。
debugger.remote.port.out.of.boundaries=端口號超出界限
debugger.remote.starting.debug.server.at.port=正在連接埠 {0} 上啟動偵錯伺服器
debugger.remote.waiting.for.connection=正在等待連線
debugger.remote.waiting.for.process.connection=正在等待程序連線…
debugger.sending.close.message=正在向 Python 主控台發送關閉訊息…
debugger.simplified.view.description=停用監視類別、函式和模組物件
debugger.simplified.view.text=簡化變數檢視
debugger.stack.frame.frame.not.available=<框架不可用>
debugger.stack.frame.return.values=返回值
debugger.stack.frame.special.variables=特殊變數
debugger.stack.frame.unable.to.display.frame.variables=無法顯示框架變數
debugger.stack.frames.not.available.in.non.suspended.state=框架在未掛起的狀態下不可用
debugger.stepping.filter=步進篩選器
debugger.stepping.filter.specify.pattern=指定 glob 模式(允許使用 '*'、'?' 和 '[seq]'，分號 ';' 用作名稱分隔符):
debugger.stepping.no.script.filters=未組態腳本篩選器
debugger.test.failed.caption=測試失敗
debugger.use.the.following.code.to.connect.to.the.debugger=使用以下程式碼連線到偵錯器: 
debugger.variables.loading.asynchronously.description=異步載入變量值
debugger.variables.loading.asynchronously.text=異步
debugger.variables.loading.on.demand.description=按需載入變量值
debugger.variables.loading.on.demand.text=按需
debugger.variables.loading.policy=變數載入策略
debugger.variables.loading.synchronously.description=同步載入變量值
debugger.variables.loading.synchronously.text=同步
debugger.variables.view.loading.timed.out=載入超時
debugger.variables.view.quoting.double.description=將值括在雙引號中
debugger.variables.view.quoting.double.text=雙引號
debugger.variables.view.quoting.policy=變數引號
debugger.variables.view.quoting.single.description=將值括在單引號中
debugger.variables.view.quoting.single.text=單引號
debugger.variables.view.quoting.without.description=不帶引號複製值
debugger.variables.view.quoting.without.text=不帶引號
debugger.variables.view.switch.to.loading.on.demand=切換為按需載入
debugger.variables.view.warning.message=無法載入多個變數的值  
debugger.waiting.to.finish=正在等待 Python 主控台程序結束…
debugger.warning.message=此選項可能會減慢偵錯器的速度
debugger.warning.wrong.debugger.version=警告: 偵錯器版本錯誤。使用 PyCharm 安裝目錄中的 pycharm-debugger.egg\n或執行: ''pip install pydevd-pycharm~=%{0}''
debugger.watch.return.values.description=啟用監視，以檢視所執行函式返回的值
debugger.watch.show.return.values=顯示返回值
dialog.message.error.on.python.side.exit.code.stderr.stdout=Python 端錯誤。退出程式碼: {0}，錯誤: {1}，輸出: {2}
dialog.title.can.t.create.package=建立軟體套件錯誤
dialog.title.new.python.package=新增 Python 軟體套件
dict.completion.type.text=dict 鍵
enter.path.dialog.title=輸入路徑
error.in.project.generation=專案生成出錯
external.documentation.column.name.module=模組名稱
external.documentation.column.name.url.path.pattern=URL/路徑模式
external.documentation.configure.description=模組 {0} 未組態外部文檔 URL。\n要立即組態嗎?
external.documentation.edit.documentation.url=編輯文檔 URL
external.documentation.pycharm=外部文檔
external.documentation.python.plugin=Python 外部文檔
external.documentation.title=Python 外部文檔
filetype.python.debug.remote.description=遠端偵錯
flask.name=Flask
form.auto.import.auto.import.show.popup=顯示自動匯入工具提示
form.auto.import.from.module.import.name=從 <module> 匯入 <name>
form.auto.import.import.module.name=匯入 <module>.<name>
form.auto.import.preferred.import.style=首選的 import 樣式:
form.auto.import.python=Python
form.console.options.always.show.debug.console=始終顯示偵錯主控台
form.console.options.code.completion=程式碼補全
form.console.options.runtime.code.completion=執行時
form.console.options.settings.title.system.settings=一般設定
form.console.options.show.console.variables.by.default=預設顯示主控台變數
form.console.options.static.code.completion=static
form.console.options.use.command.queue=Python 主控台的指令佇列
form.console.options.use.existing.console.for.run.with.python.console=為“通過 Python 主控台執行”使用現有主控台
form.console.options.use.ipython.if.available=使用 IPython(如有)
form.console.specific.options.starting.script=正在啟動腳本
form.create.test.target.directory=目標目錄
form.create.test.test.class.name=測試類別名
form.create.test.test.file.name=測試檔名
form.data.viewer.current.slice=當前切片
form.data.viewer.dialog.show.svn.map.table.header.column.format.title=格式
form.data.viewer.format=格式:
form.debugger.attach.to.subprocess.automatically.while.debugging=偵錯時自動附加到子程序
form.debugger.clear.caches=清除快取
form.debugger.clear.caches.action=清除快取
form.debugger.collect.run.time.types.information.for.code.insight=收集執行時類型資訊以獲取程式碼洞察
form.debugger.drop.into.debugger.on.failed.tests=在失敗的測試中放入偵錯器
form.debugger.for.attach.to.process.show.processes.with.names.containing=為“附加到程序”顯示名稱中包含這些內容的程序:
form.debugger.gevent.compatible=Gevent 相容
form.debugger.pyqt.compatible=PyQt 相容
form.debugger.remote.interpreter.docker.default.interpreter.path=python
form.debugger.save.call.signatures=儲存呼叫簽名
form.debugger.stepping.always.do.smart.step.into=始終進行智能單步執行
form.debugger.stepping.checkbox.text.do.not.step.into.library.scripts=不要單步執行庫腳本
form.debugger.stepping.do.not.step.into.scripts=不單步執行腳本:
form.debugger.variables.view.user.type.renderers.append.default.children=追加預設子項
form.debugger.variables.view.user.type.renderers.apply.renderer.to.objects.of.type=將呈現器應用於以下類型的物件(完全限定名稱):
form.debugger.variables.view.user.type.renderers.class.not.found=找不到類別
form.debugger.variables.view.user.type.renderers.configure.renderer=組態呈現器
form.debugger.variables.view.user.type.renderers.name=呈現器名稱:
form.debugger.variables.view.user.type.renderers.no.renderers=沒有呈現器
form.debugger.variables.view.user.type.renderers.renderer=呈現器
form.debugger.variables.view.user.type.renderers.unnamed=未命名
form.debugger.variables.view.user.type.renderers.use.default.renderer=使用預設呈現器
form.debugger.variables.view.user.type.renderers.use.following.expression=使用以下表達式:
form.debugger.variables.view.user.type.renderers.use.list.of.expressions=使用表達式列表:
form.debugger.variables.view.user.type.renderers.variable.name=將 'self' 用作變數名稱
form.debugger.variables.view.user.type.renderers.when.expanding.node=展開節點時:
form.debugger.variables.view.user.type.renderers.when.rendering.node=呈現節點時:
form.documentation.entry.available.macros=可用的巨集
form.documentation.entry.insert=插入(&I)
form.documentation.entry.module.name=模組名稱 (&M):
form.documentation.entry.url.path.pattern=URL/路徑模式 (U):
form.edit.sdk.associate.this.virtual.environment.with.current.project=將此虛擬環境與當前專案關聯(&A)
form.edit.sdk.html.href.remove.association=<html><a href="#">移除關聯</a>
form.edit.sdk.interpreter.path=解釋器路徑(&I):
form.edit.sdk.label.create.connection.pool.options.name=名稱(&N):
form.edit.smart.indent.pasted.lines=智能縮排貼上行
form.integrated.tools.analyze.python.code.in.docstrings=分析 docstring 中的 Python 程式碼
form.integrated.tools.default.test.runner=預設測試執行程序:
form.integrated.tools.docstring.format=Docstring 格式:
form.integrated.tools.package.requirements.file=軟體套件要求檔案:
form.integrated.tools.path.to.pipenv.executable=Pipenv 可執行檔案路徑:
form.integrated.tools.render.external.documentation.for.stdlib=渲染 stdlib 的外部文檔
form.integrated.tools.sphinx.working.directory=Sphinx 工作目錄:
form.integrated.tools.treat.txt.files.as.restructuredtext=將 *.txt 檔案視為 reStructuredText
form.introduce.field.initialize.in=初始化位置(&I)
form.introduce.name=名稱(&N):
form.move.module.members.from=從:
form.move.module.members.to=到:
form.python.run.configuration.emulate.terminal.in.output.console=在輸出主控台中模擬終端
form.python.run.configuration.redirect.input.from=重新導向輸入自:
form.python.run.configuration.run.with.python.console=使用 Python 主控台執行
form.remote.path.remote.project.location=遠端專案位置:
form.test.run.configuration.params=參數:
form.test.run.configuration.specify.nosetests.command.line.options=指定 nosetest 命令行選項
form.test.run.configuration.unittest=Unittest
form.test.shared.target=目標:
form.test.shared.test=測試
form.tox.configuration.arguments=實參:
form.tox.configuration.environments.to.run=執行環境:
form.tox.configuration.runcfg.tox=tox
framework.not.supported.for.the.selected.interpreter=所選解釋器不支持 {0}
framework.support.python.sdk.combobox.label=Python SDK:
goto.superclass.choose=選擇超類別
group.PyDebugger.ViewAsGroup.text=檢視方式
group.PyPackagingMenu.text=打包
group.advanced.settings.python=Python
inlay.hints.usages.text={0,choice, 0#無用法|1#1 個用法|2#{0,number} 個用法}
inlay.hints.usages.with.dynamic.text={0,choice, 0#無用法|1#1 個用法|2#{0,number} 個用法} ({1,choice, 1#1 個動態|2#{1,number} 個動態})
inlay.parameters.python.hints.blacklist.explanation=<p>要停用方法或函式提示，請使用下面的其中一種模式: </p><ul><li><code><b>(*info)</b></code> - 所有名稱以 <em>info</em><br></li><li><code><b>(a, b)</b></code> 結尾的單參數函式 - 所有包含 <em>a</em> 和 <em>b</em> 參數的函式<br></li><li><code><b>*.put(self, key, value)</b></ code> - 所有包含<em>鍵</em>和<em>值</em>參數的 <em>put</em> 方法<br></li><li><code><b>Foo. bar(self, a, b)</b></code> - 包含 <em>a</em> 和 <em> b</em> 參數的 <em>Foo</em> 類別的 <em>bar</em> 方法，<br></li><li><code><b>foo(\\<star\\>\\<star\\>kwargs)</b></code> - 包含 <em>**kwargs</em> 參數的 <em>foo</em> 函式<br></li></ul><p>必須為所有參數(包括可選參數)提供名稱或佔位符。<br >限定方法名稱必須包含類別名或其佔位符。<br>使用“不為當前方法顯示提示”{0} 動作從編輯器新增模式。</p>
inlay.parameters.python.show.class.constructor.call.parameter.names=類別建構函式呼叫
inlay.parameters.python.show.hints.for.non-literal.arguments=非文字實參
install.packages.from.pipfile=從 Pipfile 安裝軟體套件
integrated.tools.configurable.docstrings=Docstring
integrated.tools.configurable.packaging=打包
integrated.tools.configurable.pipenv=Pipenv
integrated.tools.configurable.restructuredtext=reStructuredText
integrated.tools.configurable.testing=測試
line.markers.popup.title.choose.overriding.method=選擇 {0} 的覆寫方法
line.markers.popup.title.choose.subclass=選擇 {0} 的子類別
line.markers.popup.title.choose.super.attribute=選擇 {0} 的 super 特性
line.markers.popup.title.choose.super.method=選擇 {0} 的 super 方法
line.markers.tooltip.has.overridden.methods=具有被覆寫的方法
line.markers.tooltip.has.subclasses=具有子類別
line.markers.tooltip.header.is.overridden.in=在以下位置被覆寫:
line.markers.tooltip.header.is.subclassed.by=被以下類別子類別化:
line.markers.tooltip.overrides.attribute.in.class=覆寫 {0} 中的特性
line.markers.tooltip.overrides.method.in.class=覆寫 {0} 中的方法
live.template.context.class=類別
live.template.context.top.level=頂層
looking.for.default.interpreter=正在尋找新項目的預設解釋器設定
looking.for.inner.venvs=正在尋找內部虛擬環境
looking.for.previous.interpreter=正在尋找以前用過的解釋器
looking.for.previous.system.interpreter=正在尋找以前用過的系統級解釋器
looking.for.related.venv=正在尋找與專案相關的虛擬環境
looking.for.shared.conda.environment=正在尋找共享的 conda 環境
looking.for.system.interpreter=正在尋找系統級解釋器
manage.python.packages=管理 Python 軟體套件
new.package.list.item.namespace.package=命名空間軟體套件
new.package.list.item.ordinary.package=軟體套件
new.project.git=建立 Git 儲存庫
new.project.location=位置:
new.project.location.hint=專案將建立於: {0}
new.project.name=名稱:
new.project.welcome=建立歡迎腳本
notification.action.edit.settings=編輯設定
notification.group.cython=Python 偵錯器原生擴展可用
notification.group.package.requirements=Python 軟體套件要求
notification.group.packaging=Python 打包
notification.group.packaging.toolwindow=Python 軟體套件
notification.group.sciview.advertiser=建議使用 Python 科學檢視
pandas.completion.type.text=DataFrame: {0}
path.label=路徑:
path.must.not.be.empty.error.message=路徑不得為空
path.to.python.interpreter.dialog.title=Python 解釋器的路徑
postfix.template.condition.boolean.name=布爾
postfix.template.condition.builtin.len.applicable.name=適用內建 len
postfix.template.condition.dict.name=dict
postfix.template.condition.exception.name=異常
postfix.template.condition.iterable.name=可迭代物件
postfix.template.condition.list.name=列表
postfix.template.condition.non.none.name=非 None
postfix.template.condition.number.name=數字
postfix.template.condition.set.name=集合
postfix.template.condition.string.name=字串
postfix.template.condition.tuple.name=元組
postfix.template.provider.name=Python
progress.text.connecting.to.console=正在連線到主控台…
progress.title.debugger.connection=偵錯器連線
project.cannot.be.generated=無法生成專案
pure.python.project=純 Python
py.commandline.configure=為專案組態 Python SDK
py.module.dependencies.configurable.list.title=專案取決於這些專案:
py.sdk.editor.python.interpreter.label.text=Python 解釋器:
pydev.console.console.process.terminated.with.error=主控台程序因錯誤而終止: \n{0}{1}
pydev.console.console.process.terminated.with.exit.code=主控台程序終止，退出程式碼為 {0}，輸出: {1}
pydev.console.couldnt.connect.to.console.process=無法連線到主控台程序。
pydev.console.couldnt.read.integer.value.from.stream=無法讀取流中的整數值
pydev.console.debugger.connected=\n偵錯器已連線。\n
pydev.console.python.interpreter.is.not.selected=未選擇 Python 解釋器。請先安裝 Python 解釋器。
pydev.console.runner.copy.console.output.description=將主控台輸出複製到剪貼簿
pydev.console.runner.copy.console.output.text=複製主控台輸出
pydev.console.runner.error.running.console=執行主控台出錯
pydev.console.runner.output.actions=輸出動作
pydev.console.runner.python.console.debugger=Python 主控台偵錯器
pydev.console.runner.settings=設定
pydev.console.runner.unknown.error=未知錯誤
python.add.sdk.conda.detecting=正在檢測 conda…
python.add.sdk.conda.executable.path.is.empty=Conda 可執行檔案路徑為空
python.add.sdk.error=錯誤
python.add.sdk.panel.conda.create.new=創造新環境
python.add.sdk.panel.conda.env.name=環境名稱:
python.add.sdk.panel.conda.use.existing=使用現有環境
python.add.sdk.panel.load.envs=載入環境
python.add.sdk.panel.name.conda.environment=Conda 環境
python.add.sdk.panel.name.existing.environment=現有環境
python.add.sdk.panel.name.new.environment=新環境
python.add.sdk.panel.name.new.environment.using=使用此工具新增環境
python.add.sdk.panel.name.new.project.interpreter=新項目解釋器
python.add.sdk.panel.name.pipenv.environment=Pipenv 環境
python.add.sdk.panel.name.previously.configured.interpreter=先前組態的解釋器
python.add.sdk.panel.name.system.interpreter=系統解釋器
python.add.sdk.panel.name.virtualenv.environment=Virtualenv 環境
python.add.sdk.panel.path.to.conda.field=Conda 可執行檔案
python.add.sdk.panel.wait=請稍候…
python.add.sdk.python.version=Python 版本:
python.call.graph=呼叫圖
python.cldt.checking=正在檢查命令行開發者工具的安裝情況
python.cldt.installing.indicator=macOS 正在安裝命令行開發者工具
python.cldt.installing.skip=跳過此步驟，稍後組態解釋器
python.cldt.installing.suggestion=使用命令行開發者工具安裝 Python
python.cldt.installing.title=正在等待 Python 安裝和解釋器設定
python.cldt.required=所選 Python 需要命令行開發者工具: {0}
python.colors.braces.and.operators.braces=大括號和運算符//大括號
python.colors.braces.and.operators.brackets=大括號和運算符//中括號
python.colors.braces.and.operators.comma=大括號和運算符//逗號
python.colors.braces.and.operators.dot=大括號和運算符//點
python.colors.braces.and.operators.operation.sign=大括號和運算符//運算符號
python.colors.braces.and.operators.parentheses=大括號和運算符//圓括號
python.colors.built.in.name=內建名稱
python.colors.class.definition=類別定義
python.colors.decorator=裝飾器
python.colors.docstring.tag=Docstring//標籤
python.colors.docstring.text=Docstring//文本
python.colors.functions.function.call=函式//函式呼叫
python.colors.functions.function.definition=函式//函式定義
python.colors.functions.method.call=函式//方法呼叫
python.colors.functions.nested.function.definition=函式//嵌套函式定義
python.colors.keyword=關鍵字
python.colors.keyword.argument=關鍵字實參
python.colors.line.comment=行註釋
python.colors.local.variables=區域變數
python.colors.number=數字
python.colors.parameters.parameter=參數//參數
python.colors.parameters.self.parameter=參數//'self' 參數
python.colors.python=Python
python.colors.special.names.definition=特殊名稱//定義
python.colors.special.names.usage=特殊名稱//用法
python.colors.string.binary.bytes=字串//二進制(位元組)
python.colors.string.escape.sequence.invalid=字串//轉義序列//無效
python.colors.string.escape.sequence.valid=字串//轉義序列//有效
python.colors.string.f.string.expression.braces=字串//格式化字串///表達式大括號
python.colors.string.f.string.format.specifier.start=字串//格式化字串//格式說明符開始
python.colors.string.f.string.type.conversion=字串//格式化字串///類型轉換
python.colors.string.text.unicode=字串//文本 (unicode)
python.colors.type.annotation=類型註解
python.colors.type.parameters=類型參數
python.compatibility.inspection.advertiser.notifications.group.title=建議進行 Python 兼容性檢查
python.compatibility.inspection.advertiser.notifications.title=Python 版本相容性
python.compatibility.inspection.advertiser.using.future.imports.warning.message=您的原始碼包含 __future__ 匯入。<br/>要啟用程式碼兼容性檢查嗎?<br/><a href="#yes">是</a>\\&nbsp;\\&nbsp;<a href="#no">否</a>
python.compatibility.inspection.advertiser.using.six.warning.message=您的原始碼匯入了 'six' 軟體套件。<br/>要啟用程式碼兼容性檢查嗎?<br/><a href="#yes">是</a>\\&nbsp;\\&nbsp;<a href="#no">否</a>
python.compatibility.inspection.advertiser.version.stale.python3.version.warning.message=已為最高 {0} 的 Python 版本組態了程式碼兼容性檢查。<br/>要為 Python {1} 啟用嗎?<br/><a href="#yes">是</a>\\&nbsp;\\&nbsp;<a href="#no">否</a>
python.concurrency.visualizer.scroll.end=滾動到結尾
python.configuration.choose.target.to.run=選擇要執行的目標
python.console=Python 主控台
python.console.command.queue.add.title={0} 指令佇列
python.console.command.queue.got.it.tooltip.id=python.console.command.queue.show
python.console.command.queue.got.it.tooltip.text=指令佇列彈出視窗中列出了排隊等待執行的指令
python.console.command.queue.got.it.tooltip.title=主控台指令佇列
python.console.command.queue.show.action.description=顯示帶有指令佇列的視窗
python.console.command.queue.show.action.text=顯示指令佇列
python.console.history.root=Python 主控台
python.console.not.supported=不支持 {0} 解釋器的 Python 主控台
python.console.rename.message=輸入新主控台名稱:
python.console.run.anything.provider=執行 Python 主控台
python.console.toolbar.action.available.non.interactive=此動作不可用於非互動 shell 
python.debug.remote.name=PyRemoteDebug
python.debugger.attaching=正在附加偵錯器
python.debugger.attaching.to.process.with.pid=正在附加到 PID={0} 的程序
python.debugger.collection.signatures.deleted=收集的簽名已被刪除
python.debugger.nothing.to.delete=沒有要刪除的內容
python.debugger.qt.backend.auto=自動
python.debugger.settings.connecting.to.debugger=正在連線到偵錯器
python.debugger.settings.waiting.for.connection=正在等待連線…
python.execute.selection.action.execute.line.in.console=執行 Python 主控台中的程式碼行
python.execute.selection.action.execute.selection.in.console=在 Python 主控台中執行選區
python.facet.name=Python
python.find.module.usages.dialog.label.prefix.module=模組
python.find.module.usages.dialog.label.prefix.package=軟體套件
python.folding.options.title=Python
python.input.file.doesn.t.exist=輸入檔案不存在
python.install.framework.checking.is.installed=正在檢查是否已安裝 {0}…
python.install.framework.ensure.installed=正在確保 {0} 已安裝
python.install.framework.installing=正在安裝 {0}…
python.interpreter.banner.slogan=Python 解釋器 ''{0}''
python.interpreter.label=Python 解釋器:
python.interpreter.local.configurable.remove.association=移除關聯
python.interpreters.add.interpreter.action.text=新增新的解釋器
python.interpreters.remove.interpreter.action.text=移除解釋器
python.interpreters.rename.interpreter.action.text=重新命名
python.interpreters.rename.interpreter.dialog.message=新名稱:
python.interpreters.rename.interpreter.dialog.title=重新命名 Python 解釋器
python.interpreters.show.interpreter.paths.text=顯示解釋器路徑
python.introduce.variable.refactoring.name=引入變數
python.language.configure.label=Python 組態
python.language.run.label=執行 Python 應用程式
python.local.attach.group.name=Python
python.long.collection.literals=長集合文字
python.long.string.literals=長字串文字
python.module.description=Python 模組用於開發 <b>Python</b> 應用程式。
python.module.description.extended=支援的技術包括 <b>Django、Google App Engine、Jinja2</b> 等。
python.module.name=Python 模組
python.namespace.package.folder=命名空間軟體套件
python.namespace.packages.description=命名空間軟體套件目錄
python.namespace.packages.name=命名空間軟體套件
python.new.project.error.solution.another.sdk=選擇另一個 SDK
python.new.project.install.failed.title=安裝 {0} 失敗
python.new.project.more.settings=更多設定(&E)
python.new.project.remote.path.not.provided=未提供遠端路徑
python.new.project.synchronization.not.configured.dialog.message=本地/遠端同步組態不正確。\n{0}\n您可能需要手動同步本地專案和遠端專案。\n\n是否要繼續?\n\n選擇 ''是'' 將保留組態不當的映射，選擇 ''否'' 將開始手動組態過程。
python.new.project.synchronization.not.configured.dialog.title=未組態同步
python.package.and.packaging.tools.installation.notification.message=Python 打包工具和 {0} 將安裝在所選解釋器上
python.package.installation.notification.message={0} 將安裝在選定的解釋器上
python.packages.dictionary.name=Python 軟體套件字典
python.packages.no.details.in.repo=<html><head></head><body><p class="empty_description">無法從 {0} 讀取軟體套件描述。</p></body></html>
python.packaging.button.install.package=安裝軟體套件
python.packaging.choose.packages.to.install=選擇要安裝的軟體套件
python.packaging.collapse.options=<< 摺疊選項
python.packaging.command.line=命令行
python.packaging.could.not.parse.response=<html><head></head><body><p class="empty_description">無法為來自 {1} 儲存庫的軟體套件 {0} 解析響應</p></body></html>
python.packaging.create.setup.author=作者
python.packaging.create.setup.author.email=作者電子郵件
python.packaging.create.setup.description=描述
python.packaging.create.setup.license=授權
python.packaging.create.setup.package.name=軟體套件名稱
python.packaging.create.setup.py=建立 setup.py
python.packaging.create.setup.url=URL
python.packaging.create.setup.version=版本
python.packaging.dialog.description.attempt.to.uninstall.for.one.dependent.package=您將要移除 {1} {2, choice, 1#軟體套件|2#軟體套件}所需的 {0} 軟體套件。\n\n是否要繼續?
python.packaging.dialog.description.attempt.to.uninstall.for.several.dependent.packages=您將要移除其他軟體套件所需的軟體套件。\n\n{0}\n\n是否要繼續?
python.packaging.dialog.description.attempt.to.uninstall.for.several.dependent.packages.single.package.description={0} -> {1}
python.packaging.dialog.message.install.package.confirmation=您正在安裝軟體套件 <b>{0}</b>。請確保軟體套件名稱正確。\n\n要繼續嗎?
python.packaging.dialog.title.install.package.confirmation=確認軟體套件安裝
python.packaging.enter.setup.py.task=輸入 setup.py 任務名稱
python.packaging.expand.options=展開選項 >>
python.packaging.failed.to.install.packages.title=無法安裝軟體套件
python.packaging.failed.to.install.packaging.tools.title=無法安裝 Python 打包工具
python.packaging.failed.to.run.task=無法執行任務: {0}
python.packaging.install=安裝
python.packaging.install.packaging.tools=安裝打包工具
python.packaging.install.progress=正在安裝軟體套件 {0}
python.packaging.installing.packages=正在安裝軟體套件…
python.packaging.installing.packaging.tools=正在安裝打包工具…
python.packaging.interpreter.widget.manage.packages=管理軟體套件…
python.packaging.list.progress=正在讀取已安裝的 Python 軟體套件
python.packaging.loading.packages.progress.text=正在載入軟體套件…
python.packaging.no.tasks.found=找不到任務
python.packaging.notification.deleted=軟體套件 {0} 已刪除
python.packaging.notification.description.details.link=詳細資訊…
python.packaging.notification.description.installed.all.requirements=已安裝所有要求
python.packaging.notification.description.installed.packages=已安裝的軟體套件: {0}
python.packaging.notification.description.installed.python.packaging.tools=已安裝 Python 打包工具
python.packaging.notification.description.uninstalled.packages=已移除軟體套件: {0}
python.packaging.notification.installed=軟體套件 {0} 已安裝
python.packaging.notification.title.error.occurred={0}: 發生錯誤。
python.packaging.notification.title.install.packages.failed=安裝軟體套件失敗
python.packaging.notification.title.packages.installed.successfully=已成功安裝軟體套件
python.packaging.notification.title.packages.uninstalled.successfully=已成功移除軟體套件
python.packaging.notification.title.uninstall.packages.failed=移除軟體套件失敗
python.packaging.notification.update.failed=無法更新 {0}
python.packaging.notification.updated=軟體套件 {0} 已更新至版本 {1}
python.packaging.open.toolwindow.link=轉到工具視窗
python.packaging.operation.failed.title=打包動作失敗
python.packaging.progress.text.installing.specific.package=正在安裝軟體套件 ''{0}''…
python.packaging.progress.title.installing.packages=正在安裝軟體套件
python.packaging.progress.title.uninstalling.packages=正在移除軟體套件
python.packaging.repository.form.authorization=授權:
python.packaging.repository.form.authorization.basic=基本 HTTP
python.packaging.repository.form.authorization.none=無
python.packaging.repository.form.default.name=軟體套件儲存庫
python.packaging.repository.form.login=登入名:
python.packaging.repository.form.password=密碼:
python.packaging.repository.form.url=儲存庫 URL:
python.packaging.repository.manage.dialog.name=Python 軟體套件儲存庫
python.packaging.run.setup.py.task=執行 setup.py 任務…
python.packaging.run.setup.task.0=執行安裝任務 {0}
python.packaging.toolwindow.advertisement=在 Python 軟體套件工具視窗中嘗試重新設計的打包支援。
python.packaging.uninstall.progress=正在移除軟體套件 {0}
python.packaging.update.progress=正在更新軟體套件 {0}
python.packaging.warning=警告
python.project.view.py.skeletons=二進制框架
python.project.view.remote.libraries=遠端庫
python.project.view.typeshed.stubs=Typeshed 存根
python.project.view.user.skeletons.node=擴展定義
python.provide.a.qualified.name.of.a.module=提供模組的限定名稱
python.pyproject.install.package=安裝軟體套件 {0}
python.pyproject.install.self.as.editable=執行 'pip install -e .'
python.pyproject.install.self.as.editable.progress=正在執行 'pip install -e .'
python.pyproject.install.self.error=執行 'pip install -e .' 時出錯
python.pyproject.package.completion.tail=Python 軟體套件
python.pyproject.package.not.installed=未安裝軟體套件 {0}
python.python.namespace.package.folder=Python 命名空間軟體套件
python.remote.interpreter.can.t.create.project.this.type=無法在遠端解釋器上建立此類型的專案。選擇本地解釋器。
python.remote.process.starter.can.t.run.remote.interpreter=無法執行遠端 Python 解釋器: {0}
python.rename.processor.override.message=類別 {1} 的方法 {0}\n重寫了類別 {2} 的方法。\n是否要重新命名基方法?
python.rename.processor.property=是否要重新命名屬性 ''{0}'' 而不是其存取器函式 ''{1}''?
python.requirements.action.name=同步 Python 需求
python.requirements.analyzing.imports.title=正在分析專案中的匯入
python.requirements.balloon=同步 Python 需求
python.requirements.error.ends.with.slash=解析需求出錯: 檔案以 '/' 符號結尾。
python.requirements.error.no.interpreter=已組態同步需求所需的解釋器。
python.requirements.info.file.ref.dropped=基本檔案中的某些需求未更新: {0}
python.requirements.keep.matching.specifier=如果現有版本與當前版本相符合，則保留現有版本說明符
python.requirements.modify.base.files=修改基本檔案(使用 -r 或 --requirement 定義的檔案)
python.requirements.remove.unused=移除未使用的需求
python.requirements.version.label=需求版本:
python.requirements.version.separator.compatible=相容版本
python.requirements.version.separator.gte=大於或等於
python.requirements.version.separator.no.version=不指定版本
python.requirements.version.separator.strong.eq=強相等
python.requirements.warning.unhandled.lines=無法分析需求檔案中的條目: {0}
python.run.anything.conda.provider=執行 conda 指令
python.run.anything.file.provider=執行 Python 檔案
python.run.anything.pip.provider=執行 pip 指令
python.run.configuration=Python 執行組態
python.run.configuration.fragments.chooser.hint=執行 Python 腳本或模組
python.run.configuration.fragments.content.roots=將內容根新增到 PYTHONPATH
python.run.configuration.fragments.content.roots.hint=將內容根新增到 PYTHONPATH
python.run.configuration.fragments.custom.field.hint=自訂執行目標
python.run.configuration.fragments.emulate.terminal=在輸出主控台中模擬終端
python.run.configuration.fragments.emulate.terminal.hint=在輸出主控台中模擬終端
python.run.configuration.fragments.interpreter.field=Python 解釋器
python.run.configuration.fragments.interpreter.options=解釋器選項
python.run.configuration.fragments.interpreter.options.hint=Python 解釋器選項
python.run.configuration.fragments.interpreter.options.placeholder=解釋器選項
python.run.configuration.fragments.module.name.hint=模組名稱
python.run.configuration.fragments.plugin.sdk.chooser.hint=Python 解釋器
python.run.configuration.fragments.plugin.sdk.of.module=使用模組的 SDK
python.run.configuration.fragments.plugin.sdk.of.module.hint=選擇模組
python.run.configuration.fragments.plugin.specified.interpreter=使用指定的解釋器
python.run.configuration.fragments.plugin.specified.interpreter.hint=選擇 Python 解釋器
python.run.configuration.fragments.project=專案
python.run.configuration.fragments.project.hint=選擇專案
python.run.configuration.fragments.python.group=Python
python.run.configuration.fragments.run.with.python.console=使用 Python 主控台執行
python.run.configuration.fragments.run.with.python.console.hint=在 Python 主控台中執行執行組態
python.run.configuration.fragments.script.parameters=參數
python.run.configuration.fragments.script.parameters.hint=腳本參數
python.run.configuration.fragments.script.path.hint=Python 腳本的路徑
python.run.configuration.fragments.source.roots=將來源根新增到 PYTHONPATH
python.run.configuration.fragments.source.roots.hint=將來源根新增到 PYTHONPATH
python.run.python=Python
python.run.select.script=選擇腳本
python.sdk.action.add.interpreter.based.on.target.text={0}…
python.sdk.action.add.local.interpreter.text=新增本地解釋器…
python.sdk.action.add.new.interpreter.text=新增新的解釋器
python.sdk.add.python.interpreter.title=新增 Python 解釋器
python.sdk.admin.permissions.needed.consider.creating.venv=<html><strong>註</strong>: 您需要具備管理員權限才能為此解釋器安裝軟體套件。不妨改為按專案建立虛擬環境。</html>
python.sdk.admin.permissions.needed.consider.creating.venv.content=<strong>註</strong>: 您需要具備管理員權限才能為此解釋器安裝軟體套件。不妨改為按專案建立虛擬環境。
python.sdk.can.t.obtain.python.version=無法獲取 Python 版本
python.sdk.cannot.evaluate.sdk.version.error.message=無法評估 sdk 版本
python.sdk.cannot.setup.sdk=無法在 {0} 設定 Python SDK。\n該 SDK 似乎無效。
python.sdk.choose.valid.interpreter=選擇有效的 Python 解釋器
python.sdk.common.options.environment=環境
python.sdk.conda.cant.create.body=錯誤是: ''{0}''
python.sdk.conda.cant.create.title=Conda 無法建立新環境
python.sdk.conda.env=環境
python.sdk.conda.getting.list.envs=正在獲取 conda 環境列表
python.sdk.conda.no.exec=找不到 Conda 可執行檔案
python.sdk.conda.path=Conda 可執行檔案:
python.sdk.conda.problem.env.empty.invalid=環境名稱為空或無效
python.sdk.conda.problem.env.name.used=此名稱已被使用。請選擇其他名稱。
python.sdk.conda.problem.running=執行 Conda 時出現問題
python.sdk.configurable.name=Python SDK
python.sdk.configuration.tab.title=類別
python.sdk.creating.conda.environment.sentence=正在建立 conda 環境
python.sdk.creating.conda.environment.title=正在建立 Conda 環境
python.sdk.dialog.message.cannot.find.script.file.please.run.poetry.install.before.executing.scripts=找不到腳本檔案\n請在執行腳本之前執行 'poetry install'
python.sdk.dialog.message.creating.virtual.environments.based.on.poetry.environments.not.supported=不支持基於 Poetry 環境建立虛擬環境
python.sdk.dialog.title.poetry.scripts=Poetry 腳本
python.sdk.dialog.title.setting.up.poetry.environment=正在設定 Poetry 環境
python.sdk.directory.macro.description=此目錄包含為專案選擇的 Python 解釋器
python.sdk.directory.not.found=找不到目錄 {0}
python.sdk.download.failed.message=連線超時。\n請檢查互聯網連線並重試
python.sdk.download.failed.title={0} 下載失敗
python.sdk.empty.version.string=Python 解釋器將空輸出作為版本字串返回
python.sdk.environment.yml.chooser=選擇 environment.yml
python.sdk.environment.yml.label=environment.yml
python.sdk.error.invalid.interpreter.name=Python 解釋器名稱 ''{0}'' 無效!
python.sdk.executable.not.found.header=找不到 Python 可執行檔案。選擇以下選項之一:
python.sdk.executable.not.found.option.download.and.install=點擊 {0} 從 python.org 下載並安裝 Python ({1})
python.sdk.executable.not.found.option.install.or.brew=從 python.org 或通過 Homebrew 手動安裝 Python
python.sdk.executable.not.found.option.install.with.cldt=點擊 {0}，使用命令行開發者工具安裝 Python: {1}
python.sdk.executable.not.found.option.specify.path=點擊 {0} 以指定 {1} 在檔案系統中的路徑
python.sdk.failed.to.create.interpreter.title=無法建立解釋器
python.sdk.finish=完成
python.sdk.getting.remote.interpreter.version=正在獲取遠端解釋器版本
python.sdk.inspection.message.poetry.interpreter.associated.with.another.project=Poetry 解釋器與另一個 {0} 關聯: {1}
python.sdk.inspection.message.poetry.interpreter.not.associated.with.any.project=Poetry 解釋器未與任何 {0} 關聯
python.sdk.inspection.message.version.outdated.latest=''{0}'' 版本 {1} 已過時(最新: {2})
python.sdk.install.requirements.from.pipenv.lock=Pipfile.lock 中的安裝要求
python.sdk.installation.balloon.error.action=檢視文檔
python.sdk.installation.balloon.error.message=<b>Python 安裝中斷</b><br/>從 python.org 手動下載 Python，安裝並組態專案解釋器。
python.sdk.installation.cancelled.message=被使用者取消
python.sdk.installation.failed.title={0} 安裝失敗
python.sdk.installation.notification.group=Python 解釋器安裝
python.sdk.installing=正在安裝 {0}
python.sdk.intention.family.name.install.requirements.from.poetry.lock=poetry.lock 中的安裝要求
python.sdk.interpreter.executable.path.title=Python 解釋器可執行檔案路徑
python.sdk.invalid.python.sdk=無效的 Python SDK
python.sdk.new.environment.kind=新 {0} 環境
python.sdk.new.project.environment=環境:
python.sdk.new.project.environment.type=環境類型:
python.sdk.next=下一個
python.sdk.no.interpreter.configured.warning=未為此專案組態 Python 解釋器
python.sdk.no.interpreter.selection=未選擇 Python 解釋器
python.sdk.non.zero.exit.code=Python 解釋器程序以非零退出程式碼 {0} 退出
python.sdk.pipenv.associated.module=關聯模組:
python.sdk.pipenv.associated.project=關聯專案:
python.sdk.pipenv.executable=Pipenv 可執行檔案:
python.sdk.pipenv.executable.not.found=找不到 Pipenv 可執行檔案
python.sdk.pipenv.execution.exception.error.running.pipenv.message=執行 Pipenv 時出錯
python.sdk.pipenv.execution.exception.no.pipenv.message=找不到 Pipenv
python.sdk.pipenv.execution.exception.no.project.message=找不到與此 Pipenv 環境關聯的專案
python.sdk.pipenv.has.been.selected=已新增 Pipenv 解釋器，選擇解釋器列表中的 ''{0}''
python.sdk.pipenv.pip.file.lock.not.found=找不到 Pipfile.lock
python.sdk.pipenv.pip.file.lock.out.of.date=Pipfile.lock 過期
python.sdk.pipenv.pip.file.notification.content=執行 <a href='#lock'>pipenv lock</a> 或 <a href='#update'>pipenv update</a>
python.sdk.pipenv.pip.file.notification.locking=正在鎖定 Pipfile
python.sdk.pipenv.pip.file.notification.updating=正在更新 Pipenv 環境
python.sdk.pipenv.pip.file.watcher=Pipfile 觀察程序
python.sdk.pipenv.quickfix.fix.pipenv.name=修復 Pipenv 解釋器
python.sdk.pipenv.quickfix.use.pipenv.name=使用 Pipenv 解釋器
python.sdk.pipenv.select.executable.title=選擇 Pipenv 可執行檔案的路徑
python.sdk.poetry.action.run.script.text=執行 ''{0}''
python.sdk.poetry.associated.module=關聯模組:
python.sdk.poetry.associated.project=關聯專案:
python.sdk.poetry.dialog.message.poetry.interpreter.has.been.already.added=已新增 Poetry 解釋器，選擇 ''{0}''
python.sdk.poetry.environment.panel.title=Poetry 環境
python.sdk.poetry.executable=Poetry 可執行檔案:
python.sdk.poetry.executable.not.found=找不到 Poetry 可執行檔案
python.sdk.poetry.execution.exception.error.running.poetry.message=執行 Poetry 時出錯
python.sdk.poetry.execution.exception.no.poetry.message=找不到 Poetry
python.sdk.poetry.execution.exception.no.project.message=找不到與此 Poetry 環境關聯的專案
python.sdk.poetry.install.packages.from.toml.checkbox.text=從 pyproject.toml 安裝軟體套件
python.sdk.poetry.pip.file.lock.not.found=找不到 poetry.lock
python.sdk.poetry.pip.file.lock.out.of.date=poetry.lock 已過期
python.sdk.poetry.pip.file.notification.content=執行 <a href='#lock'>poetry lock</a> 或 <a href='#update'>poetry update</a>
python.sdk.poetry.pip.file.notification.content.without.updating=執行 <a href='#lock'>poetry lock</a>、<a href='#noupdate'>poetry lock --no-update</a> 或 <a href='#update'>poetry update</a>
python.sdk.poetry.pip.file.notification.locking=正在鎖定 poetry.lock
python.sdk.poetry.pip.file.notification.locking.without.updating=正在鎖定 poetry.lock 而不更新
python.sdk.poetry.pip.file.notification.updating=正在更新 Poetry 環境
python.sdk.poetry.pip.file.watcher=pyproject.toml 觀察程序
python.sdk.poetry.quickfix.fix.pipenv.name=修正 Poetry 解釋器
python.sdk.poetry.quickfix.use.pipenv.name=使用 Poetry 解釋器
python.sdk.poetry.select.executable.title=選擇 Poetry 可執行檔案的路徑
python.sdk.popup.add.interpreter=新增解釋器…
python.sdk.popup.interpreter.settings=解釋器設定…
python.sdk.previous=上一個
python.sdk.python.interpreter.title.0=Python 解釋器: {0}
python.sdk.rendering.project.default=專案預設設定
python.sdk.rendering.project.default.0=專案預設值 ({0})
python.sdk.scanning.installed.packages=正在掃描已安裝的軟體套件…
python.sdk.select.conda.path.title=選擇 Conda 可執行檔案路徑
python.sdk.select.location.for.conda.title=選擇 Conda 環境的位置
python.sdk.setting.up.pipenv.sentence=正在設定 pipenv 環境
python.sdk.setting.up.pipenv.title=正在設定 Pipenv 環境
python.sdk.switch.to=切換到 {0}
python.sdk.there.is.no.interpreter=無解釋器
python.sdk.try.to.install.manually=嘗試手動安裝 {0}。
python.sdk.unpacking.pre.generated.skeletons=正在解壓縮預生成的框架…
python.sdk.updater.notifications.group.title=Python 解釋器更新失敗
python.sdk.updating.skeletons=正在更新框架…
python.sequential.comments=順序註釋
python.symbol.chooser.dialog.title=選擇符號
python.task.cannot.find.python.interpreter.for.selected.module=找不到所選模組的 Python 解釋器
python.template.language.none=無
python.template.select.file.type=選擇檔案類型
python.testing.cant.find.where.declared=在宣告 {0} 的位置找不到檔案。確保它存在於專案根目錄中
python.testing.cant.get.importable.name=無法獲得 {0} 的可匯入名稱。它是專案中的 Python 檔案嗎?
python.testing.cant.resolve=無法解析 {0}。嘗試移除組態並再次生成
python.testing.pattern.can.only.be.used=模式只能用於匹配一個目錄中的多個檔案。無法對一個檔案使用模式。
python.testing.provide.qualified.name=提供函式、類別或模組的限定名稱
python.testing.target.not.provided=未提供該目標
python.toolwindow.packages.add.package.action=新增軟體套件
python.toolwindow.packages.add.package.as.editable=作為 editable (-e)安裝
python.toolwindow.packages.add.package.dialog.title=安裝軟體套件
python.toolwindow.packages.add.package.from.disc=從磁碟
python.toolwindow.packages.add.package.from.vcs=從版本控制
python.toolwindow.packages.add.package.path=路徑:
python.toolwindow.packages.add.package.path.selector=選擇檔案或目錄
python.toolwindow.packages.add.package.vcs.bzr=Bazaar
python.toolwindow.packages.add.package.vcs.git=Git
python.toolwindow.packages.add.package.vcs.hg=Mercurial
python.toolwindow.packages.add.package.vcs.svn=Subversion
python.toolwindow.packages.converting.description.progress=正在讀取軟體套件描述
python.toolwindow.packages.custom.repo.invalid={0}(授權失敗)
python.toolwindow.packages.custom.repo.searched={0} (找到 {1} 個)
python.toolwindow.packages.delete.package=刪除軟體套件
python.toolwindow.packages.description.panel.placeholder=選擇軟體套件以檢視文檔
python.toolwindow.packages.documentation.link=文檔
python.toolwindow.packages.documentation.local.interpreter=PyCharm 至少需要一個本地解釋器才能顯示軟體套件文檔。
python.toolwindow.packages.install.link=安裝
python.toolwindow.packages.installed.label=已安裝
python.toolwindow.packages.latest.version.label=最新
python.toolwindow.packages.load.more=… 其他 {0} 個條目。雙擊以顯示更多。
python.toolwindow.packages.manage.repositories.action=管理儲存庫
python.toolwindow.packages.no.description.placeholder=<html><head></head><body><p class="empty_description">軟體套件作者未提供描述。</p></body></html>
python.toolwindow.packages.no.interpreter.text=選擇解釋器以檢視所安裝的軟體套件
python.toolwindow.packages.reload.repositories.action=重新載入所有儲存庫
python.toolwindow.packages.rst.parsing.failed=無法解析描述
python.toolwindow.packages.search.text.placeholder=搜尋更多軟體套件
python.type.annotations=類型註解
python.unknown.project.synchronizer.this.interpreter.type.does.not.support.remote.project.creation=此解釋器類型不支持建立遠端專案
python.unmark.as.namespace.package=取消標記為命名空間軟體套件
python.unmark.as.python.namespace.package=取消標記為 Python 命名空間軟體套件
python.unresolved.reference.inspection.install.package=安裝軟體套件 {0}
python.vagrant.refresh.skeletons=啟動 vagrant 並重新整理框架
refactoring.change.signature.dialog.default.value.checkbox=在簽名中使用預設值:
refactoring.change.signature.dialog.name.label=名稱:
refactoring.change.signature.dialog.validation.default.missing=缺少預設值
refactoring.change.signature.dialog.validation.function.name=函式名稱不正確
refactoring.change.signature.dialog.validation.multiple.double.star=不允許多個 ** 實參
refactoring.change.signature.dialog.validation.multiple.star=不允許多個 * 實參
refactoring.change.signature.dialog.validation.name.defined=名稱已在作用域中定義
refactoring.change.signature.dialog.validation.parameter.missing=缺少參數名稱
refactoring.change.signature.dialog.validation.parameter.name=參數名稱不正確
refactoring.change.signature.error.lambda.call=文字游標位於 lambda 呼叫上
refactoring.change.signature.error.not.under.source.root=該函式不在來源根下
refactoring.change.signature.error.tuple.parameters=該函式包含元組參數
refactoring.change.signature.error.wrong.caret.position.method.name=文字游標應置於要重構的方法的名稱處
refactoring.change.signature.find.usages.of.base.class=類別 {1} 的方法 {0}\n覆寫類別 {2} 的方法。\n是否要重構基方法?
refactoring.change.signature.suggested.callSite.value=呼叫點的值
refactoring.change.signature.suggested.callSite.value.optional=呼叫點的可選值
refactoring.change.signature.usage.view.declarations.header=要重構的函式
refactoring.convert.package.to.module.error.not.empty.package=軟體套件“{0}”不為空
refactoring.error.directory.exists=目錄“{0}”已存在
refactoring.error.file.exists=檔案“{0}”已存在
refactoring.extract.parameter.dialog.title=提取參數
refactoring.extract.super.class.no.members.allowed=無法提取任何成員
refactoring.extract.super.name.0.must.be.ident=名稱 ''{0}'' 無效。必須為有效的 Python 關鍵字
refactoring.extract.super.target.class.already.exists=此模組中已存在類別 ''{0}''
refactoring.extract.super.target.path.outside.roots=該目標目錄在專案外部。必須在內容根內
refactoring.introduce.field.cannot.be.used.in.static.methods=static 方法中不能使用引入欄位重構
refactoring.introduce.field.not.in.class=無法引入該欄位: 不在類別中
refactoring.introduce.field.setup.method=setUp() 方法
refactoring.introduce.parameter.dialog.title=引入參數
refactoring.make.function.top.level.error.attribute.writes=無法移動寫入實例特性的方法
refactoring.make.function.top.level.error.method.calls=無法移動呼叫該類其他方法的方法
refactoring.make.function.top.level.error.nonlocal.writes=無法移動包含非區域寫入的函式
refactoring.make.function.top.level.error.outer.scope.reads=無法移動參照外部作用域中的名稱的方法
refactoring.make.function.top.level.error.private.attributes=無法移動參照私有實例特性的方法
refactoring.make.function.top.level.error.self.reads=無法移動外部作用域中包含 "self" 參數用法的函式
refactoring.make.function.top.level.error.special.usage.of.self=無法移動包含 "self" 參數特殊用法的方法
refactoring.make.local.function.top.level.dialog.description=將區域函式 {0} 移至頂層
refactoring.make.local.function.top.level.dialog.title=使之為頂層區域函式
refactoring.make.method.top.level.dialog.description=將方法 {0} 移至頂層
refactoring.make.method.top.level.dialog.title=使之為頂層方法
refactoring.move.choose.destination.file.title=選擇目標檔案
refactoring.move.error.cannot.use.module.name=不能在匯入中使用模組名稱 ''{0}''
refactoring.move.error.destination.file.contains.class=目標檔案已包含名稱為 ''{0}'' 的類別
refactoring.move.error.destination.file.contains.function=目標檔案已包含名稱為 ''{0}'' 的函式
refactoring.move.error.destination.file.contains.global.variable=目標檔案已包含名稱為 ''{0}'' 的全域變數
refactoring.move.module.members=移動模組成員
refactoring.move.module.members.dialog.description.class=移動類別 {0}
refactoring.move.module.members.dialog.description.function=移動函式 {0}
refactoring.move.module.members.dialog.description.selection=移動所選元素
refactoring.move.module.members.dialog.description.variable=移動全域變數 {0}
refactoring.move.module.members.dialog.table.title=批量移動(&M)
refactoring.move.module.members.dialog.title=移動模組成員
refactoring.move.module.members.error.selection=無法使用所選元素執行重構
refactoring.move.module.members.error.selection.empty=未選擇任何成員
refactoring.occurrences.count={0} ({1} 個匹配項)
refactoring.pull.up.dialog.members.to.be.moved=將移動以下成員
refactoring.pull.up.dialog.move.members.to.class=將成員移至類別
refactoring.pull.up.dialog.title=向上拉取成員至
refactoring.pull.up.error.cannot.perform.refactoring.no.base.classes=類別 {0} 沒有超類別，或者所有超類別都不能用於重構
refactoring.pull.up.error.cannot.perform.refactoring.not.inside.class=無法執行向上拉取成員: 不在此類別中
refactoring.rename=重新命名
refactoring.rename.containing.file=重新命名包含檔案
refactoring.rename.containing.file.entity.name=Include 檔案
refactoring.rename.containing.file.title=重新命名包含檔案
refactoring.rename.containing.file.with.the.following.name.to=將具有以下名稱的包含檔案重命名為:
refactoring.rename.inheritor.class.entity.name=繼承者類別
refactoring.rename.inheritor.classes.with.the.following.names.to=將具有以下名稱的繼承者類別重命名為:
refactoring.rename.inheritors=重新命名繼承者
refactoring.rename.inheritors.title=重新命名繼承者
refactoring.rename.not.valid.identifier=名稱 ''{0}'' 不是有效的 Python 關鍵字。無法更新 ''{1}'' 中的 import 語句
refactoring.rename.parameter.entity.name=參數
refactoring.rename.parameter.in.hierarchy.to=將層次結構中的參數重命名為:
refactoring.rename.parameters.in.hierarchy=重新命名層次結構中的參數
refactoring.rename.parameters.title=重新命名參數
refactoring.will.not.be.accessible=您在嘗試移動的成員依賴於在此重構後無法存取的 ''{0}''
remote.debug.local.host=IDE 主機名:
remote.debug.port=連接埠:
remote.debug.redirect.output=將輸出重新導向到主控台
remote.debug.server.hint=啟動此偵錯組態以啟動偵錯伺服器。
remote.debug.server.hint1.5=更新腳本:
remote.debug.server.hint2=1. 將 pydevd-pycharm.egg 從 PyCharm 安裝目錄新增到 Python 路徑或執行:
remote.debug.server.hint3=pip 安裝 pydevd-pycharm
remote.debug.server.hint4=2. 新增以下指令以連線至偵錯伺服器:
remote.debug.suspend.on.connect=連線後掛起
remote.interpreter.accessing.remote.interpreter.progress.title=正在存取遠端解釋器
remote.interpreter.configure.path.label=Python 解釋器路徑:
remote.interpreter.configure.path.title=選擇 Python 解釋器
remote.interpreter.configure.ssh.run_as_root_via_sudo.checkbox=使用此解釋器通過 sudo 以根權限執行程式碼
remote.interpreter.configure.ssh.run_as_root_via_sudo.help=僅在通過 SSH 連線啟動遠端解釋器時才呼叫 Sudo。這些檔案將通過使用者權限被複製到遠端伺服器。
remote.interpreter.configure.temp.files.path.label=PyCharm 幫助程序路徑:
remote.interpreter.configure.temp.files.path.title=為 PyCharm 幫助程序選擇目錄
remote.interpreter.configure.title=組態遠端 Python 解釋器
remote.interpreter.default.interpreter.path=/usr/bin/python
remote.interpreter.docker.default.interpreter.path=python
remote.interpreter.failed.to.obtain.credentials=無法獲取 Python SDK {0} 的連線憑證
remote.interpreter.feature.is.not.available=遠端解釋器功能不可用
remote.interpreter.remote.server.permissions=無法瀏覽遠端伺服器。確保您具備權限。
remote.interpreter.support.is.not.available={0} 支援不可用。\n請檢查相應延伸模組。
remote.interpreter.unspecified.interpreter.path=指定 Python 解釋器路徑
remote.interpreter.unspecified.temp.files.path=為 PyCharm 幫助程序指定路徑
remote.interpreter.unsupported.python.sdk.type=不受支援的 Python SDK 類型
remote.interpreter.wsl.default.interpreter.path=/usr/bin/python
remove.elif=移除 elif…
remove.else=移除 else…
rename.python.interpreter.dialog.provide.name.error.text=為 Python 解釋器提供一個名稱。
rename.python.interpreter.name.already.exists.error.text=已存在同名的 Python 解釋器。
rest.configuration.editor.open.output.file.in.browser.label.text=在瀏覽器中開啟輸出檔案
run.configuration.remote.debug.name=Python 遠端偵錯
run.configuration.remote.debug.visible.name=Python 偵錯伺服器
run.configuration.show.command.line.action.name=顯示偵錯主控台
run.configuration.type.description=啟動伺服器進行遠端偵錯
run.debug.shadowing.name.import.error.open.file=顯示 {0}
run.debug.shadowing.name.import.error.rename=重新命名 {0}
run.debug.shadowing.name.import.error.title=看起來 {0} 隱藏了標準庫檔名。這可能會導致意外的執行/偵錯動作行為
runcfg.autodetect.display_name=自動檢測
runcfg.autodetect.parameters.group.name=Python 測試
runcfg.captions.interpreter_options_dialog=輸入解釋器選項
runcfg.captions.script_parameters_dialog=輸入腳本參數
runcfg.doctest.display_name=Doctest
runcfg.error.message.cannot.find.python.interpreter=找不到此執行組態的 Python 解釋器
runcfg.error.message.failed.to.find.free.socket.port=找不到可用的套接字連接埠
runcfg.error.message.python.interpreter.is.invalid.configure=請<a href="#">重新組態</a> Python 解釋器
runcfg.labels.add.content.roots.to.pythonpath=將內容根新增到 PYTHONPATH
runcfg.labels.add.source.roots.to.pythonpath=將來源根新增到 PYTHONPATH
runcfg.labels.custom.name=自訂
runcfg.labels.environment_variables=環境變數(&E):
runcfg.labels.execution=執行
runcfg.labels.interpreter=使用指定的解釋器(&U):
runcfg.labels.interpreter_options=解釋器選項(&O):
runcfg.labels.module.name=模組名稱
runcfg.labels.path.mappings=路徑映射
runcfg.labels.project=專案(&J):
runcfg.labels.python.interpreter=Python 解釋器(&P):
runcfg.labels.script.path=腳本路徑
runcfg.labels.script_parameters=參數(&P):
runcfg.labels.use.sdk.of.module=使用模組的 SDK:
runcfg.labels.working_directory=工作目錄(&W):
runcfg.nosetests.config.regexPattern=正則表達式模式
runcfg.nosetests.display_name=Nosetest
runcfg.pytest.config.additional.arguments=其他實參
runcfg.pytest.config.additional.arguments.action.hint=指定額外的 pytest 命令行選項
runcfg.pytest.config.additional.arguments.hint=其他 pytest 選項
runcfg.pytest.config.keywords=關鍵字
runcfg.pytest.config.keywords.action.hint=按關鍵字表達式篩選測試
runcfg.pytest.config.keywords.hint=關鍵字篩選器
runcfg.pytest.config.parameters=參數
runcfg.pytest.config.parameters.action.hint=自訂測試參數
runcfg.pytest.config.parameters.hint=自訂測試參數
runcfg.pytest.config.parameters.label=Pytest 參數
runcfg.pytest.display_name=pytest
runcfg.pytest.parameters.group.name=Pytest
runcfg.python_tests.config.additionalArguments=其他實參
runcfg.python_tests.config.target=目標
runcfg.python_tests.config.targetType=目標類型
runcfg.test.description=PyCharm 支援 Python 框架
runcfg.test.display_name=Python 測試
runcfg.test.suggest.name.in.path={0} ({1} 內)
runcfg.test.suggest.name.in.python={1} 的 {0}
runcfg.test.unknown.group=未知
runcfg.testing.no.test.framework=在所選解釋器中未找到 {0} 執行程序
runcfg.tests.cant_rerun=無法重新執行測試，因為無法解析測試 ID。嘗試刪除執行組態，然後點擊右鍵以建立新組態。
runcfg.tests.empty_suite=空套件
runcfg.tox=tox
runcfg.tox.runner=tox 執行程序
runcfg.trial.display_name=Twisted Trial
runcfg.unittest.config.pattern=模式
runcfg.unittest.display_name=Unittest
runcfg.unittest.dlg.all_in_folder_title=目錄中的所有
runcfg.unittest.dlg.all_in_script_title=腳本
runcfg.unittest.dlg.class_label=類別:
runcfg.unittest.dlg.folder_path=目錄:
runcfg.unittest.dlg.function_label=函式:
runcfg.unittest.dlg.interpreter_options_title=解釋器選項:
runcfg.unittest.dlg.method_label=方法:
runcfg.unittest.dlg.pattern=模式:
runcfg.unittest.dlg.select.folder.path=選擇目錄路徑:
runcfg.unittest.dlg.select.script.path=選擇腳本路徑:
runcfg.unittest.dlg.test_class_title=類別
runcfg.unittest.dlg.test_function_title=函式
runcfg.unittest.dlg.test_method_title=方法
runcfg.unittest.dlg.test_script_label=腳本:
runcfg.unittest.dlg.test_type_title=測試:
runcfg.unittest.no_class_name=請指定類別名
runcfg.unittest.no_folder_name=請指定包含測試的目錄
runcfg.unittest.no_method_name=請指定方法名稱
runcfg.unittest.no_module_name=請指定模組的限定名稱
runcfg.unittest.no_module_sdk=請選擇包含有效 Python SDK 的模組
runcfg.unittest.no_script_name=請指定腳本名稱
runcfg.unittest.no_sdk=請指定 Python SDK
runcfg.unittest.no_valid_sdk=請選擇有效的 Python 解釋器
runcfg.unittest.suggest.name.in.class={0} ({1} 內)
runcfg.unittest.suggest.name.in.folder={0} ({1} 內)
runcfg.unittest.suggest.name.in.script={0} ({1} 內)
sdk.create.conda.executable.path=conda 路徑:
sdk.create.conda.install.fix=安裝 Miniconda
sdk.create.conda.missing.text=找不到 conda 可執行檔案。
sdk.create.custom.base.python=基礎 Python:
sdk.create.custom.conda=Conda
sdk.create.custom.conda.browse.title=選擇 Conda 可執行檔案
sdk.create.custom.conda.create.progress=正在建立 conda 解釋器
sdk.create.custom.conda.env.name=名稱:
sdk.create.custom.conda.refresh.envs=重新載入環境
sdk.create.custom.conda.select.progress=正在選擇 conda 解釋器
sdk.create.custom.develop.on=開發於:
sdk.create.custom.env.creation.type=環境:
sdk.create.custom.generate.new=生成新的
sdk.create.custom.inherit.packages=從基礎解釋器繼承軟體套件
sdk.create.custom.location=位置:
sdk.create.custom.make.available=可用於所有專案
sdk.create.custom.pipenv=Pipenv
sdk.create.custom.pipenv.missing.text=找不到 pipenv 可執行檔案。
sdk.create.custom.pipenv.path=pipenv 路徑:
sdk.create.custom.poetry=Poetry
sdk.create.custom.poetry.missing.text=找不到 Poetry 可執行檔案。
sdk.create.custom.poetry.path=poetry 路徑:
sdk.create.custom.python=Python
sdk.create.custom.python.browse.tooltip="選擇 Python 可執行檔案"
sdk.create.custom.python.path=Python 路徑:
sdk.create.custom.select.executable.link=選擇路徑
sdk.create.custom.select.existing=選擇現有
sdk.create.custom.type=類型:
sdk.create.custom.venv.environment.exists=指定目錄中已存在環境 "{0}"
sdk.create.custom.venv.folder.not.empty=指定的目錄已存在
sdk.create.custom.venv.location.browse.title=選擇 virtualenv 位置
sdk.create.custom.venv.select.existing.link=選擇現有解釋器
sdk.create.custom.venv.use.different.venv.link=使用 {0}
sdk.create.custom.virtualenv=Virtualenv
sdk.create.executable.directory.error=路徑不能是目錄
sdk.create.interpreter.type=解釋器類型:
sdk.create.not.executable.does.not.exist.error=可執行檔案不存在
sdk.create.not.executable.empty.error=指定可執行檔案的路徑
sdk.create.python.version=Python 版本:
sdk.create.simple.conda.hint=要建立新的 conda 環境或選擇現有環境，請繼續自定義環境
sdk.create.simple.venv.hint=Python 虛擬環境將在專案根目錄中建立: {0}.venv
sdk.create.targets.local=本地機器
sdk.create.tooltip.browse=瀏覽…
sdk.create.type.base.conda=基礎 conda
sdk.create.type.custom=自訂環境
sdk.create.type.project.venv=專案 venv
sdk.create.venv.conda.dialog.label.interpreter=解釋器:
sdk.create.venv.conda.dialog.label.location=位置:
sdk.create.venv.conda.dialog.label.python.version=Python 版本:
sdk.create.venv.dependencies.chooser=選擇 requirements.txt 或 setup.py
sdk.create.venv.dependencies.label=相依項:
sdk.create.venv.dialog.base.interpreter.label=基礎解釋器:
sdk.create.venv.dialog.interpreter.label=解釋器:
sdk.create.venv.dialog.label.inherit.global.site.packages=繼承全域站點軟體套件
sdk.create.venv.dialog.location.label=位置:
sdk.create.venv.environment.label=環境:
sdk.create.venv.existing.option.label=現有
sdk.create.venv.new.option.label=新增
sdk.details.dialog.error.duplicate.name=為解釋器指定唯一名稱
sdk.details.dialog.hide.all.virtual.envs=隱藏與其他專案關聯的虛擬環境
sdk.details.dialog.show.interpreter.paths=顯示所選解釋器的路徑
sdk.details.dialog.title=Python 解釋器
sdk.details.step.add=新增…
sdk.details.step.show.all=全部顯示…
sdk.edit.dialog.associate.virtual.env.current.project=關聯此環境與當前專案
sdk.edit.dialog.associate.virtual.env.with.path=關聯此虛擬環境與 {0}
sdk.edit.dialog.specify.interpreter.path=指定解釋器路徑
sdk.edit.dialog.title=編輯 Python 解釋器
sdk.gen.cannot.create.skeleton.dir=無法建立框架目錄 {0}
sdk.gen.cleaning.up=正在清理框架…
sdk.gen.failed.notification.title=無法重新整理遠端解釋器的框架
sdk.gen.launching.generator=正在啟動框架產生器…
sdk.gen.reloading=正在重新載入生成的框架…
sdk.gen.stubs.for.binary.modules=生成二進制模組 {0} 的存根
sdk.gen.unpacking.prebuilt=正在解壓縮預建置框架…
sdk.gen.updating.interpreter=正在更新 Python 解釋器
sdk.has.been.configured.as.the.project.interpreter={0} 已被組態為專案解釋器
sdk.has.been.configured.notification.name=已組態 Python 解釋器
sdk.paths.dialog.added.by.user.suffix=(使用者已新增)
sdk.paths.dialog.reload.paths=重新載入路徑列表
sdk.paths.dialog.removed.by.user.suffix=(使用者已移除)
sdk.paths.dialog.title=解釋器路徑
sdk.rendering.detected.grey.text=在系統中檢測到
sdk.rendering.installable.grey.text=下載並安裝
sdk.scanning.installed.packages=正在掃描已安裝的軟體套件
sdk.select.path=選擇 Python 解釋器
sdk.some.skeletons.failed=無法生成某些框架
sdk.updating.interpreter.paths=正在更新解釋器路徑…
sdk.updating.interpreter.version=正在更新解釋器版本…
settings.completion.ml.python.display.name=Python
settings.default.remote.interpreter=預設 Python 遠端解釋器
settings.postfix.choose.class.action.name=選擇類別…
settings.postfix.choose.class.prompt.text=選擇類別
settings.postfix.enter.class.action.name=輸入類別名…
settings.postfix.enter.class.dialog.name=選擇類別
settings.postfix.enter.fully.qualified.class.name=輸入完全限定類別名
show.expression.type.no.expression.found=找不到表達式
smartKeys.insert.self.in.method=定義方法時插入 'self'
smartKeys.insert.type.placeholder.in.docstring.stub=在文檔註釋存根中插入類型佔位符
smartKeys.wrap.in.parentheses.instead.of.backslash=使用括號代替反斜杠來換行
sphinx.ask.for.working.directory.label.text=Sphinx 工作目錄
switch.python.interpreter=切換 Python 解釋器
toolwindow.stripe.Jupyter_Variables=Jupyter 變數
toolwindow.stripe.Python_Console=Python 主控台
toolwindow.stripe.Python_Packages=Python 軟體套件
toolwindow.stripe.SciView=SciView
unable.to.stop=無法停止當前正在執行的程序。先手動終止此程序。
unwrap.elif=解包 elif…
unwrap.else=解包 else…
unwrap.for=解包 for…
unwrap.if=解包 if…
unwrap.try=解包 try…
unwrap.while=解包 while…
unwrap.with=解包 with…
vcs.activate.virtualenv.checkbox.text=為掛鈎啟用 Virtualenv
windowWithActions.closeWindow=關閉視窗
windowWithActions.stopProcess=停止當前執行的程序