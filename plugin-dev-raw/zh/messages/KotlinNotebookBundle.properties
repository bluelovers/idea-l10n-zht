action.CopyLetsPlot.description=將此圖複製到剪貼簿
action.CopyLetsPlot.text=複製圖
action.CreateNewKotlinNotebook.description=建立新的 Kotlin Notebook
action.CreateNewKotlinNotebook.text=Kotlin Notebook
action.CreateNewScratchKotlinNotebook.error.dialog.text=無法建立 Kotlin Notebook 檔案。錯誤\: {0}
action.ExportLetsPlot.description=將此圖儲存到檔案
action.ExportLetsPlot.description.multiple=將這些圖儲存到檔案
action.ExportLetsPlot.text=將圖另存為…
action.ExportLetsPlot.text.multiple=將圖另存為…
action.RestartKotlinNotebookHighlighting.text=在 Kotlin Notebook 中重新啟動醒目提示
action.SelectKotlinNotebookModuleDependencies.description=這可能導致在專案檔案更改後，在執行單元之前呼叫建置
action.SelectKotlinNotebookModuleDependencies.text=選擇要在 Notebook 中使用的模組
action.SelectKotlinNotebookProjectLibraries.text=選擇要新增到 Notebook 類別路徑的專案庫
action.ShowKotlinNotebookPreferencesAction.description=編輯 Kotlin Notebook 延伸模組設定
action.ShowKotlinNotebookPreferencesAction.text=Kotlin Notebook 延伸模組設定…
action.ToggleShowExecutionCount.text=顯示執行計數
checkbox.resolve.multiplatform=解析多平台依賴性
checkbox.resolve.sources=解析源
checkbox.should.add.libraries=將專案庫新增到 notebook 類別路徑
checkbox.should.build.project=允許在 Notebook 中使用專案符號
checkbox.should.build.project.comment=這可能導致在專案檔案更改後，在執行單元之前呼叫建置
checkbox.should.show.execution.count=顯示執行計數
checkbox.should.show.foldable.regions=顯示可折疊區域
checkbox.should.typehint.only.active.cell=僅為有效單元套用提供程序
group.KotlinNotebookSettingsActions.text=Kotlin Notebook 設定
inlay.hint.description.prefix=在 Kotlin Notebook 中顯示 {0} 的嵌入提示
jkt.meta.description.classpath=顯示當前類別路徑
jkt.meta.description.dumpClassesForSpark=將編譯後的 REPL 類別存儲在特殊目錄中，以便與 Spark 整合
jkt.meta.description.help=顯示幫助
jkt.meta.description.logHandler=管理日誌記錄處理程序
jkt.meta.description.logLevel=設定日誌記錄級別
jkt.meta.description.output=管理輸出捕獲設定
jkt.meta.description.trackClasspath=記錄類別路徑更改。適用於偵錯工件解析失敗
jkt.meta.description.trackExecution=記錄正在執行的程式碼。適用於偵錯庫支援
jkt.meta.description.use=為支援的庫注入程式碼\: 工件解析、預設 import、初始化程式碼、類型呈現器
jkt.meta.description.useLatestDescriptors=使用最新可用版本的庫檔案描述子。預設情況下，會使用捆綁的檔案描述子
jkt.meta.description.vars=獲取可視變量值
jupyterkotlin.file.type.description=提供對 Kotlin Notebook 的支援。
kotlin.jupyter.action.create.notebook.dialog.kind=新增 Kotlin Notebook
kotlin.jupyter.action.create.notebook.dialog.title=新增 Kotlin Notebook
kotlin.jupyter.action.create.notebook.name=建立 Kotlin Notebook {0}
kotlin.jupyter.debug.node.default.message=變數不可用
kotlin.jupyter.debug.node.empty.no.connection.message=變數不可用，未建立連線
kotlin.jupyter.debug.node.empty.not.attached.message=變數不可用，程序未附加
kotlin.jupyter.debug.node.no.context.message=如果沒有 suspend 上下文，計算將不可用
kotlin.jupyter.debug.node.rebuild.message=連線建立後變數將被重新建置
kotlin.jupyter.debug.support.text=在 Kotlin Notebook 中偵錯正處於開發階段。部分功能未完全支援
kotlin.jupyter.dependencies.build.error.outdated=由於建置失敗，將使用過時的相依項。不能保證執行結果。
kotlin.jupyter.dependencies.build.error.severe=由於建置錯誤，無法提供或取代專案級相依項。請考慮修正建置。
kotlin.jupyter.dependencies.build.error.throwable=在會話初始化期間無法提供專案級相依項。單元執行中止。
kotlin.jupyter.dialog.outputs.plot.export.directory=輸出檔案目錄\:
kotlin.jupyter.dialog.outputs.plot.export.directory.comment=始終預設為 Notebook 目錄。
kotlin.jupyter.dialog.outputs.plot.export.directory.multiple=輸出檔案目錄\:
kotlin.jupyter.dialog.outputs.plot.export.file.name=檔名\:
kotlin.jupyter.dialog.outputs.plot.export.file.name.comment=使用可選的 {0} 作為圖編號，這是多圖所必需的。
kotlin.jupyter.dialog.outputs.plot.export.file.name.multiple=檔名模板\:
kotlin.jupyter.dialog.outputs.plot.export.format=格式\:
kotlin.jupyter.dialog.outputs.plot.export.ok.text=儲存
kotlin.jupyter.dialog.outputs.plot.export.overwrite.existing=覆蓋現有檔案\:
kotlin.jupyter.dialog.outputs.plot.export.overwrite.existing.multiple=覆蓋現有檔案\:
kotlin.jupyter.dialog.outputs.plot.export.restore.defaults=恢復預設設定
kotlin.jupyter.dialog.outputs.plot.export.scaling.factor=縮放比例\:
kotlin.jupyter.dialog.outputs.plot.export.scaling.factor.comment=控制 {0}x 和 {1}x 之間的圖放大。
kotlin.jupyter.dialog.outputs.plot.export.target.dpi=目標 DPI\:
kotlin.jupyter.dialog.outputs.plot.export.target.dpi.comment=在 {0} 和 {1} DPI 之間調整解析度。
kotlin.jupyter.dialog.outputs.plot.export.theme.darcula=Darcula
kotlin.jupyter.dialog.outputs.plot.export.theme.highContrastDark=深色
kotlin.jupyter.dialog.outputs.plot.export.theme.highContrastLight=淺色
kotlin.jupyter.dialog.outputs.plot.export.theme.solarizedDark=Solarized 深色
kotlin.jupyter.dialog.outputs.plot.export.theme.solarizedLight=Solarized 淺色
kotlin.jupyter.dialog.outputs.plot.export.theme.title=配色方案\:
kotlin.jupyter.dialog.outputs.plot.export.title=儲存圖
kotlin.jupyter.dialog.outputs.plot.export.title.multiple=儲存圖
kotlin.jupyter.dialog.select.all.libraries.checkbox=使用所有專案庫
kotlin.jupyter.dialog.select.all.modules.checkbox=使用所有專案模組
kotlin.jupyter.dialog.select.libraries.title=為 {0} 選擇庫
kotlin.jupyter.dialog.select.modules.title=為 {0} 選擇模組相依項
kotlin.jupyter.editor.dnd.csv.dataframe.command=將 CSV 匯入為 Kotlin DataFrame
kotlin.jupyter.editor.dnd.json.dataframe.command=正在將 JSON 匯入為 Kotlin DataFrame
kotlin.jupyter.editor.dnd.xls.dataframe.command=正在將 XLS 匯入為 Kotlin DataFrame
kotlin.jupyter.line.breakpoint=Kotlin Notebook 行中斷點
kotlin.jupyter.missing.jdk.notification.not.found.text=找不到選擇用於執行 Kotlin Notebook 的 JDK "{0}"
kotlin.jupyter.missing.jdk.notification.not.selected.text=未選擇用於執行 Kotlin Notebook 的 JDK
kotlin.jupyter.missing.jdk.select.jdk.action=選擇JDK
kotlin.jupyter.output.error.notification.group=Kotlin Notebook 延伸模組輸出錯誤通知
kotlin.jupyter.refactor.changed.definition=重構宣告不會對現有的 {0} 用法產生影響。
kotlin.jupyter.refactor.changed.definition.rerun=考慮執行單元以使更改在整個 Notebook 中生效。
kotlin.jupyter.refactor.compiled.script=重構已編譯的腳本成員不會對位元組碼產生任何影響。請考慮適當的重新宣告。
kotlin.jupyter.session.classloader.error=單元類別由較新版本的執行時編譯。
kotlin.jupyter.session.initial.setup=未提供 Notebook 的內部相依項。
kotlin.jupyter.session.jdk.setting=考慮更改會話的 JDK 設定。
kotlin.jupyter.session.restart=正在重新啟動內核會話。先前的狀態被中止。
kotlin.jupyter.settings.JDK.action.preview=指定 JDK 設定
kotlin.jupyter.settings.JDK.comment=JDK 版本至少應為 {0}
kotlin.jupyter.settings.JDK.comment.empty.runtime={0} 運行時版本
kotlin.jupyter.settings.JDK.path=JDK 路徑
kotlin.jupyter.settings.appearance=外觀
kotlin.jupyter.settings.build=JVM 和建置
kotlin.jupyter.settings.dependencies.deselect.all=取消全選
kotlin.jupyter.settings.dependencies.select.all=全選
kotlin.jupyter.settings.environment.variables=環境變數
kotlin.jupyter.settings.jvm.debug=偵錯選項
kotlin.jupyter.settings.jvm.debug.port.check.box=在會話啟動時開啟偵錯連接埠
kotlin.jupyter.settings.jvm.debug.port.check.box.description=如果未選中，則內核端不會開啟偵錯連接埠
kotlin.jupyter.settings.jvm.debug.variables=顯示 Notebook 會話變數
kotlin.jupyter.settings.jvm.debug.variables.comment=不建立連線無法組態
kotlin.jupyter.settings.jvm.debug.variables.description=如果選中，變數狀態將顯示在單獨的視窗中
kotlin.jupyter.settings.jvm.extra.args=額外實參
kotlin.jupyter.settings.jvm.max.heap=最大堆大小
kotlin.jupyter.settings.jvm.max.heap.units=MiB
kotlin.jupyter.settings.jvm.target.for.snippets=程式碼段的 JVM 目標
kotlin.jupyter.settings.jvm.target.for.snippets.comment=程式碼段的目標最多可為 {0} (IDE JDK 版本)
kotlin.jupyter.settings.kernel.explore.button.name=瀏覽目錄
kotlin.jupyter.settings.kernel.mode=Kotlin Notebook 會話執行模式
kotlin.jupyter.settings.kernel.mode.ide.process=在 IDE 程序中執行
kotlin.jupyter.settings.kernel.mode.separate.process=在單獨的程序中執行
kotlin.jupyter.settings.kernel.version=內核版本
kotlin.jupyter.settings.new.notebook.description=組態為新建立的 Kotlin Notebook 使用的預設設定
kotlin.jupyter.settings.new.notebook.title=新 Notebook 的設定
kotlin.jupyter.settings.outputs=輸出
kotlin.jupyter.settings.outputs.swing.dataframe=原生呈現 DataFrame 表
kotlin.jupyter.settings.outputs.swing.letsPlot=原生呈現 Kandy 圖
kotlin.jupyter.settings.plot.export.title=Kandy 圖匯出
kotlin.jupyter.settings.refactoring.progress=正在處理 Kotlin Notebook…
kotlin.jupyter.settings.selected.jdk.default=選擇 JDK 預設值
kotlin.jupyter.settings.session=內核會話
kotlin.jupyter.settings.title=Kotlin Notebook
kotlin.jupyter.settings.typeHints=類型提示提供程序
kotlin.jupyter.table.output.cannot.parse.dataframe.error=無法顯示資料幀，因為它以序列化格式表示時過大。請考慮在註冊表中增大 'jupyter.notebook.json.maxStringLength' 的值，或者切換為 HTML 表示。要使用 HTML 呈現，請在 Kotlin Notebook 延伸模組設定中停用 ‘Render DataFrame tables natively’ 選項。
kotlin.jupyter.table.output.cannot.parse.dataframe.error.unknown=無法顯示資料幀。請考慮提交異常報告。
kotlin.jupyter.table.output.cannot.render.dataframe.error=無法呈現資料幀
kotlin.jupyter.table.output.notification.content.could.not.display.table.with.d.columns=無法顯示包含 {0} 列的表。要使用 HTML 呈現，請在 Kotlin Notebook 延伸模組設定中停用“原生呈現 DataFrame 表”選項。
kotlin.jupyter.table.output.sort_column_not_comparable.error=無法按列 {0} 排序
kotlin.jupyter.table.output.too.many.columns.error=無法顯示表資料。列過多.
kotlin.jupyter.template.context.type.generic=Kotlin Notebook
kotlin.jupyter.template.context.type.meta=魔術和指令
kotlin.jupyter.toolbar.actions.stop=停止內核
kotlin.jupyter.toolbar.session.name=Kotlin 內核會話
kotlin.jupyter.toolbar.tabs.log={0} 的日誌
kotlin.jupyter.toolbar.title=Kotlin 內核\: {0}
kotlin.notebook.outputs.kandy.export.all.failed.notification.message=Kandy 圖儲存失敗
kotlin.notebook.outputs.kandy.export.all.succeeded.notification.message=Kandy 圖已成功儲存
kotlin.notebook.outputs.kandy.export.failed.already.exists.message=檔案已存在\: {0}
kotlin.notebook.outputs.kandy.export.failed.notification.message=Kandy 圖儲存失敗
kotlin.notebook.outputs.kandy.export.notification.action.open=開啟已儲存的圖
kotlin.notebook.outputs.kandy.export.notification.action.open.multiple=開啟所包含的目錄
kotlin.notebook.outputs.kandy.export.notification.group=Kandy 圖已儲存
kotlin.notebook.outputs.kandy.export.notification.message=Kandy 圖 {0} 已成功儲存
kotlin.notebook.outputs.kandy.export.some.failed.notification.message=部分 Kandy 圖未儲存
kotlin.notebook.session.notification.group=Kotlin Notebook 會話通知
meta.file.type.description=提供對 Jupyter Kotlin 指令、魔術等的支援。
plugin.updater.notification.group=有可用的 Kotlin Notebook 延伸模組更新
