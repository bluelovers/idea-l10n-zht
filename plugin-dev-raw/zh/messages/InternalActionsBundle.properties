action.AddInlayInternalAction.Anonymous.description.remove.this.inlay=移除此嵌入
action.AddInlayInternalAction.Anonymous.text.remove=移除
action.AnAction.description.load.all.files.content=載入所有檔案內容
action.AnAction.description.load.all.virtual.files.content=載入所有 VirtualFile 內容
action.AnAction.text.load.all.files.content=載入所有檔案內容
action.AnAction.text.load.all.virtual.files.content=載入所有檔案內容
action.Anonymous.description.ShowAccessibilityIssues=醒目提示組件樹中的無障礙功能問題。如需更多資訊，請在表中選擇對應的屬性值。
action.Anonymous.description.open.definition=開啟所選組件的定義
action.Anonymous.text.Accessible=可存取
action.Anonymous.text.DataContext=資料上下文
action.Anonymous.text.ShowAccessibilityIssues=顯示無障礙功能問題
action.Anonymous.text.clientproperties=ClientProperties
action.Anonymous.text.colorPicker=顏色鍵選擇器
action.Anonymous.text.parents=父項
action.Anonymous.text.refresh=重新整理
action.Anonymous.text.reset.statistics=重設統計資訊
action.presentation.FocusDebuggerAction.text.start.focus.debugger=啟動焦點偵錯器
action.presentation.FocusDebuggerAction.text.stop.focus.debugger=停止焦點偵錯器
action.presentation.FocusTracesAction.text.start.focus.tracing=啟動焦點追蹤
action.presentation.FocusTracesAction.text.stop.focus.tracing=停止焦點追蹤
action.presentation.ToggleLaggingModeAction.text.enter.lagging.mode=進入滯後模式
action.presentation.ToggleLaggingModeAction.text.exit.lagging.mode=離開滯後模式
disable.tremble.dumb.mode=離開 Tremble Dumb 模式
enable.tremble.dumb.mode=進入 Tremble Dumb 模式
tab.title.edt.utilization.chart=EDT 鎖使用情況
ui.inspector.accessibility.audit.AccessibleActionNotNullInspection.description=AccessibleAction 接口應為角色 "{0}" 實作 。該接口允許螢幕閱讀器和語音控制等輔助技術在無需與組件直接互動的情況下執行動作。典型的動作範例包括點擊按鈕、啟用複選框或顯示右鍵選單。\n\n修復方法\:\n確保組件的 AccessibleContext 實作 AccessibleAction 接口，並提供該組件支援的所有動作。
ui.inspector.accessibility.audit.AccessibleEditableTextNotNullInspection.description=AccessibleEditableText 接口應根據可存取狀態 "editable" 和角色 "{0}" 來實作。該接口允許螢幕閱讀器和語音控制等輔助技術與文本組件互動。\n\n修復方法\:\n確保組件的 AccessibleContext 實作 AccessibleEditableText 接口。如果組件不應為可編輯，請確保 AccessibleContext.getAccessibleStateSet() 方法不返回 AccessibleState.EDITABLE。
ui.inspector.accessibility.audit.AccessibleNameAndDescriptionNotEqualInspection.description=可存取名稱和描述屬性不應相同。名稱用於傳達組件的主要用途，而描述可用於提供說明或註釋等其他資訊。\n\n修復方法\:\n如果可存取描述與可存取名稱重複，並且沒有適合描述的附加資訊，則僅保留名稱。否則，請酌情將文本拆分為兩個屬性。
ui.inspector.accessibility.audit.AccessibleNameNotEmptyForFocusableComponentsInspection.description=對於具有角色 "{0}" 的可聚焦組件，其可存取名稱不應為空。否則，輔助技術使用者可能無法與其互動。例如，螢幕閱讀器使用者可能無法理解此組件的用途，而語音控制使用者則無法使用名稱來啟用它。\n\n修復方法\:\n有以下幾種選擇\:\n1. 使用 getAccessibleContext().setAccessibleName() 方法為組件設定名稱，或在組件的 AccessibleContext 中覆寫 getAccessibleName() 方法。\n2. 也可以通過使用 JLabel.setLabelFor(Component) 方法，設定組件的工具提示或文本屬性，來隱式設定可存取名稱。\n3. 如果組件純粹用於裝飾，並且沒有合適的可存取名稱，請確保其不可聚焦，並且其可存取角色能夠正確反映其用途。
ui.inspector.accessibility.audit.AccessibleNameNotEmptyForIcon.description=圖示應配有能描述其代表內容的可存取名稱。這樣，螢幕閱讀器等輔助技術才能將圖示的含義正確地傳達給無法通過視覺識別該圖示的使用者。\n\n修復方法\:\n使用 getAccessibleContext().setAccessibleName() 方法為圖示設定一個描述性的可存取名稱。如果圖示純粹用於裝飾，不傳達任何資訊，則可存取名稱可以留空。
ui.inspector.accessibility.audit.AccessibleStateSetContainsFocusableInspection.description=該組件缺少 "focusable" 可存取狀態。根據可存取角色 "{0}"，該組件應可通過鍵盤聚焦，以便僅相依鍵盤動作 IDE 的使用者能夠與其互動。\n\n修復方法\:\n通過呼叫組件的 setFocusable(true) 方法並驗證其是否可使用 Tab/Shift-Tab 導覽存取，來確保組件可聚焦。如果組件不可互動且不應為可聚焦，請考慮將其可存取角色更改為更能體現其用途的非互動角色，例如面板或標籤。
ui.inspector.accessibility.audit.AccessibleTextNotNullInspection.description=應為可存取角色 "{0}" 實作 AccessibleText 接口。該接口允許螢幕閱讀器和語音控制等輔助技術存取組件的文本內容。\n\n修復方法\:\n確保組件的 AccessibleContext 實作 AccessibleText 接口。如果文本組件是簡單的靜態文本，且無需互動，請考慮將可存取角色更改為 "label"，並在可存取名稱中提供文本內容。
ui.inspector.accessibility.audit.AccessibleValueNotNullInspection.description=應為可存取角色 "{0}" 實作 AccessibleValue 接口。該接口允許螢幕閱讀器等輔助技術確定組件的值並進行互動。\n\n修復方法\:\n確保組件的 AccessibleContext 實作 AccessibleValue 接口。對於複選框或單選按鈕等可切換組件，關閉狀態應返回值 0，開啟狀態應返回值 1。
ui.inspector.accessibility.audit.ComponentWithIconHasNonDefaultAccessibleNameInspection.description=帶有圖示的組件應具有同時描述圖示和文本內容的可存取名稱，而不是僅描述文本，除非圖示純粹用於裝飾且不傳達任何資訊。\n\n修復方法\:\n使用 getAccessibleContext().setAccessibleName() 方法設定同時描述圖示和文本的可存取名稱，或覆寫組件 AccessibleContext 的 getAccessibleName() 方法。
ui.inspector.accessibility.audit.ImplementsAccessibleInterfaceInspection.description=所有 UI 組件都應實作 Accessible 接口，以便向螢幕閱讀器和語音控制等輔助技術提供無障礙功能元資料。\n\n修復方法\:\n為組件實作 Accessible 接口，並提供合適的 AccessibleContext 實作來描述組件的角色、狀態和其他屬性。對於純裝飾性組件(例如分隔符)，可以不實現 Accessible 接口，但仍建議實作。
ui.inspector.accessibility.audit.inspection.tab.text=問題 {0}
ui.inspector.accessibility.audit.preview.tab.text=值
ui.inspector.accessibility.audit.table.property.name.tooltip=選擇值單元格以檢視失敗的檢查
ui.inspector.accessibility.audit.tree.tooltip={0,choice,0\#沒有無障礙功能問題|1\#無障礙功能問題\: } {1, choice, 0\#|1\# 1 個錯誤|2\#{1} 個錯誤} {2,choice,0\#|1\# 1 個警告|2\#, {2} 個警告} {3,choice,0\#|1\# 1 個推薦|2\#, {3} 個推薦}
