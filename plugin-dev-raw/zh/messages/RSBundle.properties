UnresolvedRestParamInspection.display.name=未解析的 @PathParam 參照
action.WebServicesPlugin.CreateRestfulWebService.text=RESTful Web 服務
action.WebServicesPlugin.CreateRestfulWebServiceClient.text=RESTful Web 服務客戶端
action.export.openapi.draft=生成 OpenAPI 草稿
annotate.field.with.path.param=作為 @PathParam("{1}") 註解欄位 {0}
cant.convert.to=無法將 ''{0}'' 轉換為 {1}
category.name.mappings=映射
create.field.annotated.path.param=建立作為 @PathParam("{0}") 註解的 String 欄位
create.method.parameter=建立方法參數
gutter.open.in.http.client.name=在 HTTP 客戶端 JAX-RS RequestMapping 中開啟
remove.annotation=移除註解
resource.methods.inspection=沒有資源方法的 @Path 類別
resource.methods.inspection.class.has.no.public.methods=類別不包含任何 JAX-RS 註解的方法
resource.methods.inspection.method.must.be.public={0}方法必須為 public
wadl.config.inspection=不正確的 WADL 組態
webservices.file.templates.group.name=JAX-RS
webservices.inspections.ambiguous.path.annotation.display.name=不正確的 @Path URI 模板
webservices.inspections.default.value.display.name=不正確的 @DefaultValue 參數值
webservices.inspections.group.name=RESTful Web 服務(JAX-RS)
webservices.inspections.rest.multiple.method.designators.inspection=有多個 HTTP 方法註解的資源方法
webservices.inspections.rest.void.method.annotated.as.get.display.name=@GET 註解方法返回 void 值
webservices.inspections.rest.void.method.annotated.as.get.fix.name=將返回值類型更改為 String
webservices.inspections.rest.void.method.annotated.as.get.problem=@GET 註解方法返回 void 值
webservices.inspections.unused.path.template=從未使用模板 ''{0}''
webservices.inspections.wrong.path.annotation.value.problem=路徑語法錯誤
