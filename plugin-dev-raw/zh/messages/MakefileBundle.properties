# suppress inspection "UnusedProperty" for whole file
makefile=Makefile

external.system.name=Makefile

group.Makefile.ToolsMenu.text=Makefile

analysis.critical.failure.check.settings.quick.fix={0}<br/><a href="{1}">檢查設定</a>

analysis.compilation.command.message=編譯指令。目錄: ''{0}''。指令: ''{1}''
analysis.stored.compilation.command.message=存儲的編譯指令。檔案: ''{0}''
analysis.build.target.message=建置目標 ''{0}''
analysis.external.module.message=外部模組: {0}
constructor.module.data.message=外部模組資料: {0}
command.cannot.parse.message=無法解析命令行: ''{0}''
command.no.input.file.parse.message=無法解析命令行: ''{0}''\n\
未指定輸入檔案
command.assembly.file.ignored.message=程序集檔案: "{0}" 在目錄中被忽略: "{1}"
command.link.command.message=指令被識別為鏈接器指令: ''{0}''
cache.used.info.message={0} 條編譯{0,choice,1#指令|2#指令}已從快取恢復
constructor.general.error.message=出錯了

# used MakefileListenerArbiter.myAnalyzerListener
analysis.task.display.name=正在分析 makefile

analysis.scan.build.failure.general.message=無法生成 ``compilation_commands.json``
analysis.make.execution.exit.code.error=Make 執行失敗，退出程式碼 = {0}
analysis.process.not.created.error.description=無法執行程序 ''{0}'' (在目錄 ''{1}'' 中)
analysis.finished.status=Makefile 分析完成。成功 = {0}
analysis.finished.failure=Makefile 分析失敗
analysis.finished.nothing.found.failure=未找到編譯指令
analysis.targets.unexpected.stdout=意外 make 輸出:\n\
{0}
analysis.targets.unexpected.stderr=意外 make 錯誤:\n\
{0}
analysis.untrackable.directory.change=無法跟踪目錄變更: "{0}"

make.output.analysis.stage.display.name=正在收集專案資訊
make.output.analysis.stage.failure.general.message.description=無法收集專案資訊
make.output.analysis.stage.failure.general.message.details=無法收集專案資訊
build.targets.analysis.stage.display.name=正在搜尋建置目標
build.targets.analysis.stage.failure.general.message=無法找到建置目標
clean.analysis.stage.display.name=正在清理專案
clean.analysis.stage.failure.general.message=無法清理專案

# used in MakefileListenerArbiter.myConstructorListener
construct.task.display.name=正在設定專案

# used MakefileListenerArbiter.myAnalyzerListener
upload.task.display.name=上傳專案
upload.failure.message=無法上傳專案

clangd.disabled.title=clangd 已禁用
clangd.disabled.description=Makefile 專案構造函數需要 clangd 來解析編譯指令。

remote.not.supported.title=不支持遠端工具鏈
remote.not.supported.description=Makefile 專案不支持遠端工具鏈<br/><a href="{0}">檢查設定</a>
remote.not.supported.warning.message=不支持遠端工具鏈


refresh.project.action.name=重新載入 Makefile 專案
refresh.project.action.description=強制重新載入鏈接的 Makefile 專案
clean.and.refresh.project.action.name=清理並重新載入 Makefile 專案
clean.and.refresh.project.action.description=清理專案並強制重新載入鏈接的 Makefile 專案

open.settings.action.name=Makefile 設定
open.settings.action.description=開啟 Makefile 設定

unexpected.error.message=重新載入 Makefile 專案期間發生意外錯誤
resolve.cancelled.error.message=專案重新載入已被取消

configurable.empty.text=未檢測到 Makefile 專案



reload.project.row.title=用於提取專案相關資訊的 make 目標和參數
build.options.label=建置選項
switches.field.label=實參
build.target.label=建置目標
build.target.tooltip=將此欄位留空會使用 `Makefile` 中指定的第一個目標。
clean.target.label=清理目標
clean.target.comment=載入前用於清理專案的 make 目標。

clean.confirmation.dialog.title=載入專案
clean.confirmation.clean.checkbox.text=清理專案
clean.confirmation.clean.target.field.text=創建要執行的目標
clean.confirmation.dialog.text=匯入最適合乾淨專案。匯入未被清理的專案時，重新載入過程會忽略包含最新目標的源文件。
clean.confirmation.reload.cancelled.message=已取消重新載入
show.clean.confirmation.dialog.action.text=顯示“正在載入專案”對話框

toolchain.lookup.error=無法找到名稱為 {0} 的請求工具鏈
make.process.start.error=無法啟動 ''{0}''

external.target.empty.targets.field.error=目標不應為空。
external.target.invalid.targets.field.error=目標無效。
external.target.invalid.targets.field.configurationException=目標無效
external.target.build.target.comment=用於建置工件的 make 目標或目標列表
external.target.clean.target.comment=用於清理工件的 make 目標或目標列表

external.configuration.type.name=Make

build.task.name=建置 ''{0}''
build.task.name.empty.target=建置
clean.task.name=清理 ''{0}''
clean.task.name.empty.target=清理

makefile.build.before.run.no.runners.found=無法建置 ''{0}''\n\
檢查您是否啟用了 ''Makefile'' 延伸模組

clion.native.app.configuration.type.name=Makefile 套用程序
clion.native.app.configuration.type.description=Makefile 套用程序設定

makefile.content.reader.directory.contains.no.makefiles=“{0}”不包含任何 Makefile。
makefile.content.reader.is.a.directory=“{0}”是目錄。
makefile.content.reader.no.such.file.or.directory=“{0}”: 無此檔案或目錄。
makefile.content.reader.not.a.directory="{0}"不是一個目錄.

makefile.libtool.unknown.options=未知 libtool 選項: 解析實參期間 "{0}": "{1}"
makefile.libtool.mode.not.set=解析實參期間未設定 libtool 模式: "{0}"
makefile.libtool.unknown.mode=未知 libtool 模式: 解析實參期間 "{0}": "{1}"
makefile.libtool.unknown.tag=忽略未知的 libtool 標記: 解析實參期間 "{0}": "{1}"
makefile.libtool.unknown.warning.category=未知 libtool 警告類別: 解析實參期間 "{0}": "{1}"


error.no.environment=無環境

environment.to.local.conversion.failure=無法將 "{0}" 轉換為本地路徑; 本地目錄為 "{1}": {2}

group.advanced.settings.makefile=Makefile
advanced.setting.makefile.output.analyzer.options=隱式 Make 輸出分析器選項
advanced.setting.makefile.output.analyzer.options.description=預設設定為 '--just-print --print-directory --keep-going'。\n\
將這些設定為 '--print-directory --keep-going'，以便一步分析並建置專案。
advanced.setting.makefile.log.make.output.to.file=將 Make 輸出儲存到 ''${TMP}'' 目錄下的日誌檔案 ''clion-make-*.{out,err}''
advanced.setting.makefile.mingw.use.posix.shell.parser=在 MinGW 工具鏈中使用 POSIX shell 解析器
advanced.setting.makefile.mingw.use.posix.shell.parser.description=預設為使用 Windows 批處理分析器
preconfigure.task.display.name=正在預設定專案
preconfigure.failed.error.message=專案預設定失敗
load.makefile.project.action.name=載入 Makefile 專案
preconfigure.project.commands.not.started=未啟動預設定指令
preconfigure.project.commands.finished=已使用程式碼完成預設定指令: {0}
preconfigure.project.commands.io.error=由於 I/O 錯誤，預設定指令失敗
preconfigure.project.commands.unknown.error=預設定指令失敗: {0}
preconfigure.project.row.title=為生成 Makefile 而執行的預設定指令
preconfigure.project.commands.field.label=指令
preconfigure.project.commands.field.comment=允許 Shell 指令(在 Windows 中將使用 %ComSpec% 執行，在 UNIX 中將使用 ${SHELL} 執行)。
common.example=範例: {0}
environment.problem=環境問題
build.directory.label=建置目錄
build.directory.browse.dialog.title=建置目錄
build.directory.invalid=建置目錄的路徑無效。
build.directory.outside.project.directory=建置目錄在專案目錄之外。請務必根據需要添加路徑映射。