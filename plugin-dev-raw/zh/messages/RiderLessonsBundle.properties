alt.enter.invert.condition=反轉條件
alt.enter.remove.parameter=移除參數
basic.completion.activate=如果未自動建議補全，則按 {0} 手動呼叫。
basic.completion.choose.first=最佳符合項在補全列表中以藍色醒目提示\: 按 {0} 將其選中。
basic.completion.choose.item=在補全列表中選擇 {0} 並按 {1}。
basic.completion.complete=您可以自動插入所有必要的語法元素(圓括號、大括號、分號等)並轉到可以開始輸入下一條語句的位置。按 {0} 可補全此語句。
basic.completion.lesson.name=程式碼補全
basic.completion.start.typing=預設情況下，<ide/> 會在您輸入時發出補全建議。開始在文字游標所在的位置輸入 {0}，您將看到符合建議。
comment.block.comment=若要使用塊註釋 {0} 進行註釋，請選擇程式碼塊並按 {1}。
comment.block.uncomment=要取消對塊註釋的註釋，請將文字游標置於註釋塊中的任意位置，然後按 {0}。
comment.lesson.name=註釋程式碼行和塊
comment.line.uncomment.several.lines=要取消對多行的註釋，請選擇所有註釋行，然後按 {0}。
comment.line.uncomment.that.line=使用相同的快捷方式取消註釋註釋行\: 將文字游標置於該行中的任意位置，然後按 {0}。
docker.balloon.right.click.project=讓我們將 Docker 支援新增到 {0} 專案中。右鍵點擊專案並選擇<strong>新增</strong> | {1}
docker.check.out.dockerfile={0} 已經生成 Dockerfile，其中包含您的專案的所有必要說明
docker.click.debug=按 {0} 或點擊“{1}”開始偵錯
docker.lesson.name=Docker 基礎知識
docker.module.description=Rider 中的 Docker 使用入門
docker.module.name=Docker
docker.open.settings=在開始之前，我們需要確保您的計算機上正在執行 Docker 守護程序。按 {0} 開啟設定，或點擊“{1}”並選擇相應的條目
docker.run=按 {0} 或點擊此按鈕在 Docker 容器中執行專案
docker.select.run.config=要在 Docker 容器中執行專案，請選擇 Dockerfile 執行組態
extract.variable.choose.name=指定變數名稱或保留建議內容。再次按 {0} 可完成重構。
extract.variable.choose.type=選擇是對新變數使用 ''var'' 還是顯式類型，然後按 {0}。
extract.variable.replace.all=所選表達式在範例程式碼中出現 3 次。選擇相應的條目以取代所有這些表達式。
file.structure.help.link=檔案結構和其他上下文導覽指令
file.structure.lesson.name=檔案成員和結構
file.structure.open.popup=大型檔案可能很難導覽；一個很好的開始方法是檢視其成員。按 {0} 可列出所有檔案成員。
file.structure.request.prefixes=假設您想找到名稱中含有 {0} 和 {1} 單詞的方法。輸入 {2} (所需單詞的前綴)可篩選成員列表。
file.structure.toolwindow=您也可以在專用工具視窗中參照檔案結構\: 按 {0} 可將其開啟。
got.it.balloon.button.text=下一步
help.refactor.this=“重構此”選單
onboarding.module.description=設定和使用 IDE 的初始步驟
onboarding.module.name=開始
onboarding.tour.lesson.name=入門導覽
refactoring.menu.extract.interface=我們選擇 {0} 重構，它可以幫助基於當前類別的成員快速建立新接口。
refactoring.menu.extract.interface.dialog=指定新接口的名稱，並選中應在其中宣告的方法旁邊的複選框，然後點擊<strong>下一步</strong>以完成重構。
refactoring.menu.finish=當文字游標位於成員、變數或字串文字上時，嘗試按 {0} 可檢視不同上下文中可用的重構。
rename.dialog.title=重新命名
rename.epilogue=請注意，重構沒有觸及 <strong>Person</strong> 的 <code>Name</code> 屬性。即使在同一上下文中有名稱類似的符號，也可以安全使用。
rename.press.rename=<strong>重新命名</strong>重構會自動更新對重新命名符號的所有參照。您可以從宣告或該符號的任何用法開始重構。按 {0} 可重新命名 <code>Car</code> 類別的 {1} 屬性。
rename.type.new.name=輸入此屬性的新名稱(例如 {0})，然後按 {1}。
rider.onboarding.alt.enter={0} 是編輯器中最重要的快捷鍵。例如，當您的文字游標位於 {1} 參數處時，按下該快捷鍵可移除該參數並更新用法。
rider.onboarding.alt.enter.menu=在套用“{0}”修正之前，請考慮可以在此彈出視窗中執行的其他有用動作。
rider.onboarding.balloon.open.file=雙擊以開啟 {0}
rider.onboarding.balloon.open.learn.window=切換到“{0}”工具視窗繼續學習本課次
rider.onboarding.balloon.project.directory=雙擊解決方案節點，然後展開<strong>學習</strong>專案
rider.onboarding.change.ui.settings=在本課次中，Rider 會將某些 UI 設定更改為預設值。完成或退出本課次後，將恢復您的偏好設定。
rider.onboarding.debug.window.toolbar=在這裡，可以找到所有偵錯動作。現在，請按 {0} 或點擊“{1}”恢復程序並使其執行到最後。
rider.onboarding.finish=本課次到此結束。現在，您可以從主選單中選擇<strong>檔案</strong> | <strong>新增解決方案</strong>，啟動自己的解決方案，也可以選擇<strong>檔案</strong> | <strong>開啟</strong>，開啟現有解決方案。
rider.onboarding.online.help=在線幫助
rider.onboarding.project.view.description=點擊側邊列圖標或按 {0} 存取解決方案檔案
rider.onboarding.resume=按 {0} 或點擊“{1}”恢復程序並使其執行到最後
rider.onboarding.run.configuration.widget=在這裡，您可以組態和啟動執行組態。請按 {0} 或點擊“{1}”開始使用當前組態進行偵錯。
rider.onboarding.search.everywhere=要尋找任何內容，請按 {0} 兩次或點擊“{1}”
rider.onboarding.search.everywhere.query=有幾個頁籤可以將您的搜尋限制為檔案、動作等。但現在，請留在<strong>全部</strong>頁籤中並輸入 {0}。
rider.onboarding.search.everywhere.result=查詢的複合名稱的首字母與 {0} 符合。在列表中將其選中並按 {1}。
rider.onboarding.settings=最後一件事是在何處組態所有內容。按 {0}，或點擊“{1}”並選擇相應的條目
rider.onboarding.settings.save=要套用任何更改，請點擊“{0}”
rider.onboarding.settings.search=使用搜尋欄位尋找特定選項
rider.onboarding.settings.theme=例如，您可以在“{0} | {1}”頁面上切換淺色和深色主題
rider.onboarding.toggle.breakpoint=我們來偵錯程序。首先，切換中斷點\: 點擊行號或將文字游標設定為該行並按 {0}。
