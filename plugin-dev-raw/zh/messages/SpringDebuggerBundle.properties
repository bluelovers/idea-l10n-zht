action.DatabaseView.PersistDataSource.text=克隆並持久化
cant.evaluate=無法求值
config.properties.renderer=Spring 組態屬性
config.property.actual.in.context={0} ({1})
config.property.actual.value=值\: {0}
config.property.cant.evaluate=無法計算屬性值
config.property.declaration=宣告
config.property.declaration.unknown=未知宣告
config.property.default.value=預設
config.property.default.value.marker=[預設]
config.property.get=…獲取
config.property.is.not.set=屬性未設定
config.property.multiple.definitions=在多個上下文中定義
config.property.navigate=… 導覽
config.property.placeholder.not.resolved=無法解析佔位符 ''{0}''
config.property.source=源
config.property.source.detect=檢測
config.property.source.name=名稱
config.property.trace=追蹤
data.source.is.connected.in.process.being.debugged=資料來源已連線到正在偵錯的程序
debug.session=​{0}
navigate.to.source=…導覽到原始碼
property.defined.as.system=作為系統屬性
property.defined.in=''{0}'' 屬性定義為 {1}
property.defined.in.command.line=作為命令行實參
property.defined.in.environment=作為環境變數
property.name=[{0}]
property.source.command.line=命令行實參
property.source.environment=環境變數
property.source.system=系統屬性
spring.config.codevision.description=顯示實際組態屬性值及其定義位置。點擊可導覽至定義位置。
spring.config.codevision.name=Spring 屬性執行時資訊
spring.config.codevision.select.definition=選擇值
spring.debugger.bean.context=上下文
spring.debugger.bean.declaration=宣告位置
spring.debugger.bean.definition=定義
spring.debugger.bean.depends.on=依賴於
spring.debugger.bean.injected.into=已注入到
spring.debugger.bean.not.found=找不到 Bean ''{0}''
spring.debugger.bean.profiles=組態檔案
spring.debugger.bean.renderer.name=Spring Bean
spring.debugger.bean.scope=作用域 \= {0}
spring.debugger.disable=停用 Spring 偵錯器
stacktrace.renderer.source.name.evaluation.failed=無法評估位置
