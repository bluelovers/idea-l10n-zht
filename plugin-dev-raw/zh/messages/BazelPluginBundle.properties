action.Bazel.AddToProjectViewDirectoriesAction.description=將此目錄新增到專案檢視檔案。
action.Bazel.AddToProjectViewDirectoriesAction.text=新增到專案檢視目錄
action.Bazel.ExcludeFromProjectViewDirectoriesAction.description=從專案檢視檔案中排除該目錄。
action.Bazel.ExcludeFromProjectViewDirectoriesAction.text=從專案檢視目錄中排除
action.Bazel.NewBazelPackageAction.text=新增 Bazel 軟體套件
action.link.bazel.project.from.linked.project=鏈接 Bazel 專案
action.load.project.view.file=載入專案檢視
action.new.bazel.package.description=建立新的 {0} 軟體套件
action.new.bazel.package.text={0} 軟體套件
action.run.all.tests=執行所有測試
action.run.all.tests.under=執行 {0} 下的所有測試
action.run.all.tests.under.with.coverage=使用覆蓋率執行 {0} 下的所有測試
action.run.all.tests.with.coverage=使用覆蓋率執行所有測試
advanced.settings.display.name=進階設定
annotation.bazelrc.deprecated.flag=標誌\: {0} 已棄用
annotation.bazelrc.flag.not.applicable=標誌\: {0} 不適用於指令 {1}
annotation.bazelrc.idle.flag=標記\: {0} 不執行任何動作
annotation.bazelrc.undocumented.flag=未記錄的標誌\: {0}
annotation.bazelrc.unknown.flag=未知標誌\: {0}
application.settings.display.name=進階設定
application.settings.plugin.enable.phased.sync.checkbox.text=啟用分階段同步
application.settings.plugin.enable.phased.sync.help.text=分階段同步分多個步驟執行，使得程式碼在有限的相依項解析下可以更快可用。
application.settings.plugin.experimental.settings=實驗性設定
application.settings.update.channel.dropdown.help.description=您可以從 Nightly 切換到 EAP/Release 通道，將 Bazel 延伸模組降級為穩定版本。
application.settings.update.channel.dropdown.title=更新通道\:
application.settings.updates.title=更新設定
background.progress.building.targets=正在建置 個目標…
background.progress.syncing.project=正在同步專案...
background.task.description.preparing.for.debugging.kotlin=正在準備在目標 {0} 中偵錯 Kotlin 協程
balloon.add.target.dependency.to.build.file.failed.message=請手動將目標相依項新增到相應的 BUILD 檔案中
balloon.add.target.dependency.to.build.file.failed.title=無法自動新增目標相依項
bazel.bin.not.found=找不到 bazel-bin (重新同步專案可修復)
bazel.dummy.module.type.name=Bazel 合成模組
bazel.language.codestyle.display.name=Bazel 專案檢視
bazel.language.description=BazelVersion 語言
bazel.language.project.parser.error=應為 {0}
bazel.language.projectview.description=Bazel 專案的 ProjectView 檔案
bazel.toolwindow.tab.query=Bazel 查詢
bazel.toolwindow.tab.query.placeholder.query=輸入查詢表達式，例如 'deps(//my\:target)'
bazel.toolwindow.tab.targets=已載入的目標
bazelquery.error.empty.quotation=空引號
bazelquery.error.incorrect.word=單詞不正確
bazelquery.error.missing.comma=應為 <comma>
bazelquery.error.missing.expression=應為 <表達式>
bazelquery.error.missing.expression.got.integer=應為 <expression>，實際為 <integer>
bazelquery.error.missing.flag=預期標誌值
bazelquery.error.missing.integer=應為 <integer>
bazelquery.error.missing.quote=應為 <quote>
bazelquery.error.missing.right.parenthesis=應為 <right parenthesis>
bazelquery.error.missing.space=應為 <space>
bazelquery.error.missing.target=應為目標模式作為集合表達式的實參
bazelquery.error.missing.variable.value=let 表達式中變數的預期值
bazelquery.error.missing.word=應為 <word>
bazelquery.error.unexpected.token=意外的標記
bazelquery.error.unexpected.token.infix.operator=意外的標記\: 表達式開頭出現中綴運算符
bazelquery.error.unexpected.token.integer=意外的標記\: <integer>
bazelquery.error.unexpected.token.paren=意外的標記\: 圓括號不符合
bazelquery.error.unfinished.flag=未完成的標誌
bazelquery.flags.language.description=BazelQuery 標誌語言
bazelquery.language.description=BazelQuery 語言
bazelquery.query.completion.description=查詢表達式
bazelquery.query.description=執行相依圖查詢。
bazelquery.query.option.description=選項
bazelrc.language.description=Bazelrc 語言
bazelrc.language.parser.missing.import.path=應為匯入路徑
bsp.run.error.cannotRun=無法執行此目標
build.and.resync.action.text=建置並重新同步專案
buildifier.configurable.display.name=Buildifier 設定
buildifier.executable.auto.detected.path=自動檢測\: {0}
buildifier.executable.label=Buildifier 可執行檔案\:
buildifier.executable.not.found=無法在 {0, choice, 0\#%PATH%|1\#$PATH} 中自動檢測到 buildifier 可執行檔案
buildifier.formatted.ignored=文檔格式設定已被忽略
buildifier.formatting.service.name=Starlark 檔案
buildifier.run.error.message=無法執行 buildifier
buildifier.select.path.to.executable=選擇可執行檔案路徑
button.bazel.query.cancel=取消
button.bazel.query.evaluate=求值
button.bazel.query.select=選擇
cancel.action.text=停止
configurable.display.name.bazel.experimental.project.settings=實驗性設定
console.task.apk.install.apk.not.found=建置後未找到 APK {0}
console.task.apk.install.could.not.get.apk=無法獲取目標的 APK 路徑。請嘗試重新同步專案。
console.task.apk.install.could.not.get.application.id=無法獲取 applicationId
console.task.apply.changes=將更改應用於專案模型
console.task.apply.changes.on.target.utils.message=將更改應用於內部目標模型
console.task.base.sync=收集專案目標
console.task.build.in.progress.many=正在建置 {0} 個目標…
console.task.build.in.progress.one=正在建置 {0}...
console.task.build.no.targets=沒有可建置的目標。跳過。
console.task.build.title=建置
console.task.copy.plugin.to.sandbox=將延伸模組複製到沙盒
console.task.exception.cancellation=已取消
console.task.exception.cancellation.message=任務已取消
console.task.exception.copy.plugin.to.sandbox=無法將延伸模組複製到沙盒。
console.task.exception.no.intellij.platform.plugin.sdk=找不到 IntelliJ 平台延伸模組 SDK。
console.task.exception.no.plugin.jars=未找到延伸模組 jar。請嘗試重新同步專案。
console.task.exception.other=已失敗
console.task.exception.plugin.jar.could.not.copy=無法將延伸模組 jar {0} 複製到沙盒 {1}\: {2}。
console.task.exception.plugin.jar.not.found=未找到延伸模組 jar {0}。
console.task.exception.timed.out=超時
console.task.exception.timeout.message=任務超時。請檢視任務輸出了解更多資訊，或在註冊表中增加超時時間 ("bsp.request.timeout.seconds")
console.task.execute.post.sync.hooks=執行同步後掛鈎
console.task.execute.pre.sync.hooks=執行預同步掛鈎
console.task.execute.sync.hooks=執行同步掛鈎
console.task.mobile.cannot.run.on.multiple.devices=無法在多台裝置上執行。
console.task.mobile.install.in.progress=正在執行 mobile-install…
console.task.mobile.install.in.progress.target={0} 的 mobile-install…
console.task.mobile.install.title=mobile-install
console.task.mobile.install.waiting.for.target.device=正在等待目標裝置上線…
console.task.mobile.no.target.device=找不到目標裝置。
console.task.model.add.android.fetched.sdks=新增提取的 Android SDK
console.task.model.add.fetched.jdks=新增提取的 JDK
console.task.model.add.go.support.in.targets=在目標中新增 Go 支援
console.task.model.add.scala.fetched.sdks=新增提取的 Scala SDK
console.task.model.apply.changes=將更改套用到工作區模型
console.task.model.apply.changes.attempt.0.1.failed=無法將更改套用到工作區模型(嘗試 {0}/{1})
console.task.model.apply.changes.attempt.0.1.wsm=[Bazel] 將更改套用到工作區模型(嘗試 {0}/{1})
console.task.model.apply.changes.attempt.0.fallback=在 {0} 次嘗試中，未能快速套用到工作區模型，回退到在 WriteAction 中執行較慢的套用方式
console.task.model.apply.changes.wsm=[Bazel] 將更改套用到工作區模型
console.task.model.calculate.add.go.fetched.sdk=計算並新增提取的 Go SDK
console.task.model.calculate.jdks.infos=計算所有唯一的 jdk 資訊
console.task.model.calculate.python.sdks=計算所有 python sdk 資訊
console.task.model.calculate.python.source.deps=計算 python 相依項
console.task.model.calculate.scala.sdk.infos=計算所有 scala sdk 資訊
console.task.model.calculate.structure=計算專案結構
console.task.model.collect=收集模型
console.task.query.jvm.environment.cancel=查詢 JVM 環境已取消
console.task.query.jvm.environment.failed=查詢 JVM 環境失敗
console.task.query.jvm.environment.in.progress=正在查詢 JVM 環境
console.task.query.jvm.environment.success=查詢 JVM 環境完成
console.task.query.jvm.environment.title=查詢 JVM 環境
console.task.run.cancelled=執行已被取消.
console.task.status.cancelled=已取消.
console.task.status.error=以錯誤結束。
console.task.status.ok=成功完成。
console.task.status.other=已完成.
console.task.sync.activity.name={0} 同步
console.task.sync.cancelled=同步已取消。
console.task.sync.failed=同步失敗。
console.task.sync.fatalfailure=同步失敗。未成功匯入任何目標。
console.task.sync.import.fail=找不到檔案\: {1} 中參照的 {0} 不存在。請使用 try_import 選擇性地匯入檔案
console.task.sync.in.progress=正在同步…
console.task.sync.partialsuccess=同步部分成功，但存在錯誤
console.task.sync.success=同步完成。
console.task.sync.title=同步
console.tasks.test.framework.name=Bazel
console.tasks.title={0}\: {1}
coverage.bazel.presentable.text=Bazel 覆蓋率
debug.editor.label=偵錯連接埠
editor.action.copy.target.id=複製目標標籤
error.message.failed.to.resolve.sources.0=無法解析目標的原始檔\: {0}\n請驗證它們是否已正確生成
file.change.processing.step.commit=正在提交檔案更改
file.change.processing.step.query=正在查詢 Bazel
file.change.processing.title.change=正在處理檔案更改\: {0}
file.change.processing.title.create=正在處理檔案建立\: {0}
file.change.processing.title.delete=正在處理檔案移除
file.chooser.bazel.query.select.directory.description=選擇專案內的目錄。
file.chooser.bazel.query.select.directory.title=選擇目錄
findusages.starlark.code.usages=程式碼中的用法
findusages.starlark.load.usages=載入語句中的用法
go.before.run.error.args.parsing.failure=無法解析 script_path 中的實參\: {0}
go.before.run.error.invalid.script.path=無法讀取 script_path\: {0}
go.before.run.error.parsing.script.failure=無法解析 script_path 中的實參\: {0}
go.debug.background.progress.start.title=正在準備偵錯 Go 目標 {0}
go.debug.progress.manager.preparing.process.title=正在準備 Go 應用程式執行狀態
go.runner.wrong.configuration=無法從執行組態中獲取 BSP 目標
go.test.handler.error.target.missing.from.config=無法從執行組態中獲取目標
hotswap.error.parsing.jars=解析執行時 jar 時出錯
hotswap.error.reading.jars=讀取執行時 jar 時出錯
hotswap.missing.file.inside.jar=在 jar {1} 中找不到類別檔案 {0}。
inspection.configurator.bazel.commandline.description=Bsp 命令行檢查
inspection.description.bazel.version="Bazel 有可用的新版本\: {0}"
inspection.display.name.bazel.version.check=Bazel 版本檢查
jvm.runner.header=執行組態
jvm.runner.test.header=測試組態
label.bazel.query.select.directory=所選目錄\: 
notification.bazel.query.graph.visualization.failed=無法生成圖表可視化
notification.bazel.query.graphviz.missing.nonunix=可能缺少 graphviz。您可以從 https\://graphviz.org/download/.notification.bazel.query.graph.visualization.failed\=Failed to generate graph visualization 下載
notification.bazel.query.graphviz.missing.unix=可能缺少 graphviz。您可以使用 `apt install graphviz` 或 `brew install graphviz` 安裝 graphviz
notification.bazel.query.selected.dir.outside.project=所選目錄位於當前專案之外
notification.unresolved.imports=檢測到未解析的 import
notificationGroup.Bazel.title=Bazel
notificationGroup.BazelPlugin.title=Bazel 延伸模組
notificationGroup.BazelSlowPlugins.title=Bazel 慢速延伸模組警告
path.validation.cannot.execute=無法執行 {0}
path.validation.ends.with.whitespace=路徑不得以空格結尾
path.validation.field.empty=路徑欄位為空
path.validation.file.not.found=找不到檔案 {0}
path.validation.inaccessible=路徑無法存取
path.validation.invalid=路徑無效\: {0}
path.validation.must.be.absolute=路徑必須是絕對路徑
plugin.runner.idea.product.null=IDEA 產品資訊為 null
post.startup.activity.id.enable.k2.compiler=使用 Bazel 啟用 K2 編譯器模式
progress.bar.calculate.android.sdk.infos=正在計算所有唯一的 Android SDK 資訊
progress.bar.calculate.go.sdk.infos=正在計算所有唯一的 Go SDK 資訊
progress.bar.calculate.jdk.infos=正在計算所有唯一的 JDK 資訊
progress.bar.calculate.python.sdk.infos=正在計算所有唯一的 Python SDK 資訊
progress.bar.calculate.python.source.deps=正在計算 Python 相依項
progress.bar.collect.project.details=正在收集專案詳細資訊
progress.bar.update.internal.model=正在更新內部模型
progress.reporter.calculating.scala.sdk.info=正在計算所有唯一的 scala sdk 資訊
project.base.path.not.found=無法找到專案的基路徑
project.configurable.display.name.bazel=Bazel
project.settings.buildifier.label=Buildifier 可執行檔案路徑\:
project.settings.display.name=Bazel
project.settings.experimental.settings=實驗性設定
project.settings.general.settings=一般設定
project.settings.local.runner.settings=本地 JVM 執行器設定
project.settings.plugin.enable.build.with.jps.checkbox.text=啟用使用 IntelliJ IDEA 編譯 JVM 目標
project.settings.plugin.enable.kotlin.coroutine.debug.checkbox.text=啟用 Kotlin 協程偵錯
project.settings.plugin.enable.local.jvm.actions.checkbox.text=啟用使用本地 JVM 執行器執行 Bazel 目標的選項
project.settings.plugin.enable.query.tab.checkbox.text=啟用“Bazel 查詢”頁籤(需要重新啟動)
project.settings.plugin.enable.query.tab.help.text=在 Bazel 工具視窗新增“Bazel 查詢”頁籤，以便直接存取 IDE 中的 Bazel 查詢功能。(重設視窗面板前套用設定)
project.settings.plugin.hotswap.enabled.checkbox.help.text=如果啟用，熱交換將通過“作為 Java 應用程式”的相關動作，對 Java/Kotlin 可用。
project.settings.plugin.hotswap.enabled.checkbox.text=為 Java/Kotlin 啟用熱交換
project.settings.plugin.run.buildifier.on.save.checkbox.text=在檔案儲存時執行 buildifier
project.settings.plugin.show.excluded.directories.as.separate.node.checkbox.text=將排除的目錄顯示為專案樹中的單獨節點
project.settings.plugin.title=延伸模組設定
project.settings.plugin.use.intellij.test.runner.checkbox.text=使用 IntelliJ 測試執行程序
project.settings.plugin.use.intellij.test.runner.help.text=如果啟用，將使用 IntelliJ Junit 測試執行程序。僅當動作通過檔案裝訂區域執行時才有效，並會停用目標樹形小工具的本地 JVM 測試。需要 Junit 延伸模組。
project.settings.project.view.label=專案檢視路徑\:
project.view.tree.project.view.file.hint=已選擇
python.debug.error.no.id=無法獲取建置目標 ID
python.debug.error.no.script=無法解析目標 {0} 的 Python 腳本名稱
python.debug.error.no.sdk=無法解析目標 {0} 的 Python SDK
python.debug.error.wrong.state=PythonBspDebugRunner 與不受支援的狀態類型一起使用
quickfix.bazel.version=更新版本
quickfix.bazelrc.delete.noop.flag.declaration=刪除 NO_OP 標誌宣告
quickfix.bazelrc.delete.noop.flag.presentation=刪除 NO_OP 標誌使用
quickfix.bazelrc.rename.flag.description=將舊標誌名稱取代為新標誌名稱。
quickfix.bazelrc.rename.flag.presentation=取代為 {0} 變體
rebuild.action.text=重建之前的目標
resync.action.text=重新同步專案
runconfig.bazel.params=Bazel 參數
runconfig.run.description=使用 {0} 執行目標
settings.editor.label.test.filter=測試篩選器
sources.attach.action.text=從 Bazel 附加源
sources.files.not.resolved=Bazel 源不可用
sources.pending.text=正在附加源…
starlark.debug.action.name=Starlark 偵錯
starlark.debug.breakpoint.type.title=Starlark 行中斷點
starlark.debug.config.target.label=目標
starlark.debug.config.template=Starlark 偵錯 {0}
starlark.debug.config.type.description=遠端 Starlark 偵錯
starlark.debug.config.type.name=遠端 Starlark 偵錯
starlark.debug.connecting.progress.name=正在連線到偵錯器
starlark.debug.exception.cancellation=偵錯會話已取消
starlark.debug.exception.connect=無法連線到偵錯伺服器(可能需要手動重啟 Bazel)
starlark.debug.not.top.frame=表達式求值只能在頂層堆疊幀上使用
starlark.debug.task.title=正在偵錯 Starlark 分析
starlark.debug.value.obtain.failed=未能獲得結果
starlark.language.description=Starlark 語言
state.android.use.mobile.install.name=使用 mobile-install
state.bazel.intellij.sdk=IntelliJ SDK
state.generic.run.configuration.header=執行組態
state.generic.test.configuration.header=測試組態
target.debug.run.action.text=偵錯執行 {0}
target.debug.test.action.text=偵錯測試 {0}
target.debug.with.jvm.runner.action.text=將 {0} 作為 Java 應用程式進行偵錯
target.debug.with.jvm.runner.config.name=將 {0} 作為 Java 應用程式進行偵錯
target.partial.sync.action.text=重新同步目標
target.run.action.text=執行 {0}
target.run.config.name=執行 {0}
target.run.with.coverage.action.text=使用覆蓋率執行 {0}
target.run.with.jvm.runner.action.text=將 {0} 作為 Java 應用程式執行
target.run.with.jvm.runner.config.name=將 {0} 作為 Java 應用程式執行
target.test.action.text=測試 {0}
target.test.with.jvm.runner.action.text=將 {0} 作為 Java 應用程式進行測試
target.test.with.jvm.runner.config.name=將 {0} 作為 Java 應用程式進行測試
text.bazel.ignored.group.description=Bazel 會忽略檔案提供程序
text.field.project.settings.select.path.description=選擇專案檢視檔案的路徑。
text.field.project.settings.select.path.title=選擇路徑
tool.window.generic.config.file=專案檢視檔案
widget.build.target.popup.message=建置目標
widget.collect.targets.overlapping.sources.message=目標 {0} 和 {1} 共享 {2}。請在所選專案檢視檔案中排除其中一個目標，以避免錯誤的醒目提示
widget.collect.targets.overlapping.sources.title=檢測到共享源
widget.config.file.popup.message=在編輯器中開啟 {0}
widget.copy.target.id=複製目標標籤
widget.factory.display.name=檔案目標
widget.fastbuild.completed.description=熱交換已完成且無錯誤
widget.fastbuild.completed.title=熱交換成功
widget.fastbuild.error.missing.path=缺少 bazelBinPath。請嘗試重新同步專案。
widget.fastbuild.error.no.targets=無法確定檔案的建置目標。請嘗試重新同步專案。
widget.fastbuild.error.null.bazel.exec.path=bazelExecPath 為 null。請嘗試重新同步專案。
widget.fastbuild.error.null.jvm.toolchain=jvmToolchainInfo 為 null。請嘗試重新同步專案。
widget.fastbuild.error.params.not.found=未找到用於快速編譯的參數檔案。正在回退到 Bazel 建置。
widget.fastbuild.error.recompile=重新編譯
widget.fastbuild.error.title=熱交換失敗
widget.fastbuild.error.wrong.canonical.path=熱交換失敗，出現錯誤\: {0} 不在工作區根 {1} 下。
widget.fastbuild.hotswaping=正在熱交換
widget.fastbuild.recompile=重新編譯
widget.filter.action.group=篩選目標
widget.filter.can.run=顯示可執行目標
widget.filter.can.test=顯示可測試目標
widget.filter.turn.off=顯示所有目標
widget.new.bazel.package.popup.title=新增 Bazel 軟體套件
widget.no.renderable.component="[不可呈現]"
widget.no.targets.message=沒有可顯示的目標
widget.open.build.file=跳轉到 BUILD 檔案
widget.project.tree.excluded.directories=排除的目錄
widget.settings.popup.message=開啟 {0} 設定
widget.side.menu.error.title=錯誤
widget.suggest.enable.k2.action=啟用
widget.suggest.enable.k2.message=Kotlin K2 編譯器模式會通過 Bazel 提供更好的 IDE 性能
widget.suggest.enable.k2.title=啟用 K2 編譯器模式
widget.target.choose=選擇目標
widget.target.search.clear=清除搜尋查詢
widget.target.search.display.as.tree=以樹狀結構顯示搜尋結果
widget.target.search.hint=搜尋目標 ({0})
widget.target.search.match.case=區分大小寫({0})
widget.target.search.no.results=未找到符合的目標
widget.target.search.regex=使用正則表達式搜尋({0})
widget.title=檔案的可用目標
widget.tooltip.text.active=檢查檔案的可用目標
widget.tooltip.text.inactive=開啟檔案以檢視可用目標
