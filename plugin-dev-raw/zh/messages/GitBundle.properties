git4idea.vcs.name=Git
git4idea.vcs.name.with.mnemonic=&Git
activity.name.rebase=變基

abort=中止
abort.operation.progress.title=正在中止 {0} 行程
abort.operation.dialog.title=中止 {0}
abort.operation.dialog.msg=中止 {0}{1}?
abort.operation.failed={0} 中止失敗
abort.operation.succeeded={0} 中止成功
abort.operation.merge.name=合併
abort.operation.cherry.pick.name=優選
abort.operation.revert.name=還原
abort.operation.indicator.text=git {0} --abort{1}

add.adding=正在添加檔案…

annotate.cannot.annotate.dir=無法註解目錄
annotate.output.lack.data=第 {0} 行的輸出缺少必要的資料
annotate.line.mismatch.exception=正在為第 {0} 行添加資訊，但應當為第 {1} 行添加資訊

apply.changes.would.be.overwritten=您的本地變更將被 {0} 覆蓋。\n提交您的變更，或儲藏變更以繼續。
apply.changes.operation.successful={0}成功
apply.changes.nothing.to.do=沒要有{0}的內容
apply.changes.resolving.conflicts.progress.title=正在解決衝突…
apply.changes.applied.for.commits={0} {1,choice,1#項提交|2#{1,number} 項提交} 來自於 {2}
apply.changes.operation.canceled={0} 已取消
apply.changes.operation.failed={0} 失敗
apply.changes.operation.performed.with.conflicts={0}已執行，但存在衝突
apply.changes.operation.successful.for.commits=但是，對以下{1, choice,1#提交|2#提交}成功進行了{0}:
apply.changes.skipped={0} {1,choice,1#被|2#被}跳過，因為所有變更已被{2}。
apply.changes.everything.applied={0} 中的所有變更已被{1}

apply.conflict.dialog.description.label.text=在由 {2} 執行的提交 {1} 的{0}過程中發生衝突{3}

blob.not.found=找不到 Blob: {0} - {1}

changes.retrieving=檢索修訂 {0} 的變更

commit.action.commit.and.rebase.text=提交並變基…
commit.action.name=提交 (&I)
commit.author.diffs=<html>作者與預設不同</html>
commit.author=作者(&A):
commit.partial.merge.message=不允許在{0,choice,1#合併|2#優選}期間進行部分提交。\n提交中未包含以下檔案。\n要在包含所有檔案的情況下執行提交嗎?
commit.partial.merge.title=部分合併提交
common.current.branch.tooltip=當前已簽出的分支。
common.current.branch=當前分支:
common.git.root.tooltip=選擇 Git VCS 根
common.git.root=Git 根(&R):
common.no.active.branch=<無活動分支>
common.refreshing=正在重新整理檔案
common.suffix.in.one.repository=在 {0} 中
common.suffix.in.several.repositories=在 {0} 個版本庫中

conflict.resolver.unmerged.files.check.error.notification.description.text=由於錯誤，無法檢查工作樹中是否有未合併的檔案。{0}

login.dialog.label.login.to.url=登錄 {0}
login.dialog.button.login=登錄
login.dialog.prompt.enter.credentials=輸入憑證:
login.dialog.select.login.way.credentials=輸入憑證
login.dialog.select.login.way.use.helper=使用憑證幫助程序
login.dialog.username.label=用戶名：
login.dialog.password.label=密碼:
login.dialog.error.username.cant.be.empty=用戶名不能為空
login.dialog.error.password.cant.be.empty=密碼不能為空
login.dialog.login.with.selected.provider=使用 {0} 登錄…

computing.annotation=正在計算 {0} 的註解
diff.find.error=正在尋找差異的修訂: {0}
error.dialog.title=錯誤
error.list.title={0} 錯誤:
error.occurred.during=''{0}'' 時出錯
errors.message.item=\n{0}
errors.message=Git 操作以多個錯誤結束: {0}

# suppress inspection "UnusedProperty": used by 3-party plugins
fetch.action.name=獲取
fetch.pruned.obsolete.remote.references=刪除過時的遠端 {0,choice,1#引用|2#引用}: {1}

# suppress inspection "UnusedProperty": used by 3-party plugins
find.git.error.title=執行 Git 時出錯
# suppress inspection "UnusedProperty": used by 3-party plugins
find.git.success.title=Git 執行成功
# suppress inspection "UnusedProperty": used by 3-party plugins
find.git.unsupported.message=<html><tt>{0}</tt><br>此版本不受支援，某些延伸模組功能可能無法工作。<br>支援的最低版本是 <em>{1}</em>。</html>

local.changes.freeze.message.git.operation.prefix=Git {0}
git.error.exit=Git 行程退出，程式碼為 {0}
git.running=執行: {0}

init.destination.directory.description=選擇將在其中創建新 Git 版本庫的目錄。
init.destination.directory.title=創建 Git 版本庫
init.warning.already.under.git=所選目錄 <tt>{0}</tt> 已在 Git 下。\n確定要創建新的 VCS 根嗎?
init.warning.title=Git Init
initializing.title=正在初始化版本庫…

mention.in=\ ({0} 中)

merge.action.name=合併
merge.action.operation.failed=Git {0} 失敗
merge.action.before.update.label=更新前
merge.action.after.update.label=更新後
merge.branch.title=合併變更
merge.branch.into.current.title=合併到 {0}
merge.branch.loading.branches.progress=正在載入未合併的分支...
merge.no.branch.selected.error=應選擇該合併分支。
merge.no.matching.branch.error=沒有符合分支。
merge.commit.message.label=提交訊息:
merge.options.modify=修改選項
merge.options.modify.popup.title=添加合併選項
merge.option.no.ff=即使可以快進也創建合併提交
merge.option.ff.only=僅在可以快進時合併
merge.option.squash=為所有合併變更創建一個提交
merge.option.msg=指定合併提交的訊息
merge.option.no.commit=不提交合併結果
merge.option.no.verify=繞過預合併和提交訊息掛鈎
merge.branch.popup.empty.text=無分支
merge.branch.field.placeholder=指定分支
merge.tool.column.status.deleted=已刪除
merge.tool.column.status.modified=已修改
merge.tool.column.theirs.status=他人的變更
merge.tool.column.theirs.with.branch.status=他人的變更({0})
merge.tool.column.yours.status=您的變更
merge.tool.column.yours.with.branch.status=您的變更({0})
merging.title=將變更合併到 {0}
paths.affected.title=提交 {0} 中受影響的路徑
pull.action.name=拉取
pull.button=拉取
pulling.title=從 {0} 中拉取變更
pull.branch.not.selected.error=應選擇要從中拉取的分支。
pull.branch.nothing.to.pull=無分支
pull.branch.no.matching.remotes=無遠端
pull.branch.field.placeholder=指定分支
pull.options.modify.popup.title=添加拉取選項
pull.option.ff.only=僅在可以快進時合併
pull.option.no.ff=即使可以快進也創建合併提交
pull.option.squash.commit=為所有拉取變更創建一個提交
pull.option.no.commit=合併，但不提交結果
pull.option.rebase=在當前分支的頂部變基傳入變更

pull.dialog.title=拉取
pull.dialog.with.branch.title=拉取到 {0}
pull.dialog.fetch.shortcuts.hint=按 {0} 更新分支

operation.action.message=多個 Git 根有未完成的 {0} 行程，請選擇要對其執行操作的根。

rebase.abort.and.rollback.dialog.message=僅中止 {0} 中的變基還是同時回滾 {1} 中的變基?
rebase.abort.and.rollback.dialog.no.button.text=僅中止
rebase.abort.and.rollback.dialog.yes.button.text=中止並回滾
rebase.abort.dialog.message=中止{0} 中的變基?
rebase.abort.dialog.ok.button.text=中止
rebase.abort.dialog.title=中止變基
rebase.abort.notification.failed.title=中止變基失敗
rebase.abort.notification.successful.message=中止變基成功
rebase.abort.notification.warning.rollback.failed.message={0}中的回滾失敗:{1}{2}
rebase.abort.notification.warning.rollback.failed.title=變基回滾失敗
rebase.abort.notification.warning.rollback.failed.with.repo.message=成功中止 {0} 中的變基，但 {1}:{2}{3} 中的回滾失敗
rebase.abort.progress.indicator.command.in.repo.title={0} ({1} 內)
rebase.abort.rollback.successful.rebase.dialog.message=要回滾 {0} 中成功的變基嗎?
rebase.abort.rollback.successful.rebase.dialog.ok.button.text=回滾
rebase.confirmation.dialog.published.commits.button.cancel.text=取消
rebase.confirmation.dialog.published.commits.button.rebase.text=仍然變基
rebase.confirmation.dialog.published.commits.message.first=您正在嘗試變基一些已推送到受保護分支的提交。
rebase.confirmation.dialog.published.commits.message.second=對它們進行變基將使提交重複，這是不推薦的，而且很可能是不需要的。
rebase.confirmation.dialog.published.commits.title=變基已發佈的提交
rebase.conflict.diff.dialog.left.title=正在從 {1} 變基 {0}
rebase.conflict.diff.dialog.right.simple.title=已變基的提交
rebase.conflict.diff.dialog.right.with.branch.title=已變基的提交和來自 {0} 的提交
rebase.couldnt.resolve.file=無法解決 {0}
rebase.dialog.error.upstream.not.selected=選擇上游
rebase.dialog.error.base.not.selected=選擇新基
rebase.dialog.error.branch.or.tag.not.exist=沒有這樣的分支或標記
rebase.dialog.error.branch.not.selected=選擇要切換到的分支
rebase.dialog.error.branch.invalid=分支 ''{0}'' 不存在
rebase.dialog.error.rebase.in.progress=此 Git 根目錄已經在進行交互式變基
rebase.dialog.root.invalid.label.text=(無效)
rebase.dialog.progress.loading.tags=正在載入標記…
rebase.dialog.help=顯示 Git 變基幫助
rebase.dialog.start.rebase=變基
rebase.dialog.title=變基
rebase.dialog.target=分支或哈希
rebase.dialog.new.base=新基礎(分支或哈希)
rebase.dialog.old.base=原基礎(分支或哈希)
rebase.dialog.branch.field=源分支
rebase.options.modify.dialog.title=添加變基選項
rebase.option.onto=為變基的提交指定新基
rebase.option.interactive=在變基之前編輯提交
rebase.option.rebase.merges=重新創建提交拓撲
rebase.option.switch.to.branch=選擇另一個要變基的分支
rebase.option.keep.empty=變基期間不移除空提交
rebase.option.root=變基分支中的所有提交
rebase.help.popup.ad.text=按空格開啟外部鏈接
rebase.help.rebase.branch=將基於一個分支的分支變基到另一個分支:
rebase.help.link=git-scm.com 上的 git 變基
rebase.entry.action.name.drop=刪除
rebase.entry.action.name.edit=編輯
rebase.entry.action.name.fixup=Fixup
rebase.entry.action.name.pick=選取
rebase.entry.action.name.reword=改寫
rebase.entry.action.name.squash=壓縮
rebase.entry.action.name.unknown=未知
rebase.git.operation.name=變基
rebase.interactive.dialog.discard.modifications.cancel=取消變基
rebase.interactive.dialog.discard.modifications.continue=繼續變基
rebase.interactive.dialog.discard.modifications.discard=捨棄
rebase.interactive.dialog.discard.modifications.message=放棄變更並取消變基?
rebase.interactive.dialog.git.commands.column.action=操作
rebase.interactive.dialog.git.commands.column.hash=哈希
rebase.interactive.dialog.git.commands.column.subject=主題
rebase.interactive.dialog.git.commands=Git 指令
rebase.interactive.dialog.reset.link.text=重置
rebase.interactive.dialog.reword.hint.text=按 {0} 套用變更
rebase.interactive.dialog.start.rebase=啟動變基
rebase.interactive.dialog.stop.to.edit.text=停止以編輯
rebase.interactive.dialog.title=正在變基提交
rebase.interactive.dialog.view.git.commands.text=查看 Git 指令
rebase.interactive.edit.commit.message.dialog.title=Git 提交訊息
rebase.interactive.edit.commit.message.ok.action.title=繼續變基
rebase.interactive.noop.dialog.text=由於當前分支直接位於基礎分支的正下方或它們指向同一個提交，因此沒有要變基的提交('noop' 情況)。\n繼續嗎? (這會將當前分支重置為基礎分支)
rebase.interactive.noop.dialog.title=Git 變基
rebase.interactive.unstructured.editor.dialog.root.label=Git 根: {0}
rebase.log.action.operation.rebase.name=變基
rebase.log.action.operation.reword.name=改寫
rebase.log.commit.editing.action.commit.not.in.head.error.text=該提交不在當前分支中
rebase.log.commit.editing.action.commit.pushed.to.protected.branch.error.text=該提交已被推送到受保護分支 ''{0}''
rebase.log.commit.editing.action.disabled.parents.description=所選提交已{0}父項
rebase.log.multiple.commit.editing.action.disabled.external.repository.description=所選{0, choice, 1#提交|2#提交}{0, choice,1#|2#}來自外部版本庫
rebase.log.multiple.commit.editing.action.disabled.multiple.repository.description=所選{0, choice, 1#提交|2#提交}{0, choice,1#|2#}來自不同的版本庫
rebase.log.commit.editing.action.progress.containing.branches.title=正在搜尋包含所選提交的分支…
rebase.log.commit.editing.action.prohibit.state.grafting=優選期間不能{0}
rebase.log.commit.editing.action.prohibit.state.merging=合併期間不能{0}
rebase.log.commit.editing.action.prohibit.state.rebasing=變基期間不能{0}
rebase.log.commit.editing.action.prohibit.state.reverting=還原期間不能{0}
rebase.log.commit.editing.action.prohibit.state=不能{0}
rebase.log.undo.impossible.pushed.to.protected.branch.notification.text=來自當前分支的提交已被推送到受保護的分支 {0}
rebase.log.drop.action.custom.text=刪除{0,choice,1#提交|2#提交}
rebase.log.drop.action.failure.title=無法刪除提交
rebase.log.drop.progress.indicator.title=正在刪除{0, choice, 1#提交|2#提交}…
rebase.log.drop.success.notification.title=已刪除{0, choice, 1#提交|2#提交}
rebase.log.drop.undo.failed.title=撤消刪除失敗
rebase.log.drop.undo.impossible.title=無法撤消刪除
rebase.log.drop.undo.progress.title=正在撤消刪除…
rebase.log.multiple.commit.editing.action.cant.find.head=在包含選定{0,choice,1#提交|2#提交}的版本庫中找不到 HEAD 分支
rebase.log.multiple.commit.editing.action.progress.indicator.action.possibility.check=正在檢查是否允許編輯所選提交…
rebase.log.multiple.commit.editing.action.specific.commit.not.in.head=提交 {0} 不在當前分支中
rebase.log.multiple.commit.editing.action.specific.commit.root.or.merge=提交 {0} 有 {1} 個父項
rebase.log.create.fixup.commit.action.failure.title=無法創建 Fixup 提交
rebase.log.create.squash.commit.action.failure.title=無法創建壓縮提交
rebase.log.interactive.action.failure.title=無法啟動變基
rebase.log.reword.action.failure.title=無法編輯提交訊息
rebase.log.action.loading.commit.message.failed.message=無法載入{0,choice,1#提交|2#提交}的變更
rebase.log.reword.action.notification.successful.title=已更改提交訊息
rebase.log.reword.action.notification.undo.failed.title=撤消提交訊息編輯失敗
rebase.log.reword.action.notification.undo.not.allowed.repository.changed.message=版本庫已被更改
rebase.log.reword.action.notification.undo.not.allowed.title=無法撤消提交訊息編輯
rebase.log.action.progress.indicator.loading.commit.message.title=正在載入{0,choice,1#提交|2#提交}詳細資訊…
rebase.log.squash.action.failure.title=無法壓縮提交
rebase.log.squash.new.message.dialog.label=編輯已壓縮提交的訊息
rebase.log.squash.new.message.dialog.title=已壓縮提交訊息
rebase.log.squash.progress.indicator.title=正在壓縮…
rebase.log.squash.success.notification.title=提交已壓縮
rebase.log.squash.undo.failed.title=撤消壓縮失敗
rebase.log.squash.undo.impossible.title=無法撤消壓縮
rebase.log.squash.undo.progress.title=正在撤消壓縮…
rebase.log.reword.action.progress.indicator.title=正在改寫…
rebase.log.reword.action.progress.indicator.undo.title=正在撤消改寫…
rebase.log.reword.dialog.description.label=編輯由 {1} 執行的提交 {0} 的訊息
rebase.log.reword.dialog.failed.pushed.to.protected.message=無法編輯所選{0,choice,1#提交|2#提交}: 提交 {1} 已被推送至受保護分支 ''{2}''
rebase.log.reword.dialog.failed.repository.changed.message=無法編輯選定{0,choice,1#提交|2#提交}: 版本庫狀態已被更改
rebase.log.reword.dialog.title=編輯提交訊息
rebase.notification.action.abort.text=中止
rebase.notification.action.continue.text=繼續
rebase.notification.action.retry.text=重試
rebase.notification.action.view.shelf.text=查看擱置…
rebase.notification.action.view.stash.text=查看儲藏…
rebase.notification.conflict.title=由於衝突，變基停止
rebase.notification.editing.title=變基已停止，可以進行編輯
rebase.notification.failed.continue.title=繼續變基失敗
rebase.notification.failed.rebase.title=變基失敗
rebase.notification.failed.shelf.text=無法擱置本地未提交的變更:
rebase.notification.failed.stash.text=無法儲藏本地未提交的變更:
rebase.notification.no.rebase.in.progress.abort.title=無法中止變基
rebase.notification.no.rebase.in.progress.continue.title=無法繼續變基
rebase.notification.no.rebase.in.progress.message=沒有正在進行的變基
rebase.notification.not.allowed.detached.message.first=您在 {0} 中處於游離的 HEAD 狀態。
rebase.notification.not.allowed.detached.message.second=無法變基。
rebase.notification.not.allowed.empty.repository.message=版本庫 {0} 為空。
rebase.notification.not.allowed.grafting.message.first={0} 中有一個未完成的優選行程。
rebase.notification.not.allowed.grafting.message.second=在開始變基前，應先完成這項操作。
rebase.notification.not.allowed.merging.message.first={0} 中有一個未完成的合併行程。
rebase.notification.not.allowed.merging.message.second=在開始變基前，應先完成合併。
rebase.notification.not.allowed.message=無法在 {0} 中進行變基。
rebase.notification.not.allowed.rebasing.message.first={0} 中有一個未完成的變基行程。
rebase.notification.not.allowed.rebasing.message.second=在開始另一個變基前，應先完成這項操作。
rebase.notification.not.allowed.reverting.message.first={0} 中有一個未完成的還原行程。
rebase.notification.not.allowed.reverting.message.second=在開始變基前，應先完成這項操作。
rebase.notification.not.allowed.title=不允許變基
rebase.notification.not.started.title=變基未啟動
rebase.notification.saved.local.changes.part.shelf.text=變基前已擱置本地變更。
rebase.notification.saved.local.changes.part.stash.text=變基前已儲藏本地變更。
rebase.notification.successful.rebased.checkout.message=已簽出{0,choice,0#|1# {1} }並將其變基{2,choice,0#|1#到 {3}}
rebase.notification.successful.rebased.message=已{0,choice,0#|1#將 {1} }變基{2,choice,0#|1#到 {3}}
rebase.notification.successful.title=變基成功
rebase.notification.all.conflicts.resolved.title=解決衝突
rebase.notification.all.conflicts.resolved.text=所有衝突都已解決。要繼續變基嗎?
rebase.notification.all.conflicts.resolved.continue.rebase.action.text=繼續變基(&T)
rebase.progress.indicator.aborting.title=正在中止變基行程…
rebase.progress.indicator.conflicts.collecting.title=正在收集要解決的衝突…
rebase.progress.indicator.continue.title=正在繼續變基行程…
rebase.progress.indicator.preparing.title=正在準備變基…
rebase.progress.indicator.retry.title=正在重試變基行程…
rebase.progress.indicator.title=正在變基…
rebase.simple.editor.dialog.title=Git 編輯器
rebase.update.project.abort.task.title=正在中止變基…
rebase.update.project.conflict.error.notification.description=然後，您可以<b>繼續變基</b>。<br/>您也可以<b>中止變基</b>以恢復原始分支並停止變基。
rebase.update.project.conflict.error.notification.title=無法繼續變基
rebase.update.project.conflict.merge.description.label=檢測到合併衝突。請先解決這些衝突，然後再繼續變基。
rebase.update.project.notification.abort.cancel.message=已取消中止變基
rebase.update.project.notification.abort.error.message=中止變基時出錯
rebase.update.project.notification.abort.success.message=已中止變基
rebase.update.project.notification.failed.message=無法繼續變基。{0}
rebase.update.project.notification.failed.title=變基錯誤
rebase.using.log.couldnt.start.error=由於 IDE 生成的 'git-rebase-todo' 檔案無效，因此無法執行變基。要使用 Git 原生檔案生成來重試變基嗎?
merge.update.project.generic.error.title=無法完成更新
merge.update.project.conflict.merge.description.label=檢測到合併衝突。請先解決這些衝突，然後再繼續更新。

remove.removing=正在移除檔案…
repository.action.missing.roots.misconfigured=設定的 Git 根都不在 Git 下。設定的目錄中必須包含“.git”目錄。
repository.action.missing.roots.title=沒有 Git 根
repository.action.missing.roots.unconfigured.message=沒有為專案設定 Git 根。
repository.not.found.error=找不到 {0} 的已設定 git 版本庫
reset.action.name=重置 Head…
reset.commit.invalid=指定的提交表達式未通過驗證。
reset.commit.label=為提交(&C):
reset.commit.tooltip=由於重置操作而將成為當前 HEAD 的提交。
reset.title=重置 Head
reset.type.tooltip=<html>重置類型(另請參閱 <code>git reset</code> man 頁面):<ul><li><b>Mixed</b> 將重置索引，但不會重置工作樹</li><li><b>Soft</b> 將保留索引和工作樹，只是移動 HEAD 指針</li><li><b>Hard</b> 將重置索引和工作樹。<em>工作樹中的變更會丟失</em></li></ul></html>
reset.type=重置類型(&T):
reset.validate=驗證(&V)
resetting.title=正在重置 HEAD…
restore.conflict.dialog.description.label.text=在 {0} 之前儲存的未提交變更與 {1} 中的檔案衝突
restore.conflict.diff.dialog.left.shelf.title=擱置中的未提交變更
restore.conflict.diff.dialog.left.stash.title=儲藏中的未提交變更
restore.conflict.diff.dialog.right.title=來自 {0} 的變更
preserving.process.local.changes.not.restored.error.title=未恢復本地變更
restore.notification.failed.shelf.message=在更新之前，未提交的變更已儲存到<a href='saver'>擱置</a>。<br/>更新未完成，您的工作樹中有未解決的合併<br/>請解決衝突，完成更新並手動恢復變更。
restore.notification.failed.stash.message=在更新之前，未提交的變更已儲存到<a href='saver'>儲藏</a>。<br/>更新未完成，您的工作樹中有未解決的合併<br/>請解決衝突，完成更新並手動恢復變更。
restore.notification.failed.title=未恢復本地變更

revision.load.contents=載入修訂內容

reference.validating.progress.indicator.title=正在驗證修訂…

save.load.conflict.dialog.diff.left.title=您未提交的變更
save.load.conflict.dialog.diff.right.title=遠端變更
save.notification.failed.shelf.text=試圖在 {0} 之前在擱置中儲存未提交的變更，但失敗並出現錯誤。<br/>{1}
save.notification.failed.stash.text=試圖在{0}之前在儲藏中儲存未提交的變更，但失敗並出現錯誤。<br/>{1}
save.notification.failed.title=無法儲存未提交的變更

smart.operation.dialog.north.panel.label.shelf.text=<html>您對以下檔案的本地變更將被{0}覆蓋。<br/>{1}可以擱置這些變更，{0}，並在之後取消擱置。</html>
smart.operation.dialog.north.panel.label.stash.text=<html>您對以下檔案的本地變更將被{0}覆蓋。<br/>{1} 可以儲藏這些變更，{0}，並在之後取消儲藏。</html>
smart.operation.dialog.ok.action.shelf.description=擱置本地變更，{0}，取消擱置
smart.operation.dialog.ok.action.stash.description=儲藏本地變更，{0}，取消儲藏
smart.operation.dialog.operation.name.and.overwrite.local.changes={0}並覆蓋本地變更
smart.operation.dialog.git.operation.name.problem=Git {0} 問題
smart.operation.dialog.smart.operation.name=智能{0}
smart.operation.dialog.don.t.operation.name=不{0}

stash.action.name=儲藏
stash.button=創建儲藏
stash.error.can.not.stash.changes.now=現在無法儲藏變更
stash.keep.index.tooltip=如果選中此複選框，已建立索引的變更將保留在索引中。
stash.keep.index=保留索引(&I)
stash.message.tooltip=在此處輸入儲藏訊息。
stash.message=訊息(&M):
stash.progress.indicator.title=正在儲藏來自 ''{0}'' 的變更…
stash.title=儲藏
stash.unstash.conflict.dialog.description.label.text=更新前儲藏的未提交變更與更新後的檔案衝突。
stash.unstash.progress.indicator.title=正在消除對 ''{0}'' 的變更…
stash.unstash.unresolved.conflict.warning.notification.message=您的未提交變更已儲存到<a href='saver'>儲藏</a>。<br/>取消儲藏未完成，您的工作樹中有未解決的合併<br/>請<a href='resolve'>解決</a>衝突並刪除儲藏。
stash.unstash.unresolved.conflict.warning.notification.title=本地變更已恢復，但存在衝突
stash.error=無法儲藏 {0}
# suppress inspection "UnusedProperty" - used in third-party plugins
stashing.title=正在儲藏變更…
stashing.progress.title=正在儲藏變更…
stash.editor.diff.preview.empty.title=儲藏

stash.tab.name=儲藏和擱置
action.Git.Stash.Pop.text=彈出
action.Git.Stash.Pop.description=彈出所選儲藏
action.Git.Stash.Apply.text=套用
action.Git.Stash.Apply.description=套用所選儲藏
action.Git.Stash.UnstashAs.text=取消儲藏…
action.Git.Stash.UnstashAs.description=彈出或套用選定的儲藏作為新分支(帶或不帶索引)
action.Git.Stash.Drop.text=刪除
action.Git.Stash.Drop.description=丟棄所選儲藏
action.Git.Show.Stash.text=顯示 Git 儲藏
action.Git.Show.Stash.description=顯示“Git 儲藏”工具視窗頁籤
action.Git.Stash.Refresh.text=重新整理儲藏
action.Git.Stash.Refresh.description=重新整理儲藏列表

stash.unstash.changes.in.root.dialog.title=取消儲藏 {0} 中的變更
stash.unstash.changes.current.branch.label=當前分支:

tag.action.name=標記
tag.button=創建標籤
tag.commit.label=提交(&C)
tag.commit.tooltip=輸入要標記的提交或物件的名稱，或留空以使用 HEAD。
tag.error.creating.message.file.message=無法創建訊息檔案: {0}
tag.error.invalid.commit=該提交或物件名稱無效。
tag.error.tag.exists=存在同名的標記。
tag.force.tooltip=強制創建標記，即使已存在另一個具有此名稱的標記。
tag.force=強制(&F)
tag.getting.existing.tags=正在獲取現有標記…
tag.message.label=訊息(&M):
tag.message.tooltip=如果訊息不為空，則創建帶註解的標記。
tag.name.label=標記名稱(&N):
tag.name.tooltip=在此處輸入新的標記名稱。
tag.title=標記
tag.validate.tooltip=點擊此按鈕驗證要標記的提交
tag.validate=驗證(&V)
tag.progress.title=正在添加標記…

unstash.action.name=取消儲藏
unstash.branch.label=作為新分支(&B):
unstash.branch.tooltip=如果輸入非空名稱，該儲藏將作為新分支簽出。
unstash.button.apply=套用儲藏
unstash.button.branch=分支
unstash.button.pop=消除儲藏
unstash.clear.tooltip=刪除版本庫中的所有儲藏。
unstash.clear=清除(&C)
unstash.clearing.stashes=正在清除儲藏…
unstash.drop.tooltip=刪除所選儲藏
unstash.drop=刪除(&D)
unstash.conflict.dialog.description.label.text=取消儲藏 {0} 時發生衝突
unstash.conflict.diff.dialog.left.title=本地變更
unstash.conflict.diff.dialog.right.title=來自儲藏的變更
unstash.dialog.remove.stash.progress.indicator.title=正在移除儲藏 {0}…
unstash.dialog.show.stashes.error.dialog.title=無法顯示儲藏列表
unstash.dialog.stash.list.load.progress.indicator.title=正在載入儲藏列表…
unstash.dialog.unresolved.conflict.warning.notification.message=取消儲藏未完成，您的工作樹中存在未解決的合併<br/>請<a href='resolve'>解決</a>衝突。
unstash.dialog.unresolved.conflict.warning.notification.title=取消儲藏期間未解決衝突
unstash.pop.stash.tooltip=如果選中，則該儲藏在套用後會被刪除。
unstash.pop.stash=消除儲藏(&P)
unstash.reinstate.index.tooltip=嘗試復原索引以及工作樹變更。
unstash.reinstate.index=復原索引(&I)
unstash.stashes=儲藏(&S):
unstash.title=取消儲藏變更
unstash.unstashing=正在取消儲藏…
unstash.view.tooltip=查看所選儲藏
unstash.view=查看(&V)
unstash.view.dialog.title=受 {0} 影響的路徑
unstash.error.can.not.unstash.changes.now=現在無法取消儲藏變更
unstash.unstashed.with.conflicts.error.title=已取消儲藏，但存在衝突

update.options.display.name=Git 更新設定
update.notification.update.error=無法更新
update.notification.choose.upstream.branch=選擇上游分支
update.skip.root.reason.no.tracked.branch=無跟踪分支
update.skip.root.reason.detached.head=游離的 HEAD

util.remote.renderer.none=無
vfs.listener.add.single.prompt=要將以下檔案添加到 Git 嗎?\n{0}\n\n如果您選擇“取消”，以後仍可以手動添加。
vfs.listener.add.single.title=將檔案添加到 Git
vfs.listener.add.title=將檔案添加到 Git
vfs.listener.checking.ignored=正在檢查忽略的檔案…
vfs.listener.delete.single.prompt=要從 Git 中刪除以下檔案嗎?\n{0}\n\n如果您選擇“取消”，以後仍可以手動刪除。
vfs.listener.delete.single.title=從 Git 中刪除檔案
vfs.listener.delete.title=從 Git 中刪除檔案

git.commit.message.empty=請指定提交訊息
git.commit.message.empty.title=提交訊息為空

git.executable.detect.progress.title=正在檢測 Git 可執行檔案
git.executable.version.progress.title=正在識別 Git 版本
git.executable.version.is=Git 版本為 {0}
git.executable.error.file.not.found=沒有此類檔案: {0}

git.executable.validation.error.start.title=無法執行 Git
git.executable.validation.error.version.title=Git 版本 {0} 不受支援
git.executable.validation.error.version.message=至少需要 {0}
git.executable.validation.error.wsl1.unsupported.message=不支持 WSL 版本 1，請參閱 <a href='https://youtrack.jetbrains.com/issue/IDEA-242469'>IDEA-242469</a>
git.executable.validation.error.xcode.title=接受 XCode/iOS 授權以執行 Git
git.executable.validation.error.xcode.message=執行“sudo xcodebuild -license”並重試(需要管理員權限)
git.executable.validation.cant.identify.executable.message=無法識別 git 可執行檔案 {0} 的版本
git.executable.unknown.error.message=無法啟動 Git 行程: {0}
git.error.cant.process.output=無法處理 Git 輸出: {0}

git.executable.notification.title=無法啟動 Git
git.executable.notification.description=Git 可執行檔案的路徑可能無效。

executable.error.git.not.installed=未安裝 Git
executable.mac.fix.path.action=修正路徑
executable.mac.error.invalid.path.to.command.line.tools=Command Line Tools 的路徑無效

git.unstash.clear.confirmation.message=移除所有儲藏? 此操作無法撤消。
git.unstash.clear.confirmation.title=移除所有儲藏?
git.unstash.drop.confirmation.message=<html>要移除 {0} 嗎?<br/>“{1}”</html>
git.unstash.drop.confirmation.title=移除儲藏 {0}?
vcs.history.action.gitlog=在 Git 日誌中顯示

# suppress inspection "UnusedProperty": used by 3-party plugins

exportable.Git.Application.Settings.presentable.name=Git

git.add.to.exclude.file.action.text=.git/info/exclude
git.add.to.exclude.file.action.description=將條目添加到 .git/info/exclude
git.open.exclude.file.action.text=開啟 .git/info/exclude
git.open.exclude.file.action.description=在編輯器中開啟 .git/info/exclude

git.fetch.progress=正在獲取…

action.CopyPathFromRepositoryRootProvider.text=版本庫根路徑
action.git4idea.commands.TestGitHttpLoginDialogAction.text=測試 Git 登錄對話框
action.Git.Log.DeepCompare.text=無優選提交
action.Git.Log.DeepCompare.description=高亮顯示尚未優選到當前分支的提交
group.Git.ContextMenu.text=&Git
group.Git.Menu.text=&Git
group.Git.MainMenu.RebaseActions.text=變基(_R)
group.Git.MainMenu.MergeActions.text=合併(_M)
group.Git.MainMenu.LocalChanges.text=未提交的變更(_U)
action.Git.Rebase.Skip.text=跳過提交
action.Git.Rebase.Skip.progress.title=變基期間跳過提交…
action.Git.Rebase.Continue.text=繼續變基
action.Git.Revert.Abort.text=中止還原
action.Git.CherryPick.Abort.text=中止優選
action.Git.Merge.Abort.text=中止合併
action.Git.Rebase.Abort.text=中止變基
action.Git.Rebase.text=變基…
action.Git.Rebase.operation.name=變基
action.Git.Pull.text=拉取…
action.Git.Fetch.text=獲取
action.Git.Clone.text=克隆…
action.Git.Configure.Remotes.text=管理遠端…
action.Git.Reset.text=重置 HEAD…
action.Git.Unstash.text=取消儲藏變更…
action.Git.Stash.text=儲藏變更…
action.Git.Stash.Silently.text=無提示儲藏
action.Git.Merge.text=合併…
action.Git.Tag.text=新建標記…
action.Git.Branches.text=分支(_B)…
action.Git.ResolveConflicts.text=解決衝突…
action.Git.CompareWithBranch.text=與分支比較…
action.Git.Add.text=添加
action.Git.Interactive.Rebase.text=從這裡進行交互式變基…
action.Git.Interactive.Rebase.description=顯示交互式變基的對話框，可以在該對話中對提交執行壓縮、fixup、重新排序、移除和改寫
action.Git.Squash.Into.Commit.text=壓縮到…
action.Git.Squash.Into.Commit.description=創建壓縮提交
action.Git.Fixup.To.Commit.text=Fixup…
action.Git.Fixup.To.Commit.description=創建 fixup 提交
action.Git.Rename.Local.Branch.text=重命名…
action.Git.Rename.Local.Branch.description=重命名本地分支
action.Git.New.Branch.description=僅選擇一個分支以繼續創建新分支
action.Git.New.Branch.dialog.title=從 {0} 創建分支
action.Git.Update.Selected.text=更新所選內容
action.Git.Update.Selected.description=從跟踪的遠端獲取並使用 {1} 或像 `git fetch branch:branch` 一樣的快進(如果可能)更新所選{0,choice,1#分支|2#分支}
action.Git.Update.Selected.description.already.running=更新已在執行
action.Git.Update.Selected.description.select.non.current=僅選擇非當前分支
action.Git.Update.Selected.description.tracking.not.configured=沒有為所選{0,choice,1#分支|2#分支}設定跟踪分支
action.Git.Delete.Branch.title=刪除{0,choice,1#分支|2#分支}
action.Git.Compare.With.Current.title=與當前分支進行比較
action.Git.Compare.Selected.title=比較分支
action.Git.Compare.Selected.description=相互比較選定分支
action.Git.Compare.Selected.description.disabled=從同一版本庫中選擇分支
action.Git.Show.My.Branches.title=顯示我的分支
action.Git.Show.My.Branches.description.not.support.indexing=某些版本庫不支持索引。
action.Git.Show.My.Branches.description.not.all.roots.indexed=並沒有為所有版本庫編制索引。
action.Git.Show.My.Branches.description.not.graph.ready=該日志尚未就緒，請稍候。
action.Git.Show.My.Branches.description.is.my.branch=如果分支的所有獨佔提交都是由“我”(即當前 Git 作者)執行的，則此分支為“我的”。
action.Git.Show.My.Branches.description.calculating.branches.progress=正在計算我的分支
action.Git.Fetch.title=獲取所有遠端
action.Git.Fetch.description.fetch.in.progress=正在獲取…
action.Git.Toggle.Favorite.title=標記/取消標記為收藏項
action.Git.Loading.Branches.progress=正在載入分支…
group.Git.Log.Branches.Settings.text=分支窗格設定
group.Git.Log.Branches.Grouping.Settings.text=分組依據
group.Git.Log.Branches.Settings.Separator.text=單擊時
action.Git.Log.Branches.Change.Branch.Filter.On.Selection.text=更新分支篩選器
action.Git.Log.Branches.Change.Branch.Filter.On.Selection.description=選擇分支後，按此分支篩選日誌
action.Git.Log.Branches.Navigate.Log.To.Branch.On.Selection.text=在日誌中導航到分支 Head
action.Git.Log.Branches.Navigate.Log.To.Branch.On.Selection.description=選擇分支後，在日誌中導航到該分支 HEAD
action.Git.Log.Branches.Navigate.Log.To.Selected.Branch.text=在日誌中導航到所選分支 Head
action.Git.Log.Branches.Change.Branch.Filter.text=更新日誌中的分支篩選器
action.Git.Log.Branches.Change.Branch.Filter.description=使用所選分支更新日誌中的分支篩選器
action.Git.Log.Edit.Remote.text=編輯遠端
action.Git.Log.Remove.Remote.text=移除 {0,choice,1#遠端|2#遠端}
group.Git.HEAD.Branch.Filter.title=HEAD(當前分支)
group.Git.Local.Branch.title=本地
group.Git.Remote.Branch.title=遠端
action.Git.Checkout.Branch.text=簽出所選…
action.Git.Checkout.Branch.description=簽出所選分支
action.Git.Log.Hide.Branches.text=隱藏 Git 分支
action.Git.Log.Show.Branches.text=分支
action.Git.Reword.Commit.text=編輯提交訊息…
action.Git.Reword.Commit.description=通過 git rebase 或 amend 的改寫選項更改提交訊息
action.Git.Squash.Commits.text=壓縮提交…
action.Git.Drop.Commits.text=刪除提交
action.Git.Uncommit.text=撤消提交…
action.Git.Uncommit.description=撤消最後一次提交並將其變更放入所選變更列表
action.Git.Revert.In.Log.text=還原提交
action.Git.Revert.In.Log.template.text=還原{0,choice,1#提交|2#提交}
action.Git.Revert.In.Log.description=生成新提交，這會還原在原始提交中所做的變更
action.Git.Reset.In.Log.text=將當前分支重置到此處…
action.Git.CreateNewTag.text=新建標記…
action.Git.CreateNewTag.description=創建指向此提交的新標記
action.Git.CreateNewBranch.text=新建分支…
action.Git.CreateNewBranch.description=從所選提交開始創建新分支
group.Git.CheckoutGroup.text=簽出
group.Git.CheckoutGroup.description=簽出所選修訂或所選提交中的分支
action.Git.BrowseRepoAtRevision.text=在修訂版中顯示版本庫
action.Git.Log.text=顯示 Git 版本庫日誌…
action.Git.Init.text=創建 Git 版本庫…
action.Git.Init.error=Git init 失敗
checkbox.dont.warn.again=不再警告
checkbox.run.git.hooks=執行 Git 掛鈎
tooltip.run.git.hooks=如果未選中，將使用 '--no-verify' 參數跳過 Git hook
action.NotificationAction.text.resolve=解決…
action.NotificationAction.GitDeleteBranchOperation.text.restore=恢復
action.NotificationAction.GitDeleteBranchOperation.text.view.commits=查看提交
action.NotificationAction.GitDeleteBranchOperation.text.delete.tracked.branch=刪除跟踪的分支
action.NotificationAction.GitDeleteTagOperation.text.restore=恢復
action.NotificationAction.GithubNotifications.text.configure=設定…
action.NotificationAction.GitMergeAction.text.view.commits=查看提交
action.NotificationAction.GitRewordOperation.text.undo=撤消
action.NotificationAction.GitUpdateSession.text.view.commits=查看提交
action.not.possible.in.fresh.repo.show.diff=正在比較修訂
action.not.possible.in.fresh.repo.rename.branch=正在重命名分支
action.not.possible.in.fresh.repo.checkout=簽出
action.not.possible.in.fresh.repo.push=正在推送提交

settings.git.option.group=Git
settings.add.suffix=在挑選推送到受保護分支的提交時，添加 'cherry-picked from <hash>' 後綴
settings.crlf=如果即將提交 CRLF 行分隔符，則發出警告
settings.detached.head=在游離的 HEAD 中或變基期間提交時發出警告
settings.update.method=更新方法:
settings.auto.update.on.push.rejected=如果當前分支的推送被拒，則自動更新
settings.push.dialog=顯示提交和推送的推送對話框
settings.push.dialog.for.protected.branches=僅在提交到受保護分支時顯示推送對話框
settings.protected.branched=受保護分支:
settings.synchronize.branch.protection.rules=從 GitHub 載入分支保護規則
settings.synchronize.branch.protection.rules.description=將 GitHub 規則添加到本地規則中，並在每次獲取時進行同步
settings.credential.helper=使用憑證幫助程序
settings.filter.update.info=按路徑過濾“更新專案”資訊:
settings.explicitly.check=顯式檢查遠端分支上的傳入提交:
settings.clean.working.tree=使用以下方法清理工作樹:
settings.git.incoming.change.strategy.text.auto=自動
settings.git.incoming.change.strategy.text.always=始終
settings.git.incoming.change.strategy.text.never=從不
settings.git.update.method.rebase.description=在傳入變更上變基當前分支
settings.git.update.method.rebase=變基
settings.git.update.method.merge.description=將傳入變更合併到當前分支
settings.git.update.method.merge=合併
settings.git.update.method.branch.default=分支預設
settings.enable.staging.area=啟用暫存區域
settings.enable.staging.area.comment=這將禁用變更列表支援並刪除專案中的所有變更列表。僅適用於非強制回應提交介面。

clone.dialog.checking.git.version=正在檢查 Git 版本…
push.dialog.push.tags=推送標記
push.dialog.push.tags.combo.current.branch=當前分支
push.dialog.push.tags.combo.all=所有
push.dialog.target.panel.define.remote=定義遠端
push.dialog.target.panel.add.remote=添加遠端
push.dialog.target.panel.couldnt.add.remote=無法添加遠端: {0}
push.dialog.target.panel.adding.remote=正在添加遠端…
push.dialog.target.panel.can.t.push=無法推送
push.dialog.target.panel.empty.repository=空版本庫
push.dialog.target.panel.detached.head=游離的 HEAD
push.dialog.target.panel.new=新建
push.dialog.preview.commits.before.push=對於向不受保護分支的提交和推送，應在推送之前預覽提交
push.local.history.system.label.after=推送後
push.local.history.system.label.before=推送前
push.notification.description.force.pushed=強制推送 {0} 到 {1}
push.notification.description.new.branch.with.many.tags=推送 {0} 到新分支 {1}，並將 {2} 標籤到 {3}
push.notification.description.new.branch.with.single.tag=推送 {0} 到新分支 {1}，並將 {2} 標籤到 {3}
push.notification.description.new.branch=已推送 {0} 到新分支 {1}
push.notification.description.push.with.lease.rejected=使用 Force-with-lease 推送 {0} 到 {1} 被拒
push.notification.description.pushed.many.tags=已推送 {0} 標籤到 {1}
push.notification.description.pushed.single.tag=已推送標籤 {0} 到 {1}
push.notification.description.pushed.with.many.tags=已將 {0} 個{0,choice,1#提交|2#提交} 推送到 {1}，將 {2} 標籤推送到 {3}
push.notification.description.pushed.with.single.tag=已將 {0} 個{0,choice,1#提交|2#提交} 推送到 {1}，將標籤 {2} 推送到 {3}
push.notification.description.pushed=已將 {0} 個{0,choice,1#提交|2#提交} 推送到 {1}
push.notification.description.rejected.and.cancelled=推送被拒，更新被取消
push.notification.description.rejected.and.conflicts=由於更新期間發生衝突，推送被取消。<br/>檢查是否已正確解決衝突，然後再次調用推送。
push.notification.description.rejected.and.failed=因發生錯誤，推送被拒，更新失敗
push.notification.description.rejected.and.incomplete=由於更新過程中並未解決所有衝突，推送被取消。<br/>請解決衝突並再次調用推送
push.notification.description.rejected.by.remote=推送 {0} 到 {1} 被遠端拒絕
push.notification.description.rejected=推送到 {0} 被拒
push.notification.description.up.to.date=所有內容都已處於最新狀態
push.notification.force.push.anyway.action=仍然強制推送
push.notification.force.push.progress.title.pushing=正在推送…
push.notification.force.with.lease.help.description.first=Force-with-lease 推送阻止覆寫尚未獲取到本地版本庫的遠端更改
push.notification.force.with.lease.help.description.second=獲取最新變更，以確認能否安全丟棄變更並重複執行推送操作
push.notification.force.with.lease.help=何為 Force-with-Lease?
push.notification.partially.failed.title=推送部分失敗
push.notification.partially.rejected.title=推送部分被拒
push.notification.push.failed.title=推送失敗
push.notification.rejected.title=推送被拒
push.notification.single.repo.success.description=推送操作期間收到 {0} 個{0, choice,1#提交|2#提交}
push.notification.successful.title=推送成功
push.notification.update.action=更新
push.notification.view.files.action=查看在推送期間更新的檔案
push.notification.view.filtered.commits.actions=查看與篩選器符合的 {0} 個{0,choice,1#提交|2#提交}
push.notification.view.received.commits.action=查看收到的{0,choice,1#提交|2#提交}
push.rejected.dialog.title=推送被拒
push.rejected.many.repos.item={1} 中的 {0}
push.rejected.many.repos.single.branch=當前分支 "{0}" 的推送被拒。
push.rejected.many.repos=當前分支的推送被拒:
push.rejected.merge.needed.with.problem=在推送前，必須先合併遠端更改。<br/><br/>在這種情況下，強烈建議進行<b>合併</b>，因為存在未推送的合併提交。\n<br/>進行變基可能導致問題。
push.rejected.merge.needed=推送前需要合並遠端變更。
push.rejected.merge=Merge(&M)
push.rejected.only.one.git.repo=當前分支 "{0}" 的推送被拒。
push.rejected.rebase.anyway=仍然變基
push.rejected.rebase=變基(&R)
push.rejected.remember.checkbox=請記住更新方法，並在日後進行無提示更新(&S)。稍後可以在“{0} | 版本控制”中進行更改。<br/>
push.rejected.specific.repo=版本庫 "{1}" 中的當前分支 "{0}" 推送被拒。
push.rejected.update.not.rejected.repositories.as.well.checkbox=更新所有版本庫(&U)

install.download.and.install.action=下載並安裝
install.installing.progress=正在安裝…
install.downloading.progress=正在下載…
install.success.message=已安裝 Git
install.general.error=無法安裝 Git
install.mac.error.couldnt.start.command.line.tools=無法啟動 Command Line Tools 安裝
install.mac.requesting.command.line.tools=正在請求 XCode Command Line Developer Tools
git.status.not.changed=未更改
git.status.renamed=已重命名
git.status.copied=已複製
git.status.type.changed=已更改類型
git.status.unmerged=已取消合併
git.status.untracked=已取消跟踪
git.status.index=在暫存區域中{0}
git.status.work.tree=在工作目錄中{0}
git.status.unmerged.index=我們{0}
git.status.unmerged.work.tree=由他人{0}
git.status.unmerged.both=兩者{0}

git.status.bar.widget.name=Git 分支
git.status.bar.widget.text.cherry.pick=正在 {0} 中優選
git.status.bar.widget.text.revert=正在 {0} 中還原
git.status.bar.widget.text.merge=正在合併 {0}
git.status.bar.widget.text.rebase=正在變基 {0}
git.status.bar.widget.tooltip.detached=Git: 游離的 HEAD 不指向任何分支

git.light.status.bar.display.name=Git
git.light.status.bar.tooltip=當前 Git 分支: {0}
git.light.status.bar.text=Git: {0}
git.light.cant.find.current.revision.exception.message=找不到 {0} 的當前修訂

status.exception.message.unexpected.xstatus.ystatus=意外的狀態符號: ''{0}{1}''
status.exception.message.unexpected.status=意外的狀態符號: ''{0}''
status.exception.message.line.is.too.short=此行過短
status.exception.message.unexpected=意外的狀態符號
status.exception.message.missing.path=缺少初始路徑
status.exception.message.format.message.xstatus.ystatus.line.output={0} xStatus=[{1}]，yStatus=[{2}]，行=[{3}]\n輸出:\n{4}

stage.tree.node.staged=已暫存
stage.tree.node.unstaged=已取消暫存
stage.tree.node.unmerged=已取消合併
stage.tree.node.untracked=已取消跟踪
stage.tree.node.ignored=已忽略
stage.content.staged=已暫存
stage.content.local=本地
error.no.selected.roots.to.commit=選擇要提交的根
error.no.staged.changes.to.commit=暫存要提交的檔案
error.no.staged.changes.no.commit.message=暫存要提交的檔案並指定提交訊息
stage.commit.process=正在提交暫存變更…
stage.commit.successful=已提交 {0}: {1}
stage.commit.failed=無法提交 {0}
stage.loading.status=正在載入變更…
stage.add.action.text=暫存
stage.add.process=正在暫存檔案…
stage.add.error.title=無法暫存檔案
stage.reset.action.text=取消暫存
stage.reset.process=正在取消暫存檔案…
stage.reset.error.title=無法取消暫存檔案
stage.revert.action.text=回滾
stage.revert.process=正在回滾檔案…
stage.revert.error.title=無法回滾檔案
stage.add.range.command.name=暫存變更
stage.revert.unstaged.range.command.name=回滾未暫存的變更
stage.revert.staged.range.command.name=回滾暫存的變更
action.label.add.unstaged.range=暫存
action.label.add.unstaged.range.tooltip=向索引中添加新的變更
action.label.reset.staged.range=取消暫存
action.label.reset.staged.range.tooltip=移除索引中的變更
stage.vfs.write.process=正在將 {0} 寫入 Git 索引
stage.vfs.read.process=正在從 Git 索引讀取 {0}
stage.vfs.refresh.process=正在重新整理 Git 索引檔案
stage.vfs.presentable.file.name=已暫存: {0}
stage.vfs.editor.tab.tooltip=''{0}'' 的暫存版本
stage.vfs.editor.notification.text=這是暫存版本的 ''{0}''
stage.vfs.editor.notification.link=開啟本地版本
stage.diff.local.content.exception.message=無法獲取本地檔案: ''{0}''
changes.view.merge.action.text=合併

action.Git.Show.Stage.text=顯示暫存區域
action.Git.Stage.Add.All.text=全部暫存
action.Git.Stage.Add.All.description=將所有未暫存的變更和未跟踪的檔案添加到索引
action.Git.Stage.Add.Tracked.text=暫存全部已跟踪項
action.Git.Stage.Add.Tracked.description=將跟踪檔案中所有未暫存的變更添加到索引
group.Git.Stage.Ui.Settings.text=檢視選項
action.Git.Stage.Show.Staged.text=顯示暫存版本
action.Git.Stage.Show.Staged.description=在編輯器中顯示當前檔案的暫存內容
action.Git.Stage.Show.Local.text=顯示本地版本
action.Git.Stage.Show.Local.description=在編輯器中顯示當前檔案的本地內容
action.Git.Stage.Compare.Local.Staged.text=與暫存版本比較
action.Git.Stage.Compare.Staged.Local.text=與本地版本比較
action.Git.Stage.Compare.Staged.Head.text=與 HEAD 版本比較
action.Git.Stage.Compare.Three.Versions.text=比較 HEAD 版本、暫存版本和本地版本
action.Git.Stage.ThreeSideDiff.text=比較 HEAD 版本、暫存版本和本地版本
action.Git.Stage.ThreeSideDiff.description=顯示包含 HEAD、暫存和本地版本的差異視窗，從中可以交互式地將變更添加到暫存區域
group.Git.Stage.Index.File.Menu.text=Git


branches.selected.branches.updated.title=已更新{0,choice,1#分支|2#分支}:\n\n{1}
branches.update.failed=更新失敗
branches.updating.process=正在更新分支…
branches.checkout.failed.description=無法覆蓋 {0} 分支，因為某些提交可能會丟失
branches.creation.failed.title=新分支創建失敗
branches.checkout.failed.title=簽出失敗
branches.checking.existing.commits.process=正在檢查現有提交…
branches.create.new.branch.dialog.title=創建新分支
branches.tag.0=標記 ''{0}''
branches.branch.0=分支 ''{0}''
in.branches.all.repositories=在所有版本庫中
branches.tags=標記
branches.branches=分支
repositories=版本庫
common.remote.branches=公共遠端分支
common.local.branches=公共本地分支
update.checks.not.supported.git.2.9.required=不支持更新檢查。需要 Git 2.9 及以上版本
action.fetch.text=獲取
fetching=正在獲取…
branches.current.branch=當前分支
branches.tracking.branch.doesn.t.configured.for.s=沒有為 {0} 設定跟踪分支
branches.update.is.already.running=更新已在執行
branches.update=更新
branches.current.branch.name=當前
branches.selected.branch.name=已選擇
branches.checkout.and.rebase.onto.in.one.step=簽出 {0}，並在一個步驟中將其變基到 {1} (類似於 `git rebase HEAD {2}`)
branches.checkout.and.rebase.onto.current=簽出並變基到當前分支
branches.checkout.and.rebase.onto.branch=簽出並變基到 {0}
branches.rebase.is.not.possible.in.the.detached.head.state=在游離的 HEAD 狀態下無法變基
branches.rebase.onto=將 {0} 變基到 {1}
branches.rebase.current.onto.selected=將當前分支變基到所選分支
branches.merge.into=將 {0} 合併到 {1} 中
branches.merge.into.current=合併到當前分支
branches.compare.the.current.working.tree.with=將當前工作樹與 {0} 中的樹進行比較
branches.show.diff.with.working.tree=顯示與工作樹的差異
branches.show.commits.in=在{0}中顯示{1}中缺少的提交
branches.compare.with.current=與當前分支進行比較
branches.compare.with.branch=與{0}比較
branches.new.branch.from.branch=從 {0} 新建分支…
branches.new.branch.from.branch.description=從 {0} 創建新分支
branches.checkout.s=簽出 {0}
checkout.and.rebase=變基到遠端
checkout.0=簽出 {0}
branches.drop.local.commits=刪除本地提交
branches.checkout=簽出
branches.rename.branch=重命名分支 {0}
branches.there.are.outgoing.commits=存在傳出提交
branches.there.are.incoming.commits=存在傳入提交
branches.there.are.incoming.and.outgoing.commits=存在傳入和傳出提交
branches.checkout.tag.or.revision=簽出標記或修訂…
branches.enter.reference.branch.tag.name.or.commit.hash=輸入引用(分支、標記)名稱或提交哈希:
branches.remote.branches=遠端分支
branches.remote.branches.in.repo={0} 中的遠端分支
branches.local.branches=本地分支
branches.local.branches.in.repo={0} 中的本地分支
branches.update.info.process=更新分支資訊…
branches.action.pull.into.branch.using.merge=使用合並拉入 {0}(_M)
branches.action.pull.into.branch.using.merge.description=使用合並拉入 {0}
branches.action.pull.into.branch.using.rebase=使用變基拉入 {0}(_R)
branches.action.pull.into.branch.using.rebase.description=使用變基拉入 {0}
git.rollback=回滾(&R)

new.branch.dialog.operation.create.name=創建
new.branch.dialog.operation.create.description=在其他版本庫中創建新分支
new.branch.dialog.operation.checkout.name=簽出
new.branch.dialog.operation.checkout.description=簽出現有分支，並在其他版本庫中創建新分支
new.branch.dialog.operation.rename.name=重命名
new.branch.dialog.branch.name=新分支名稱:
new.branch.dialog.checkout.branch.checkbox=簽出分支
new.branch.dialog.set.tracking.branch.checkbox=設定跟踪分支
new.branch.dialog.overwrite.existing.branch.checkbox=覆蓋現有分支
new.branch.dialog.overwrite.existing.branch.warning=更改名稱或覆蓋現有分支
new.branch.dialog.error.branch.name.invalid=分支名稱 {0} 無效
new.branch.dialog.error.branch.name.empty=指定新分支的名稱
new.branch.dialog.error.branch.name.head=HEAD 是保留關鍵字
new.branch.dialog.error.branch.already.exists=分支名稱 {0} 已存在
new.branch.dialog.error.branch.clashes.with.remote=分支名稱 {0} 與同名的遠端分支衝突
git.reset.mode.soft=軟
git.reset.mode.soft.description=檔案不會更改，差異將暫存以進行提交。
git.reset.mode.mixed=混合
git.reset.mode.mixed.description=檔案不會更改，差異也不進行暫存。
git.reset.mode.hard=硬
git.reset.mode.hard.description=<nobr>檔案將還原為所選提交的狀態。<nobr/><br><nobr>警告: 任何本地變更都將丟失。<nobr/>
git.reset.mode.keep=保留
git.reset.mode.keep.description=<nobr>檔案將還原為所選提交的狀態，<nobr/><br><nobr>但本地變更將保持不變。<nobr/>
git.reset.dialog.title=Git 重置
git.reset.dialog.description=<nobr>這會將當前分支 HEAD 重置為所選提交，<nobr/><br><nobr>並根據所選模式更新工作樹和索引:<nobr/>
git.reset.dialog.description.commit.details.by.author={0}，作者 {1}
git.reset.dialog.description.source.in.repository={0} ({1} 內)
git.reset.process=Git 重置
git.reset.operation=重置
git.reset.button=重置
git.reset.hard.button=硬重置(&H)
git.reset.successful.notification.message=重置成功
git.reset.partially.failed.notification.title=重置部分失敗
git.reset.partially.failed.notification.msg={0} 重置成功\n但 {1} 重置失敗:\n{2}
git.reset.failed.notification.title=重置失敗
git.undo.action.cant.undo.commit.failure=無法撤消提交
git.undo.action.description=所選提交不是當前分支中的最後一次提交
git.undo.action.select.target.changelist.title=選擇目標變更列表
git.undo.action.undoing.last.commit.process=正在撤消最後一次提交…
git.undo.action.refreshing.changes.process=正在重新整理變更…
git.undo.action.could.not.load.changes.of.commit=無法載入 {0} 的變更
git.new.tag.dialog.title=在 {0}上創建新標記
git.new.tag.dialog.tag.name.label=輸入新標記的名稱

git.log.external.tab.description={0} 的日誌
git.log.external.window.title=Git 日誌
git.log.external.loading.process=正在載入 Git 日誌…

git.log.cherry.picked.highlighter.select.branch.popup=選擇源分支
git.log.cherry.picked.highlighter.process=正在比較分支…
git.log.cherry.picked.highlighter.error.message=無法與分支 {0} 進行比較
git.log.cherry.picked.highlighter.cancelled.message=已取消對 ''{0}'' 中未選取提交的高亮顯示，因為分支篩選器已被更改。

git.log.action.checkout.group=簽出
git.log.action.checkout.revision.short.text=修訂 ''{0}''
git.log.action.checkout.revision.full.text=簽出修訂 ''{0}''
action.Git.CheckoutRevision.text=簽出修訂

git.log.diff.handler.local.version.name=本地版本
git.log.diff.handler.local.version.content.title=本地

git.log.refGroup.local=本地

log.parser.exception.message.error.parsing.line=解析第 "{0}" 行時出錯
log.parser.exception.message.could.not.parse.output=無法解析 Git 日誌輸出 "{0}"
log.parser.exception.message.error.command.line={0}\n命令行: [{1}]

history.indexing.disabled.notification.text=由於索引不可用，顯示的是舊式檔案歷史記錄
history.indexing.disabled.notification.resume.link=恢復 Git 日誌索引
history.indexing.disabled.notification.dismiss.link=不再顯示

git.history.diff.handler.choose.parent.popup=選擇要比較的父項
git.history.diff.handler.load.changes.process=正在載入變更…
git.history.diff.handler.git.show.error=執行 git show {0}:{1} 時出錯
git.history.diff.handler.no.changes.in.file.info=此合併提交中的檔案 {0} 無變更
git.log.show.commit.in.log.process=搜尋修訂 {0}
git.compare.branches.empty.status={0} 包含來自 {1} 的所有提交
git.compare.branches.explanation.message=存在於 {0} 中但不存在於 {1} 中的提交
git.compare.branches.tab.name=比較
git.compare.branches.tab.suffix={0} 和 {1}
git.update.files.updated.in.commits=已更新 {1,choice,1#{1} 個提交|2#{1} 個提交}中的 {0,choice,1#{0} 個檔案|2#{0} 個檔案}
git.update.no.commits.matching.filters=沒有與篩選器符合的提交
git.update.commits.matching.filters={0,choice,1#{0} 個提交|2#{0} 個提交}與篩選器匹配
git.update.project.partially.updated.title=專案已部分更新
git.update.skipped.repositories=已跳過 {0} 個版本庫:
git.update.repo.was.skipped=已跳過 {0} ({1})

git.integration.created.git.repository.in=已在 {0} 中創建 Git 版本庫
git.integration.could.not.git.init=無法 git init {0}

git.tag.could.not.create.tag=無法創建標記
git.tag.created.tag.successfully=已成功創建標記 {0}。

rename.branch.operation.name=重命名
git.rename.branch.rollback.successful=回滾成功
git.rename.branch.renamed.back.to=已重命名回 {0}
git.rename.branch.rollback.failed=回滾失敗
git.rename.branch.could.not.rename.from.to=無法將 {0} 重命名為 {1}
git.rename.branch.was.renamed.to=分支 {0} 已被重命名為 {1}
git.rename.branch.you.may.rename.branch.back=您可以回滾(將分支重命名回 {0})以使分支不出現分叉。
git.rename.branch.has.succeeded.for.the.following.repositories=不過，以下{0,choice,1#版本庫|2#版本庫}的重命名已成功:

update.process.progress.title=正在更新…
update.process.generic.error.title=無法更新
update.process.error.message.unfinished.merge=您有未完成的合併。必須先解決這些衝突，然後才能更新。
update.process.error.message.unmerged.files=檢測到未合併的檔案。必須先解決這些衝突，然後才能更新。
update.process.error.description.unfinished.rebase=您有未完成的變基行程。必須先解決這些衝突，然後才能更新。
update.process.error.additional.description.unfinished.rebase=然後，您可以<b>繼續變基</b>。<br/>您也可以<b>中止變基</b>以恢復原始分支並停止變基。
update.process.nothing.to.update=沒有要更新的內容

checkout.operation.could.not.checkout.error=無法簽出 {0}
checkout.operation.revision.not.found=在{0,choice,0#|1#{1}中}未找到修訂
checkout.operation.rollback=回滾
checkout.operation.could.not.checkout.error.title=無法簽出 {0}
checkout.operation.checked.out=已簽出 {0}
checkout.operation.checked.out.new.branch.from=已從 {1} 中簽出新分支 {0}
checkout.operation.in={1,choice,0#|1#{2}中的}{0}
checkout.operation.force.checkout=強制簽出(&F)
checkout.operation.name=簽出
checkout.operation.error.during.rollback=回滾期間出錯
checkout.operation.errors.during.deleting=刪除 {0} 期間出錯:
checkout.operation.errors.during.checkout=簽出期間出錯:
checkout.operation.you.may.rollback.not.to.let.branches.diverge=您可以回滾(簽回 {0})以使分支不出現分叉。
checkout.operation.previous.branch=上一個分支
checkout.operation.however.checkout.has.succeeded.for.the.following=不過，以下{0,choice,1#版本庫|2#版本庫}的簽出已成功:

delete.branch.operation.collecting.unmerged.commits.process=正在收集未合併的提交…
delete.branch.operation.restoring.branch.process=正在恢復分支 {0}…
delete.branch.operation.error.during.rollback.of.branch.deletion=分支刪除回滾期間出錯
delete.branch.operation.could.not.restore.branch.error=無法恢復 {0}
delete.branch.operation.branch.was.not.deleted.error=分支 {0} 未刪除
delete.branch.operation.deleted.branch=已刪除分支 {0}
delete.branch.operation.deleted.branch.bold=<b>已刪除的分支:</b> {0}
delete.branch.operation.unmerged.commits.were.discarded=未合併的提交已被丟棄
delete.branch.operation.however.branch.deletion.has.succeeded.for.the.following=不過，以下{0,choice,1#版本庫|2#版本庫}的分支刪除已成功:
delete.branch.operation.you.may.rollback.not.to.let.branches.diverge=您可以回滾(在這些根中重新創建 {0})以使分支不出現分叉。

branch.operation.could.not.0.operation.name.1.reference=無法{0} {1}
branch.operation.in={0} ({1} 中)

checkout.new.branch.operation.could.not.create.new.branch=無法創建新分支 {0}
checkout.new.branch.operation.error.during.rollback=回滾期間出錯
checkout.new.branch.operation.errors.during.deleting=刪除 {0} 期間出錯:
checkout.new.branch.operation.errors.during.checkout=簽出期間出錯:
checkout.new.branch.operation.rollback.successful=回滾成功
checkout.new.branch.operation.checked.out.0.and.deleted.1.on.2.3=已在{2,choice,1#根|2#根}{3}上簽出 {0} 並刪除 {1}
checkout.new.branch.operation.branch.was.created=已創建分支 {0}
checkout.new.branch.operation.however.checkout.has.succeeded.for.the.following=不過，{0,choice,1#版本庫|2#版本庫} 的簽出已成功:
checkout.new.branch.operation.you.may.rollback.not.to.let.branches.diverge=您可以回滾(簽回上一個分支並刪除 {0})以使分支不出現分叉。

delete.branch.operation.name=分支刪除
delete.remote.branch.operation.deleting.process=正在刪除 {0}
delete.remote.branch.operation.deleted.remote.branch=已刪除遠端分支 {0}
delete.remote.branch.operation.also.deleted.local.branches=同時刪除了本地 {0,choice,1#分支|2#分支}: {1}
delete.remote.branch.operation.failed.to.delete.remote.branch=無法刪除遠端分支 {0}
delete.remote.branch.operation.couldn.t.find.remote.by.name=無法按名稱尋找遠端: {0}

delete.remote.tag.operation.deleted.tag.on.remotes=<b>已刪除 {0,choice,1#遠端|2#遠端}上的標記:</b> {1}
delete.remote.tag.operation.tag.does.not.exist.on.remotes=<b>標記在 {0,choice,1#遠端|2#遠端} 上不存在:</b> {1}
delete.remote.tag.operation.failed.to.delete.tag.on.remotes=無法刪除 {1,choice,1#遠端|2#遠端} 上的標記 {0}

merge.dialog.description.cherry.pick.label.text=在優選{2,choice,0#|1#由 {3}{4} 執行的}{0,choice,1#提交 {1}|2#多個提交}期間出現衝突
merge.dialog.description.merge.label.text=將 {0,choice,1#分支 {1}|2#分叉的分支} 合併到 {2,choice,1#分支 {3}|2#分叉的分支}
merge.dialog.description.rebase.with.hash.label.text=正在{0,choice,0#|1#將分支 {1} }變基到 {2}
merge.dialog.description.rebase.with.onto.branch.label.text=正在{0,choice,0#|1#將分支 {1} }變基到分支 {2}{3,choice,0#|1#，修訂 {4}}
merge.dialog.description.rebase.without.onto.info.label.text=正在{0,choice,0#|1#將分支 {1} }變基到分叉的分支
merge.dialog.diff.left.title.cherry.pick.label.text=本地變更
merge.dialog.diff.left.title.default.branch.label.text=您的版本，分支 {0}
merge.dialog.diff.left.title.rebase.label.text=正在從 {1} 變基 {0}
merge.dialog.diff.right.title.cherry.pick.label.text=來自優選 {0} 的變更
merge.dialog.diff.right.title.default.with.hash.label.text=來自 {0} 的變更
merge.dialog.diff.right.title.default.with.onto.branch.label.text=來自分支 {0}{1,choice,0#|1#，修訂 {2}} 的變更
merge.dialog.diff.right.title.default.without.onto.info.label.text=來自分叉分支的變更
merge.dialog.diff.right.title.rebase.with.branch.label.text=已變基的提交和來自 {0} 的提交
merge.dialog.diff.right.title.rebase.without.branch.label.text=已變基的提交
merge.dialog.diff.title.changes.from.branch.label.text=來自 {0} 的變更
merge.error.unable.to.read.merge.head=無法讀取檔案 {0}: {1}
merge.operation.name=合併
rebase.operation.name=變基
unstash.operation.name=取消儲藏
merge.operation.you.may.rollback.not.to.let.branches.diverge=您可以回滾(重置為合併之前的提交)以使分支不出現分叉。
merge.operation.error.during.rollback=回滾期間出錯
merge.operation.branch.merged.with.conflicts={0} 已合併，但存在衝突
merge.operation.could.not.merge.branch=無法合併 {0}
merge.operation.already.up.to.date=已是最新
merge.operation.however.merge.has.succeeded.for.the.following.repositories=不過，以下 {0,choice,1#版本庫|2#版本庫} 的合併已成功:
merge.operation.merged.to=已將 {0} 合併到 {1}
merge.operation.delete.branch=刪除 {0}
merge.progress.indicator.loading.unmerged.files.title=正在載入未合併的檔案…

merge.unresolved.conflicts.remaining.notification.title=正在掛起未解決的衝突
merge.unresolved.conflicts.remaining.notification.body=有掛起的未解決的衝突。

create.branch.operation.name=創建分支
create.branch.operation.could.not.create.new.branch=無法創建新分支 {0}
create.branch.operation.rollback.successful=回滾成功
create.branch.operation.deleted.branch=已刪除 {0}
create.branch.operation.error.during.rollback=回滾期間出錯
create.branch.operation.branch.created=已創建分支 {0}
create.branch.operation.however.the.branch.was.created.in.the.following.repositories=不過，已在以下 {0,choice,1#版本庫|2#版本庫} 中創建分支:
create.branch.operation.you.may.rollback.not.to.let.branches.diverge=您可以回滾(刪除 {0})以使分支不出現分叉。

branch.ui.handler.can.not.operation.name.because.of.unmerged.files=由於存在未合併的檔案而無法{0}
branch.ui.handler.unmerged.files.error.notification=您必須先<a href=''{0}''>解決</a>所有合併衝突，然後才能{1}。<br/>解決衝突之後，您可能還需要將檔案提交到當前分支。
branch.ui.handler.merge.notification.description=以下檔案存在未解決的衝突。您需要先解決它們，然後再{0}。
branch.ui.handler.merge.error.notification.title=仍然存在未解決的檔案。
branch.ui.handler.rollback=回滾
branch.ui.handler.do.not.rollback=不回滾
branch.ui.handler.you.have.to.resolve.all.conflicts.before.operation.name=您必須先解決所有合併衝突，然後才能{0}。<br/>{1}
branch.ui.handler.delete.remote.branches=刪除遠端 {0,choice,1#分支|2#分支}
branch.ui.handler.delete.all=全部刪除
branch.ui.handler.delete.remote.branches.question=刪除遠端 {0,choice,1#分支|2#分支} {1}?
branch.ui.handler.delete.tracking.local.branch.as.well=同時刪除跟踪本地分支 {0}
branch.ui.handler.delete.tracking.local.branches=刪除跟踪本地分支:

delete.tag.operation.could.not.restore.tag=無法恢復 {0}
delete.tag.operation.error.during.rollback.of.tag.deletion=標記刪除回滾期間出錯
delete.tag.operation.restored.tag=已恢復標記 {0}
delete.tag.operation.rollback.successful=回滾成功
delete.tag.operation.restoring.tag.process=正在恢復標記 {0}…
delete.tag.operation.deleted.tag=<b>已刪除的標記:</b> {0}
delete.tag.operation.delete.on.remote=在 {0,choice,1#遠端|2#遠端} 上刪除
delete.tag.operation.could.not.find.tag=無法找到標記 {0}
delete.tag.operation.could.not.find.tag.in=在 {0} 中找不到標記
delete.tag.operation.tag.was.not.deleted=未刪除標記 {0}
delete.tag.operation.however.tag.deletion.has.succeeded.for.the.following=不過，以下{0,choice,1#版本庫|2#版本庫}的標記刪除已成功:
delete.tag.operation.you.may.rollback.not.to.let.tags.diverge=您可以回滾(在這些根中重新創建 {0})以使標記不出現分叉。

branch.renaming.branch.process=正在將 {0} 重命名為 {1}…
branch.rebasing.process=正在變基 {0}…
branch.rebasing.onto.process=正在變基到 ''{0}''…
branch.merging.process=正在合併 {0}…
branch.deleting.tag.process=正在刪除標記 {0}…
branch.deleting.tag.on.remote.process=正在刪除遠端分支上的標記 {0}…
branch.deleting.remote.branch=正在刪除 {0}…
branch.deleting.branch.process=正在刪除 {0}…
branch.checking.out.new.branch.process=正在簽出新分支 {0}…
branch.creating.branch.process=正在創建分支 {0}…
branch.checking.out.branch.from.process=正在從 {1} 簽出 {0}…
branch.checking.out.process=正在簽出 {0}…

branch.not.fully.merged.dialog.repository.label=版本庫:
branch.not.fully.merged.dialog.title=分支未完全合併
branch.not.fully.merged.dialog.restore.button=恢復(&R)
branch.not.fully.merged.dialog.all.commits.from.branch.were.merged=已合併來自分支 {0} 的所有提交
branch.not.fully.merged.dialog.the.branch.was.not.fully.merged.to=分支 {0} 未完全合併到 {1}。<br/>以下是未合併提交的列表。

merge.dialog.customizer.filter.by.conflicted.file.checkbox=按衝突檔案篩選
merge.dialog.customizer.show.details.link.label=顯示詳細資訊
merge.dialog.customizer.collecting.details.progress=正在收集提交詳細資訊…

branch.worker.could.not.create.tag=無法在 {1,choice,0#|1#|2#在 {2} 中} 創建標記 {0}

commit.options.sign.off.commit.checkbox=Sign-off 提交
commit.options.sign.off.commit.message.line=在提交訊息結尾添加以下行:<br/>Signed-off by: {0}
commit.options.create.extra.commit.with.file.movements=使用檔案移動創建額外提交

show.diff.between.dialog.title={0}與當前工作樹之間的變更
show.diff.between.dialog.no.differences.empty.text=無差異
show.diff.between.dialog.could.not.load.diff.with.branch.error=無法載入與 {0} 的差異: {1}
annotations.options.detect.movements.across.files=檢測跨檔案的移動
annotations.options.detect.movements.within.file=檢測檔案內的移動
annotations.options.ignore.whitespaces=忽略空格
annotations.options.group=選項
progress.title.moving.files=正在移動檔案…

editor.promo.commit.text=使用提交接口直接從 {0} 提交。
editor.promo.commit.try.link=嘗試
editor.promo.help.link=了解詳情
editor.promo.close.link=不再顯示

tracked.branch.fix.dialog.title=更新
tracked.branch.fix.dialog.ok.button.text=更新
tracked.branch.fix.dialog.set.as.tracked=設為跟踪分支
tracked.branch.fix.dialog.branch.placeholder=指定分支
tracked.branch.fix.dialog.not.on.branch.title=游離的 HEAD 中的 Git 版本庫
tracked.branch.fix.dialog.not.on.branch.message=將跳過以下版本庫:
progress.title.enabling.git=正在啟用 Git…

action.selected.file.text=選定{0,choice,1#檔案|2#檔案}
action.selected.directory.text=選定{0,choice,1#目錄|2#目錄}
action.New.Branch.disabled.several.commits.description=選擇單個提交以創建新分支
action.New.Branch.disabled.fresh.description=無法在空版本庫中創建新分支。首先進行初始提交

conflicts.type.both.deleted=均已刪除
conflicts.type.both.added=均已添加
conflicts.type.both.modified=均已修改
conflicts.type.deleted.by.you=由您刪除
conflicts.type.deleted.by.them=由他們刪除
conflicts.type.added.by.you=由您添加
conflicts.type.added.by.them=由他們添加
conflicts.merge.window.error.title=無法解決衝突
conflicts.merge.window.error.message=找不到 {0} 的檔案
conflicts.accept.progress=正在解析 {0,choice,1#個衝突|2#個衝突}
conflicts.loading.status=正在載入合併衝突…
conflicts.resolve.action.text=解決
conflicts.accept.theirs.action.text=接受他們的變更
conflicts.accept.yours.action.text=接受您的變更

remotes.dialog.title=Git 遠端
remotes.dialog.adding.remote=正在添加遠端…
remote.dialog.add.remote=添加遠端
remotes.dialog.cannot.add.remote.error.message=無法添加遠端 {0} ''{1}''
remotes.dialog.remove.remote.message=移除 {0,choice,1#遠端|2#遠端}{1}?
remotes.dialog.remove.remote.title=移除 {0,choice,1#遠端|2#遠端}
remotes.dialog.removing.remote.progress=正在移除{0,choice,1#遠端|2#遠端}…
remotes.dialog.removing.remote.error.title=移除 {0,choice,1#遠端|2#遠端}
remotes.dialog.removing.remote.error.message=無法移除{0, choice, 1#遠端|2#遠端} {1}
remotes.changing.remote.progress=正在更改遠端…
remotes.changing.remote.error.title=更改遠端
remotes.changing.remote.error.message=無法將遠端 {0} 更改為 {1} ''{2}''
remotes.operation.not.executed.message=操作未執行
remotes.operation.error.message=在 {1} 中{0}:\n{2}
remotes.remote.column.name=名稱
remotes.remote.column.url=URL
remotes.define.remote=定義遠端
remotes.define.remote.name=名稱:
remotes.define.remote.url=URL:
remotes.define.empty.remote.name.validation.message=遠端名稱不能為空
remotes.define.empty.remote.url.validation.message=遠端 URL 不能為空
remotes.define.invalid.remote.name.validation.message=遠端名稱包含非法字符
remotes.define.duplicate.remote.name.validation.message=遠端名稱 ''{0}'' 已被使用
tab.title.repo.root.name.at.revision={1} 的 {0}
tab.title.conflicts=衝突

button.crlf.fix.dialog.commit.as.is=按原樣提交
button.crlf.fix.dialog.fix.and.commit=修復並提交
title.crlf.fix.dialog=行分隔符警告
text.crlf.fix.dialog.description.warning=您即將把 CRLF 行分隔符提交到 Git 版本庫。<br/>建議將 {0} Git 特性設定為 {1}，以免發生行分隔符問題。
text.crlf.fix.dialog.description.proposed.fix=如果選擇<b>修正並提交</b>，將執行 {0}。<br/>如果選擇<b>按原樣提交</b>，則不會更改設定值。
progress.finishing.conflict.resolve=正在解決衝突
link.label.editor.notification.merge.conflicts.resolve.in.progress=正在解決合併衝突
link.label.merge.conflicts.resolve.in.progress.focus.window=使視窗獲得焦點
link.label.merge.conflicts.resolve.in.progress.cancel.resolve=取消解決
label.diff.content.title.submodule.suffix={0} (子模組)
error.git.version.check.failed=執行 ''git --version'' 時出錯。退出程式碼: {0}，錯誤: {1}

local.changes.save.policy.stash=儲藏
local.changes.save.policy.shelve=擱置
notification.title.fetch.failure=獲取失敗
notification.title.fetch.success=獲取成功
title.sudo.command.install.git=安裝 Git

activity.name.unstash=取消儲藏
notification.title.unstash.failed=取消儲藏失敗
exception.message.could.not.stash.root.error=無法儲藏 {0}: {1}
error.git.parse.unknown.file.status=未知檔案狀態: {0}
error.git.parse.not.a.revision.number=字串 ''{0}'' 不表示修訂號
error.git.repository.not.found=該版本庫不再存在: {0}

title.changes.excluded.from.commit=已從合併提交中排除變更
label.changes.excluded.from.commit.are.you.sure.want.to.continue=是否確定要從合併提交中排除這些變更過的檔案?
button.changes.excluded.from.commit.commit.anyway=仍然提交
title.unresolved.conflicts.pre.commit.check=未解決的衝突
message.unresolved.conflicts.prevent.commit=由於有未解決的衝突，無法提交變更。

label.user.name=名稱:
label.user.email=電子郵件:
checkbox.set.config.property.globally=全域設定屬性
title.user.name.email.not.specified=未定義 Git 用戶名
button.set.name.and.commit=設定並提交
validation.warning.set.name.email.for.git=您必須為 Git 指定用戶名和電子郵件
label.name.email.not.defined.in.n.roots={0,choice,1#根|2#根}中未定義 Git 的 user.name 和 user.email 屬性
error.cant.set.user.name.email=無法設定 user.name 和 user.email
progress.checking.user.name.email=正在檢查 Git 用戶名…
progress.setting.user.name.email=正在設定 Git 用戶名…
progress.setting.config.value=正在更新 Git 設定…
progress.checking.line.separator.issues=正在檢查行分隔符問題…
error.title.git.version.does.not.define.home.env=HOME 變數未定義
error.message.git.version.does.not.define.home.env=您正在使用 Git {0}，它沒有正確定義 %HOME% 環境變數。\n不妨將 Git 更新到較新的版本，或將 %HOME% 定義為指向全域 .gitconfig 的存儲位置\n(通常為 %USERPROFILE% 或 %HOMEDRIVE%%HOMEPATH%)。
warning.title.commit.with.unfinished.rebase=未完成變基行程
warning.message.commit.with.unfinished.rebase=以下路徑中的 Git 版本庫有一個<b>未完成的變基</b>行程: <br/> {0}<br/>您可能想<b>繼續變基</b>而不是提交。<br/>在變基期間提交可能會導致提交丟失。
link.label.commit.with.unfinished.rebase.read.more=閱讀有關 Git 變基的更多資訊
warning.title.commit.with.detached.head=在游離的 HEAD 中提交
warning.message.commit.with.detached.head=以下路徑中的 Git 版本庫處於<b>游離的 HEAD</b> 狀態: <br/>{0}<br/>您可以進行檢查，嘗試做出變更並提交，但務必簽出分支，以免丟失您的工作。<br/>否則，可能會丟失所做的變更。
link.label.commit.with.detached.head.read.more=閱讀有關游離的 HEAD 的更多資訊
error.commit.cant.collect.partial.changes=無法收集要提交的部分變更
error.commit.cant.commit.multiple.changelists=無法一次提交多個變更列表中的變更
error.commit.cant.commit.with.unmerged.paths=由於您有未合併的檔案，因此無法提交。
error.commit.cant.create.message.file=創建提交訊息檔案失敗
button.commit.all.files=提交所有檔案
label.credential.store.key.http.password=Git HTTP
error.cannot.delete.file=無法刪除檔案: {0}
action.description.cant.revert.merge.commit=不允許還原合併提交
progress.title.reverting.n.commits=正在還原{0,choice,1#提交|2#提交}
progress.title.validating.revision=正在驗證修訂…

revision.number.cannot.parse.output=無法解析輸出: [{0}]

unexpected.tree.entries.error=意外的樹條目: {0}
unexpected.tree.object.error=意外的樹物件: {0}
revert.operation.name=還原
revert.operation.applied=還原
cherry.pick.name=優選
cherry.pick.applied=套用
operation.name.validating.revision.0=驗證修訂 {0}
operation.name.loading.revision=載入修訂
combobox.item.file.invalid=(無效)
warning.your.local.changes.would.be.overwritten.by.merge=您的本地變更將被合併覆蓋。\n提交、存儲或還原您的變更以繼續。
link.label.local.changes.would.be.overwritten.by.merge.view.them=查看這些變更
dialog.title.local.changes.prevent.from.operation=本地變更阻止{0}
notification.title.git.operation.failed=Git {0} 失敗
notification.title.untracked.files.prevent.operation=未跟踪的檔案會阻止{0}
notification.content.untracked.files.prevent.operation.move.or.commit=在 {0} 前移動或提交<br/>{1}
dialog.title.could.not.operation=無法{0}
dialog.title.untracked.files.preventing.operation=阻止{0}的未跟踪檔案
dialog.message.untracked.files.will.be.overwritten.by.operation=這些未跟踪的檔案將被{0}覆蓋
button.rollback=回滾
button.don.t.rollback=不回滾
progress.title.update=更新
notification.content.fetched.successfully=已成功獲取
notification.content.fetch.cancelled.by.user=獲取已被使用者取消
notification.content.fetch.failed.couldn.t.authorize=獲取失敗: 授權錯誤
notification.content.couldn.t.authorize=授權錯誤
notification.title.fetch.failed=獲取失敗
notification.title.fetch.details=獲取詳細資訊
notification.title.couldn.t.reset.merge=無法中止合併操作
notification.title.error.merging=合併錯誤
progress.text.merging.repository=正在合併 {0}…
dialog.title.rebasing.merge.commits=正在變基合併提交
dialog.message.rebasing.merge.commits=您即將變基存在衝突的合併提交。\n\n如果您不想再次解決衝突，請選擇“合併”; 如果要將歷史記錄線性化，仍可進行變基。
rebasing.merge.commits.button.merge=合併
rebasing.merge.commits.button.rebase=變基
rebasing.merge.commits.button.cancel=取消
progress.details.refreshing.files.for.root=正在重新整理根 {0} 的檔案
activity.name.update=VCS 更新
notification.title.couldnt.collect.updated.files.info=無法收集已更新檔案的資訊
notification.content.couldnt.collect.updated.files.info={0} 更新成功，但由於發生了一個錯誤，無法收集更新的變更
notification.title.update.failed=更新失敗
notification.title.can.t.update.no.current.branch=無法更新: 無當前分支
notification.content.detached.state.in.root.checkout.branch=您處於“游離的 HEAD”狀態，這表明您不在任何分支 {0} 上<br/>簽出分支以更新專案。
notification.content.branch.in.repo.has.no.tracked.branch={0} {1} 沒有跟踪的分支
notification.title.error.updating.root=更新 {0} 期間出錯
notification.content.updating.root.failed.with.error=更新 {0} 失敗，出現錯誤: {1}
git.update.operation=更新
progress.update.destination.remote=遠端
no.revisions.available=無修訂
search.everywhere.group.name=Git
search.everywhere.group.full.name=Git 引用
search.everywhere.items.commit.by.hash=提交(按哈希)
search.everywhere.items.local.branch=本地分支
search.everywhere.items.remote.branch=遠端分支
search.everywhere.items.tag=標記
search.everywhere.items.commit.by.message=提交(按訊息)
commit.author.with.committer={0}，通過 {1}

stage.diff.staged.content.exception.message=無法獲取暫存內容: ''{0}''
stage.vfs.shutdown.process=正在關閉 Git 索引 VFS
apply.changes.unresolved.conflicts.text=工作樹中有未解決的衝突。
apply.changes.unresolved.conflicts.notification.resolve.action.text=解決…
apply.changes.unresolved.conflicts.notification.abort.action.text=中止{0}
action.Git.Commit.Stage.text=提交…
git.executable.error.bash.not.found=找不到 bash 可執行檔案
settings.label.sign.gpg.commits.loading.text=使用 GPG 密鑰簽署提交: 正在讀取設定…
settings.label.sign.gpg.commits.not.configured.text=未設定使用 GPG 密鑰簽署提交
settings.label.sign.gpg.commits.enabled.text=提交使用 GPG 密鑰簽署: {0}
settings.label.sign.gpg.commits.enabled.different.keys.text=提交使用不同的 GPG 密鑰簽署
settings.label.sign.gpg.commits.enabled.n.roots.of.m.text=提交使用 {1} 的 {0} 個{0,choice,1#根|2#根}中的 GPG 密鑰簽署
settings.sign.gpg.configure.link.text=設定 GPG 密鑰…
settings.configure.sign.gpg.synced.with.gitconfig.text=與 gitconfig 同步
settings.configure.sign.gpg.for.repo.dialog.title=設定 GPG 密鑰 {0}
settings.configure.sign.gpg.for.repos.dialog.title=設定 GPG 密鑰
settings.configure.sign.gpg.with.key.checkbox.text=使用 GPG 密鑰簽署提交:
settings.configure.sign.gpg.root.table.column.name=根
settings.configure.sign.gpg.gpg.kep.table.column.name=GPG 密鑰
settings.configure.sign.gpg.do.not.sign.table.text=不簽署
settings.configure.sign.gpg.error.table.text=錯誤: {0}
settings.configure.sign.gpg.error.no.available.keys.found.text=找不到適用的私鑰
settings.configure.sign.gpg.loading.table.text=正在載入…
column.name.commit.signature=GPG 簽名
branch.direction.panel.branch.label=分支:
branch.direction.panel.save.button=儲存
branch.direction.panel.base.repo.label=基礎版本庫:
branch.direction.panel.head.repo.label=Head 版本庫:
branch.direction.panel.select.link=選擇…
branch.direction.panel.warning.push=''{0}'' 沒有遠端分支。\n將在 ''{1}'' 上創建新的遠端分支。
branch.direction.panel.warning.not.synced=本地分支未與遠端分支同步。\n''{0}'' 分支將與 ''{1}'' 同步。
push.failed.error.message=推送失敗: {0}
advanced.settings.git=版本控制. Git
advanced.setting.git.clone.recurse.submodules=遞歸克隆專案中的子模組
advanced.setting.git.clone.recurse.submodules.description=啟用後，從 Git 調用 'git clone --recurse-submodules' 簽出，即克隆主版本庫與所有子模組 (如有)
advanced.setting.git.use.push.force.with.lease=使用安全強制推送
advanced.setting.git.use.push.force.with.lease.description=從 IDE 調用強制推送時使用 '--force-with-lease'，而非僅使用 '--force'
advanced.setting.git.update.incoming.outgoing.info=檢查傳入和傳出提交
advanced.setting.git.update.incoming.outgoing.info.description=在“分支”彈出視窗中更新具有傳入/傳出提交的分支資訊
advanced.setting.git.read.content.with=從 Git 讀取時套用內容轉換
advanced.setting.git.read.content.with.description=從 Git 讀取檔案內容時為 'git cat-file' 指令使用 '--filters' 或 '--textconv' 標誌
advanced.setting.git.use.schannel.on.windows=使用 Windows 憑證存儲
advanced.setting.git.use.schannel.on.windows.description=強制 Git 使用 Windows 憑證存儲來驗證 SSL 連接。適用於 Git 2.14 及更高版本。
git.content.transform.none=無
git.content.transform.filters=篩選器
git.content.transform.textconv=TextConv
settings.label.sign.gpg.commits.no.roots.text=專案中沒有 Git 根
gpg.error.see.documentation.link.text=參閱 GPG 設定指南
gpg.jb.manual.link=Set_up_GPG_commit_signing
settings.commit.group.title=提交
settings.push.group.title=推送
settings.update.group.title=更新
error.unresolved.conflicts=解決衝突以提交
branches.checkout.local.has.more.commits=本地分支 ''{0}'' 具有 ''{1}'' 中不存在的提交。將 ''{0}'' 變基到 ''{1}''，還是簽出 ''{0}''?
branches.checkout.with.reset.local.has.more.commits=本地分支 ''{0}'' 具有 ''{1}'' 中不存在的提交。將 ''{0}'' 變基到 ''{1}''，還是刪除本地提交?
branches.create.local.has.more.commits=本地分支 ''{0}'' 具有 ''{1}'' 中不存在的提交。要在其他版本庫中創建分支嗎?
branches.create.with.reset.local.has.more.commits=本地分支 ''{0}'' 具有 ''{1}'' 中不存在的提交。要刪除本地提交嗎?
branches.checkout.local=簽出本地分支
notification.title.unstash.failed.index.conflict=由於索引衝突，取消儲藏失敗
stash.load.changes.error=無法在解析為 {1} 的儲藏中載入根 {0} 中的變更
branches.checkout.and.rebase.failed=簽出和變基失敗
branches.checkout.and.rebase.error.current.with.same.name=無法覆蓋當前分支 {0}
branches.checkout.and.rebase.onto.current.process=正在簽出 {0} 並變基到當前分支
progress.title.creating.git.repository=正在創建 Git 版本庫…
git.log.diff.handler.changes.between.revisions.title={0} 與 {1} 之間的變更
git.log.diff.handler.changes.between.revisions.in.paths.title={2} 中 {0} 與 {1} 之間的變更
commit.signature.verified=已驗證的 GPG 簽名
commit.signature.unverified=未驗證的 GPG 簽名
action.Git.PushUpToCommit.text=推送此前所有提交…
action.Git.PushUpToCommit.description=推送所有之前的提交，包括所選提交
push.upto.here.not.supported.notification.title=無法啟動推送
push.upto.here.not.supported.notification.message=“推送此前所有提交”僅支援包含在本地分支中的提交
push.upto.here.failed.dialog.title=無法啟動推送
push.up.to.commit.allowed.progress.title=正在檢查是否允許推送到所選提交…
push.up.to.commit.getting.reference.progress.title=正在獲取對 HEAD 的提交引用…
git.toolbar.widget.no.repo=版本控制
git.status.bar.widget.text.unknown=<未知>
git.executable.validation.cant.run.in.safe.mode=無法在安全模式下執行 Git 指令
git.toolbar.widget.tooltip=Git 分支: {0}
update.process.error.notification.title=無法設定上游分支
pull.fetch.failed.notification.title=無法載入遠端分支
pull.fetch.failed.notification.text=選擇一個本地版本庫和一個遠端版本庫
pull.remote.not.selected=選擇要從中拉取的遠端版本庫
pull.repository.not.selected.error=選擇一個版本庫
git.executable.notification.cant.run.in.safe.mode=無法在安全模式下執行 Git 指令
commit.signature.none=無 GPG 簽名
commit.signature.bad=錯誤的 GPG 簽名
commit.signature.unverified.with.reason=未驗證的 GPG 簽名: {0}
commit.signature.unverified.reason.unknown=未知有效性
commit.signature.unverified.reason.expired=過期的簽名
commit.signature.unverified.reason.expired.key=使用過期的密鑰創建
commit.signature.unverified.reason.revoked.key=使用撤消的密鑰創建
commit.signature.unverified.reason.cannot.verify=無法驗證(例如，缺少密鑰)
commit.signature.fingerprint=簽名指紋:
commit.signature.signed.by=通過密鑰簽名:
git.log.branches.search.field.accessible.name=Git 分支搜尋
git.log.branches.search.field.accessible.description=按 {0} 轉到 VCS 日誌表篩選器
git.log.branches.tree.accessible.name=Git 分支
action.Git.Toolbar.ShowMoreActions.text=版本控制
action.Git.ShowBranches.text=顯示分支
action.Git.ShowBranches.description=顯示分支
action.Git.Toolbar.ShowMoreActions.description=VCS 操作
stash.editor.diff.preview.id.change.title={0}：{1}
git.branches.popup.tree.accessible.name=分支樹
stash.root.node.title=儲藏
branches.new.branch.from.branch.current=從當前位置新建分支…
branches.action.pull.into.branch.using.merge.selected=使用合併拉入當前分支(_M)
branches.action.pull.into.branch.using.rebase.selected=使用變基拉入當前分支(_R)
git.executable.validation.error.no.response.in.n.attempts.message=無法識別 Git 可執行檔案的版本: {0,choice,0#|2# {0} 次嘗試後}無響應
git.commit.nothing.to.commit.error.message=沒有要提交的內容
stash.empty.text.help.link=儲藏和擱置入門
git.toolbar.widget.no.repo.tooltip=為專案設定版本控制
group.Vcs.ToolbarWidget.ShareProject.text=在以下平台上共享專案:
action.Git.Init.Vcs.Toolbar.Widget.text=創建 Git 版本庫…
action.Git.Init.Stage.error=向 Git 添加檔案失敗