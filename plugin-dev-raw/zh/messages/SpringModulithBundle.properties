inspection.api.usage.name=受限的模組 API 用法
inspection.api.usage.no.allowed.dependencies=模組 ''{0}'' 沒有允許的相依項
inspection.api.usage.not.allowed.dependency=模組 ''{0}'' 依賴於 ''{1}''。但允許的相依項為\: [''{2}'']
inspection.api.usage.not.exposed.dependency=模組 ''{0}'' 依賴於模組 ''{2}'' 中的非公開類型 ''{1}''
inspection.invalid.dependency.empty=模組相依項關鍵字不能為空
inspection.invalid.dependency.malformed=相依項關鍵字格式錯誤
inspection.invalid.dependency.missing.module=模組 ''{0}'' 不存在
inspection.invalid.dependency.missing.named.interface=命名接口 ''{0}'' 不存在
inspection.invalid.dependency.name=無效的相依項宣告
inspection.simplify.event.listener.declaration=事件偵聽器宣告可以簡化
inspection.simplify.event.listener.declaration.message=可以使用 '@ApplicationModuleListener' 簡化事件偵聽器宣告
quickfix.add.allowed.dependency=將 ''{0}'' 新增為 ''{1}'' 模組允許的相依項
quickfix.add.allowed.dependency.command=新增允許的相依項
quickfix.make.module.open=將 ''{0}'' 模組設為開啟
quickfix.mark.class.named.interface=使用 ''@NamedInterface'' 註解 ''{0}''
quickfix.mark.class.named.interface.command=將類別註解為命名接口
quickfix.move.to.base.package=將 ''{0}'' 移動到 ''{1}'' 模組基礎軟體套件
quickfix.simplify.event.listener=使用 '@ApplicationModuleListener' 簡化
spring.modulith=Spring Modulith
structure.module.allowed.dependencies=允許的相依項
structure.module.id=ID
structure.module.open=開啟
structure.modulith.modules=模組
structure.named.interfaces=命名接口
