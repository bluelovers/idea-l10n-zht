dart.color.settings.description.error=分析錯誤
dart.color.settings.description.warning=分析警告
dart.color.settings.description.hint=分析提示
dart.color.settings.description.block.comment=塊註釋
dart.color.settings.description.doc.comment=文檔註釋
dart.color.settings.description.line.comment=行註釋
dart.color.settings.description.number=數字
dart.color.settings.description.string=字串
dart.color.settings.description.valid.string.escape=轉義序列
dart.color.settings.description.invalid.string.escape=無效的轉義序列
dart.color.settings.description.operator=運算符
dart.color.settings.description.parentheses=圓括號
dart.color.settings.description.brackets=中括號
dart.color.settings.description.braces=大括號
dart.color.settings.description.comma=逗號
dart.color.settings.description.dot=點
dart.color.settings.description.semicolon=分號
dart.color.settings.description.colon=冒號
dart.color.settings.description.fat.arrow=Fat arrow
dart.color.settings.description.bad.character=錯誤字符
dart.color.settings.description.symbol.literal=Symbol literal
dart.color.settings.description.annotation=註解
dart.color.settings.description.class=類
dart.color.settings.description.constructor=構造函數
dart.color.settings.description.dynamic.local.variable.declaration=動態局部變數宣告
dart.color.settings.description.dynamic.local.variable.reference=Dynamic local variable reference
dart.color.settings.description.dynamic.parameter.declaration=動態參數宣告
dart.color.settings.description.dynamic.parameter.reference=動態參數引用
dart.color.settings.description.enum=枚舉
dart.color.settings.description.enum.constant=枚舉常數
dart.color.settings.description.function.type.alias=Function type alias
dart.color.settings.description.identifier=關鍵字
dart.color.settings.description.instance.field.declaration=Instance field declaration
dart.color.settings.description.instance.field.reference=Instance field reference
dart.color.settings.description.instance.getter.declaration=Instance getter declaration
dart.color.settings.description.instance.getter.reference=Instance getter reference
dart.color.settings.description.instance.method.declaration=Instance method declaration
dart.color.settings.description.instance.method.reference=Instance method reference
dart.color.settings.description.instance.setter.declaration=Instance setter declaration
dart.color.settings.description.instance.setter.reference=Instance setter reference
dart.color.settings.description.import.prefix=匯入前綴
dart.color.settings.description.keyword=關鍵字
dart.color.settings.description.label=標籤
dart.color.settings.description.library.name=Library name
dart.color.settings.description.local.function.declaration=局部函數宣告
dart.color.settings.description.local.function.reference=Local function reference
dart.color.settings.description.local.variable.declaration=局部變數宣告
dart.color.settings.description.local.variable.reference=Local variable reference
dart.color.settings.description.parameter.declaration=參數宣告
dart.color.settings.description.parameter.reference=參數引用
dart.color.settings.description.static.field.declaration=static 欄位宣告
dart.color.settings.description.static.getter.declaration=static getter 宣告
dart.color.settings.description.static.getter.reference=static getter 引用
dart.color.settings.description.static.method.declaration=static 方法宣告
dart.color.settings.description.static.method.reference=Static method reference
dart.color.settings.description.static.setter.declaration=static setter 宣告
dart.color.settings.description.static.setter.reference=static setter 引用
dart.color.settings.description.top.level.function.declaration=頂層函數宣告
dart.color.settings.description.top.level.function.reference=Top level function reference
dart.color.settings.description.top.level.getter.declaration=Top level getter declaration
dart.color.settings.description.top.level.getter.reference=Top level getter reference
dart.color.settings.description.top.level.setter.declaration=Top level setter declaration
dart.color.settings.description.top.level.setter.reference=Top level setter reference
dart.color.settings.description.top.level.variable.declaration=Top level variable declaration
dart.color.settings.description.type.name.dynamic='dynamic' 類型
dart.color.settings.description.type.parameter=類型參數
dart.color.settings.description.unresolved.instance.member.reference=Unresolvable dynamic reference

error.label.invalid.string.escape=無效的轉義序列
dart.analysis.progress.title=正在分析…
dart.analysis.progress.with.file=正在分析 {0}

action.title.dart.file=Dart 檔案
action.description.create.dart.file=創建 Dart 檔案
list.item.dart.file=Dart 檔案
new.dart.file.title=新建 Dart 檔案
title.create.dart.file.0=創建 Dart 檔案 {0}
dart.title=Dart
dart.sdk.path.label=Dart SDK 路徑(&D):
version.label=版本:
set.sdk.to.see.sample.content.options=請設定 Dart SDK 路徑。
dart.sdk.bad.dartpub.path=找不到可執行檔案: \n\
{0}
overrides.method.in=覆寫 ''{1}'' 中的方法 ''{0}''
overrides.operator.in=覆寫 ''{1}'' 中的運算符 ''{0}''
implements.method.in=實作 ''{1}'' 中的方法 ''{0}''
fields.to.generate.getters=選擇要生成 Getter 的欄位
fields.to.generate.setters=選擇要生成 Setter 的欄位
fields.to.generate.getters.setters=選擇要生成 Getter 和 Setter 的欄位
command.generate.getters.and.setters=生成 getter 和 setter
command.generate.setters=生成 setter
command.generate.getters=生成 getter
command.implement.methods=實作方法
command.override.methods=覆寫方法
dialog.title.choose.methods.to.override=選擇要覆寫的方法
dialog.title.choose.methods.to.implement=選擇要實作的方法
tab.title.subclasses.of.0={0} 的子類
tab.title.overriding.methods.of.0={0} 的覆寫方法

runner.command.line.configuration.name=Dart 命令行套用
runner.command.line.configuration.description=Dart 命令行套用程序
runner.web.app.configuration.name=Dart Web 套用
command.line.run.config.label.dart.file=Dart 檔案(&F):
command.line.run.config.label.vm.options=虛擬機選項(&V):
command.line.run.config.checkbox.enable.asserts=啟用斷言(&N)
command.line.run.config.checkbox.checked.mode=檢查模式
command.line.run.config.label.program.arguments=程序實參(&R):
command.line.run.config.label.working.directory=工作目錄(&W):

remote.debug.configuration.name=Dart 遠端偵錯
remote.debug.configuration.description=Debug 遠端 Dart 命令行套用程序
remote.debug.search.sources.in=在以下位置搜尋源碼(&E):
remote.debug.hint=<html>啟動後，此偵錯設定將提示要連接到的 Dart 服務協議 URL。<br/><br/>適用於 <a href='https://dart.dev/tools/dart-vm'>Dart VM</a> apps pass <code>--enable-vm-service</code> 以及可能的 <code>--pause_isolates_on_start</code> 虛擬機選項。<br/>對於其他上下文，例如 Dart Web 套用 — 使用適當的標誌和選項。</html>

webdev.debug.configuration.name=Dart Web
webdev.debug.configuration.description=使用 webdev 工具啟動 Dart Web 套用程序
web.run.config.label.html.file=HTML 檔案(&F):
web.run.config.label.webdev.port=Webdev 連接埠(&P):
choose.html.main.file=選擇 HTML 檔案
old.dart.sdk.for.webdev=使用 Webdev 偵錯 Dart Web 應用時需要 Dart SDK {0}+，當前版本: {1}。

dart.project.description=創建用於 Dart 編程語言的專案
project.template.not.selected=未選擇專案模板
dart.web.app.title=Dart Web 套用
dart.commandline.app.title=Dart 命令行套用
choose.dart.main.file=選擇 Dart 檔案
choose.dart.directory=選擇 Dart 目錄
livetemplate.description.iter=迭代(for..in)
livetemplate.description.itar=遍歷陣列元素
template.context.type.dart=Dart
template.context.type.dart.statement=語句
dart.surround.with.brackets=[expr]
dart.surround.with.parenthesis=(expr)
dart.surround.with.not.parenthesis=!(expr)
working.dir.0=工作目錄: {0}
dart.pub.get.title=Pub Get
dart.pub.upgrade.title=Pub Upgrade
dart.pub.outdated.title=Pub Outdated
dart.pub.build.title=Pub Build
dart.webdev.build.title=Webdev Build
dart.pub.cache.repair.title=Pub Repair Cache
dart.pub.cache.repair.message=<html><a href='https://dart.dev/tools/pub/cmd/pub-cache'>pub cache repair</a> 指令可對系統快取中所有托管的軟體套件和 git 軟體套件執行乾淨的重裝<br/>。<br/><br/>是否開始修復快取?</html>

runner.test.configuration.name=Dart 測試
runner.test.configuration.description=Dart 單元測試執行設定
test.run.config.label.test.mode=測試模式(&M):
test.run.config.label.test.file=測試檔案(&F):
test.run.config.label.test.folder=測試資料夾(&F):
test.run.config.label.group.or.test.name=組或測試名稱(&N):
test.run.config.label.target.name=目標名稱(&T):
test.run.config.label.test.runner.options=測試執行程序選項(&R):

dart.pub.exception=異常: {0}
dart.refactoring.extract.method.error=提取方法錯誤
dart.refactoring.move.file.dialog.title=移動檔案例外
dart.refactoring.move.file.dialog.error.applying.change=嘗試套用移動檔案重構時發生異常。
dart.refactoring.move.file.dialog.error.computing.change=嘗試為檔案移動計算檔案變更時發生異常: {0}

dart.fix.getter.none.found=找不到要為之生成 getter 的 private 欄位
dart.fix.setter.none.found=找不到要為之生成 setter 的 private 欄位
dart.fix.getter.setter.none.found=找不到要為之生成 getter/setter 的 private 欄位
dart.fix.implement.none.found=找不到要實作的方法
dart.fix.override.none.found=找不到要覆寫的方法

dart.hierarchy.object=所有類派生自 Object

inspections.group.name=Dart
dart.sdk.is.not.configured=未設定 Dart SDK
setup.dart.sdk=設定 Dart SDK
dart.support.is.not.enabled.for.project=未為專案啟用 Dart 支援
dart.support.is.not.enabled.for.module.0=未為模組 ''{0}'' 啟用 Dart 支援
enable.dart.support=啟用 Dart 支援
open.dart.settings=開啟 Dart 設定
dart.support.enabled.for.module.0=為模組 ''{0}'' 啟用了 Dart 支援
dart.support.enabled=已啟用 Dart 支援
dart.sdk.0.open.dart.settings=<html>Dart SDK {0}<br/><br/><a href="settings">開啟 Dart 設定</a></html>
old.dart.sdk.configured=要正確地高亮顯示程式碼，需要使用 Dart SDK {0}+。當前版本: {1}
download.dart.sdk=下載 Dart SDK
dart.sdk.update.title=Dart SDK 更新
new.dart.sdk.available.for.download..notification=<html>有新版本的 Dart SDK ({0})可供下載。<br/>當前版本: {1}。<br/><br/><a href="download">下載 Dart SDK</a>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<a href="settings">開啟 Dart 設定</a></html>
dart.sdk.update.check.failed=無法檢查 Dart SDK 更新。
checking.dart.sdk.update=正在檢查 Dart SDK 更新
dart.sdk.0.is.up.to.date=設定的 Dart SDK {0} 已處於最新狀態。
new.dart.sdk.0.available.for.download..dialog=<html>有新版本的 Dart SDK ({0})可供<a href="{1}">下載</a>。</html>
dart.sdk.0.available.for.download=<html>Dart SDK {0} 可供<a href="{1}">下載</a>。</html>

outdated.dependencies.inspection.name=軟體套件依賴項過時
pub.get.never.done=尚未執行 'Pub get'
pubspec.edited=已編輯 Pubspec
pub.get=Pub get
pub.upgrade=Pub upgrade
pub.outdated=Pub outdated
webdev.build=Webdev build…
open.pubspec=開啟 pubspec
ignore.warning=忽略

path.package.reference.inspection.name=未解析的路徑軟體套件
pubspec.yaml.not.found.in=在 {0} 中找不到 pubspec.yaml 檔案
path.package.reference.to.itself=Dart 軟體套件無法將自身列為依賴項

path.to.dart.file.not.set=未指定 Dart 原始碼路徑
dart.file.not.found=找不到 Dart 檔案: {0}
not.a.dart.file.or.directory=指定的檔案不是 Dart 檔案或目錄: {0}
work.dir.does.not.exist=工作目錄不存在: {0}
test.dir.not.in.project=目錄不在 Dart 專案中

path.to.html.file.not.set=未指定 HTML 檔案路徑
html.file.not.found=找不到 HTML 檔案: {0}
not.a.html.file=指定的檔案不是 HTML 檔案: {0}
html.file.not.within.dart.project=HTML 檔案應位於 Dart 專案中
html.file.right.in.dart.project.root=HTML 檔案應位於子資料夾(如 'web')中，不應位於 Dart 專案根中

dart.generate.code=生成 Dart 程式碼
dart.generate.constructor=生成構造函數
dart.generate.named.constructor=生成命名構造函數
dart.generate.toString=生成 toString()
dart.generate.equalsAndHashcode=Generate ==() 和 hashCode
project.0=專案 ''{0}''
debugger.trying.to.connect=正在嘗試連接
connect.to.running.app.title=連接到正在執行的套用
enter.url.to.running.dart.app=偵錯正在執行的 Dart 或 Flutter 應用程式的服務 URL:
connect.to.running.app.comment=正在執行的 Dart 行程具有 VM 偵錯器服務，IDE 可以通過 URL 連接到該服務。在命令行上啟動行程後，將列印此 URL。
dart.line.breakpoints.title=Dart 行中斷點
test.0.in.1={0} ({1} 內)
all.tests.in.0={0} 中的測試
open.observatory.action.text=開啟 Observatory
open.observatory.action.description=在瀏覽器中開啟 Observatory URL (面向 Dart 套用的分析器)
dart.pop.frame.action.text=丟幀(Dart)
dart.pop.frame.action.description=將當前框架從堆疊中彈出
stop.dart.webdev.server=停止 Dart Webdev 伺服器
dart.webdev.server.output.contains.errors=<html><a href="">Dart Webdev 伺服器</a>輸出包含錯誤。</html>
dart.webdev.server.output.contains.warnings=<html><a href="">Dart Webdev 伺服器</a>輸出包含警告。</html>
stop.pub.process.action=停止 Pub 行程
rerun.pub.command.action.name=重新執行 Pub 指令
rerun.pub.command.action.description=再次執行相同的 Pub 指令

checkbox.collapse.parts=部分
checkbox.collapse.generic.parameters=泛型參數
dart.project.generate.sample.content.label=生成範例內容(&G):
dart.project.templates.loading.message=正在載入 Dart 專案模板…

toolwindow.stripe.Dart_Analysis=Dart 分析
dart.reanalyze.action.name=重新分析 Dart 原始碼
dart.reanalyze.action.description=重新分析所有 DART 源文件(無需重新啟動 DART 分析伺服器)
dart.restart.server.action.name=重啟 Dart 分析伺服器
group.by.severity=按嚴重程度分組
group.by.severity.description=按嚴重程度分組: 表的頂部為錯誤，然後是警告，最後是提示
open.dart.plugin.settings=啟用 Dart 延伸模組設定
analysis.server.settings.diagnostics=查看分析器診斷
analysis.server.settings.package.analysis=將分析範圍設定為當前軟體套件
action.DartProblemsViewPanel.open.documentation.text=開啟文檔
action.DartProblemsViewPanel.open.documentation.description=在瀏覽器中開啟詳細的問題描述
# this text becomes a hyperlink that is added to the red code tooltip right after the error message. Example: "Dead code. (<a href='https://dart.dev/tools/diagnostic-messages#dead_code'>Documentation</a>)"
error.doc.link=文檔

analysis.server.terminated=分析伺服器已終止
analysis.server.not.running=分析伺服器未執行。
dart.vm.file.does.not.exist.at.0=以下位置不存在 Dart VM 檔案: {0}
analysis.server.snapshot.file.does.not.exist.at.0=在以下位置不存在 Dart 分析伺服器快照檔案: {0}
dart.vm.file.is.not.executable.at.0=Dart VM 檔案在以下位置無法執行: {0}
analysis.server.snapshot.file.is.not.readable.at.0=Dart 分析伺服器快照檔案在以下位置無法讀取: {0}
issue.occurred.with.analysis.server=分析伺服器發生問題

action.Dart.DartSortMembers.text=對 Dart 檔案中的成員排序
action.Dart.DartSortMembers.description=對 Dart 程式碼中的成員排序
action.Dart.DartSortMembers.progress.title=正在對 Dart 檔案中的成員排序…
dart.sort.members.action.name.ellipsis=對 Dart 檔案中的成員排序…
dart.sort.members.hint.failed=無法對成員排序
dart.sort.members.hint.already.good=成員排序: 成員已排序
dart.sort.members.hint.success=已成功對程式碼排序
dart.sort.members.files.no.dart.files=找不到適用的 Dart 檔案。
dart.sort.members.files.dialog.question=對 {0, choice, 1#個選定的檔案|2#the {0} 個選定的 Dart 檔案} 執行 Dart 成員排序器?

action.Dart.DartStyle.text=使用 'dart format' 重新格式化程式碼
action.Dart.DartStyle.description=使用 'dart format' 指令格式化 Dart 程式碼
action.Dart.DartStyle.progress.title=正在執行 'dart format'…
dart.style.action.name.ellipsis=使用 'dart format' 重新格式化程式碼…
dart.style.hint.failed=無法重新格式化程式碼
dart.style.hint.already.good=重新格式化: 無格式變更
dart.style.hint.success=重新格式化: 程式碼成功格式化
dart.style.files.no.dart.files=找不到適用的 Dart 檔案。
dart.style.files.dialog.question=在{0, choice, 1#所選檔案|2# {0} 個所選 Dart 檔案}上執行 ''dart format''?
organized.directives=組織的指令

code.style.settings.dartfmt.faq=<html>程式碼已使用 Dart SDK 中的 <a href='https://dart.dev/tools/dart-format'>dart format</a> 工具格式化。請參閱 <a href='https://github.com/dart-lang/dart_style/wiki/FAQ'>FAQ</a>。</html>
code.style.settings.label.line.length=行長度(&L):

action.Dart.DartFix.text=執行 'dart fix'
# suppress inspection "UnusedProperty" -- used by DartFixAction, which is temporarily commented out in plugin.xml
action.Dart.DartFix.description=執行 'dart fix' 來修正和遷移 Dart 源
dart.fix.action.name.ellipsis=使用 Dartfix 修正程式碼…

failed.to.create.file.0.1=無法創建檔案 {0}:\n\
{1}

dart.quick.assist.family.name=由 Dart 分析伺服器提供快速協助
goto.super.class.chooser.title=選擇超類
usages.in.comments.to.rename=要重命名的註釋中的用法
usages.in.code.to.rename=程式碼中要重命名的用法
dynamic.usages.to.rename=要重命名的程式碼中的潛在(動態)用法
rename.need.reRun=無法重命名。\n\
找到用法後，程式碼發生了更改。\n\
請再次調用“重命名”重構。

exportable.DartCodeFoldingSettings.presentable.name=程式碼折疊設定

analysis.server.status.good.text=提交分析器反饋…

analysis.server.show.diagnostics.text=查看分析器診斷…
analysis.server.show.diagnostics.error=開啟 Dart 分析伺服器診斷頁面時出錯

dart.feedback.url=https://github.com/dart-lang/sdk/issues/new?title={0}\\&body=
dart.feedback.template=\n\
\n\
\n\
## 版本資訊\n\
\n\
- `IDEA {0}`\n\
- `{1}`\n\
- `{2}`

dart.smartKeys.insertDefaultArgValues.text=在補全中插入預設實參值
dart.editor.showClosingLabels.text=在 Dart 原始碼中顯示關閉標籤

label.update.imports.on.paste=貼上時更新匯入:
dialog.paste.on.import.title=貼上時更新匯入
dialog.paste.on.import.text=<html>您貼上的程式碼段使用的庫在新上下文中無法存取。<br/><br/>是否更新新檔案中的匯入?</html>

action.Dart.pub.cache.repair.text=Pub Cache Repair…
action.Dart.pub.cache.repair.description=執行 'pub cache repair'
action.Dart.build.text=Webdev Build…
action.Dart.build.description=執行 'webdev build'
action.Dart.pub.outdated.text=Pub Outdated
action.Dart.pub.outdated.description=執行 'pub outdated'
action.Dart.pub.upgrade.text=Pub Upgrade
action.Dart.pub.upgrade.description=執行 'pub upgrade'
action.Dart.pub.get.text=Pub Get
action.Dart.pub.get.description=執行 'pub get'
action.Generate.EqualsAndHashcode.Dart.text===() 和 hashCode
action.Generate.ToString.Dart.text=toString()
action.Generate.GetSetAccessor.Dart.text=Getter 和 Setter
action.Generate.SetAccessor.Dart.text=Setter
action.Generate.GetAccessor.Dart.text=Getter
action.Generate.Named.Constructor.Dart.text=已命名的構造函數
action.Generate.Constructor.Dart.text=構造函數
action.Dart.Analyzer.Diagnostics.text=Dart Analyzer Diagnostics
action.Dart.Analyzer.Diagnostics.description=查看 Dart 分析器診斷
action.Dart.Restart.Analysis.Server.text=重啟 Dart 分析伺服器
action.Dart.Restart.Analysis.Server.description=重啟 Dart 分析伺服器
action.Dart.Reanalyze.text=重新分析 Dart 原始碼
action.Dart.Reanalyze.description=Reanalyze all Dart source files
action.Dart.NewDartFile.text=Dart 檔案
action.Dart.NewDartFile.description=Create new Dart file
action.Dart.stop.dart.webdev.server.text=停止 Dart Webdev 伺服器

action.description.run.pub.build=執行 'pub build'
action.text.pub.build=Pub Build…
action.text.webdev.build=Webdev Build…
action.description.run.webdev.build=執行 'webdev build'
border.breaking.policy=中斷策略
radio.text.break.on.all.exceptions=在遇到所有異常時都中斷
radio.text.break.on.uncaught.exceptions=在遇到未捕捉的異常時中斷
breakpoint.type.title.dart.exception.breakpoint=Dart 異常中斷點
break.on.exceptions=遇到異常時中斷
intention.family.name.suppress.errors.and.warnings.in.dart.code=禁止 Dart 程式碼中的錯誤和警告
intention.text.suppress.0=禁止 ''{0}''
intention.text.suppress.0.using.eol.comment=使用 EOL 註釋禁止 ''{0}''
find.usages.type.top.level.variable=頂層變數
find.usages.type.local.variable=局部變數
find.usages.type.class=類
find.usages.type.method=方法
find.usages.type.function=函數
find.usages.type.field=欄位
find.usages.type.parameter=參數
find.usages.type.constructor=構造函數
find.usages.type.typedef=typedef
find.usages.type.operator=運算符
find.usages.type.label=標籤
find.usages.type.reference=引用
find.usages.type.library=庫
label.text.method.name=方法名稱:
checkbox.text.extract.all.0.occurrences=提取全部 {0} 個匹配項
dialog.title.extract.method=提取方法
checkbox.text.extract.getter=提取 getter
checkbox.text.extract.all.occurrences=提取所有符合項
notification.content.you.can.enable.it.back.in.the.a.href.event.log.a.settings=可以在 <a href="">{0}</a> 設定中恢復。
notification.title.warning.disabled=警告被禁用。
progress.title.activating.package.webdev=正在啟用軟體套件 'webdev'
progress.title.loading.coverage.data=正在載入覆蓋率資料…
progress.title.activating.coverage.package=正在啟用覆蓋率軟體套件…
dialog.title.select.working.directory=選擇工作目錄
button.browse.dialog.title.select.dart.sdk.path=選擇 Dart SDK 路徑
label.text.name=名稱:
dialog.title.extract.local.variable=提取局部變數
dialog.title.rename.0=重命名 {0}
progress.text.checking.availability.at.the.selection=選擇時檢查適用性。
progress.text.validating.the.specified.parameters=正在驗證指定參數。
coverage.string.0.of.1.files={0}/{1} 個檔案
coverage.string.0.of.1.files.covered=已覆蓋 {0}/{1} 個檔案
filetype.dart.description=Dart
validation.info.input.and.output.folders.must.be.different=輸入資料夾和輸出資料夾不得相同
validation.info.output.folder.not.specified=未指定輸出資料夾
validation.info.input.folder.not.specified=未指定輸入資料夾
validation.info.build.mode.not.specified=未指定建置模式
button.browse.dialog.title.output.folder=輸出資料夾
button.text.build2=建置
action.title.dart.rename.refactoring=Dart 重命名重構
analysis.issues.may.affect.the.execution=<a href=''{0}''>分析問題</a>可能影響 ''{1}'' 的執行。

dart.problems.view.filtering.by.severity=按嚴重程度篩選
dart.problems.view.filtering.by.0=按{0}篩選
dart.problems.view.filtering.by.0.and.severity=按 {0} 和嚴重程度篩選
dart.problems.view.filter.current.content.root=當前內容根
dart.problems.view.filter.current.dart.package=當前 Dart 軟體套件
dart.problems.view.filter.current.directory=當前目錄
dart.problems.view.filter.current.file=當前檔案
dart.problems.view.0.errors={0} 個{0, choice, 1#錯誤|2#錯誤}
dart.problems.view.0.warnings={0} 個{0, choice, 1#警告|2#警告}
dart.problems.view.0.hints={0} 個{0, choice, 1#提示|2#提示}
dart.problems.view.status.0.and.1={0}、{1}
dart.problems.view.status.0.and.1.and.2={0}、{1}、{2}
dart.problems.view.status.0.and.filters.1={0} ({1})
dart.problems.view.column.name.location=位置
dart.problems.view.column.name.description=描述
dart.problems.view.action.name.filter.problems=篩選
dart.problems.view.action.description.filter.problems=篩選“Dart 分析”工具視窗中顯示的問題
dart.problems.view.action.name.analysis.server.settings=分析器設定
dart.problems.view.action.description.analysis.server.settings=Dart 分析伺服器設定
dart.problems.view.popup.title.analysis.server.settings=Dart 分析伺服器設定
dart.problems.view.popup.title.dart.problems.filter=Dart 問題篩選器
dart.problems.filter.popup.title.files=檔案
dart.problems.filter.popup.title.severity=嚴重程度
dart.problems.filter.popup.link.reset.filter=重置篩選器
dart.problems.filter.popup.radio.whole.project=整個專案(&O)
dart.problems.filter.popup.radio.current.content.root=當前內容根(&C)
dart.problems.filter.popup.radio.current.dart.package=當前 Dart 軟體套件(&P)
dart.problems.filter.popup.radio.current.directory=當前目錄(&D)
dart.problems.filter.popup.radio.current.file=當前檔案(&F)
dart.problems.filter.popup.check.box.errors=錯誤(&E)
dart.problems.filter.popup.check.box.warnings=警告(&W)
dart.problems.filter.popup.check.box.hints=提示(&H)

progress.title.move.file=移動檔案
progress.title.extract.local.variable=提取局部變數
progress.title.extract.method=提取方法
progress.title.inline.local.variable=內聯局部變數
progress.title.rename=重命名
progress.title.inline.method=內聯方法
error.failed.to.edit.file.file.not.found.0=無法編輯檔案，未找到: {0}
error.none.of.the.files.were.in.this.project.content.0=這些檔案均不在此專案內容中: {0}
radio.inline.all.references.remove.method=內聯所有引用並移除該方法
radio.inline.this.reference.leave.method=內聯此引用並保留該方法
label.method.0=方法 {0}

dart.build.dialog.label.build.mode=建置模式:
dart.build.dialog.radio.button.release=發佈(&R)
dart.build.dialog.radio.button.debug=偵錯(&D)
dart.build.dialog.radio.button.other=其他(&O):
dart.build.dialog.label.input.folder=輸入資料夾(&I):
dart.build.dialog.label.output.folder=輸出資料夾(&U):

settings.page.checkbox.enable.dart.support.for.project.0=為專案 ''{0}'' 啟用 Dart 支援(&E)
settings.page.checkbox.enable.dart.support.check.box=啟用 Dart 支援(&E)
settings.page.label.enable.dart.support.for.following.modules=為以下模組啟用 Dart 支援:
settings.page.label.enable.dart.support.for.following.projects=為以下專案啟用 Dart 支援:
error.path.to.sdk.not.specified=錯誤: 未指定 Dart SDK 路徑。
error.folder.specified.as.sdk.not.exists=錯誤: 指定為 Dart SDK 主目錄的資料夾不存在。
error.sdk.not.found.in.specified.location=錯誤: 在指定位置找不到 Dart SDK。
warning.no.modules.selected.dart.support.will.be.disabled=警告: 未選擇任何模組。將對該專案禁用 Dart 支援。
warning.no.projects.selected.dart.support.will.be.disabled=警告: 未選擇任何專案。Dart 支援將被禁用。
settings.page.checkbox.check.sdk.update=檢查 SDK 更新(&U):
settings.page.check.updates.combobox.item.stable.channel=穩定通道
settings.page.check.updates.combobox.item.stable.and.dev.channels=穩定通道和開發通道
settings.page.button.check.updates.now=立即檢查(&W)
settings.page.label.webdev.server.port=Webdev 伺服器連接埠(&P):

debugger.error.cannot.evaluate=無法評估
debugger.error.no.running.isolate=無正在執行的 isolate。
debugger.error.no.connection.to.dart.vm=未連接到 Dart 虛擬機
debugger.unnamed.frame=未命名
debugger.isolate.name.running={0} (正在執行)
debugger.dialog.message.cancelled=已取消
debugger.asynchronous.gap.frame=<asynchronous gap>
debugger.link.see.stack.trace=堆疊跟踪

notification.content.message.with.view.details.link={0} (<a href="">查看詳細資訊</a>)
notification.title.dart.analysis.issue=Dart 分析問題
dialog.message.cannot.activate.pub.package.coverage=無法啟用 'coverage' pub 軟體套件。
notification.link.don.t.show.for.this.session=不對此會話顯示
notification.link.never.show.again=不再顯示
dialog.message.dart.project.path.not.specified=未指定 Dart 專案路徑。
dialog.message.folder.not.found=找不到資料夾: {0}
dialog.message.folder.not.in.project.content=資料夾不在專案內容中: {0}
dialog.message.group.or.test.name.not.specified=未指定組名稱或測試名稱
test.mode.all.in.folder=資料夾中的所有
test.mode.all.in.file=檔案中的所有
test.mode.test.group.or.test.by.name=按名稱分組或測試
dialog.message.no.tests.to.run=沒有要執行的測試
dart.coverage.presentable.text=Dart 覆蓋率

doc.popup.containing.class=包含類:
doc.popup.type=類型:
dart.color.settings.description.constructor.tearoff=構造函數 tear-off
dart.color.settings.description.instance.method.tearoff=實例方法 tear-off
dart.color.settings.description.local.function.tearoff=局部函數 tear-off
dart.color.settings.description.static.method.tearoff=static 方法 tear-off
dart.color.settings.description.top.level.function.tearoff=頂層函數 tear-off
dart.color.settings.description.type.alias=類型別名
press.completion.shortcut.again.for.more.results=再次按 {0} 可查看更多結果
notification.group.dart.support=已啟用 Dart 支援
notification.group.dart.analysis=Dart 分析
notification.group.dart.webdev=Dart webdev
notification.group.dart.analysis.server=Dart 分析伺服器
notification.group.dart.pub.tool=Dart 'pub' 工具
notification.group.dart.analysis.issue=Dart 分析問題