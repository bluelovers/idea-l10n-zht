inspection.cache.enabled=分析期間使用快取
inspection.cast.always.fails=轉換始終失敗
inspection.cast.may.fail=轉換可能失敗
inspection.common.settings=通用設定
inspection.condition.always.false=條件始終為 false
inspection.condition.always.true=條件始終為 true
inspection.dfa.progress=DFA 分析進度
inspection.global.depth=對於批量分析，從當前檔案參照的檔案的最大深度
inspection.global.operations.limit=批量分析的動作次數上限(100 萬)
inspection.global.rml.analysis.display.name=基於 RML 的分析(全域)
inspection.global.settings=批量分析的設定
inspection.global.taint.analysis.display.name=污點分析
inspection.group.adjacent.locations.with.same.offset.enabled=將具有相同偏移量的位置進行分組
inspection.ir.progress=IR 檔案生成
inspection.local.depth=對於編輯器內分析，從當前檔案參照的檔案的最大深度
inspection.local.null.dereference.analysis.display.name=基於 RML 的 null 解參照分析
inspection.local.rml.analysis.display.name=基於 RML 的分析(本地)
inspection.local.settings=編輯器內分析的設定
inspection.local.timeout=編輯器內分析的分析時間限制(毫秒)
inspection.max.ir=一次分析的最大宣告數量
inspection.null.dereference=可能的 null 解參照
inspection.only.method.names.in.calls.enabled=僅在呼叫中顯示方法名稱
inspection.safe.class=安全類別
inspection.safe.class.comment=這些類別不能包含不安全的資料
inspection.slow.config.enabled=啟用計算開銷大的組態
inspection.taint.Authentication=不受控制的使用者輸入被傳遞到 Authentication 動作匯聚點
inspection.taint.Authentication.label=身份驗證
inspection.taint.CMDi=不受控制的使用者輸入被傳遞到 Command 注入匯聚點
inspection.taint.CMDi.label=指令注入
inspection.taint.Crypto=使用了弱加密/雜湊算法
inspection.taint.Crypto.label=弱加密
inspection.taint.Encryption=不受控制的使用者輸入被傳遞到 Encryption 動作匯聚點
inspection.taint.Encryption.label=加密
inspection.taint.EnvInjection=不受控制的使用者輸入被傳遞到 Environment 變數注入匯聚點
inspection.taint.EnvInjection.label=環境注入
inspection.taint.JNDIInjection=不受控制的使用者輸入被傳遞到 JNDI 注入匯聚點
inspection.taint.JNDIInjection.label=JNDI 注入
inspection.taint.LDAPInjection=不受控制的使用者輸入被傳遞到 LDAP 注入匯聚點
inspection.taint.LDAPInjection.label=LDAP 注入
inspection.taint.OpenRedirect=不受控制的使用者輸入被傳遞到 Open-Redirect 匯聚點
inspection.taint.OpenRedirect.label=開啟重新導向
inspection.taint.Password=不受控制的使用者輸入被傳遞到 Password 動作匯聚點
inspection.taint.Password.label=密碼
inspection.taint.PathTraversal=不受控制的使用者輸入被傳遞到路徑遍歷匯聚點
inspection.taint.PathTraversal.label=路徑遍歷
inspection.taint.ResponseSplitting=不受控制的使用者輸入被傳遞到 Response Splitting 匯聚點
inspection.taint.ResponseSplitting.label=響應拆分
inspection.taint.SQLi=不受控制的使用者輸入被傳遞到 SQL 注入匯聚點
inspection.taint.SQLi.label=SQL 注入
inspection.taint.SSRF=不受控制的使用者輸入被傳遞到 Server-Side Request Forgery (SSRF) 匯聚點
inspection.taint.SSRF.label=SSRF
inspection.taint.TemplateInjection=不受控制的使用者輸入被傳遞到 Template 注入匯聚點
inspection.taint.TemplateInjection.label=模板注入
inspection.taint.UrlForward=不受控制的使用者輸入被傳遞到 Url Forward 注入匯聚點
inspection.taint.UrlForward.label=URL 轉發
inspection.taint.XSLTInjection=不受控制的使用者輸入被傳遞到 XSLT 注入匯聚點
inspection.taint.XSLTInjection.label=XSLT 注入
inspection.taint.XSS=不受控制的使用者輸入被傳遞到跨站腳本(XSS)匯聚點
inspection.taint.XSS.label=XSS
inspection.taint.XpathInjection=不受控制的使用者輸入被傳遞到 XPath 注入匯聚點
inspection.taint.XpathInjection.label=XPath 注入
inspection.taint.analysis.group.name=安全性
inspection.taint.argument.description=污染資料作為實參傳遞給呼叫
inspection.taint.assignment.from.call.description=呼叫將污染資料賦值給變數 "{0}"
inspection.taint.assignment.from.call.without.variable.name.description=呼叫將污染資料賦值給變數
inspection.taint.call.inbound.description=呼叫將污染資料進行了傳播
inspection.taint.call.outbound.description=此呼叫將污染資料傳播到其返回值
inspection.taint.foreach.description=污染資料在 foreach 迴圈中迭代
inspection.taint.lhs.description=污染資料賦值給變數 "{0}"
inspection.taint.lhs.without.variable.name.description=污染資料賦值給變數
inspection.taint.new.inbound.description=污染資料通過建構函式呼叫傳播
inspection.taint.new.outbound.description=污染資料被傳遞給建構函式呼叫
inspection.taint.parameter.description=污染資料作為函式參數 "{0}" 傳遞
inspection.taint.parameter.without.name.description=污染資料作為函式參數傳遞
inspection.taint.receiver.description=污染資料通過接收器傳遞給呼叫
inspection.taint.return.description=污染資料從函式返回
inspection.taint.rhs.description=污染資料傳播到賦值的左側
inspection.taint.rule.based.sink.description=匯聚點 {0}\: 污染資料會匯集在此處
inspection.taint.sink.description=匯聚點\: 污染資料會匯集在此處
inspection.taint.source.description=源\: 可以返回使用者製作的污染內容
inspection.taint.unknown.description=污染資料已傳播
inspection.taint.unknown.variable.name=未知
inspection.trace.settings=追蹤設定
