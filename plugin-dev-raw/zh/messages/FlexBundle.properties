0.module.1=''{0}'' (模組 ''{1}'')
actionscript.binary.operand.type.mismatch=二元運算實參類型{0}與類型{1}不相容
actionscript.create.constructor.intention.name=建立建構函式 ''{0}''
actionscript.template.context.type=ActionScript(&I)
active.bc.widget.empty.text=Flash 建置組態
active.bc.widget.empty.tooltip=<html>此窗格顯示了上下文中該模組的有效 Flash 建置組態。<br>有效建置組態用於醒目提示和補全原始碼。</html>
active.bc.widget.tooltip=Flash 建置組態 ''{0}'' 用於模組 ''{1}'' 中的原始碼醒目提示和補全
actual.value.from.config.file.0=組態檔案中的實際值: {0}
adb.forward.title=ADB 前向
add.as.library.title=新增為庫
add.bc.dependency.dialog.title=新增相依項
add.build.configuration.title=新增建置組態(模組 ''{0}'')
add.dependency.action.name=新增相依項
add.dependency.bc.dialog.label=選擇要相依的建置組態:
add.dependency.popup.title=新增相依關係:
add.doc.url.button=新增文檔 URL
add.library.components.action.name=新增庫組件(&L)…
add.module.library.action.text=新增庫…
add.shared.library.dependency.action.text=專案或全域類別庫…
additional.config.file.not.found=找不到其他編譯器組態檔案: {0}
adl.not.found.check.sdk.installation=在 ''{0}'' 處找不到 AIR Debug Launcher。檢查 SDK ''{1}'' 的安裝
adl.not.found.check.sdk.settings=在 ''{0}'' 處找不到 AIR Debug Launcher。檢查 SDK ''{1}'' 的組態
adl.not.set.check.sdk.settings=未設定 AIR Debug Launcher。檢查 SDK ''{0}'' 的組態
air.application.created=建立的 <html>AIR {0, choice, 1#應用程式|2#應用程式}: <br>{1}</html>
air.captive.packaging.requires.3.0=要使用 captive runtime 建立 AIR 軟體套件，需要使用 <b>AIR 3.0 或更高版本</b>。
air.ios.debug.via.usb.requires.3.4=要通過 USB 偵錯 iOS 應用程式，需要使用 <b>AIR 3.4 或更高版本</b>。
air.ios.simulator.requires.3.3=要在 iOS 模擬器上執行應用程式，需要使用 <b>AIR 3.3 或更高版本</b>。
air.mobile.ios.fast.packaging.requires.2.7=要在解釋器模式(快速打包)下建立 iOS 軟體套件，需要使用 <b>AIR 2.7 或更高版本</b>。
air.mobile.packaging.requires.2.6=要建立 AIR 移動軟體套件，需要使用 <b>AIR 2.6 或更高版本</b>。
air.mobile.packaging.version.problem=<html>{0}<br><br>SDK ''{1}'' 包含 AIR {2}。<br>您可以執行下面的一項動作:<ul><li>在當前使用的 Flex SDK 上解壓縮 AIR SDK {3} 或更高版本</li><li>使用已包含 AIR {3} 或更高版本的 Flex SDK 的另一個版本</li></ul></html>
air.mobile.version.problem.title=AIR 版本
air.runtime.not.found.check.sdk.settings=在 ''{0}'' 處找不到 AIR 執行時。檢查 SDK ''{1}'' 的組態
air.runtime.not.installed=裝置上未安裝 AIR 執行時。\nSDK ''{0}'' 包含 AIR 執行時 {1}。\n\n要安裝嗎?
air.runtime.not.set.check.sdk.settings=未設定 AIR 執行時。檢查 SDK ''{0}'' 的組態
air.runtime.version.title=AIR 運行時版本
air.sdk.requires.pure.as=建置組態應標記為“純 ActionScript”，因為 AIR SDK ''{0}'' 不包含 Flex 組件
air.version.mismatch.warning=警告: {0} 套用檔案描述子 {1} 中的 AIR 版本({2})與 AIR SDK 版本不符合: {3}
android.application.launched=在裝置上啟動的 Android 應用程式
android.disabled.in.bc=未在建置組態 ''{0}'' (模組 ''{1}'')中啟用 Android 支援
as.libraries.root.detector.name=原始 ActionScript 庫
asdoc=ASDoc
autodetected.source.root.type=ActionScript/Flex
bad.url=錯誤的 URL: {0}
base.component.needed.message=無法移除與基礎組件的關係
bc.0.module.1.air.version.mismatch.warning=建置組態 ''{0}'' (模組 ''{1}''):<br>套用檔案描述子中的 AIR 版本({2})與 AIR SDK 版本不符合: {3}。<br>{4}
bc.0.module.1.android.custom.descriptor.not.found=建置組態 ''{0}'' (模組 ''{1}''): \n找不到自訂 Android 套用檔案描述子:\n{2}
bc.0.module.1.android.custom.descriptor.not.set=建置組態 ''{0}'' (模組 ''{1}''):\n未設定自訂 Android 套用檔案描述子路徑
bc.0.module.1.custom.descriptor.not.found=建置組態 ''{0}'' (模組 ''{1}''):\n找不到自訂套用檔案描述子: \n{2}
bc.0.module.1.custom.descriptor.not.set=建置組態 ''{0}'' (模組 ''{1}''):\n未設定自訂套用檔案描述子路徑
bc.0.module.1.ios.custom.descriptor.not.found=建置組態 ''{0}'' (模組 ''{1}''): \n找不到自訂 iOS 套用檔案描述子:\n{2}
bc.0.module.1.ios.custom.descriptor.not.set=建置組態 ''{0}'' (模組 ''{1}''):\n未設定自訂 iOS 套用檔案描述子路徑
bc.0.module.1.problem.2=建置組態 ''{0}'' (模組 ''{1}''): {2}
bc.dependency.does.not.exist=建置組態 ''{0}'' (模組''{1}'')不存在。\n設定為建置組態 ''{2}'' (模組 ''{3}'')的相依項
bc.dependency.problem=發現禁止的相依項: \n建置組態 ''{0}'' ({2}，模組 ''{1}'')\n依賴於建置組態 ''{3}'' ({5}，模組 ''{4}'')。\n相依項類型: {6}
bc.dialog.up.down.tooltip=使用上下鍵更改目標平台，按住 Shift 鍵更改輸出類型
bc.does.not.produce.app=建置組態 ''{0}'' (模組 ''{1}'')不會生成可執行的應用程式
bc.not.specified=未指定建置組態
bc.output.file.and.wrapper.source.item={0}: 輸出檔案和 HTML 包裝器
bc.output.file.source.item={0}: 僅輸出檔案({1})
bc.output.folder.source.item={0}: 整個輸出目錄內容
bc.problem.dependency.bc.not.found=模組 ''{1}'' 中缺少相依項建置組態 ''{0}''。
bc.problem.dependency.module.not.found=缺少相依項模組 ''{0}''。
bc.problem.no.sdk=未定義 SDK。
bc.problem.sdk.not.found=找不到 Flex SDK ''{0}''。
bc.structure.element.type.name=建置組態
bc.tab.air.desktop.display.name=AIR 軟體套件
bc.tab.android.display.name=Android
bc.tab.compiler.options.display.name=編譯器選項
bc.tab.dependencies.display.name=相依項
bc.tab.general.display.name=一般
bc.tab.ios.packaging.display.name=iOS
breakpoint.condition.error=中斷點條件錯誤
build.configurations.popup.separator.text=建置組態
can.not.package.bc=<html><b>{0}</b>: {1}</html>
can.not.use.built.in.compiler.shell=無法使用內建的編譯器 shell，原因是為不同的建置組態組態了不同的 Flex SDK。
cannot.resolve.class.0=無法解析類別 ''{0}''
cannot.resolve.package.0=無法解析軟體套件 ''{0}''
cannot.resolve.state=狀態參照無效
cant.execute.flexunit1.for.pure.as.bc=無法為純 ActionScript 建置組態執行 FlexUnit 1 測試。請使用 FlexUnit 4 或更高版本。
cant.launch=無法使用 {1}\n開啟 {0}\n錯誤: {2}
change.bc.type.title=更改建置組態類型
check.air.version.title=檢查 AIR 版本
check.flash.app.compiled.before.launch.notification.group=啟動前未編譯 Flash 套用
check.ios.devices.title=檢查 iOS 裝置
checking.air.version=正在檢查 AIR 版本
checking.ios.devices=正在檢查 iOS 裝置
checking.url=正在檢查 URL ''{0}''
choose.bc.dialog.label=庫 ''{0}'' 將新增到所選建置組態:
choose.bc.dialog.title=選擇 Flash 建置組態
choose.build.configuration.popup.title=模組 ''{0}'' 的有效 Flash 建置組態
choose.event.class.title=選擇事件類別
choose.host.component=選擇主機組件
choose.library.files.description=<html>選擇 *.swc 或 *.ane 檔案和/或包含 *.swc、*.ane 或原始 ActionScript 檔案的目錄。<br>{0} 將分析所選目錄的內容，並自動將其中包含的檔案分配至適當的類別(類別、原始碼和文檔)。</html>
choose.parent.component.dialog.title=選擇父組件
choose.rlm.main.class.title=選擇執行時載入的模組的主類別
class.0.does.not.have.default.constructor=類別 {0} 沒有預設建構函式
class.contains.no.tests=類別 ''{0}'' 不包含測試
class.not.found=未找到類別 ''{0}''
class.not.public=''{0}'' 不為 public
class.not.specified=未指定類別
clear.directive.IStyleClient.error=僅允許實作 mx.styles.IStyleClient 接口的類別的樣式屬性使用 '@Clear()' 指令
clear.directive.state.specific.error='@Clear' 指令只能用於狀態特定的樣式屬性
compilation.is.switched.off=編譯已關閉且輸出 SWF 不存在
compilation.skipped=已跳過編譯
compilation.skipped.because.nothing.changed=自上次編譯以來沒有進行過任何更改。跳過…\n點擊“建置”選單中的“重新建置專案”以強制進行編譯。
compilation.skipped.because.nothing.changed.in=自上次編譯以來，模組 ''{0}'' 中沒有進行過任何更改。跳過…\n點擊“建置”選單中的“重新建置專案”以強制進行編譯。
compiling.module=正在編譯模組 ''{0}''…
configurable.FlexCompilerProjectConfigurable.display.name=ActionScript 和 Flex 編譯器
configuration.not.valid=執行組態錯誤: {0}
copy.build.configuration=複製建置組態 ''{0}'' (模組 ''{1}'')
copying.0=正在複製 {0}…
could.not.find.swf.to.trust=找不到要新增到本地信任沙盒的 SWF 檔案
create.air.descriptor.template.title=建立 AIR 檔案描述子模板
create.android.package.title=建立 Android 軟體套件
create.bc.action.description=新增 Flash 建置組態
create.bc.action.text=Flash 建置組態
create.edge.title=建立邊緣
create.extends.relationship.command.name={0} 擴展 {1}
create.flex.component.intention.name=建立 MXML 組件 ''{0}''
create.html.wrapper.template.title=建立 HTML 包裝器模板
create.implements.relationship.command.name={0} 實作 {1}
create.ios.package.title=建立 iOS 軟體套件
create.skin=建立皮膚 ''{0}''
creating.android.package=正在建立 Android 軟體套件
creating.ios.package=正在建立 iOS 軟體套件
css.files.title=要編譯為 SWF 的 CSS 檔案
css.files.to.compile.dialog.title=要編譯的 CSS 檔案
css.flex.dialect.name=Flex
css.inspections.stray.brace=Flex CSS 中的雜散大括號
css.inspections.stray.closing.brace=右大括號沒有對應的左大括號
css.inspections.stray.opening.brace=左大括號沒有對應的右大括號
css.not.found=執行時樣式表: 檔案不存在: {0}
custom.descriptor.not.found=找不到自訂 {0} 套用檔案描述子: {1}
custom.descriptor.not.set=未設定自訂 {0} 套用檔案描述子路徑
debugger.sdk.not.found=找不到 SDK: {0}
debugger.show.full.value=檢視
debugger.waiting.player=正在等待 AIR 或 Flash Player 連線
declare.namespace=宣告命名空間 {0}
default.compiler.options.for.module.title=模組 ''{0}'' 的預設編譯器選項
default.compiler.options.for.project.title=專案 ''{0}'' 的預設編譯器選項
define.0=宣告條件編譯器定義 ''{0}''
dialog.edit.template.checkbox.mxml=MXML(&M)
dialog.title.import.from.flash.builder=從 Flash Builder 匯入 {0}
different.debug.settings=無法同時為  {0, choice, 1#Android |2#iOS} 建立可偵錯軟體套件，也無法同時為  {0, choice, 1#Android |2#iOS} 建立不可偵錯軟體套件
different.language.namespaces=在 MXML 檔案中宣告了不同的語言命名空間
docs.root.detector.name=文檔
documentation.order.root.type.name=文檔
does.not.contain.flash.builder.projects=所選歸檔不包含 Flash Builder 專案
dumb.mode.flex.unit.warning=更新索引時無法執行 FlexUnit 測試。建置索引後，請再次執行此執行組態。
edit.configuration.title=編輯組態
element.name={0} 名稱(&N):
element.name.empty={0} 名稱為空
element.to.be.moved.to={0} 將被移至 {1}
element.to.be.moved.to.upper.level=內部{0}將被移至上一個級別({1})
elements.to.be.moved.to=元素將被移至{0}
error.creating.flash.player.trust.folder=SWF 檔案未新增到本地信任沙盒\n無法建立 FlashPlayerTrust 目錄: {0}
error.creating.idea.trust.cfg.file=SWF 檔案未新增到本地信任沙盒\n無法在 FlashPlayerTrust 目錄中建立 {0} 檔案: {1}
error.title=錯誤
extract.single.to.subfolder.0=為提取的專案建立子目錄 ''{0}''
failed.to.create.air.package=<html>無法打包 AIR 應用程式 {0}: <br><br>{1}<br><br>[<a href="adt.command.line">ADT 命令行</a>]</html>
failed.to.create.air.package.truncated=<html>無法打包 AIR 應用程式 {0}: <br><br>{1}<br><br>[<a href="full.error.message">完整錯誤訊息</a>]<br>[<a href="adt.command.line">ADT 命令行</a>]</html>
failed.to.create.folder=無法建立目錄 {0}: \n{1}
failed.to.delete=無法移除檔案: \n{0}
failed.to.evaluate.breakpoint.condition=無法對中斷點條件求值: {0}\n\n要在中斷點處停止嗎?
failed.to.extract.project=無法提取專案: \n{0}
failed.to.read.app.id=無法從以下檔案讀取應用程式 ID: \n{0}
failed.to.update.idea.trust.cfg.file=無法更新 FlashPlayerTrust 目錄中的 {0} 檔案: {1}
fcsh.out.of.memory.and.restarted=Flex 編譯器 shell 記憶體不足，將重啟。在“{0} | 編譯器 | Flex 編譯器”頁面可以增加其堆大小
file.created=已建立 <a href="">{0}</a>
file.exists.replace.question=要取代現有檔案({0})嗎?
file.not.found=找不到檔案: {0}
file.or.folder.not.found=找不到檔案或目錄: {0}
file.to.include.in.swc.not.found=要包含在 SWC 中的檔案: 檔案 ''{0}'' 不存在
flash.builder=Flash Builder
flash.builder.project.file=<b>Flash Builder</b> 專案檔案({0})
flash.builder.project.import.title=Flash Builder 專案匯入
flash.builder.projects.not.found.in=在所選目錄中找不到 Flash Builder 專案
flash.builder.workspace.or.project.dir=Flash Builder 工作區或專案，*.fxp、*.fxpl 或 *.zip 檔案(&F)
flash.module.type.description=Flash 模組旨在用於開發以 <b>Adobe Flash</b> 平台為目標的內容。<br>利用該模組提供的建置組態，您可以為 web (Flash Player)、桌面 (Adobe AIR) 和 AIR 移動平台建立 <b>Flex</b> 或純 <b>ActionScript</b> 應用程式和庫。
flash.module.type.name=Flash 模組
flash.player.not.found=找不到 Flash Player 可執行檔案: {0}
flash.player.trust.folder.does.not.exist=SWF 檔案未新增到本地信任沙盒\nFlashPlayerTrust 目錄不存在
flex.break.point.title=Flex 中斷點
flex.choose.color.dialog.title=選擇顏色
flex.debugger.startup.error=Flex 偵錯器啟動錯誤
flex.debugger.unexpected.communication.error=意外的偵錯播放器通信問題
flex.invalid.enumeration.value={0} 不在可接受的枚舉值內
flex.invalid.integer.value=整數值無效
flex.invalid.number.value=數值無效
flex.run.config.incorrect.url=URL 不正確
flex.run.config.url.can.not.be.run.with.flash.player=無法使用 Flash Player 啟動 URL
flex.run.config.url.not.set=未設定要啟動的 URL 或檔案
flex.sdk.3.mac.debug.problem=<html>Flex SDK {0} 中的偵錯器不適用於 Flash Player11.x。<br/>建議在<a href="RunConfiguration">執行組態</a>的“使用 SDK 中的偵錯器”欄位選擇 Flex SDK 4.x。
flex.sdk.presentable.name=Flex/AIR SDK
flex.sdk.version.unknown=未知版本
flexmojos.maven.plugin.outdated.warning=請從您的 POM ({0})中移除過時的 idea-flexmojos-maven-plugin
flexmojos.project.import=Flexmojos 專案匯入
flexmojos.warning.detailed=<html><p>IntelliJ IDEA 無法生成 <b>Flex 編譯器組態檔案</b>和其他輔助檔案<br>(target/[project_name]-config-report.xml and target/classes/config-[version]/*.*)</p><br><p>這些檔案對於 Flexmojos 專案中的正確程式碼醒目提示、補全和編譯而言必不可少。<br>要確保所需檔案處於最新狀態，請從命令行執行以下 Maven 指令: </p><pre><b>mvn compile -DconfigurationReport=true</b></pre></html>
flexmojos.warning.short=<html>無法生成 Flex 編譯器組態檔案。<br><a href="">詳細資訊…</a></html>
flexmojos4.details.start=日誌中提供了完整的資訊(幫助 | 顯示日誌)\n\n{0}
flexmojos4.warning=無法生成 Flex 編譯器組態檔案。\n{0}
flexmojos4.warning.with.link=<html>無法生成 Flex 編譯器組態檔案。<br><a href="">詳細資訊…</a></html>
flexunit.fix.remove.static.modifier=移除 static 修飾符
flexunit.inspection.emptysuite.displayname=測試套件為空
flexunit.inspection.emptysuite.message=測試套件為空
flexunit.inspection.mixedapi.displayname=擴展 FlexUnit 1 或 Flunit TestCase 的類別中的 FlexUnit 4 測試方法
flexunit.inspection.mixedapi.message=擴展 FlexUnit 1 或 Flunit TestCase 的類別中的 FlexUnit 4 測試方法
flexunit.inspection.runnerclass.displayname=自訂執行程序類別實作 IRunner 接口
flexunit.inspection.runnerclass.message=類別未實作 IRunner 接口
flexunit.inspection.suitewithnorunner.displayname=測試套件未指定執行程序類別
flexunit.inspection.suitewithnorunner.message=測試套件未指定執行程序類別
flexunit.inspection.testclassinproductsource.displayname=產品源中的測試類別
flexunit.inspection.testclassinproductsource.message=產品源中的測試類別
flexunit.inspection.testclassvisibility.displayname=測試類別不為 public
flexunit.inspection.testclassvisibility.message=測試類別應為 public
flexunit.inspection.testclasswithnotests.displayname=測試類別沒有測試
flexunit.inspection.testclasswithnotests.message=測試類別沒有測試
flexunit.inspection.testmethodhasparameters.displayname=測試方法具有必需參數
flexunit.inspection.testmethodhasparameters.message=測試方法不應具有必需參數
flexunit.inspection.testmethodinsuite.displayname=測試方法位於套件中
flexunit.inspection.testmethodinsuite.message=測試方法位於套件中
flexunit.inspection.testmethodisproperty.displayname=測試方法為 getter/setter
flexunit.inspection.testmethodisproperty.message=測試方法不應為 getter 或 setter
flexunit.inspection.testmethodisstatic.displayname=測試方法為 static
flexunit.inspection.testmethodisstatic.message=測試方法不應為 static
flexunit.inspection.testmethodreturntype.displayname=測試方法應返回 void
flexunit.inspection.testmethodreturntype.message=測試方法應返回 void
flexunit.inspection.testmethodvisibility.displayname=測試方法不為 public
flexunit.inspection.testmethodvisibility.message=測試方法應為 public
flexunit.inspections.group=FlexUnit
flexunit.not.found.for.bc=建置組態 ''{0}'' 的相依項不包括 FlexUnit 庫
flexunit.output.folder.not.set=未設定專案輸出目錄或其路徑不是絕對路徑(FlexUnit 需要絕對路徑)
flexunit.startup.error=無法啟動 FlexUnit 會話: {0}
flexunit.test.runner.caption=FlexUnit 測試執行程序
folder.does.not.exist=目錄不存在: ''{0}''
folder.not.empty=目錄不為空: \n{0}\n某些檔案可能會被覆蓋。\n\n是否繼續?
folder.not.empty.cancel.option=取消(&C)
folder.not.empty.clear.option=移除(&R)
folder.not.empty.clear.or.overwrite=所選目錄不為空。\n要移除其內容還是保留現有檔案(在後一種情況下，某些檔案可能會被覆蓋)?
folder.not.empty.keep.option=保持(&K)
folder.to.package.includes.output={0} 打包選項: 要打包的目錄包含輸出目錄: {1}
folder.to.unzip.one.FB.project=將專案提取到
folder.to.unzip.several.FB.projects=找到多個專案。將它們提取到以下專案的對應子目錄:
generating.flex.config.for=正在為 {0} 生成 Flex 編譯器組態檔案
generating.flex.configs=正在生成 Flex 編譯器組態檔案
gutter.name.flex.subclass=Flex 子類別
html.template.folder.not.found=包含 HTML 包裝器模板的目錄不存在: ''{0}''
html.template.folder.not.set=未設定包含 HTML 包裝器模板的目錄
html.wrapper.can.not.be.run.with.flash.player=無法使用 Flash Player 啟動 HTML 包裝器
html.wrapper.creation.failed=無法建立 HTML 包裝器\n{0}
html.wrapper.folder.clash=包含 HTML 包裝器模板的目錄與 {0} 衝突: {1}
html.wrapper.folder.clash.for.dialog=路徑與 {0} 衝突: {1}
html.wrapper.in.sdk.not.found=在 SDK 安裝中找不到包含 HTML 包裝器模板的目錄: \n{0}
idb.forward=IDB 前向
idb.forward.title=IDB 前向
incorrect.file.format=所選歸檔的格式不正確
initializing.flex.debugger=初始化 Flex 偵錯器
install.air.runtime.title=安裝 AIR 執行時
install.android.application.title=安裝 Android 應用程式
install.ios.app.title=安裝 iOS 應用程式
install.ipa.on.simulator.title=在 iOS 模擬器上安裝應用程式
installing.0=正在安裝 {0}
installing.air.runtime=正在安裝 AIR 執行時 {0}
instead.setup.dependency.on.bc=取代為對建置組態 ''{0}'' (模組 ''{1}'')的相依
intention.create.event.handler=建立事件處理程序
intention.create.subclass.or.implement.interface=建立子類別或實作接口
invalid.element.name=無效 {0} 名稱: {1}
invalid.flex.compiler.heap.size=Flex 編譯器堆大小無效
invalid.identifier.value=關鍵字值無效
invalid.package=無效軟體套件: {0}
ios.application.installed.to.debug=已成功安裝 iOS 應用程式 ''{0}''，\n現在您可以在裝置上啟動並開始偵錯了。
ios.application.installed.to.run=已成功安裝 iOS 應用程式 ''{0}''，\n現在您可以在裝置上啟動它了。
ios.application.packaged.to.debug=<html>iOS 應用程式軟體套件 <a href="">{0}</a> 已成功建立。<br>您現在可以使用 iTunes 在裝置上進行安裝。<br><br>偵錯器正在等待在該裝置上啟動應用程式…</html>
ios.application.packaged.to.run=<html>iOS 應用程式軟體套件 <a href="">{0}</a> 已成功建立。<br>您現在可以使用 iTunes 將其安裝在裝置上。</html>
ios.disabled.in.bc=未在建置組態 ''{0}'' (模組 ''{1}'')中啟用 iOS 支援
ios.provisioning.profile.not.found=找不到 iOS 預配組態檔案: {0}
ios.provisioning.profile.not.set=未設定 iOS 預配組態檔案
ios.simulator.application.launched=在 iOS 模擬器上啟動的應用程式
ios.simulator.on.mac.only.button.text=iOS 模擬器(僅限 Mac)
ios.simulator.on.mac.only.warning=iOS 模擬器僅在 Mac OS 上可用
ios.simulator.sdk.not.found=找不到 iOS 模擬器 SDK: {0}
ios.simulator.sdk.not.set=未設定 iOS 模擬器 SDK 的路徑
items.to.include.in.swc.dialog.title=要包含在 SWC 中的檔案和目錄
javascript.callback.signature.mismatch=回調應只有一個事件類型的參數
javascript.callback.signature.mismatch.event.class=回調應只有一個{0}類型的參數
javascript.fix.package.name=將軟體套件名稱設定為 ''{0}''
javascript.invalid.e4x.filter.query.receiver=e4x 篩選器查詢實參無效，應為 XML 或 XMLList 類型
javascript.namespace.initializer.should.be.string.or.another.namespace.reference=命名空間初始設定式應為字串字面量或其他命名空間參照
javascript.uml.show.implementations.header={0} 的實作
javascript.uml.show.supers.header={0} 的超類別
javascript.uml.visibility.package_local=protected \\&\\& internal
javascript.uml.visibility.private=所有
javascript.uml.visibility.protected=protected
javascript.uml.visibility.public=public
javascript.validation.empty.component.type=組件標記不應為空
javascript.validation.message.access.modifier.allowed.only.for.class.members=僅類別成員允許使用存取修飾符
javascript.validation.message.access.modifier.allowed.only.for.package.members=軟體套件成員僅允許使用 public/internal 修飾符
javascript.validation.message.class.should.be.in.file=應在檔案 ''{1}'' 中定義類別 ''{0}''
javascript.validation.message.constructor.in.mxml.is.not.allowed=MXML 類別不允許使用建構函式
javascript.validation.message.embed.annotation.used.with.var.of.wrong.type=嵌入註解應與類別或字串類型的變數一起使用
javascript.validation.message.file.should.be.under.source.root=物件位於來源根目錄外的檔案中，某些功能不可用
javascript.validation.message.function.should.be.in.file=應在檔案 ''{1}'' 中定義函式 ''{0}''
javascript.validation.message.incorrect.package.name=軟體套件名稱 ''{0}'' 與檔案路徑 ''{1}'' 不對應
javascript.validation.message.more.than.one.externally.visible.symbol=檔案中定義了多個外部可見符號
javascript.validation.message.more.than.one.named.object.in.package=軟體套件中的非唯一物件
javascript.validation.message.namespace.allowed.only.for.class.members=僅類別成員允許使用命名空間
javascript.validation.message.namespace.should.be.in.file=應在檔案 ''{1}'' 中定義命名空間 ''{0}''
javascript.validation.message.nested.packages.are.not.allowed=不允許嵌套軟體套件
javascript.validation.message.no.return.value.required.for.constructor=從建構函式中返回不需要返回值
javascript.validation.message.package.shouldbe.first.statement=軟體套件應為檔案中的第一條語句
javascript.validation.message.static.method.in.interface=接口中不允許使用 static 方法
javascript.validation.message.static.method.with.override=static 函式不能包含覆寫修飾符
javascript.validation.message.variable.should.be.in.file=應在檔案 ''{1}'' 中定義變數 ''{0}''
javascript.validation.message.vector.without.parameters=無類型的矢量
javascript.validation.message.vector.without.parameters2=無類型的矢量無法實例化
javascript.validation.only.this.tag.is.allowed.here=此處僅允許使用 <{0}> 標記
javascript.validation.tag.must.be.direct.child.of.fx.library.tag=<{0}> 標記必須是 <{1}> 標記的直接子級
javascript.validation.tag.must.be.first.child.of.root.tag=<{0}> 標記必須是根文檔標記的第一個子級
javascript.validation.tag.must.be.last.child.of.root.tag=<{0}> 標記必須是根文檔標記的最後一個子級
javascript.validation.tag.must.have.attribute.includein.or.excludefrom=<{0}> 標記必須有特性 ''includeIn'' 或 ''excludeFrom''
javascript.validation.tag.must.have.exactly.one.child.tag=<{0}> 標記必須只有一個子標記
js.actionscript.specific.group.name=ActionScript 特定
js.convert.to.local.quick.fix=轉換為本地
js.field.can.be.converted.to.local=欄位可以被轉換為一個區域變數
js.field.can.be.local.name=欄位可以為本地欄位
js.implicitly.internal.declaration.inspection.name=具有隱式存取類型的宣告
js.implicitly.internal.declaration.problem=宣告具有隱式軟體套件內部作用域 #loc
js.implicitly.internal.declaration.problem.add.internal.fix=新增顯式 internal 修飾符
js.uml.presentable.name=ActionScript/Flex
js.untyped.declaration.inspection.name=沒有類型的宣告
js.untyped.declaration.problem.addtype.fix=向宣告中新增類型
js.untyped.function.problem=函式 {0} 沒有返回值類型 #loc
js.untyped.variable.problem=變數 {0} 沒有類型 #loc
keystore.not.found={0} 簽名選項: 找不到密鑰庫檔案: {1}
keystore.not.set={0} 簽名選項: 未設定密鑰庫
launch.android.application.title=啟動 Android 應用程式
launch.ios.application.title=啟動 iOS 應用程式
launch.with.title=啟動方式
launching.android.application=啟動 Android 應用程式 {0}
launching.ios.application=啟動 iOS 應用程式 {0}
library.editor.title.plural=庫
library.editor.title.singular=庫
livetemplate.description.itar=遍歷陣列元素
livetemplate.description.iter=迭代 (for each..in)
livetemplate.description.itin=迭代(for..in)
livetemplate.description.ritar=以相反順序遍歷陣列的元素
locales.dialog.label=Flex SDK ''{0}'' 支援的區域設定:
looking.for.flash.builder.projects=正在尋找 Flash Builder 專案
main.class.and.output.overridden.in.config.file=主類別和輸出路徑在其他編譯器組態檔案中被覆蓋
main.class.is.not.a.subclass.of=主類別 ''{0}'' 不是 {1} 的 public 子類別。
main.class.not.found=找不到主類別 ''{0}''
main.class.not.set=未指定主類別
make.before.launch.warning.disabled=已停用有關跳過編譯的警告。\n要再次啟用，請使用“通知”工具視窗中的“設定”按鈕。
method.not.valid=方法 ''{0}'' 不存在或不適合在測試中執行
module.does.not.contain.bc=模組 ''{0}'' 不包含建置組態 ''{1}''
module.not.found=找不到模組 ''{0}''
module.not.specified=未指定模組
module.sdk.label=模組 SDK(&S):
more.than.one.ios.device=多台 iOS 裝置已連線到計算機
move.0=移動 {0} {1}
move.command.name=將 {0} 移至 {1}
move.elements=移動指定的元素
move.file.local.0=移動內部{0}{1}
move.to.upper.level.command.name=將內部{0}移至{1}
must.accompany.includein.or.excludefrom.attribute={0} 必須伴隨 includeIn 或 excludeFrom 特性。
new.actionscript.class.action.description=建立新的 ActionScript 類別
new.actionscript.class.command.name=建立 ActionScript 類別
new.actionscript.class.uml.action.text=ActionScript 類別
new.flex.component.action.description=新增 MXML 組件
new.flex.component.command.name=建立 MXML 組件
new.flex.component.dialog.title=新 MXML 組件
new.flex.component.uml.action.text=MXML 組件
no.applicable.bcs=找不到適用的建置組態
no.file.to.run=找不到 HTML 包裝器或 SWF 檔案來開始執行/偵錯
no.free.port=找不到可用連接埠
no.response.from.server={0} 秒內伺服器無響應
no.test.method.specified=未指定測試方法
not.a.css.runtime.stylesheet=檔案 ''{0}'' 不能用作執行時樣式表，僅允許使用 CSS 檔案。
not.boolean.breakpoint.condition=無法對中斷點條件求值: {0}\n結果值不是布林值: {1}\n\n要在中斷點處停止嗎?
not.flash.builder.project=所選檔案不是 Flash Builder 專案
note.multiple.projects.extract.to.subfolders=注意: 找到多個專案。它們將被提取到對應的子目錄。
notification.group.air.packaging=AIR 打包
notification.group.debugger=Flex 偵錯器啟動失敗
notification.group.flash.compiler=Flash 編譯器
open.project.0=開啟專案 ''{0}''
open.project.structure=專案結構…
or.asc.2.0=，或 ASC 2.0(如果可用)，用於純 ActionScript 建置組態
output.file.must.have.swf.extension=輸出檔案必須有 swf 副檔名。
output.file.name.not.set=未設定輸出檔名
output.file.name.not.specified=未指定輸出檔名。
output.file.wrong.extension=輸出檔名必須有 {0} 副檔名
output.folder.not.absolute=輸出目錄的路徑必須為絕對路徑: {0}
output.folder.not.set=未設定輸出目錄
overridden.in.config.file={0} 被其他編譯器組態檔案覆蓋。實際值: {1}
own.lib.used.as.3rd.party=依賴於檢測到的檔案 {0}，即建置組態 ''{1}'' (模組 ''{2}'')的輸出。更為典型的情況是，一個建置組態依賴於另一個建置組態，而不是依賴於其輸出。
package.air.application.title=打包 AIR 應用程式
package.bc.with.disabled.compilation=<html>為以下建置{0, choice, 1#組態|2＃組態} 停用編譯: <br><br>{1}<br>現有 SWF {0, choice, 1#檔案|2#檔案} 可能已過時。<br><br>根據現有的SWF {0, choice, 1#檔案|2#檔案} 建立{0, choice, 1#軟體套件|2#軟體套件}?</html>
package.file.name.not.set=未設定 {0} 軟體套件檔名
package.name.title=軟體套件名稱:
package.not.valid=缺少 ''{0}'' 軟體套件或此軟體套件為空
packaging.air.application=正在打包 AIR 應用程式: {0}
packaging.application=打包 {0} 應用程式
packaging.options.bad.ios.sdk.path={0} 打包選項: 在 {1} 下找不到 iOS SDK
packaging.options.empty.file.name={0} 打包選項，要打包的檔案: 表中的路徑為空
packaging.options.empty.relative.path={0} 打包選項，要打包的檔案: 表中的相對路徑為空
packaging.options.file.not.found={0} 打包選項，找不到檔案: {1}
packaging.options.relative.path.not.matches={0} 打包選項，要打包的檔案: 相對目錄路徑與其完整路徑不符合: {1}
parallel.compilation.enabled=已啟用並行編譯
parallel.compilation.hint=獨立 Flash 建置組態的並行編譯<br/>可以提高編譯性能。<br/><br/><a href="enable">啟用並行編譯</a>    <a href="open">開啟編譯器設定 </a>
parallel.compilation.hint.title=提示
parent.component.label.text=父組件(&C):
path.to.flash.player.not.set=未設定 Flash Player 的路徑('Launch with' 選項)
popup.title.step.into.function=步入函式
port.is.busy=連接埠 {0} 繁忙
processes=程序
project.files.location=專案檔案位置
project.location=專案位置
project.name.empty=專案名稱不能為空
project.path.empty=專案檔案的位置不能為空
project.sdk.label=專案 SDK(&S):
project.setup.problem=專案設定問題: {0}
project.setup.problem.title=專案設定問題
references.in.code.to.0=程式碼中對{0}的參照
references.in.code.to.inner.0=程式碼中對內部{0}的參照
remote.flash.debug.computer=<html>偵錯器正在等待 Flash 應用程式連線:<br><ul><li>在此計算機上啟動 Flash 或 AIR 應用程式。它將自動連線到偵錯器。</li><li>或右鍵點擊此計算機或遠端計算機上正在執行的 Flash Player，然後從右鍵選單中選擇“偵錯器”。</li></ul>此計算機的 IP 地址: {0}</html>
remote.flash.debug.mobile.network=<html>在 {0} 裝置上啟動移動 AIR 應用程式以開始偵錯。<br>(必須打包該套用程序，才能通過網絡進行偵錯)。<br><br>此計算機的 IP 地址: {1}</html>
remote.flash.debug.mobile.usb=<html>在 {0} 裝置上啟動移動 AIR 應用程式以開始偵錯。<br>(必須打包該套用程序，才能通過 USB 進行偵錯，連接埠 {1})。
remote.url.is.not.accessible.message=嘗試提取 ''{0}'' 時遇到以下 IO 異常: \n{1}\n要繼續嗎?
remote.url.is.not.accessible.title=遠端 URL 不可存取
remove.annotation.from.class=從類別中移除註解
remove.edge.title=移除邊緣
remove.inheritance.link.prompt=移除 ''{0}'' 與 ''{1}'' 之間的繼承鏈接?
remove.namespace.declaration=移除命名空間宣告
remove.relationship.command.name=移除繼承關係
replace.base.class.prompt=將基類別 ''{0}'' 取代為 ''{1}''?
replace.base.component.prompt=將基礎組件 ''{0}'' 取代為 ''{1}''?
rlm.main.class.equal.to.bc.main.class=執行時載入模組的主類別等於主套用程序類別: ''{0}''
rlm.main.class.not.found=找不到執行時載入模組的主類別: {0}
rlm.main.class.not.set=未指定執行時載入模組的主類別。
rlm.output.equal.to.bc.output=執行時載入模組的輸出檔案等於主套用程序的輸出檔案: ''{0}''
rlm.output.file.must.have.swf.extension=執行時載入模組的輸出檔案必須有 swf 副檔名。
rlm.output.file.name.not.specified=未指定執行時載入模組的輸出檔案。
rlms.dialog.title=執行時載入的模組
root.tag.must.contain.language.namespace=根標記必須包含語言命名空間宣告
run.configuration.0=執行組態 ''{0}''
run.trusted=將輸出目錄放到本地信任沙盒中(&E)
run.when.compile.before.run.turned.off=<html>此<a href="RunConfiguration">執行組態</a>的“啟動前建置”選項已關閉。<br>啟動的應用程式可能丟失或已過時。<br><br><a href="DisableWarning">停用警告</a></html>
run.when.ide.builder.turned.off=<html>為<a href="BuildConfiguration">建置組態 ''{0}''</a>(模組 ''{1}'')設定了“跳過編譯”標誌。<br>啟動的應用程式可能丟失或已過時。<br><br><a href="DisableWarning">停用警告</a></html>
same.output.files=輸出檔案與建置組態 ''{0}'' (模組 ''{1}'')中的相同: {2}
same.output.files.as.in.bcs=輸出檔案與建置{0, choice, 1#組態|2#組態} {1} 相同: {2}
sample.app.incorrect.extension=範例應用程式必須具有 .mxml 或 .as 檔案副檔名
sample.app.name.empty=未指定範例應用程式檔名
sdk.can.not.be.selected=無法在此處選擇 SDK ''{0}''。\n請選擇 Flex/AIR SDK。
sdk.does.not.support.air.mobile=Flex SDK {0} 不支持 AIR 移動開發
sdk.for.imported.projects=所匯入的 Flash Builder {0, choice, 1#專案|2#專案}的 SDK: 
sdk.not.set=未設定 SDK
sdk.version.unknown=無法讀取 SDK ''{0}'' 的版本。確保 [SDK 主頁]/flex-sdk-description.xml (或 [SDK 主頁]/air-sdk-description.xml)檔案未損壞，然後嘗試重新建立 SDK
see.flex.compiler.page=在“{0} | 編譯器 Flex 編譯器”頁面中檢視編譯器設定
see.settings.compiler=要組態編譯器設定，請使用<a href="">設定->編譯器</a>頁面。
select.flash.builder.workspace.or.project=選擇 *.fxp、*.fxpl 或 *.zip 檔案、Flash Builder 工作區或專案
select.flex.sdk=選擇 Flex/AIR SDK
selected.path.not.folder=所選路徑不是目錄: \n{0}
set.up.sdk.title=設定建置組態 SDK
sources.root.detector.name=庫原始碼
specify.flash.builder.workspace.or.project.dir=未設定檔案或目錄路徑
swc.folders.root.detector.name=包含 SWC 或 ANE 的目錄
swc.libraries.root.detector.name=SWC 或 ANE 庫
system.default.application=系統預設應用程式
take.wrapper.template.from.sdk=從以下 Flex/AIR SDK 中獲取 HTML 包裝器模板(&T):
test.class.not.specified=未指定測試類別
tests.in=''{0}'' 中的測試
this.will.remove.relationship.link.between.classes=這將移除類別之間的關係
threads=執行緒
to.indent.package.statement.children=縮排 package 語句子級(&I)
to.package.title=到軟體套件:
top.level=頂層
uml.calculating.dependencies.message=正在計算相依項
uml.create.relationship.label=<html>&laquo;建立&raquo;</html>
uml.dependencies.create=建立
uml.dependencies.one.to.many=一對多
uml.dependencies.one.to.one=一對一
uml.dependencies.self=自我鏈接
uml.dependencies.usages=用法
unexpected.empty.adt.output=ADT 工具無輸出
uninstall.air.runtime.title=解除安裝 AIR 運行時
uninstall.android.application.title=移除 Android 應用程式
uninstall.ios.simulator.application.title=從 iOS 模擬器移除應用程式
uninstalling.0=正在移除 {0}
uninstalling.air.runtime=正在解除安裝 AIR 運行時
unknown.color.error=未知顏色: ''{0}''
unnamed=未命名
update.air.runtime.question=裝置上已安裝 AIR 執行時 {0}。\nSDK ''{1} 包含 AIR 執行時 {2}。\n\n要安裝較新的版本嗎?
use.same.descriptor.for.android.and.ios=要將建立的 AIR 檔案描述子模板用於 Android 和 iOS 打包嗎?
using.builtin.compiler=使用內建的編譯器 shell，最多 {0} 個並行執行緒
using.mxmlc.compc=使用 Flex SDK 中的 mxmlc/compc 工具，最多 {0} 個並行進程