displayname.replace.project.with.project.in=將 Project() 取代為 project.in()
displayname.sbt=sBT
group.sbt=sBT
initializing.sbt.shell.message=正在初始化 sbt shell…
insert.project.transitive.dependencies=包括所有專案可傳遞相依項
insert.project.transitive.dependencies.tooltip=將 SBT 專案結構匯入 IntelliJ 專案模型時包括所有專案可傳遞相依項
packagesearch.dependency.version.inspection.description=庫相依項有較新的穩定版本
packagesearch.update.dependency.to.newer.stable.version=將相依項更新到較新的穩定版本 {0}
sbt.annotation.blankLineRequired=在 0.13.7 版(您的版本是 {0})以前的 *.sbt 檔案中，需要用空行來分隔表達式
sbt.annotation.expectedExpressionType=sbt 檔案中預期的表達式類型為 Def.SettingsDefinition
sbt.annotation.expectedExpressionTypeSbt0136=sbt 檔案中預期的表達式類型為 DslEntry
sbt.annotation.expressionMustConform=表達式類型 {0} 必須符合 sbt 檔案中的 Def.SettingsDefinition
sbt.annotation.expressionMustConformSbt0136=表達式類型 {0} 必須符合 sbt 檔案中的 DslEntry
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt 檔案只能包含表達式
sbt.available.opts=所有可用選項\: {0}
sbt.based.scala.project.recommended=基於 sbt 的 Scala 專案(推薦)
sbt.build.file.changes=sbt 建置檔案更改
sbt.build.file.modification=sbt 建置檔案修改
sbt.build.modified.automatically=已自動修改
sbt.build.modified.automatically.and.fixed.manually=已自動修改並手動修正
sbt.build.modified.detected=已檢測
sbt.build.modified.manually=已手動修改
sbt.commands=sbt 指令
sbt.configuration.migration.notification.content=<html>模組命名方案已更新。<br>執行組態受到影響。</html>
sbt.configuration.migration.notification.ignore.text=忽略
sbt.configuration.upgrade.id=SBT 組態升級
sbt.download.sbt.sources=下載 sbt 源(對於編輯專案定義很有用)
sbt.download.scala.standard.library.sources=下載 Scala 標準庫原始碼(對於編輯原始碼很有用)
sbt.events=事件
sbt.extracting.project.structure.from.sbt=正在從 sbt 提取專案結構
sbt.extracting.project.structure.from.sbt.shell=正在從 sbt shell 提取專案結構
sbt.import.cancelled=sbt 匯入已取消\: {0}
sbt.import.check.root.node.for.details=檢查樹的根節點以獲取更多詳細資訊
sbt.import.detecting.jdk=正在檢測 SBT 的 JDK
sbt.import.errors.project.reload.aborted=匯入錯誤，已中止專案重新載入
sbt.import.extracting.structure.failed=提取結構失敗
sbt.import.message.build.status=建置狀態\: {0}
sbt.import.message.structure.file.is.empty=結構檔案 {0} 為空
sbt.import.message.structure.file.is.not.a.file=結構檔案 {0} 不是檔案
sbt.import.noCustomJvmFound=無法確定所選 JDK 中的 Java VM 可執行檔案
sbt.import.noProjectJvmFound=無法確定當前專案 SDK 中的 Java VM 可執行檔案
sbt.import.to.intellij.project.model=匯入到 IntelliJ 專案模型
sbt.inspection.projectIn.name=將 Project() 取代為 project.in()
sbt.launcher.not.found=在 {0} 找不到 sbt 啟動器
sbt.local.cache=本地快取
sbt.migrate.configurations.dialog.wrapper.default=<no module>
sbt.migrate.configurations.dialog.wrapper.title=升級現有執行組態中的模組
sbt.migrate.configurations.full.title=將執行組態升級為新的模組命名方案
sbt.migrate.configurations.warning.message=具有已儲存模組名稱的所有組態都有為其分配的現有模組。無需升級。
sbt.migrate.configurations.warning.title=沒有要升級的執行組態
sbt.module.step.download.sources=下載源
sbt.named.sbt.commands.defined.in.this.project=此專案中定義的命名 sbt 指令
sbt.project.import=sbt 專案匯入
sbt.project.structure.extracted=已提取專案結構
sbt.runner.choose.working.directory=選擇工作目錄
sbt.runner.description=執行 sbt 任務
sbt.runner.displayName=sbt 任務
sbt.runner.form.environmentVariables=環境變數\:
sbt.runner.form.tasks=任務\:
sbt.runner.form.tasksEditorTitle=任務
sbt.runner.form.use.sbt.shell=使用 sbt shell
sbt.runner.form.vmParameters=虛擬機參數\:
sbt.runner.form.vmParametersEditorTitle=虛擬機參數
sbt.runner.form.working.directory=工作目錄\:
sbt.settings=sbt 設定
sbt.settings.defined.in.this.project=此專案中定義的 sbt 設定
sbt.settings.download=下載\:
sbt.settings.env.variables=環境變數(&E)
sbt.settings.implicitImports=隱式 import
sbt.settings.maxHeapSize=最大堆大小(MB)(&M)
sbt.settings.noImplicitImportsFound=找不到隱式 import
sbt.settings.project.jdk=專案 JDK\:
sbt.settings.remoteDebug=啟用偵錯
sbt.settings.remoteDebug.tooltip=以可偵錯的程序啟動 sbt shell。允許偵錯 sbt 延伸模組程式碼和 sbt shell 中執行的測試
sbt.settings.resolveClassifiers=庫原始碼
sbt.settings.resolveClassifiers.tooltip=從 sbt 重新載入專案時下載專案庫相依項的源
sbt.settings.resolveSbtClassifiers=sbt 源
sbt.settings.resolveSbtClassifiers.tooltip=從 sbt 重新載入專案時下載 sbt 和 sbt 延伸模組的源
sbt.settings.resolvers=解析器
sbt.settings.resolvers.name=名稱
sbt.settings.resolvers.url=URL
sbt.settings.sbt=sbt(&S)\:
sbt.settings.sbt.launcher.custom=指定自訂啟動器
sbt.settings.sbtLauncher=&啟動器(sbt-launch.jar)
sbt.settings.sbtModuleSettings=sBT
sbt.settings.sbtOptions=&SBT 選項
sbt.settings.sbtOptions.tooltip=如果在將 SBT 選項映射到虛擬機參數之後，將與已經定義的參數發生衝突或重複，那些從 SBT 選項派生的參數將優先
sbt.settings.sbtVersionInModule=sbt 版本
sbt.settings.sbtVersionNotDetected=未檢測
sbt.settings.scala=Scala(&C)\:
sbt.settings.scalaVersionPreference=將交叉編譯的 Scala 3 / Scala 2 專案作為 Scala 2 開啟
sbt.settings.scalaVersionPreference.tooltip=針對 Scala 2 和 Scala 3 交叉編譯的專案實際上並不使用 Scala 3 功能，且可以作為 Scala 2 (更可靠)開啟
sbt.settings.shell.title=sbt shell
sbt.settings.useShell=用於\:
sbt.settings.useShellForBuild=建置
sbt.settings.useShellForBuild.tooltip=在 sbt shell 中建置專案。推薦用於 sbt 建置組態，這些組態會導致 IntelliJ IDEA 編譯器中的編譯無法正常工作
sbt.settings.useShellForImport=專案重新載入
sbt.settings.useShellForImport.tooltip=專案從 sbt shell 而不是新的 sbt 程序中重新載入。這樣可以減少重新載入時間，但需要 sbt shell 保留在內存中
sbt.settings.vmParams=&VM 參數
sbt.shared.source.module.description=在編譯期間，對共享源模組的相依項混合在模組源中，而不是模組輸出中
sbt.shared.sources.module=共享源模組
sbt.shell.action.help=幫助
sbt.shell.action.help.description=在 sbt shell 中獲取幫助
sbt.shell.action.inspect.setting=檢查
sbt.shell.action.inspect.setting.description=在 sbt shell 中檢查設定
sbt.shell.action.inspect.task=檢查
sbt.shell.action.inspect.task.description=在 sbt shell 中檢查任務
sbt.shell.action.run.command=執行
sbt.shell.action.run.command.description=在 sbt shell 中執行指令
sbt.shell.action.run.task=執行
sbt.shell.action.run.task.description=在 sbt shell 中執行任務
sbt.shell.action.show.setting=顯示值
sbt.shell.action.show.setting.description=在 sbt shell 中顯示設定
sbt.shell.action.show.task=顯示結果
sbt.shell.action.show.task.description=在 sbt shell 中顯示任務結果
sbt.shell.attach.debugger=將偵錯器附加到 sbt shell
sbt.shell.build.interrupted=建置中斷
sbt.shell.configure.project.jdk=組態專案 JDK(&C)
sbt.shell.configure.sbt.jvm=組態 sbt JVM(&C)
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.debug=偵錯 sbt shell
sbt.shell.enable.debugging.in.sbt.settings=在 sbt 設定中啟用 sbt shell 偵錯，並重啟 shell 以附加偵錯器
sbt.shell.error.build.interrupted=錯誤\: 建置中斷
sbt.shell.errors.in.build=建置中存在錯誤
sbt.shell.no.jre.found.at.path=在路徑 {0} 中找不到 JRE。改用專案 JDK。
sbt.shell.no.project.jdk.configured=未組態專案 JDK，但必須組態才能執行 sbt shell。
sbt.shell.refresh.sbt.project=重新整理 sbt 專案
sbt.shell.restart=重啟 sbt shell
sbt.shell.sbt.build=sbt 建置
sbt.shell.sbt.build.failed=sbt 建置失敗
sbt.shell.start=啟動 sbt shell
sbt.shell.status.busy=繁忙
sbt.shell.status.initializing=正在初始化
sbt.shell.stop=停止 sbt shell
sbt.shell.stopping.process=正在停止 sbt shell 程序
sbt.shell.title=sbt shell
sbt.shell.unable.to.build.sbt.project=無法建置與 IDEA 模組 {0} 相對應的 sbt 專案。
sbt.shell.warnings.in.build=建置中存在警告
sbt.sincesbtversion.required=需要 sbt {0}+。請更新專案 build.properties。
sbt.source.sets=SBT 源集
sbt.task.canceled=任務已取消
sbt.tasks=sbt 任務
sbt.tasks.defined.in.this.project=此專案中定義的 sbt 任務
sbt.unknown.cause=原因不明
sbt.unrecognised.opt=無法識別的 sbt 選項\: {0}。
sbt.unrecognized.opt.with.suggestion=無法識別的 sbt 選項\: {0}。您指的是 {1} 嗎?
sbt.unrecognized.opts=無法識別的 sbt {0, choice, 1\#選項|2\#選項}\: {1}
scala.sdk.must.be.set=必須設定 Scala SDK
scala.version.requires.library.version=Scala {0} 需要 {1} {2}
template.for.dependency=相依項模板
template.for.dependency.built.with.sbt=使用 sbt 建置的相依項模板
use.separate.compiler.output.paths=使用單獨的編譯器輸出路徑
use.separate.compiler.output.paths.tooltip=啟用後，IDEA 將使用與 sbt 所用不同的類別檔案輸出目錄進行編譯。<br><br>需要重新載入專案。
use.separate.compiler.output.paths.warning=<html>“使用單獨的編譯器輸出路徑”和“用於建置的 sbt shell”設定不相容。同時啟用這兩個選項可能會導致執行程序和測試時丟失類別。請僅選擇一項。</html>
wrong.library.version={0} 版本錯誤
