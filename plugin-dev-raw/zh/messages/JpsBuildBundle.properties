#generic
build.message.builder.0.requested.build.stop=建置器 {0} 請求建置停止
build.message.cannot.build.0.because.it.is.included.into.a.circular.dependency.1=無法建置 {0}，因為它處在一個迴圈依賴關係中({1})
build.message.cannot.determine.build.data.storage.root.for.project.0=無法確定專案 {0} 的建置資料存儲根
build.message.consider.building.whole.project.or.rebuilding.the.module=考慮建置整個專案或重新建置模組。
build.message.dependency.data.format.has.changed.project.rebuild.required=依賴資料格式已改變，需要重新建置專案
build.message.error.cleaning.compiler.storages=清理編譯器存儲時出錯
build.message.error.cleaning.timestamps.storage=清理時間戳存儲時出錯
build.message.failed.to.delete.output.files.from.obsolete.0.target.1=無法從過時 ''{0}'' 目標刪除輸出檔案: {1}
build.message.failed.to.load.project.configuration.0=載入專案設定失敗: {0}
build.message.insufficient.memory=OutOfMemoryError: 記憶體不足
build.message.internal.caches.are.corrupted=內部快取損壞或格式過期，需要強制重新建置專案: {0}
build.message.internal.error.0.1=內部錯誤 ({0}): {1}
build.message.output.path.0.intersects.with.a.source.root=輸出路徑 {0} 與源根相交。只有通過建置創建的檔案會被清理。
build.message.perform.full.project.rebuild=請執行完整的專案重新建置(建置 | 重新建置專案)
build.message.problems.clearing.output.files.for.target.0.1=清理目標”{0}“的輸出檔案時出現問題: {1}
build.message.project.rebuild.forced.0=已強制專案重新建置: {0}
build.message.the.build.has.been.canceled=建置已取消
build.message.too.many.modules.require.recompilation.forcing.full.project.rebuild=過多模組需要重新編譯，強制整個專案重新建置
build.message.unsupported.message.type.0=不支持的訊息類型: {0}
builder.0.requested.rebuild.of.module.chunk.1=建置器“{0}”請求重新建置模組塊“{1}”
builder.name.root=建置
progress.message.cleaning.old.output.directories=正在清理舊輸出目錄…
progress.message.cleaning.output.directories=正在清理輸出目錄…
progress.message.dependency.analysis.found.0.affected.files=依賴分析發現 {0} 個受影響的檔案
progress.message.finished.saving.caches=已完成，正在儲存快取…
progress.message.running.after.tasks=正在執行 'after' 任務
progress.message.running.before.tasks=正在執行 'before' 任務

#java
build.message.0.was.used.to.compile.1={0} 用於編譯 [{1}]
build.message.0.was.used.to.compile.1.modules={0} 用於編譯 {1} 模組
build.message.0.was.used.to.compile.java.sources={0} 用於編譯 java 源
build.message.cannot.compile.a.module.cycle.with.multiple.module.info.files=無法編譯帶有多個 module-info.java 檔案的模組迴圈: {0}
build.message.cannot.find.jdk.0.for.module.1=找不到模組 ''{1}'' 的 JDK ''{0}''
build.message.cannot.find.jdk.for.module.0.1.points.to.2=找不到模組 ''{0}'' 的 JDK: ''{1}'' 指向 {2}
build.message.class.dependency.information.may.be.incomplete=類依賴項資訊可能不完整。解析生成類 {0} 時出錯
build.message.compilation.failed.errors.0.warnings.1=編譯失敗: 錯誤: {0}；警告: {1}
build.message.internal.error.0=內部錯誤: \n{0}
build.message.jdk.isn.t.specified.for.module.0=沒有為模組 ''{0}'' 指定 JDK
build.message.missing.content.for.file.0=檔案 {0} 缺少內容
build.message.multiple.encodings.set.for.module.chunk=模組塊 {0} 的多編碼設定{2, choice, 0#\n“{1}”將被編譯器所用|1#}
build.message.some.modules.with.cyclic.dependencies.0.have.additional.command.line.parameters=某些具有迴圈依賴關係 [{0}] 的模組在專案設定中已覆寫“附加命令行參數”。\n這些編譯選項已應用於迴圈中的所有模組。
build.message.unsupported.compact.compilation.profile.was.requested=已請求緊湊的編譯設定檔案，但是模組“{0}”的目標平台與 javac 的平台({1})不同\n此類設定不支持編譯設定檔案
build.message.user.specified.option.0.for.1.may.conflict.with.calculated.option=“{1}”的使用者指定選項“{0}”可能會與根據專案設定自動計算的相應選項發生衝突。
build.message.user.specified.option.0.is.ignored.for.1=已對“{1}”忽略使用者指定選項“{0}”。該編譯參數根據專案設定自動設定。
build.message.incremental.annotation.processing.disabled.0=JPS 增量註解行程已禁用。部分重新編譯的編譯結果可能不準確。使用建置行程“{0}”VM 標誌啟用/禁用增量註解處理環境。
progress.message.checking.dependencies.0=正在檢查依賴項… [{0}]
progress.message.checking.sources=正在檢查源
progress.message.marking.0.and.direct.dependants.for.recompilation=正在標記 {0} 和直接依賴項以重新編譯
progress.message.parsing.java.0=正在解析 java… [{0}]
progress.message.updating.dependency.information.0=正在更新依賴項資訊… [{0}]
progress.message.writing.classes.0=正在編寫類… {0}
build.message.modules.0.and.1.must.have.the.same.language.level=模組 {0} 和 {1} 必須具有相同的語言級別，因為它們之間存在迴圈依賴關係
build.message.modules.0.and.1.must.have.the.same.additional.command.line.parameters=模組 {0} 和 {1} 必須指定相同的“附加命令行參數”，因為它們之間存在迴圈依賴關係
build.message.annotation.processing.is.not.supported.for.module.cycles=模組迴圈不支持註解處理。請確保將迴圈 [{0}] 中的所有模組排除在註解處理之外
target.description.tests.of.0={0} 的測試
target.description.0.and.1.more={0} 和其他 {1} 個
build.messages.modules.were.fully.rebuilt={1, choice, 1#模組 {0} 已經|2#模組 {0} 已經|7#模組 {0} 和其他 {2} 個已經}完全重新建置，因為專案設定{3, choice, 0#|1#/依賴項}發生變更
build.message.errors.occurred.while.compiling.module.0=編譯模組 ''{0}'' 時發生錯誤
build.message.compilation.failed.internal.java.compiler.error=編譯失敗: 內部 java 編譯器錯誤
build.message.cannot.start.javac.process.for.0.unknown.jdk.home=無法啟動 {0} 的 javac 行程: 未知 JDK 主路徑。\n請檢查專案設定。

#artifacts
builder.name.artifacts.builder=工件建置器
build.message.archive.0.doesn.t.contain.files.so.it.won.t.be.created=歸檔 ''{0}'' 不包含檔案，所以不會被創建
build.message.cannot.build.0.artifact.it.includes.itself=無法建置 ''{0}'' 工件: {2, choice, 0#其|1#“{1}”工件}將自身包含在輸出布局中
build.message.cannot.build.0.artifact.output.path.is.not.specified=無法建置 ''{0}'' 工件: 未指定輸出路徑
build.message.cannot.build.circular.dependency.found.between.0.and.1=無法建置: 在 ''{0}'' 和 ''{1}'' 之間發現迴圈依賴關係
build.message.cannot.create.0.1=無法創建 ''{0}'': {1}
build.message.cannot.create.manifest.mf.from.0.1=無法從 {0} 創建 MANIFEST.MF: {1}
build.message.cannot.delete.file.0=無法刪除檔案 ''{0}''
build.message.cannot.extract.0.from.1.while.building.2.artifact.3=建置 ''{2}'' 工件時，無法從 ''{1}'' 中提取 ''{0}'': {3}
build.message.deletion.of.outdated.files.stopped=由於太多檔案無法刪除，已停止刪除過時檔案
build.message.manifest.file.0.included.into.archive.does.not.contain.required.attribute=納入歸檔 ''{1}'' 中的清單檔案 ''{0}'' 不包含 ''{2}'' 特性。此類清單檔案無效，並且其內容未納入 JAR 檔案。
progress.message.building.archives=正在建置歸檔…
progress.message.building.artifact.0=正在建置工件 ''{0}''…
progress.message.building.artifact.0.copying.files=正在建置工件 ''{0}'': 正在複製檔案…
progress.message.building.jar.0=正在建置 {0}…
progress.message.copying.archives=正在複製歸檔…
progress.message.deleting.outdated.files=正在刪除過時的檔案…
progress.message.running.0.tasks.for.1.artifact=正在為 ''{1}'' 工件執行{0, choice, 0#預處理|1#完成|2#後處理}任務…

#instrumentation
build.message.cannot.instrument.0.1=無法插樁 {0}: {1}
builder.name.notnull.instrumentation=NotNull 插樁
progress.message.adding.notnull.assertions=正在添加 @NotNull 斷言…

#rmi
build.message.rmi.stub.generation.failed=RMI 存根生成失敗
builder.name.backward.references.indexer=後向引用索引器
progress.message.generating.rmi.stubs=正在生成 RMI 存根…

#dependency resolver
builder.name.maven.dependency.resolver=Maven 依賴項解析器
builder.name.project.dependencies.resolver=專案依賴項解析器
progress.message.resolving.0.library=正在解析 ''{0}'' 庫…
progress.message.resolving.repository.libraries.in.the.project=正在解析專案中的儲存庫庫…
build.message.error.resolving.dependencies.for=解析 {0} 的依賴項時出錯
build.message.unknown.host.0=未知主機: {0}

#resources builder
builder.name.resource.compiler=資源編譯器
progress.message.copying.resources.0=正在複製資源… [{0}]

# intellilang-jps
intellilang.pattern.validator.presentable.name=IntelliLang 模式驗證器
intellilang.pattern.validator.progress.message=正在添加模式斷言…

packaging.jlink.build.task.modules.not.found=找不到 JPMS 模組
packaging.jlink.build.task.wrong.java.version=使用 jlink 建置執行時鏡像要求 Java 9 或更高版本
packaging.jlink.build.task.unknown.artifact.path=未知工件輸出路徑
packaging.jlink.build.task.run.time.image.deletion.failure=無法刪除現有的執行時鏡像
packaging.jlink.build.task.failure=jlink 任務失敗
progress.text.rolling.back.downloaded.caches=正在回滾已下載的快取
progress.text.rolling.back=正在回滾
progress.text.fetching.cache.for.commit=正在提取提交的快取: {0}
progress.text.clean.output.directories=清理輸出目錄
progress.details.applying.downloaded.caches=正在套用已下載的快取
progress.details.extracting.project.caches=正在提取專案快取
progress.details.extracting.compilation.outputs.for.module=正在提取 {0} 模組的編譯輸出
progress.details.applying.changes.for.module=正在為 {0} 模組套用變更
progress.text.applying.jps.caches=正在套用 JPS 快取…
progress.text.extracting.downloaded.results=正在提取已下載的結果…
progress.text.calculating.affected.modules=正在計算受影響的模組
progress.download.file.text=正在從 ''{1}'' 下載 ''{0}''…
progress.downloading.0.files.text=正在下載 {0} {0, choice, 1#檔案|2#檔案}...
error.file.download.failed=無法下載 ''{0}'':\n{1}
progress.text.local.build.is.quicker=在本地建置專案比下載快取更快
build.message.conflicting.outputs.error=輸出檔案 "{0}" 已由 "{1}" 註冊