accessing.url=正在存取 URL {0}
http.request.element.name=HTTP 請求
reference.tool.windows.rest.client=REST 客戶端

# actions
http.request.action.name=HTTP 請求
filetype.http.request.action.description=HTTP 請求
http.request.new.file=HTTP 請求
http.request.new.file.description=創建新的 HTTP 請求檔案
action.com.intellij.httpClient.actions.ConvertCurlToHttpRequestAction.text=將 cURL 轉換為 HTTP 請求
group.HTTPClientGroup.text=HTTP 客戶端
action.RESTClient.ConvertToNew.text=將舊版 REST 客戶端檔案轉換為新格式
action.RESTClient.RequestFromLegacyFiles.text=將舊版 REST 客戶端檔案轉換為 HTTP 請求
action.HTTPClient.OpenCollection.text=開啟 HTTP 請求集合
http.request.reformat.response.action.group.title=查看方式
http.request.reformat.response.action.view.as.text=作為{0}查看
http.request.reformat.response.action.view.as.description=作為{0}重新格式化並高亮顯示檔案
http.request.reformat.response.action.view.as.raw.text=文本
http.request.reformat.response.action.view.as.raw.description=將響應正文顯示為原始檔案
http.request.response.view.settings.action.popup.text=響應檢視設定
http.request.save.log.file.action.title=將 HTTP 客戶端請求儲存到歷史記錄
action.RESTClient.ShowHistory.text=顯示 HTTP 請求歷史記錄
http.request.show.log.file.action.toolbar=開啟日誌
http.request.show.log.file.action.description=開啟包含已執行 HTTP 請求的日誌檔案
http.request.show.log.file.action.failed=無法找到 HTTP 請求日誌檔案
http.request.show.log.file.action.failed.default.project=無法開啟預設專案的 HTTP 請求日誌檔案
http.request.show.log.file.action.failed.open.config=開啟設定
http.request.create.scratch.file.with.request.action.title=創建 HTTP 請求臨時檔案
http.request.create.scratch.file.with.request.failed=無法創建 HTTP 請求臨時檔案
http.request.create.scratch.file.with.request.file.is.invalid=創建的 HTTP 請求臨時檔案無效
http.request.open.requests.collection.action.toolbar=範例
http.request.open.requests.collection.action.description=開啟 HTTP 請求的內建集合
http.request.open.requests.collection.action.failed.default.project=無法開啟預設專案的 HTTP 請求集合
http.request.open.requests.collection.action.failed.no.file=無法找到 HTTP 請求集合
action.HTTPClient.AddRequest.text=添加請求
action.HTTPClient.AddRequest.notification.label=添加請求
action.HTTPClient.NewRequestInToolMenuAction.text=在 HTTP 客戶端中創建請求
http.request.add.request.action.failed.find.template=無法找到此請求的模板
http.request.add.request.action.error.adding.request=添加 HTTP 請求時出錯
http.request.add.request.action.error.adding.request.message=當前的編輯器不是文本編輯器
http.request.add.request.action.get=GET 請求
http.request.add.request.action.post.text.body=POST 文本正文
http.request.add.request.action.post.parameters.body=POST 參數正文
http.request.add.request.action.form.text.field=帶文本欄位的 POST 表單
http.request.add.request.action.form.file.field=帶檔案欄位的 POST 表單
http.request.copy.response.body.action.text=將響應正文複製到剪貼簿


action.HTTP.Request.NewFile.text=HTTP 請求
action.HTTP.Request.NewFile.description=創建新的 HTTP 請求檔案
group.HTTPClientNewEnvironmentFile.text=HTTP 環境檔案
http.request.create.new.public.environment.file.action.text=為 HTTP 請求創建環境檔案
http.request.create.new.private.environment.file.action.text=為 HTTP 請求創建私有 HTTP 環境檔案
http.request.create.new.environment.file.action.toolbar=添加環境檔案
action.NewPublicEnvironmentFile.popup@HttpClient.NotificationPanel.text=一般(用於常見變數，例如主機或查詢參數)
action.NewPrivateEnvironmentFile.popup@HttpClient.NotificationPanel.text=私有(用於密碼、令牌或 SSL 設定等敏感資料)
http.request.create.new.environment.file.fail.notification=無法創建檔案: 當前目錄已包含所有可能的環境檔案
http.request.create.new.environment.file.command.name=創建 HTTP 環境檔案
http.request.create.new.environment.tooltip.text=直接在 .http 檔案中使用 ''{{''{0}''}}'' 變數，並通過 ''{1}'' 環境執行請求

# request collections
# These keys are used dynamically as "http.request.collection." + collectionFileName.replace("-", ".")
# See: com.intellij.ws.actions.HttpRequestOpenCollectionAction.getCollectionName
# suppress inspection "UnusedProperty"
http.request.collection.get.requests=GET 請求
# suppress inspection "UnusedProperty"
http.request.collection.post.requests=POST 請求
# suppress inspection "UnusedProperty"
http.request.collection.requests.with.authorization=帶授權的請求
# suppress inspection "UnusedProperty"
http.request.collection.requests.with.tests=帶測試的請求

# http requests log
http.request.log.file.is.ignored=無法開啟日誌檔案，因為它已包含在忽略的列表中。<br/>從“忽略檔案和資料夾”中移除 ''{0}'' 以使用請求日誌檔案。
http.request.log.file.is.excluded=無法開啟日誌檔案，因為它已被標記為排除。<br/>取消排除 ''{0}'' 目錄以使用請求日誌檔案。
http.request.log.file.wrong.type=無法開啟日誌檔案，因為 ''*.http'' 擴展被標記為 ''{0}''，但應為 ''HTTP 請求''。
http.request.log.ignored.files.provider.title=基於編輯器的 HTTP 客戶端請求

# cookie jar
filetype.http.request.cookie.jar.description=Cookie 存儲檔案
http.request.cookie.jar.action.title=將 HTTP 響應 Cookie 儲存到 Cookie Jar
http.request.cookie.jar.inspection.attributes.missing=Cookie 格式錯誤: 缺少一些 TAB 分隔的特性。Cookie 格式應為: "domain\tpath\tname\tvalue\texpirationDate"
http.request.cookie.jar.inspection.too.many.attributes=Cookie 格式錯誤: Cookie 的 TAB 分隔特性過多。Cookie 格式應為: "domain\tpath\tname\tvalue\texpirationDate"
http.request.cookie.jar.inspection.empty.domain=Cookie 格式錯誤: 不允許空 domain 特性
http.request.cookie.jar.inspection.empty.path=Cookie 格式錯誤: 不允許空 path 特性
http.request.cookie.jar.inspection.empty.date=Cookie 格式錯誤: 不允許空 date 特性。預期日期格式:“Tue, 01-Jan-2019 00:00:00”，會話 Cookie 為”-1“
http.request.cookie.jar.inspection.expired.cookie=Cookie 已過期。調整到期日期，以防止下一個請求後刪除此 Cookie
http.request.cookie.jar.inspection.date.format=Cookie 格式錯誤: 日期格式錯誤。預期日期格式:“Tue, 01-Jan-2019 00:00:00”，會話 Cookie 為”-1“
http.request.cookie.jar.cookie.preserved=Cookie 在請求之間保留:
http.request.cookie.jar.cookie.preserved.failed=無法保留 Cookie，{0}:

# run
rest.client.request.url.is.invalid=由於 URL 無效，因此無法執行請求
rest.client.request.file.path.is.invalid=在 {1} 找不到輸入檔案 ''{0}''
rest.client.request.file.path.is.empty=輸入檔案的路徑為空
rest.client.request.query.is.invalid=查詢參數 ''{0}'' 無效，因此無法執行請求
rest.client.request.cannot.create.file=無法為多部分欄位 ''{0}'' 創建臨時檔案
rest.client.request.cannot.create.file.post=無法為 POST 主體創建臨時檔案
rest.client.request.cannot.find.environment=無法找到 ''{0}'' 環境
rest.client.request.multiple.environments=找到了多個具有 ''{0}'' 環境的檔案
rest.client.request.execute.cancel=HTTP 請求被中斷
rest.client.request.execute.cancel.post.process=\n\
\n\
HTTP 請求在響應後處理期間被中斷
rest.client.cannot.execute.response.handler.failed.title=JavaScript 響應處理程序執行失敗
rest.client.cannot.execute.response.processor.log.disabled=由於禁用了檔案登錄，無法顯示響應
rest.client.request.cannot.find.response.handler=無法找到 ''{0}'' 響應處理程序腳本
# suppress inspection "TrailingSpacesInProperty"
rest.client.request.response.handler.console=響應處理程序腳本的輸出將在此處顯示。\n\
\n\

rest.client.request.response.handler.execution=正在執行響應處理程序腳本…
rest.client.request.run.request.tooltip=執行 HTTP 請求
rest.client.request.run.debug.request.tooltip=執行/偵錯 HTTP 請求
rest.client.request.execute.with.environment=使用 ''{1}'' 環境{0}
rest.client.request.execute.with.default.environment=使用預設環境{0}
rest.client.request.execute.with.no.environment=無環境{0}
rest.client.request.execute.with.text={0}方式…
rest.client.request.execute.environment.popup.header=選擇環境
action.HTTPClient.RunAll.text=在檔案中執行所有請求
action.HTTPClient.RunAll.text.in.notification=執行檔案中的所有請求
rest.client.request.execute.all.text=全部{0}
rest.client.request.execute.all.with.environment.text=使用 ''{1}'' 環境全部{0}
rest.client.request.run.test.console.root=HTTP 請求
rest.client.request.response.handler.tab.name=響應處理程序
rest.client.request.test.tab.name=測試
rest.client.request.execute.notification=HTTP 客戶端執行
rest.client.request.response.handler.failed.on.execution=無法執行響應處理程序
rest.client.request.test.result=測試失敗: {0}，已通過: {1}
rest.client.request.response.body.empty=<Response body is empty>
rest.client.request.response.truncated.label=響應輸出被截斷以適應主控台。
rest.client.request.change.console.settings.label=考慮更改主控台記憶體設定

# Request error
http.client.request.error.message.begin=由於 {1} 處的{0}，URI 無效
http.client.request.error.message.description=未取代的變數 ''{0}''
http.client.request.error.message.quickfixes.title=可能的解決方案:
http.client.request.error.message.add.to.env.quickfix=向現有環境添加變數
http.client.request.error.message.add.env.file.quickfix=添加新的環境檔案
http.client.request.error.message.run.with.env.quickfix=在環境中執行
http.client.request.error.message.add.to.env.no.env.error=無設定的環境
http.client.request.error.message.add.to.env.already.has.var.error=所有環境均已包含 ''{0}'' 變數
http.client.request.error.message.run.with.env.no.env.error=沒有環境包含變數 ''{0}''

# debug
debug.http.client.can.not.resolve.host.name=無法解析 URL 的主機名: {0}
debug.http.client.can.not.parse.url=無法從該字串解析 URL: {0}
debug.http.client.no.debugger.extensions=無法偵錯請求: 未定義偵錯器擴展
debug.http.client.no.debugger.extension.by.name=無法偵錯請求: 名稱為 {0} 的偵錯器擴展不存在

# refactorings
rest.client.refactoring.move.request.name=移動 HTTP 請求
rest.client.refactoring.move.request.description=將 HTTP 請求移動到單獨的檔案
rest.client.refactoring.ui.path.label=路徑:
rest.client.refactoring.ui.browse.select.path=選擇路徑
rest.client.refactoring.ui.browse.select.path.description=選擇目標檔案路徑
rest.client.refactoring.no.requests=無法找到要移動的 HTTP 請求
rest.client.refactoring.request.is.invalid=無法移動所選請求
rest.client.refactoring.file.is.invalid=包含 HTTP 請求的檔案無效
rest.client.refactoring.cannot.create.file=無法創建目標檔案
rest.client.refactoring.target.file.is.invalid=目標檔案無效或不存在。
rest.client.refactoring.target.file.same.as.original=目標檔案與當前檔案相同。
rest.client.refactoring.not.inside.project=目錄不在專案內
rest.client.refactoring.file.not.valid.name="{0}" 不是有效的文件名
rest.client.refactoring.file.is.empty=目標檔案路徑為空
rest.client.refactoring.is.a.directory=所選路徑應指向檔案而不是目錄
rest.client.refactoring.empty.selection=選擇至少一個請求
rest.client.refactoring.invalid.variable.name=名稱 ''{0}'' 無效，因此無法重命名環境變數
rest.client.refactoring.invalid.dynamic=動態變數不支持重命名操作

# highlighting
http.request.highlighting.method.type=方法類型
http.request.highlighting.comment=註釋
http.request.highlighting.requests.separator=請求分隔符
http.request.highlighting.request.port=請求連接埠
http.request.highlighting.request.parameter.name=請求參數名稱
http.request.highlighting.request.parameter.value=請求參數值
http.request.highlighting.header.field.key=標頭欄位鍵
http.request.highlighting.header.field.value=標頭欄位值
http.request.highlighting.header.message.body=請求正文
http.request.highlighting.header.input.file.sign=輸入檔案符號
http.request.highlighting.header.input.file.path=輸入檔案路徑
http.request.highlighting.header.difference.file.sign=響應歷史記錄符號
http.request.highlighting.header.difference.file.path=響應歷史記錄路徑
http.request.highlighting.multipart.boundary=多部分邊界
http.request.highlighting.environment.variable=環境變數
http.request.highlighting.variable.braces=變數大括號

# find usages
http.request.find.usages.type.variable=變數
http.request.find.usages.type.dynamic.variable=動態變數

# diff
http.request.diff.compare.with=比較物件…
http.request.diff.line.marker.provider=HTTP 響應差異
http.request.diff.compare.with.file=與 {0} 比較
http.request.diff.compare.with.description=將響應輸出與先前結果之一比較
http.request.diff.compare.with.dialog.title={0} vs {1} ({2})
http.request.diff.compare.with.dialog.title.directories={0} 與 {1}
http.request.diff.compare.with.can.not.resolve=找不到檔案 ''{0}''

# ui
rest.clien.ui.deprecation.convert.action=將請求轉換為新格式
rest.client.ui.notification.link.label.legacy.request.file=舊版 REST 客戶端請求檔案

# run-configuration
http.request.run.configuration.panel.title=設定
http.request.run.configuration.name=HTTP 請求
http.request.run.configuration.description=執行 '*.http' 或 '*.rest' 檔案中描述的 HTTP 請求
http.request.run.configuration.env.label=環境(&E):
http.request.run.configuration.env.combo.box.tooltip=定義要在請求中使用的變數的環境
http.request.run.configuration.no.env.name=無環境
http.request.run.configuration.file.label=檔案(&F):
http.request.run.configuration.index.label=請求(&R):
http.request.run.configuration.file.is.not.configured=未設定 HTTP 請求檔案路徑
http.request.run.configuration.file.doesn.exists=無法找到要執行的檔案
http.request.run.configuration.request.doesn.exists=無法找到要執行的 HTTP 請求，選擇了 #{0} 個，但只有一個請求
http.request.run.configuration.request.doesn.exists.many=無法找到要執行的 HTTP 請求，選擇了 #{0} 個，但只有 {1} 個請求
http.request.run.configuration.run.single.request=執行單個請求
http.request.run.configuration.run.all.in.file=執行檔案中的所有請求
http.request.run.configuration.run.all.in={0}中的所有

# doc comment tags
http.request.doc.comment.documentation.no.redirect=此標記禁用對請求進行自動重定向處理
http.request.doc.comment.documentation.no.log=此標記禁用自動響應日誌記錄。在響應可能包含敏感資訊時很有用。
http.request.doc.comment.documentation.no.cookie=此標記禁用在請求之間保留 Cookie。<br/>此請求不會使用 Cookie jar 中的 Cookie，也不會保留響應中的 Cookie。
http.request.doc.comment.documentation.use.os.credentials=帶有此標記的請求將嘗試從操作系統獲取授權票證。

# converter
http.request.convert.curl.ui.title=將 cURL 轉換為 HTTP 請求
http.request.convert.from.toolbar=轉換…
http.request.convert.curl.ui.ok.action=轉換(&C)
http.request.convert.curl.to.http.request.failed.title=無法將 cURL 轉換為 HTTP 請求
http.request.convert.curl.is.not.curl=輸入字串不是有效的 cURL 指令
http.request.convert.curl.no.url=在 cURL 指令中找不到 URL
http.request.convert.curl.unknown.option=不支持選項 ''{0}''
http.request.convert.curl.no.data=無法找到選項 ''{0}'' 的必需資料
http.request.convert.curl.method.not.supported=不支持自訂 HTTP 方法: ''{0}''
http.request.convert.curl.invalid.url=cURL 指令中的 URL 無效: ''{0}''
http.request.convert.curl.invalid.header=頭名稱不應為空: ''{0}''
http.request.convert.curl.custom.path.in.form.data=無法解析表單資料中的檔案路徑: ''{0}''
http.request.convert.curl.form.data.no.value=無法解析表單資料，值為空: ''{0}''
http.request.convert.curl.method.do.not.support.body=方法 ''{0}'' 不支持請求正文

legacy.cannot.convert.message.begin=無法從舊版 REST 客戶端檔案轉換
dialog.title.select.xml.file.with.rest.client.request=選擇包含 REST 客戶端請求的 .xml 檔案

# microservices
http.request.microservices.generate.from.endpoints.view.fail.title=無法在 HTTP 客戶端中生成請求
http.request.microservices.generate.from.endpoints.view.fail.message=部分 URL 無效:
http.request.microservices.generate.from.endpoints.view.fail.dropdown=無效 URL
http.request.microservices.generate.from.endpoints.view.fail.concrete.message={0} ({1} 內)


#request navigator
http.request.navigator.rest.client.display.text=執行 HTTP 請求
http.request.navigator.update.scratch.file=更新 HTTP 請求臨時檔案
http.request.navigator.invalid.file=''{0}'' 不是有效的 HTTP 請求檔案
http.request.navigator.invalid.file.document=無法修改檔案 ''{0}''

# generation
http.request.generation.unsupported.schemes=不支持的方案: {0}。
http.request.generation.invalid.authorities=無效授權: {0}。
http.request.generation.invalid.url=無效 URL: ''{0}''。
http.request.generation.unsupported.methods="不支持的方法: {0}"

http.request.open.in.http.client.gutter.tooltip=在 HTTP 客戶端中生成請求: {0}
http.request.open.in.http.client.goto.related.name=HTTP 客戶端中的 {0}

# placeholder
http.request.placeholder.inspection.message=取代 $placeholder 變數以執行請求
http.request.placeholder.inspection.message.fix=取代 '$placeholder'
http.request.placeholder.inspection.name=HTTP 請求中的 '$placeholder'
http.request.placeholder.run.ignore=由於請求不完整而忽略 ''{0}''，取代 ''$placeholder'' 變數以執行此請求。

#inlay action

http.request.add.http.request.command=添加 HTTP 請求
http.request.file.0.is.not.found.error.message=找不到檔案 ''{0}''
http.request.failed.reading.0.error.message=讀取 {0} 失敗
http.requests.move.requests.member.panel=請求
http.request.add.http.request.separator.command=添加 HTTP 請求分隔符

rest.client.accessing.resource.indicator.text=正在存取資源
rest.client.0.of.1.kb.indicator.text={0}/{1}Kb
http.request.no.requests.to.execute.error=沒有要執行的請求
the.selected.file.is.not.a.valid.xml.file.error=所選檔案不是有效的 .xml 檔案: {0}
error.loading.error=載入 {0} 時出錯: {1}
the.selected.file.is.not.a.rest.client.request.error=所選檔案不是 REST 客戶端請求
rest.client.ui.xml.file.unknown.error=XML 檔案包含無效資料

http.request.content.length.is.redundant.inspection.name=冗餘的 'Content-Length'
http.request.content.length.is.redundant.inspection.message=冗餘的 'Content-Length' 欄位
http.request.content.length.is.redundant.inspection.message.fix=刪除冗餘欄位

http.request.incorrect.http.header.inspection.name=不正確的 HTTP 標頭

# convert to cURL
http.request.convert.to.curl.env.list.title=替代變數的環境
http.request.convert.to.curl.env.list.element={0} (包含 {2} 個變數中的 {1} 個)
http.request.convert.to.curl.intention.name=轉換為 cURL 並複製到剪貼簿
http.request.convert.to.curl.error=無法轉換為 cURL:\n\
{0}
http.request.convert.to.curl.message.1=已轉換並複製到剪貼簿:\n\
{0}
http.request.convert.to.curl.message.2=已使用 {0} 環境轉換並複製到剪貼簿: \n\
{1}
http.request.convert.to.curl.no.environment.option=無環境

action.HTTPClientConvertToCurlAndCopy.text=轉換到 cURL 並複製

http.request.endpoints.tab.empty.panel.label=選擇 HTTP 端點以查看 HTTP 請求
http.request.endpoints.tab.run.empty.panel.label=提交請求以查看響應
http.request.endpoints.tab.click.hint=點擊以取代變數
http.request.endpoints.tab.enter.hint=按 Enter 以取代變數
http.request.endpoints.tab.submit.request.action.text=提交請求
http.request.endpoints.tab.submit.requests.action.text=提交請求
http.request.endpoints.tab.variable.substitute.command.name=取代變數
http.request.endpoints.tab.substitute.variables.to.run.tooltip=取代變數以執行請求

# foldings
http.request.difference.files.folding.placeholder.text=… ({0,number,integer} 個{0,choice, 1#之前的響應|1<之前的響應})

#inspection
inspection.name=採用未加密協議的鏈接
inspection.group=安全性
inspection.template=HTTP 鏈接不安全
notification.group.name=微服務
intention.family.name.change.prefix.to.https=將前綴更改為 https://
checkbox.ignore.comments=忽略註釋
column.name.ignored.urls=已忽略的 URL
column.name.ignored.urls.label=已忽略的 URL:
quickfix.ignore.url.family.name=忽略 URL: {0}

# ssl
http.request.env.ssl.conf.key.without.cert.error=SSL 設定有密鑰但沒有憑證
http.request.env.ssl.conf.cert.obj.has.not.path.error=沒有為客戶端憑證提供路徑
http.request.env.ssl.conf.key.obj.has.not.path.error=沒有為客戶端私鑰提供路徑
http.request.env.ssl.conf.guess.format.from.extension.error=無法根據檔案副檔名 ''.{0}'' 確定格式。\n\
可能的修正: 添加 ''format'' 屬性以顯式指定格式。\n\
根據此規則確定格式: {1}。
http.request.env.ssl.conf.unknown.format.error=未知格式 ''{0}''。可能的變體: {1}。
# suppress inspection "TrailingSpacesInProperty"
http.request.env.ssl.conf.unresolved.path.error=無法解析路徑 {0}。\n\
選中的絕對路徑:
http.request.env.ssl.conf.property.not.object.error=''{0}'' 必須為 JSON 物件。
http.request.env.ssl.conf.property.not.object.or.string.literal.error=''{0}'' 必須為 JSON 物件或字串文字。
http.request.env.ssl.conf.property.not.string.literal.error=''{0}'' 必須為 JSON 字串文字。
http.request.env.ssl.conf.property.not.boolean.literal.error=''{0}'' 必須為 JSON 布爾文字。
http.request.env.ssl.conf.has.passphrase.and.has.not.certificate.error=SSL 設定有密碼短語但沒有憑證
http.request.ssl.cannot.read.key.error=無法讀取密鑰檔案:\n\
{0}
http.request.ssl.cannot.read.p12.key.store.error=無法讀取 P12 密鑰庫:\n\
{0}
http.request.ssl.cannot.read.certificate.error=無法開啟憑證:\n\
{0}
http.request.ssl.cannot.add.key.to.key.store.error=無法向密鑰庫添加密鑰:\n\
{0}
http.request.ssl.cannot.add.key.store.to.ssl.context.error=無法向 SSL 上下文添加密鑰庫:\n\
{0}
http.request.ssl.no.cert.in.file.error=檔案不含憑證
http.request.ssl.no.key.in.file.error=檔案不含私鑰
http.request.ssl.encrypted.key.without.passphrase.error=檔案包含加密私鑰，但未提供密碼短語
http.request.ssl.cert.file.already.contains.key.error=憑證檔案已包含私鑰
http.request.ssl.error.response=SSL 設定錯誤: {0}
http.request.ssl.cannot.determine.key.for.cert.error=無法確定憑證的私鑰
http.request.env.ssl.add.format.fix.action=添加顯式格式屬性
http.request.env.ssl.passphrase.presentable.name=憑證密碼短語

# scheme
http.request.private.env.file.name=HTTP 客戶端私有環境檔案
http.request.env.file.name=HTTP 客戶端環境檔案

# live templates
http.request.environment.general.context.type.label=HTTP 客戶端環境檔案
http.request.environment.env.context.type.label=環境
http.request.environment.private.env.context.type.label=私有環境
http.request.environment.object.for.envs.context.type.label=環境物件

# secrets
http.request.secrets.dialog.message=輸入 {0} 的保護值
http.request.secrets.dialog.title=HTTP 客戶端保護值
http.request.secrets.intention.family.name=設定保護值的值
http.request.secrets.intention.text=設定 ''{0}'' 的值
checkbox.ignore.tldOnly=忽略沒有頂層域的 URL
checkbox.ignore.ip=忽略 IP 地址
http.request.generate.request.in.http.client.action.message=在 HTTP 客戶端中生成請求
http.request.generate.request.in.http.client.action.title=在 HTTP 客戶端中生成請求
http.request.open.in.http.client.intention.error.title=無效 URL。無法在 HTTP 客戶端生成請求。
action.HTTPClientConvertToCurlAndCopy.popup@HttpClientConvertPopup.text=將文字游標處的 HTTP 請求轉換為 cURL 並複製到剪貼簿
rest.client.request.executor.not.found=無法執行請求，因為找不到合適的執行程序
http.request.open.in.http.client.intention.web.reference.authority.error.message=空機構
http.request.open.in.http.client.intention.web.reference.scheme.error.message=無法從引用檢索 HTTP 方案
http.request.run.dashboard.customization.status.label=狀態: {0}
rest.client.request.cannot.dereference.psi=無法存取請求 PSI
rest.client.request.debug.null.process.handler=無法準備偵錯會話，因為行程處理程序為 null
rest.client.request.connection.closed.message=連接已關閉
rest.client.request.connection.closed.error.message=連接意外關閉
rest.client.request.response.handler.finished.message=腳本已完成
http.request.run.anything.group.title=HTTP 請求
http.request.run.anything.element.action.description=使用 @name ''{0}'' 執行 HTTP 請求
http.request.run.anything.element.from.file.name={0}，來自 {1}
rest.client.request.response.file.error.message=錯誤: {0}
rest.client.request.response.file.created.message=響應檔案已儲存。
http.client.request.error.message.cannot.write.to.response.file=檔案 {0} 不可寫
http.request.highlighting.doc.comment.tag=註釋標記
http.request.highlighting.request.name=請求名稱
http.request.run.configuration.request.doesn.exists.by.identifier=找不到要執行的 HTTP 請求，所選檔案中沒有關鍵字為 ''{0}'' 的請求
http.client.whats.new.title=HTTP 請求中的新內容
http.client.whats.new.first.request.description=使用 >> 將響應重定向到相對於 HTTP 請求檔案的檔案
http.client.whats.new.second.request.description=如果想覆寫該檔案，而不是創建一個帶有後綴的新檔案，請使用 >>!
http.client.whats.new.third.request.description=您還可以使用絕對路徑和變數: \n\
{{$projectRoot}} 指向專案根，{{$historyFolder}} 指向 .idea/httpRequests/\n\
您可以將響應重定向到響應處理程序腳本和檔案
http.client.whats.new.forth.request.description=現在可以給請求命名了。\n\
請求名稱可以通過第一個分隔符('###')中的文本或 'name' 註釋標記的值提供。\n\
IDE 將高亮顯示名稱或請求。\n\
可以通過“執行任何內容”選單執行已命名的請求，也可以通過“隨處搜尋”進行搜尋
http.request.run.anything.ad.text=按 {0} 在環境中執行
http.request.history.file.formatting.status.notification.label=正在等待 IDE 格式化響應並將其寫入檔案
http.request.mime.type.registry.text.name=文本檔案
http.request.mime.type.registry.binary.name=二進制
http.request.mime.type.registry.action.popup.title=將 ''{0}'' 識別為...
http.request.mime.type.registry.inlay.text=''{0}'' MIME 類型設定
http.request.mime.type.registry.inlay.with.mark.text=''{0}'' MIME 類型被識別為了 {1}
http.request.mime.type.registry.hint.message=將在下一次請求執行時考慮更改
http.request.redirections.header=重定向
http.request.redirections.disable.button.success.hint=已添加 @no-redirect 標記
http.request.redirections.disable.button.error.hint=找不到禁用重定向的請求
http.request.redirections.disable.button.label=關閉
http.request.redirections.command.name=添加 '@no-redirect' 標記
http.request.select.environment.action.text=選擇
http.request.navigate.to.public.environment.action.text=編輯 Public…
http.request.navigate.to.private.environment.action.text=編輯 Private…
http.request.no.environment.action.text=無環境
notification.group.http.generation=HTTP 客戶端請求生成失敗
notification.group.http.client=HTTP客戶端請求執行失敗
http.client.environment.selector.label=使用以下環境執行:
http.client.select.environment.intention.text=切換環境
http.client.select.environment.intention.popup.title=選擇環境
http.request.create.new.public.environment.action.text=將環境添加到 Public 檔案…
http.request.create.new.private.environment.action.text=將環境添加到 Private 檔案…
http.client.unresolved.variable.inspection.name=未解析的環境變數
http.client.unresolved.variable.add.variable.quickfix.text=將變數 ''{0}'' 添加到環境 ''{1}'' {2,choice,0#在一般檔案中|1#在私有檔案中}
http.client.unresolved.variable.select.env.with.var.quickfix.text=切換到具有變數 ''{0}'' 的環境
http.client.unresolved.variable.create.env.with.var.quickfix.text=使用變數 ''{0}'' 創建環境
http.request.collection.whats.new=2021.3 中的最新變化
rest.client.request.error.status=請求出錯
group.HTTPClient.Convert.text=匯入 HTTP 請求
action.com.intellij.httpClient.actions.ConvertCurlToHttpRequestAction.popup@HttpClientConvertPopupV2.text=cURL 指令…
action.RESTClient.RequestFromLegacyFiles.popup@HttpClientConvertPopupV2.text=舊版 REST 客戶端檔案…
http.client.convert.popup.title=轉換…
http.client.convert.popup.v2.title=匯入從
rest.client.request.response.printing.interrupted.error=響應檢索被中斷
rest.client.request.response.downloading.with.bound.status=正在下載 {0} 個(共 {1} 個)
rest.client.request.response.downloading.without.bound.status=正在下載 {0}
http.client.unresolved.variable.with.dev.message=無法解析所選環境 ''{1}'' 中的變數 ''{0}''
http.client.unresolved.variable.without.dev.message=未選擇環境。無法解析變數 ''{0}''
rest.client.request.file.path.is.invalid.fallback=找不到輸入檔案 ''{0}''
http.client.ws.handshake.status.message=握手狀態:
http.client.bidi.dialog.description.label.text=要发送到 {0} 的訊息:
http.client.bidi.dialog.controls.label.text=按 {0} 發送。使用 {1} 和 {2} 瀏覽歷史記錄。
http.client.bidi.dialog.language.label.tooltip.text=點擊以更改語言
http.client.bidi.dialog.language.popup.title=選擇語言
http.client.graphql.over.ws.no.url.error.message=無法通過 WebSocket 創建 GraphQL 請求: 請求中沒有 URL
http.client.graphql.over.ws.no.body.error.message=無法通過 WebSocket 創建 GraphQL 請求: 請求中沒有請求正文
http.request.add.request.action.graphql.field=GraphQL 查詢請求
http.request.add.request.action.websocket.field=WebSocket 請求
http.client.graphql.plugin.promote.install.label.text=安裝 GraphQL 延伸模組以高亮顯示 GraphQL 請求
http.client.graphql.plugin.promote.install.action.text=安裝 GraphQL 延伸模組
http.client.graphql.plugin.promote.enable.label.text=啟用 GraphQL 延伸模組以高亮顯示 GraphQL 請求
http.client.graphql.plugin.promote.enable.action.text=啟用 GraphQL 延伸模組
http.request.select.before.run.action.text=<Select Environment Before Run>
http.request.collection.open.help=開啟 HTTP 客戶端幫助
http.client.graphql.add.json.variables.intention.text=添加 GraphQL JSON 變數塊