ExtractJpqlQueryIntention.error={0} 錯誤
action.SpringDataRunJpqlAction.text=在主控台中執行查詢
action.SpringRepositoryViewShowMembers.text=顯示繼承的成員
action.runRepositoryMethodAction.text=在主控台中執行查詢
completion.SpringData.generate.repository.command.name=建立 {0} 儲存庫
completion.SpringData.generateRepositoryMethod=生成儲存庫方法
completion.SpringData.generateRepositoryMethod.progress=正在生成儲存庫方法…
completion.SpringData.select.entity.class=選擇實體
completion.SpringData.select.entity.class.none=<未選擇實體>
completion.SpringData.select.repository.class=選擇基儲存庫類別
completion.SpringData.suggested.method.parameters.advertisement=選擇儲存庫方法參數
data.inspection.group.name=Spring Data
goto.custom.implementation.title=導覽到自訂實作\: ''{0}''
goto.named.query.title=導覽到 @NamedQuery
goto.repository.methods.title=導覽到 Spring Data 儲存庫方法
incorrect.method.of.explicit.subject.return.type=此處應為''{0}'' 類型
incorrect.method.return.type=此處應為 ''{0}'' 域類型或有效投影接口
incorrect.method.return.type.non.reactive.type.expected=應為非反應式類型
incorrect.method.return.type.reactive.type.expected=應為反應式類型\: ''{0}''
incorrect.method.return.type.unknown.reactive.type.expected=應為反應式類型
inspection.SpringDataModifyingAnnotationMissing=Update/Delete 查詢必須使用 @Modifying 進行註解，否則將拋出 InvalidDataAccessApiUsageException。
inspection.SpringDataPageableParameterMissing=返回 Page 的查詢必須具有 Pageable 參數。
intention.family.name.spring.data.intentions=Spring 資料意圖
intention.name.create.spring.data.repository=在 ''{1}'' 中建立儲存庫方法 ''{0}''
live.template.repository.description=Spring '@Repository' 模板
logical.spring.repo.methods=方法
named.query.type.title=@NamedQuery
notification.group.spring.dataJpa=Spring Data JPA
open.in.database.view=在資料庫檢視中開啟
run.jpql.query=執行 JPQL 查詢
spring.component.template.repository=儲存庫
spring.data.commons.query.method.inconsistency.inspection.name=Spring Data 儲存庫方法錯誤
spring.data.commons.query.method.parameters.inspection.name=Spring Data 儲存庫方法參數錯誤
spring.data.commons.query.method.return.type.inspection.name=Spring Data 儲存庫方法返回值類型錯誤
spring.data.domain.class.from.projection=導覽到域類別
spring.data.domain.class.member.select=選擇域成員
spring.data.domain.class.select=選擇域類別
spring.data.domain.member.from.projection=導覽到域類別成員
spring.data.jdbc.associated.db.elements.inspection.name=Spring Data JDBC 關聯的資料庫元素
spring.data.jdbc.entities=JDBC 實體
spring.data.jdbc.entity.in.several.aggregates.fix.name=刪除特性
spring.data.jdbc.entity.in.several.aggregates.inspection.description=''{0}'' already belongs to a different aggregate root
spring.data.jdbc.entity.in.several.aggregates.inspection.name=Spring Data JDBC aggregate roots
spring.data.jdbc.gutter.attribute.actions=顯示特性動作
spring.data.jdbc.gutter.entity.actions=顯示條目動作
spring.data.jdbc.gutter.name=Spring Data JDBC 映射
spring.data.jdbc.mapped.collection.key.column.fix.command=新增 'keyColumn' 特性
spring.data.jdbc.mapped.collection.key.column.fix.name=新增 'keyColumn' 特性
spring.data.jdbc.mapped.collection.key.column.inspection.description=Missing 'keyColumn' attribute
spring.data.jdbc.mapped.collection.key.column.inspection.name=Spring Data JDBC mapped collection key column
spring.data.jdbc.orm.framework.name=Spring Data JDBC
spring.data.jpa=Spring Data JPA
spring.data.jpa.entities=JPA 實體
spring.data.lineMarker.runQuery=在主控台中執行查詢
spring.data.projections.annotator=Spring Data 投影
spring.data.ql=Spring Data QL
spring.data.repositories.not.found=找不到 Spring 儲存庫
spring.data.repositories.title=儲存庫
spring.data.repository=儲存庫
spring.data.tab.title=資料
spring.template.context.type=Spring Data
