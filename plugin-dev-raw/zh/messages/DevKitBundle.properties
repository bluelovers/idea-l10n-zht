#module type
module.title=IntelliJ 平台延伸模組
module.description=延伸模組模組用於開發基於 <b>IntelliJ 平台</b>的 IDE 的延伸模組。<br>它們提供 <b>IntelliJ 平台延伸模組 SDK </b>和<b>執行設定</b>，用於在 IDE 中執行和偵錯延伸模組。
plugin.descriptor=IntelliJ 平台延伸模組描述符

#Gradle wizard
module.wizard.gradle.plugin.xml.template.display.name=基於 Gradle 的專案中的 plugin.xml

module.wizard.devkit.simple.plugin.label=<html>對於簡單的延伸模組(例如自訂 UI 主題)，建議使用此專案類型。<br>對於更複雜的延伸模組，<a href="https://plugins.jetbrains.com/docs/intellij/getting-started.html?from=DevkitPluginModuleWizard">建議</a>使用基於 Gradle 的專案。

convert.devkit.to.gradle.notification=Devkit 延伸模組可遷移到 Gradle
convert.devkit.to.gradle.notification.content=建議為此專案使用基於 Gradle 的設定。
convert.devkit.to.gradle.notification.link.title=遷移指南
convert.devkit.to.gradle.notification.do.not.show.again=不再顯示

group.PluginDeployActions.text=延伸模組部署操作

#Module Editor - Deployment
deployment.title=延伸模組部署
deployment.cleanup=清理 {0} 目錄
deployment.directory.location=選擇 {0} 目錄位置
deployment.view.select=選擇 {0}
manifest.settings=清單設定
manifest.selection=選定的 {0} 將包含在得到的分發中
manifest.use.user.defined=使用使用者清單: 
deployment.view.delete=確定刪除{0}?
deployment.view.meta-inf.label={0} 路徑
suggest.to.delete=是否刪除 ''{0}''?
vm.parameters=VM 選項(&V)
program.parameters=程序實參(&P)

#Prepare for deployment action
action.MakeJarAction.text=準備部署
action.MakeAllJarsAction.text=準備所有要部署的延伸模組
select.plugin.modules.title=選擇模組
select.plugin.modules.description=選擇要準備部署的模組
prepare.for.deployment.task=進行延伸模組模組 ''{0}'' 部署準備
prepare.for.deployment.task.progress=正在進行部署準備
prepare.for.deployment=為部署準備延伸模組模組 ''{0}''
prepare.for.deployment.all=為部署準備所有延伸模組模組
saved.message.common={0} 將儲存在所選目錄中
saved.message= 模組 ''{1}'' 的 {0, choice, 1#Zip|2#JAR} 檔案儲存至 {2}
success.deployment.message=已成功進行延伸模組模組 ''{0}'' 部署準備
success.deployment.message.all=已成功進行所有延伸模組的部署準備

##Idea Sdk
sdk.title=IntelliJ 平台延伸模組 SDK
sdk.select.java.sdk=選擇要用於 IntelliJ 平台延伸模組 SDK 的 Java SDK
sdk.select.java.sdk.label=內部 Java 平台:
sdk.select.java.sdk.title=選擇內部 Java 平台
sdk.no.java.sdk.for.idea.sdk.found=找不到合適的 Java SDK 版本。除了 IntelliJ 平台延伸模組 SDK，還需要定義具有相同 Java 版本 ({0}) 的 JDK。
sdk.no.idea.sdk.version.found=未能檢測出 IntelliJ 平台延伸模組 SDK 所需的 JDK 版本。
sdk.no.java.sdk.for.idea.sdk.found.title=未找到 Java SDK
sdk.from.sources.scanning.roots=正在掃描根

sandbox.specification=請設定沙盒
sandbox.home=沙盒主頁
sandbox.home.label=沙盒主頁: 
sandbox.no.configured=未為 IntelliJ 平台延伸模組 SDK 指定沙盒
sandbox.no.sdk=請設定 SDK
sandbox.purpose=瀏覽資料夾以放置目標 IDE 的設定、系統和延伸模組

#errors
error.occurred=出錯
sdk.no.specified=未為延伸模組模組 ''{0}'' 指定 SDK 
sdk.type.incorrect=延伸模組模組 ''{0}'' 的 SDK 類型錯誤。
sdk.type.incorrect.common=延伸模組模組的 SDK 類型錯誤
error.file.not.found=找不到檔案 
error.file.not.found.message=檔案 ''{0}'' 不存在
error.no.plugin.xml=找不到 plugin.xml 檔案
error.plugin.xml.readonly=無法處理唯讀 plugin.xml 檔案: {0}
error.plugin.xml.tag.invalid=<Invalid>

#run configurations
run.configuration.no.module.specified=未為設定指定延伸模組模組
run.configuration.title=延伸模組
run.configuration.type.description=延伸模組沙盒環境

#Test Data
testdata.create.dialog.title=創建 Testdata 檔案
testdata.file.doesn.not.exist=<html>所引用的 testdata 檔案 {0} 不存在。是否要創建?</html>
testdata.create.missing.files=創建缺少的檔案
testdata.confirm.create.missing.files.dialog.message=將創建以下 testdata 檔案: \n{0}
testdata.searching=正在搜尋測試資料檔案
testdata.goto.test.data.action.text=轉到 {0}
testdata.notification.no.test.datafiles.title=未找到測試資料檔案
testdata.notification.no.test.datafiles.content=找不到類的測試資料檔案
testdata.progress.text.searching.for.test.data.files=正在搜尋 ''{0}'' 測試資料檔案…

#Misc
info.message=資訊
new.action.id=操作 ID(&A):
new.action.description=描述(&D):
new.action.class.name=類名(&C):
new.action.text=名稱(&N):
new.action.add.to.group=添加到組
new.action.group.actions=操作(&I):
new.action.group.anchor=定位標記:
new.action.group.anchor.first=第一個(&F)
new.action.group.anchor.=最後一個(&L)
new.action.group.anchor.before=之前 (&B)
new.action.group.anchor.after=後面(&T)
new.action.group.groups=組(&G):
new.action.keyboard.shortcuts=鍵盤快捷鍵
new.action.keyboard.first=第一: 
new.action.keyboard.second=第二: 
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=清除快捷鍵
new.action.invalid.id=操作 ID 不得為空
new.action.invalid.class.name=操作類名不是有效的 Java 限定名稱
new.action.invalid.name=操作名稱不得為空
new.action.cannot.create.class=無法創建操作類

command.implement.externalizable=實作可外部化

new.menu.action.text=操作
new.action.error=無法創建操作
new.action.action.name=正在創建新操作: {0}。{1}
new.action.dialog.title=新操作

action.DevKit.NewMessageBundle.action.name.create.new.message.bundle=創建新消息捆綁包 ''{0}''
action.DevKit.NewMessageBundle.error.title.cannot.create.new.message.bundle=無法創建新消息捆綁包
action.DevKit.NewMessageBundle.text=訊息捆綁包
action.DevKit.NewMessageBundle.description=創建新的訊息捆綁包類和相應的屬性檔案
action.DevKit.NewMessageBundle.title.create.new.message.bundle=創建新消息包 '''' 
action.DevKit.NewMessageBundle.label.bundle.name=包名稱: 
action.DevKit.NewMessageBundle.error.message.multiple.content.roots.for.module={0} 有多個內容根
action.DevKit.NewMessageBundle.error.message.under.sources.root={0} 在源根下
action.DevKit.NewMessageBundle.error.message.folder.already.exists={1} 下已存在 ''{0}'' 資料夾
action.DevKit.NewMessageBundle.error.message.do.not.put.bundle.to.impl.module=目前不建議為 .impl 模組創建單獨的包，請改為使用相應 API 模組中的包
action.DevKit.NewMessageBundle.notification.title.cannot.create.resources.root.for.properties.file=無法創建新消息包
action.DevKit.NewMessageBundle.notification.content.cannot.create.resources.root.for.properties.file=無法為屬性檔案 {0} 創建資源根


## theming





new.menu.application.component.text=套用程序組件
new.menu.module.component.text=Module Component
new.menu.project.component.text=Project Component

select.plugin.module.to.patch=選擇要修補的延伸模組模組

keyword.extend=擴展
keyword.implement=實作
class.action=操作
class.interface=接口
class.implementation=實作

structure.sort.alphabetically.in.groups=在組中按字母順序排序
structure.sort.alphabetically.in.groups.description=在組中按字母順序排序

inspections.group.name=Plugin DevKit
inspections.group.descriptor=延伸模組描述符
inspections.group.description.file=描述檔案
inspections.group.code=程式碼
inspections.group.path=Plugin DevKit
inspections.plugin.xml.inner.class.must.be.separated.with.dollar=內部類必須用 '$' 分隔
inspections.plugin.xml.plugin.should.have.jetbrains.vendor=作為 IntelliJ IDEA 專案的一部分開發的延伸模組應指定 'JetBrains' 作為其供應商
inspections.plugin.xml.plugin.jetbrains.vendor.no.url=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定  ''{0}'' 作為 url
inspections.plugin.xml.plugin.jetbrains.vendor.no.email=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定電子郵箱
inspections.plugin.xml.plugin.jetbrains.no.version=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定版本
inspections.plugin.xml.plugin.jetbrains.no.idea.version=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定 idea-version，因為建置腳本會自動生成
inspections.plugin.xml.plugin.jetbrains.no.change.notes=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定 change-notes
inspections.plugin.xml.plugin.jetbrains.no.generic.plugin.url=作為 IntelliJ IDEA 專案的一部分開發的延伸模組不應指定泛型延伸模組 url
inspections.plugin.xml.ep.qualifiedName.superfluous=通過 'qualifiedName' 進行了不必要的宣告
inspections.plugin.xml.ep.qualifiedName.superfluous.fix=通過 'name' 宣告
inspections.plugin.xml.ep.doesnt.have.with=<extensionPoint> 沒有<with>標記用於指定類欄位的類型
inspections.plugin.xml.ep.both.beanClass.and.interface=<extensionPoint>不能同時指定 'interface' 特性和 'beanClass' 特性
inspections.plugin.xml.ep.missing.beanClass.and.interface=<extensionPoint>必須指定 'interface' 特性或 'beanClass' 特性
inspections.plugin.xml.ep.both.name.and.qualifiedName=<extensionPoint>不能同時指定 'name' 特性和 'qualifiedName' 特性
inspections.plugin.xml.ep.missing.name.and.qualifiedName=<extensionPoint>必須指定 'name' 特性或 'qualifiedName' 特性
inspections.plugin.xml.synonym.missing.key.and.text=<synonym> 必須指定 'key' 或 'text' 特性
inspections.plugin.xml.synonym.both.key.and.text=<synonym> 不得同時指定 'key' 或 'text' 特性
inspections.plugin.xml.use.defaultExtensionNs=改為使用 defaultExtensionNs
inspections.plugin.xml.specify.defaultExtensionNs.explicitly=顯式指定 defaultExtensionNs="{0}"
inspections.plugin.xml.invalid.build.number=<html>無效構建版本 ''{0}'' (<a href="https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html?from=DevkitPluginXmlInspection">文檔</a>)</html>
inspections.plugin.xml.until.build.use.asterisk.instead.of.big.number=不在 ''until-build'' 中使用 ''{0}''，改用 ''*''
inspections.plugin.xml.until.build.misleading.plain.number=''until-build'' 特性中的純數字可能會引起誤解。''{0}'' 與 ''{0}.0'' 的意義相同，因此該延伸模組不相容構建版本 {0}.*。最好改為指定 ''{1}''。
inspections.plugin.xml.until.build.must.be.greater.than.since.build="until-build" 必須大於 "since-build"
inspections.plugin.xml.dependency.superfluous.optional=多餘的宣告
inspections.plugin.xml.dependency.specify.config.file=必須指定 'config-file'
inspections.plugin.xml.deprecated.ep=棄用的擴展點 ''{0}''
inspections.plugin.xml.deprecated.ep.use.replacement=棄用的擴展點 ''{0}''，請改用 ''{1}''
inspections.plugin.xml.deprecated.ep.marked.for.removal.in.version=已標記為移除版本 ''{1}'' 中的擴展點 ''{0}''
inspections.plugin.xml.no.need.to.specify.itnReporter=由 JetBrains 開發的延伸模組中的異常會通過 ITNReporter 自動報告，無需顯式指定
inspections.plugin.xml.third.party.plugins.must.not.use.itnReporter='com.intellij.diagnostic.ITNReporter' 報告 JetBrains 的內部處理錯誤，不應將其用於第三方延伸模組
inspections.plugin.xml.deprecated.attribute=棄用的特性 ''{0}''
inspections.plugin.xml.deprecated.helpset=Helpset 已不再使用，請改用 'com.intellij.openapi.help.WebHelpProvider' 
inspections.plugin.xml.attribute.not.used.anymore=特性 ''{0}'' 不再使用
inspections.plugin.xml.anchor.must.have.relative-to-action='anchor' 必須使用 'relative-to-action' 進行指定
inspections.plugin.xml.must.use.after.before.with.relative-to-action=''{0}''|''{1}'' 與 ''relative-to-action'' 必須一起使用
inspections.plugin.xml.skipForDefaultProject.deprecated='skipForDefaultProject' 已棄用； 預設情況下，專案組件不載入到預設專案中
inspections.plugin.xml.invalid.ep.name.description=無效的擴展點 {0} ''{1}''，只能包含拉丁字符、數字和點，不能以點開頭/結尾，每個片段都必須以小寫字母開頭，最後一個片段詞不得重複任何先前的片段
inspections.plugin.xml.invalid.ep.name=名稱
inspections.plugin.xml.invalid.ep.qualifiedName=限定名稱
inspections.plugin.xml.ignore.classes.title=註冊檢查忽略類列表: 
inspections.plugin.xml.add.ignored.class.title=指定要忽略的類
inspections.plugin.xml.plugin.modules.label=多模組延伸模組的模組: 
inspections.plugin.xml.plugin.modules.description=每行指定單獨一個延伸模組中包含的模組名稱列表，這些名稱以逗號分隔。
inspections.plugin.xml.version.must.be.specified=必須指定 <version>
inspections.plugin.xml.vendor.must.be.specified=必須指定 <vendor>
inspections.plugin.xml.do.not.use.template.text=不使用模板文本 ''{0}''
inspections.plugin.xml.must.not.contain.template.text=不得包含模板文本 ''{0}''
inspections.plugin.xml.value.exceeds.max.length=值超過最大長度 {0}
inspections.plugin.xml.value.must.have.minimum.length=值必須達到最小長度 {0}
inspections.plugin.xml.product.descriptor.invalid.date=日期必須為 YYYYMMDD 整數或佔位符(例如__DATE__)
inspections.plugin.xml.product.descriptor.invalid.version=版本必須為整數或佔位符(例如__VERSION__)
inspections.plugin.xml.no.plugin.icon.svg.file=<html>延伸模組應提供 ''{0}'' (<a href="https://plugins.jetbrains.com/docs/intellij/plugin-icon-file.html?from=DevkitPluginXmlInspection">文檔</a>)</html>
inspections.plugin.xml.component.interface.class.redundant=冗餘標記 'interfaceClass'
inspections.plugin.xml.service.interface.class.redundant=冗餘特性 'serviceInterface'
inspections.plugin.xml.duplicated.dependency=依賴項設定檔案 ''{0}'' 重複
inspections.plugin.xml.ComponentModuleRegistrationChecker.element.registered.wrong.module=元素應在定義其類 ''{1}'' 的 ''{0}'' 模組中註冊
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.name=將註冊移至 {0}
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.family.name=將註冊移至正確的模組
inspections.plugin.xml.fix.extension.point.add.with.tag=添加 <with> 標記
inspections.plugin.xml.listener.does.not.inherit=''{0}'' 不是繼承自 ''{1}''
inspections.plugin.xml.since.build.could.not.locate.main.descriptor=無法定位主 plugin.xml 檔案來確定所需的 <idea-version> 'since-build'
inspections.plugin.xml.since.build.must.be.specified=必須指定 <idea-version> 'since-build'
inspections.plugin.xml.since.build.could.not.determine.platform.version=無法確定目標平台版本，請檢查專案設定
inspections.plugin.xml.since.build.listeners.os.attribute=特性 ''os'' 僅在平台版本 {0} 或更高版本中可用，但指定的 ''since-build'' 平台為 ''{1}''
inspections.plugin.xml.since.build.listeners.not.available=功能僅在平台版本 {0} 或更高版本中可用，但指定的 ''since-build'' 平台為 ''{1}''
inspections.plugin.xml.action.group.id.required=應指定 'id'
inspections.plugin.xml.action.class.required.with.use.shortcut.of='class' 必須使用 'use-shortcut-of' 指定
inspections.plugin.xml.action.must.override.method.with.use.shortcut.of=必須使用 ''use-shortcut-of'' 覆寫 {0}
inspections.plugin.xml.jetbrains.only.api=為 JetBrains 內部使用而保留的 API 的用法
inspections.plugin.xml.usage.of.experimental.api=使用通過 @{0} 標記的 API。在日後的 IDE 版本中，可能會更改或移除此類導致兼容性問題的 API。
inspections.plugin.xml.usage.of.internal.api=使用通過 @{0} 標記的 API。不應在 IntelliJ IDEA 專案之外使用此類 API。
inspections.plugin.xml.vendor.specify.jetbrains=指定 JetBrains 作為供應商
inspections.plugin.xml.change.until.build.name=將 ''until-build'' 更改為 ''{0}''
inspections.plugin.xml.change.until.build.family.name=更正 'until-build' 特性
inspections.plugin.xml.deprecated=已棄用
inspections.plugin.xml.add.version.tag=添加 <version>
inspections.plugin.xml.add.vendor.tag=添加 <vendor>
inspections.plugin.xml.module.descriptor.at.least.one.dependency=必須至少定義一個 <module> 條目
inspections.plugin.xml.dependency.descriptor.at.least.one.dependency=必須至少定義一個 <module> 或 <plugin> 依賴項
inspections.plugin.xml.dependency.class.located.in.wrong.package=類 ''{0}'' 必須位於軟體套件 ''{1}'' 中

inspections.registration.problems.name=組件類型不符合
inspections.registration.problems.option.check.plugin.xml=檢查延伸模組描述符(plugin.xml)
inspections.registration.problems.option.check.java.actions=檢查 Java 操作
inspections.registration.problems.option.check.java.code=檢查 Java 程式碼
inspections.registration.problems.quickfix.read-only=''{0}'' 為唯讀類
inspections.registration.problems.quickfix.create.constructor=延伸模組無實參構造函數

inspections.registration.problems.incompatible.message=根據它在 plugin.xml 中的註冊，此類應為 {0} ''{1}''
inspections.registration.problems.abstract=延伸模組組件類不得為 abstract
inspections.registration.problems.missing.noarg.ctor=操作類必須具有無實參的構造函數

inspections.registration.problems.missing.implementation.class=缺少實作類
inspections.registration.problems.cannot.resolve.class=無法解析 {0} 類
inspections.registration.problems.component.incompatible.interface=組件類不可分配給其接口類 ''{0}''
inspections.registration.problems.component.duplicate.interface=不允許多個組件有相同的接口類
inspections.registration.problems.action.incompatible.class=操作類必須擴展 ''{0}''

inspections.component.not.registered.name=組件/操作未註冊
inspections.component.not.registered.message={0} 未在 plugin.xml 中註冊
inspections.component.not.registered.option.check.actions=檢查操作
inspections.component.not.registered.option.ignore.non.public=忽略非 public 類
inspections.component.not.registered.quickfix.family=註冊 {0}
inspections.component.not.registered.quickfix.name=註冊 {0}
inspections.component.not.registered.quickfix.error=無法註冊 {0}
inspections.statistics.collector.not.registered.name=統計資訊收集器未註冊
inspections.statistics.collector.not.registered.message=統計資訊收集器未在 plugin.xml 中註冊

inspections.component.postfix.template.not.found.description.name=後綴模板描述檢查器

inspections.presentation.cannot.resolve.icon=無法解析圖標 ''{0}''
inspections.plugin.xml.invalid.order.attribute=無效 'order' 特性值
invalid.order.attribute.part=''order'' 特性值部分無效: ''{0}''，必須為 ''first''、''last''、''before <id>'' 或 ''after <id>''


inspections.inspection.description.optional.short.name=檢查沒有描述 {0}

inspections.inspection.mapping.consistency.specify.bundle=應指定捆綁包
inspections.inspection.mapping.consistency.fix.insert.attribute=插入 ''{0}'' 特性
inspections.inspection.mapping.consistency.specify.displayName.or.key=應指定 displayName 或 key
inspections.inspection.mapping.consistency.specify.groupName.or.groupKey=應指定 groupName 或 groupKey

inspections.intention.description.not.found=意圖沒有描述
inspections.intention.description.no.before.after.template=意圖在 'description.html' 旁必須有 'before.*.template' 和 'after.*.template'

inspections.postfix.description.not.found=後綴模板沒有描述
inspections.postfix.description.no.before.after.template=後綴模板在 'description.html' 旁必須有 'before.*.template' 和 'after.*.template'


inspections.quick.fix.family.name=QuickFix 的 getFamilyName() 實作不得依賴於特定上下文

inspections.unique.toolbar.id=指定唯一工具欄 ID


inspections.psi.element.concat.psi.element=PsiElement 到字串的可疑轉換
inspections.psi.element.concat.psi.type=PsiType 到字串的可疑轉換
inspections.psi.element.concat.add.get.text.family.name=調用文本表示檢索方法
inspections.psi.element.concat.add.get.text.name=使用 ''{0}'' 調用


inspections.plugin.xml.dynamic.plugin.component.usage=由於使用組件而變成非動態的延伸模組。
inspections.plugin.xml.dynamic.plugin.component.usage.docs.link.title=遷移指南
inspections.plugin.xml.dynamic.plugin.option.highlight.usages.ep=高亮顯示非動態擴展點的用法
inspections.plugin.xml.dynamic.plugin.extension.point=非動態擴展點 ''{0}''
inspections.plugin.xml.dynamic.plugin.explicit.non.dynamic.extension.point=顯式非動態擴展點 ''{0}''
inspections.plugin.xml.dynamic.plugin.id.required.for.group=必須為 <group> 指定 'id'
inspections.plugin.xml.dynamic.plugin.usage.of.non.dynamic.extension.point=使用非動態擴展點 ''{0}''
inspections.plugin.xml.dynamic.plugin.analyze.extension.point=''{1}'' 的{0}

inspections.stateful.extension.point.leak.psi.element=潛在的記憶體泄漏: 請勿保持 PsiElement，改用 SmartPsiElementPointer
inspections.stateful.extension.point.leak.psi.element.quick.fix=另請參閱 LocalQuickFixOnPsiElement
inspections.stateful.extension.point.do.not.use.in.quick.fix=請勿在快速修復中將 {0} 用作欄位
inspections.stateful.extension.point.do.not.use.in.extension=請勿在擴展中將 {0} 用作欄位

inspections.file.equals.method=請勿使用 File.equals/hashCode/compareTo，因為它們在 macOS 中不區分大小寫。請改用 FileUtil.filesEquals/fileHashCode/compareFiles。

inspections.undesirable.class.use.instead=請改用 ''{0}''

inspections.unsafe.vfs.recursion=從遞歸方法調用 VirtualFile.getChildren()。這可能會導致迴圈符號鏈接無窮迴圈。請改用 VfsUtilCore.visitChildrenRecursively()。

inspections.use.couple.of=取代為 'Couple.of()'
inspections.use.couple.type=取代為 ''Couple<{0}>''
inspections.use.couple.family.name=將 'Pair' 取代為 'Couple'

inspections.use.dpi.aware.insets=將取代為 JBUI.insets(...)
inspections.use.dpi.aware.insets.family.name=轉換為 JBUI.insets(...)

inspections.use.equals.description=''{0}'' 實例應通過 <code>equals()</code> 而不是 <code>==</code> 進行比較

inspections.unsafe.return.insert.family.name=跳過匿名/局部類
inspections.unsafe.return.insert.visit.lambda.expression=插入 visitLambdaExpression 方法
inspections.unsafe.return.insert.visit.class.method=插入 visitClass 方法
inspections.unsafe.return.insert.visit.lambda.expression.and.class.methods=插入 visitLambdaExpression/visitClass 方法
inspections.unsafe.return.message=存取 return 語句的遞歸訪問者最有可能應當專門處理匿名/局部類以及 lambda 表達式

inspections.use.jb.color.change.to.JBColor=更改為 JBColor.{0}
inspections.use.jb.color.replace.with.JBColor=取代為 JBColor
inspections.use.jb.color.fix=轉換為 JBColor.{0}
inspections.use.jb.color.fix.family.name=使用 JBColor 常數
inspections.use.jb.color.new.color.fix.family.name=轉換為 JBColor

# used by antbuild plugin
# suppress inspection "UnusedProperty"
# suppress inspection "UnusedProperty"

error.cannot.resolve.plugin=無法解析依賴項中的延伸模組 ''{0}''
error.cannot.resolve.plugin.reference.link.title=(引用: 延伸模組依賴項)
error.cannot.resolve.extension.point=無法解析依賴項中的擴展點 ''{0}''
error.cannot.resolve.extension.point.missing.dependency=缺少使用擴展點 ''{0}'' 的依賴關係宣告
error.cannot.resolve.extension.point.missing.dependency.fix.family.name=添加缺少的 <depends>

create.description.file=延伸模組描述檔案 {0}
create.description.file.family.name=延伸模組描述檔案
select.target.location.of.description=選擇 {0} 的目標位置
implemented.at.runtime.dom=在執行時實作的 DOM 元素
implemented.at.runtime.jamElement=在執行時實作的 JAM 元素

inspections.usage.uelement.as.psi=不建議將 UElement 用作 PsiElement

inspections.missing.recent.api.common.message=''{0}'' 僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。
inspections.missing.recent.api.class.message=''{0}'' 僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。請注意，在以前的 IDE 中，此類型可能具有其他完全限定名稱。
inspections.missing.recent.api.method.message=''{0}'' 僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。請注意，在以前的 IDE 中，此方法可能具有不同的完全簽名。
inspections.missing.recent.api.field.message=''{0}'' 僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。請注意，在以前的 IDE 中，此欄位可能具有不同的完全簽名。
inspections.missing.recent.api.default.constructor.message=''{0}'' 的預設構造函數僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。
inspections.missing.recent.api.overriding=''{0}'' 的覆蓋方法僅從 {1} 開始方可用，但該模組的目標是 {2}。這可能導致與 {1} 之前的 IDE 出現兼容性問題。請注意，在以前的 IDE 中，此覆蓋方法可能具有不同的簽名。
inspections.missing.recent.api.since.until.range.all.builds=所有建置
inspections.missing.recent.api.settings.range=延伸模組相容性範圍
inspections.missing.recent.api.settings.since=自
inspections.missing.recent.api.settings.since.empty.text=第一個 IDE
inspections.missing.recent.api.settings.until=至
inspections.missing.recent.api.settings.until.empty.text=日後所有 IDE
inspections.missing.recent.api.settings.invalid.build.number=無效建置號: {0}

inspection.renamer.dialog.title=重命名檢查描述檔案並更改短名稱
inspection.renamer.option.name=重命名檢查描述檔案並更改短名稱
inspection.renamer.dialog.description=<html>您還想重命名檢查描述檔案並更改短名稱嗎?<br/><b>警告: 它可能會破壞現有的檢查設定檔案和禁止註釋。</b></html>
inspection.renamer.entity.name=元素

intellij.api.annotations.update.task.title=更新 IntelliJ API 註解 {0}


inspections.leakable.map.key.name=映射鍵可能會泄漏
inspections.leakable.map.key.text=考慮使用 ''String'' 代替 ''{0}'' 作為映射鍵
inspections.leakable.map.key.quick.fix.name=使用 ''{0}'' 進行參數化

inspections.unresolved.plugin.config.reference=未解析的延伸模組設定引用

inspections.use.gray.convert=轉換為 Gray._{0}
inspections.use.gray.convert.family.name=轉換為 Gray

line.marker.related.property.tooltip=相關屬性
line.marker.related.property.popup.title=相關屬性
line.marker.related.property.description=相關屬性

action.AnalyzeEPUsageIgnoreSafeClasses.text=分析擴展點用法(不遵循安全類型)
action.AnalyzeEPUsage.text=分析擴展點用法

action.AnalyzeUnloadablePlugins.text=分析可移除延伸模組
action.AnalyzeUnloadablePlugins.progress.title=正在分析延伸模組({0})

action.DumpCleanTestData.text=轉儲高亮顯示的無標記資料
action.DumpCleanTestData.file.chooser.title=選擇目錄
action.DumpCleanTestData.file.chooser.source.description=包含高亮顯示測試資料的目錄
action.DumpCleanTestData.file.chooser.destination.description=將放置無高亮顯示標記的副本的目錄
action.DumpCleanTestData.error.source.destination.must.differ=源根和目標根應不同

action.ShowHelpPageById.text=按 ID 顯示幫助頁面
action.ShowHelpPageById.dialog.enter.help.id=輸入幫助 ID:
action.ShowHelpPageById.dialog.title=顯示幫助頁面

action.GenerateDomModel.text=生成 DOM 模型…

action.ShowSerializedXml.text=顯示類的序列化 XML
action.ShowSerializedXml.message.cannot.find.class=找不到類 ''{0}''
action.ShowSerializedXml.message.cannot.generate.class=無法生成類 ''{0}'': {1}
action.ShowSerializedXml.dialog.title=''{0}'' 的序列化 XML

action.ShuffleNamesAction.text=對名稱進行亂序/加密/匿名化/重新排列
action.ToggleHighlightingMarkup.text=切換預期的高亮顯示標記
group.Internal.DevKit.text=DevKit
action.GenerateExternalization.text=生成外部化
action.NewAction.text=操作
action.NewAction.description=創建新操作
group.DevkitNewActions.text=Plugin DevKit
inspection.serializable.constructor.message=非預設構造函數應使用 @PropertyMapping 進行註解

action.TestData.Navigate.text=導航到測試資料
testdata.popup.navigation.title=測試資料
testdata.related.navigation.group=測試資料
testdata.related.navigation.title=測試資料

# UI Form converter

# UpdateFromSources
action.UpdateIdeFromSourcesAction.update.show.settings.text=從原始碼設定更新 IDE…
action.UpdateIdeFromSourcesAction.update.text=從原始碼更新 IDE…
action.UpdateIdeFromSourcesAction.update.description=從當前開啟的原始碼建置 IntelliJ IDEA 的安裝，並用它取代當前的安裝。
action.UpdateIdeFromSourcesAction.task.title=從原始碼更新
action.UpdateIdeFromSourcesAction.task.failed.title=從原始碼更新失敗
action.UpdateIdeFromSourcesAction.task.failed.content=建置腳本完成，錯誤程式碼為 {0}
action.UpdateIdeFromSourcesAction.task.success.title=從原始碼更新
action.UpdateIdeFromSourcesAction.task.success.content=新安裝是從原始碼準備的。是否<a href="#">重啟</a>?
action.UpdateIdeFromSourcesAction.notification.title=從原始碼更新
action.UpdateIdeFromSourcesAction.notification.content=新安裝在{0}處準備。
action.UpdateIdeFromSourcesAction.settings.title=從原始碼更新 IDE
action.UpdateIdeFromSourcesAction.settings.ok.button=更新
action.UpdateIdeFromSourcesAction.settings.do.not.show.description=您可以調用“從源設定更新 IDE”操作來更改設定
action.UpdateIdeFromSourcesAction.settings.row.ide.installation=IDE 安裝:
action.UpdateIdeFromSourcesAction.settings.installation.choose.ide.directory.title=選擇 IDE 安裝目錄
action.UpdateIdeFromSourcesAction.settings.enabled.plugins.only=僅建置已啟用的延伸模組
action.UpdateIdeFromSourcesAction.settings.restart.automatically=自動重啟
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home={0} 不是有效的 IDE 主目錄: {1}
action.UpdateIdeFromSourcesAction.error.config.or.system.directory.under.home=無法更新 {0} 安裝，因為 ''{1}'' 屬性指向\n它下面的目錄，並且在更新過程中將被清除。
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.directory=它不是目錄
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.exists=''{0}'' 不存在
action.UpdateIdeFromSourcesAction.error.ide.cannot.restart=此 IDE 無法自行重啟，因此不支持從原始碼更新
action.UpdateIdeFromSourcesAction.progress.text.new.installation.prepared.ide.will.restart=新安裝已準備，IDE 將在 {0, choice, 1#1 秒|2#{0} 秒}後重啟
action.UpdateIdeFromSourcesAction.button.postpone=推遲
action.UpdateIdeFromSourcesAction.backup.progress.text=正在備份檔案
action.UpdateIdeFromSourcesAction.copy.progress.text=正在將檔案複製到 IDE 分發版…
action.UpdateIdeFromSourcesAction.copy.delete.old.files.text=正在刪除舊檔案
action.UpdateIdeFromSourcesAction.copy.copy.new.files.text=正在複製新檔案
action.UpdateIdeFromSourcesAction.update.progress.text=正在從原始碼更新 IDE…
action.UpdateIdeFromSourcesAction.update.progress.delete=正在刪除 {0}
action.UpdateIdeFromSourcesAction.notification.action.view.output=查看輸出
action.UpdateIdeFromSourcesAction.notification.action.view.debug.log=查看偵錯日誌
action.UpdateIdeFromSourcesAction.dialog.message.directory.not.writable=目錄 {0} 不可寫

inspections.IncorrectParentDisposableInspection.do.not.use.as.disposable=請勿在延伸模組程式碼中將 {0} 用作可處置物件
inspections.IncorrectParentDisposableInspection.documentation.link.title=選擇可處置的父級

extension.point.documentation.link.platform.explorer=在 IntelliJ Platform Explorer 中顯示用法
extension.point.documentation.field.required.suffix=(必填)
extension.point.documentation.field.required.can.be.empty.suffix=(必填，允許為空)
extension.point.documentation.implementation.section=擴展點實作

gutter.related.option.description=描述
gutter.related.option.before.after.templates=在模板前面/後面
gutter.related.option.name=描述/在模板前面|後面
gutter.related.navigation.popup.template.title=選擇模板
gutter.related.navigation.popup.template.tooltip=在模板前面/後面
gutter.related.extension.declaration=宣告
gutter.related.navigation.popup.description.tooltip=描述
gutter.related.navigation.choose.extension=選擇擴展
gutter.related.navigation.choose.extension.point=選擇擴展點

# plugin.xml resolving
plugin.xml.convert.action.or.group.cannot.resolve=無法解析{0} ''{1}''
plugin.xml.convert.action.or.group.invalid.name=<invalid name>
plugin.xml.convert.action.or.group.type.action.or.group=操作或組
plugin.xml.convert.action.or.group.type.action=操作
plugin.xml.convert.action.or.group.type.group=組

plugin.xml.convert.enum.cannot.resolve=無法解析{1}中的 ''{0}''
plugin.xml.convert.extension.order.cannot.resolve=無法解析 '''''{'0'}''''' {0} 擴展
plugin.xml.convert.extension.property.cannot.resolve=無法解析擴展點屬性 ''{0}''
plugin.xml.convert.property.bundle.cannot.resolve=無法解析屬性捆綁包
plugin.xml.convert.keymap.cannot.resolve=無法解析按鍵映射 ''{0}''
plugin.xml.convert.language.id.cannot.resolve=無法解析 ID 為 ''''{0}'''' 的語言
plugin.xml.convert.language.id.any.language.display.name=<any language>

plugin.xml.convert.module.descriptor.name=無法解析模組 ''{1}'' 的源根中的模組描述符 ''{0}''

# code resolving
code.convert.experimental.feature.id.cannot.resolve=無法解析功能 ''{0}''
code.convert.experimental.feature.no.description=無描述
code.convert.registry.key.cannot.resolve=無法解析註冊表鍵 ''{0}''
code.convert.registry.key.no.description=無描述
code.convert.registry.key.no.default.value=無預設值

code.convert.notification.group.cannot.resolve=無法解析通知組 id ''{0}''

message.bundle.convert.toolwindow.id.cannot.resolve=無法解析工具視窗 ID ''{0}''

message.bundle.convert.advanced.setting.id.cannot.resolve=無法解析進階設定 ID ''{0}''



plugin.xml.scopes.display.name=延伸模組描述符檔案
plugin.xml.scopes.production.display.name=所有生產延伸模組描述符檔案

# registry.properties
registry.properties.annotator.plugin.keys.use.ep=特定於延伸模組的鍵應通過 'com.intellij.registryKey' 擴展點進行註冊
registry.properties.annotator.key.no.description.key=鍵 ''{0}'' 沒有描述鍵
registry.properties.annotator.show.ep.family.name=顯示擴展點宣告
registry.properties.annotator.show.ep.name=顯示 ''{0}'' 的擴展點宣告
registry.properties.annotator.show.ep.message=將此宣告複製到您的延伸模組描述符 XML 中
registry.properties.annotator.show.ep.title=擴展點宣告
registry.properties.annotator.add.description.text=添加 ''{0}'' 的描述鍵
registry.properties.annotator.add.description.family.name=添加描述鍵

# DOM model Generator
dom.generator.dialog.title=從 XSD 或 DTD 生成 DOM 模型
dom.generator.generate.button=生成
dom.generator.dialog.label.form.title=DOM 生成器設定
dom.generator.dialog.label.namespace=命名空間:
dom.generator.dialog.label.super.class=超類:
dom.generator.dialog.label.package=軟體套件:
dom.generator.dialog.label.output.directory=輸出目錄:
dom.generator.dialog.label.scheme.file=方案檔案:
dom.generator.dialog.label.skip.schemes=跳過主題:
dom.generator.dialog.label.javadoc.author=@author:
dom.generator.dialog.label.use.fqn=使用 FQN:
dom.generator.dialog.label.use.fqn.tooltip=在生成的程式碼中使用 FQN 以防止名稱衝突
dom.generator.dialog.choose.scheme.label=選擇 XSD 或 DTD 架構
dom.generator.dialog.folder.browser.description=確保 XSD 或 DTD 架構所在的目錄中僅存在必要的架構
dom.generator.dialog.folder.output=選擇生成檔案的輸出目錄
dom.generator.dialog.error.schema.not.exist=架構位置不存在
dom.generator.dialog.error.output.not.exist=輸出目錄不存在
inspections.use.dpi.aware.empty.border.simplify=簡化
inspections.use.dpi.aware.empty.border.family.name=簡化
inspections.use.dpi.aware.empty.border.replace=取代為 JBUI.Borders.empty(...)
inspections.use.dpi.aware.empty.border.convert.fix.family.name=轉換為 JBUI.Borders.empty(...)


plugin.descriptor.chooser.cannot.find=找不到延伸模組描述符
plugin.descriptor.chooser.popup.title=選擇延伸模組描述符

register.extension.fix.name=註冊擴展
register.extension.fix.popup.title=選擇擴展點
register.inspection.fix.family.name=註冊檢查
register.inspection.fix.name=註冊檢查 ''{0}''

inspections.non.default.warning.and.suffix.message={0} 不應具有包含參數 {1} 的構造函數
inspections.non.default.warning.suffix.project.or.module=(如果是在相應級別請求，則專案或模組除外)
inspections.non.default.warning.suffix.project=(專案除外)
inspections.non.default.warning.suffix.module=(模組除外)

extension.point.analyzer.not.extension.point.name=非 ExtensionPointName 引用
extension.point.analyzer.analyze.title=正在分析擴展點用法
extension.point.analyzer.analyze.status.bar.info=正在分析 ''{0}'' (總計: {1})
extension.point.analyzer.analyze.no.usages=未找到任何用法
extension.point.analyzer.analyze.usage.all.safe=所有用法均為動態安全
extension.point.analyzer.analyze.xml.not.extension.point=非 <extensionPoint>
extension.point.analyzer.analyze.xml.cannot.resolve.ep.class=無法解析擴展點的類
extension.point.analyzer.analyze.xml.no.implementation.language.extension.point=找不到 LanguageExtensionPoint 的實作類
extension.point.analyzer.analyze.xml.batch.not.extension.points=非 <extensionPoints>
extension.point.analyzer.analyze.xml.batch.title=正在分析擴展點
extension.point.analyzer.analyze.xml.no.extension.point.name.field=找不到 ExtensionPointName 欄位
extension.point.analyzer.reason.no.ep.field=沒有擴展點字段
extension.point.analyzer.reason.element.of={0} 的元素
extension.point.analyzer.reason.extension.instance=擴展實例
extension.point.analyzer.reason.extension.list=擴展列表
extension.point.analyzer.reason.return.value={0}: 返回 ''{1}'' 的值(類型: {2})
extension.point.analyzer.reason.unknown.usage=ExtensionPoint 的未知用法
extension.point.analyzer.reason.call.not.loop.value=調用不是迴圈的迭代值
extension.point.analyzer.reason.impure.method={0} 傳遞給不純的方法，可能會產生副作用(如果不應這樣，請作為 ''@Contract(pure = true)'' 註解)
extension.point.analyzer.reason.unresolved.method.call=未解析的方法調用
extension.point.analyzer.reason.too.many.visited.objects=存取的物件過多，已停止搜尋
extension.point.analyzer.reason.get.instance.method.skipped=從 'getInstance' 方法返回(對於搜尋調用站點而言代價高昂)
extension.point.analyzer.reason.returned.from.method={0}: 從方法 ''{1}'' 返回
extension.point.analyzer.reason.leak.returned.from.method={0}: 從方法 ''{1}'' 返回，此後泄漏
extension.point.analyzer.reason.unknown.usage.text={0}: 未知用法
extension.point.analyzer.reason.uast.no.source.psi={0}: UVariable 沒有源 PSI
extension.point.analyzer.usage.safe.eps=安全 EP
extension.point.analyzer.usage.unsafe.eps=不安全的擴展點用法

inspection.plugin.xml.validity.display.name=Plugin.xml 有效性
inspection.plugin.xml.dynamic.plugin.display.name=Plugin.xml 動態延伸模組驗證
inspection.inspection.description.not.found.inspection.display.name=檢查描述檢查器
inspection.inspection.using.gray.colors.display.name=使用新的 Color(a,a,a)
inspection.inspection.unique.toolbar.id.display.name=指定工具欄 ID
inspection.intention.description.not.found.inspection.display.name=意圖描述檢查器
inspection.inspection.mapping.consistency.display.name=<inspection> 標記一致性
inspection.undesirable.class.usage.display.name=不需要的類用法
inspection.file.equals.usage.display.name=File.equals() 用法
inspection.unsafe.vfs.recursion.display.name=不安全的 VFS 遞歸
inspection.use.JB.color.display.name=使用 Darcula 感知 JBColor
inspection.use.DPI.aware.insets.display.name=使用 DPI 感知嵌入
inspection.use.DPI.aware.borders.display.name=使用 DPI 感知邊界
inspection.use.couple.display.name=使用 Couple 而不是 Pair
inspection.use.virtual.file.equals.display.name=使用 'VirtualFile#equals(Object)'
inspection.use.plugin.id.equals.display.name=使用 'PluginId#equals(Object)'
inspection.unsafe.return.statement.visitor.display.name=不安全的 return 語句存取者
inspection.stateful.ep.display.name=有狀態擴展
inspection.u.element.as.psi.display.name=UElement 作為 PsiElement 的用法
inspection.use.primitive.types.equals.display.name=將 'PsiType#equals(Object)' 與基元類型結合使用
inspection.highlight.visitor.internal.display.name=好程式碼顯示為紅色
inspection.quick.fix.get.family.name.violation.display.name=QuickFix 的 getFamilyName() 實作不得依賴於特定上下文
inspection.psi.element.concatenation.display.name=使用 PsiElement 字串表示生成新表達式是不正確的
inspection.non.default.constructor.display.name=服務和擴展類的非預設構造函數
inspection.presentation.annotation.display.name=@Presentation 中的圖標路徑無效
inspection.missing.recent.api.display.name=在舊 IDE 中無法使用 IntelliJ API
inspection.serializable.ctor.display.name=可序列化類中的非預設構造函數
inspection.incorrect.parent.disposable.display.name=不正確的 parentDisposable 參數
inspection.missing.accessible.context.display.name=缺少可存取上下文
inspection.message.accessible.context.not.defined.for.jpanel=沒有為 JPanel 定義可存取上下文
gutter.name.test.data.line.marker=測試資料


inspections.non.default.warning.type.service=服務
inspections.non.default.warning.type.extension=擴展
inspections.plugin.xml.dependency.descriptor.cannot.use.depends=除了 <dependencies> 之外，不能使用 <depends>
progress.title.calculate.target.properties.file=正在計算目標屬性檔案
module.builder.title=IDE 延伸模組
module.builder.type=類型:
module.builder.type.theme=主題
module.builder.type.plugin=延伸模組
file.templates=模板
file.templates.new.plugin=新延伸模組
module.builder.how.to.link=如何為基於 IntelliJ 的 IDE 建置延伸模組
module.builder.github.template.link=功能齊全的 GitHub 模板
module.builder.scala.github.template.link=如何使用 Scala 和 SBT 開發延伸模組
inspection.message.field.may.prevent.intention.preview.to.work.properly=Field may prevent intention preview from working properly
inspection.action.is.not.preview.friendly.display.name=Field blocks intention preview
inspections.plugin.xml.deprecated.ep.marked.for.removal=已標記為移除擴展點 ''{0}''
notification.group.devkit.deployment=延伸模組部署已完成
notification.group.testdata=找不到測試資料檔案
action.UpdateIdeFromSourcesAction.update.progress.start.script=正在啟動 {0} 腳本
inspection.message.unnecessary.safe.field.annotation=Unnecessary @SafeFieldForPreview annotation: the field type is considered to be safe already
gutter.related.navigation.choose.listener=選擇偵聽器
gutter.related.navigation.choose.action=選擇一個操作
gutter.related.navigation.choose.action.group=選擇操作組
gutter.related.navigation.choose.component=選擇組件
action.Anonymous.text.choose.color=選擇顏色…