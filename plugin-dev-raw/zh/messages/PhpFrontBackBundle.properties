PhpLanguageFeature.abstract.function.override=從 PHP 7.2 起才允許抽象函式覆寫
PhpLanguageFeature.abstract.private.trait.methods=從 PHP 8.0 起才允許使用 abstract private 特徵方法
PhpLanguageFeature.anonymous.classes=從 PHP 7.0 起才允許使用匿名類別
PhpLanguageFeature.anonymous.readonly.classes=從 PHP 8.3 起才允許使用匿名 'readonly' 類別
PhpLanguageFeature.arbitrary.static.variable.initializers=從 PHP 8.3 起才允許使用表達式和其他任意 static 變數初始設定式
PhpLanguageFeature.argument.unpacking=從 PHP 5.6 起才允許使用實參解包
PhpLanguageFeature.array.dereferencing.not.supported=從 PHP 5.4 起才允許對調用進行陣列解參照
PhpLanguageFeature.arrow.function=從 PHP 7.4 起才允許箭頭函式語法
PhpLanguageFeature.asymmetric.visibility=從 PHP 8.4 起才允許非對稱可見性
PhpLanguageFeature.attribute.override=從 PHP 8.3 起才允許使用 '\#[Override]'
PhpLanguageFeature.attributes=從 PHP 8.0 起才允許使用特性
PhpLanguageFeature.attributes.on.constants=Attributes to target constants are only allowed since PHP 8.5
PhpLanguageFeature.binary.literal.not.supported=從 PHP 5.4 起才允許使用二進制字面量
PhpLanguageFeature.built.in.web.server=內建 Web 伺服器僅自 PHP 5.4 起可用
PhpLanguageFeature.call.time.pass.by.reference.not.supported=調用時通過參照傳遞在 PHP 5.4 中已被移除
PhpLanguageFeature.catch.multiple=從 PHP 7.1 起才允許捕獲多條語句
PhpLanguageFeature.class.constant.visibility=從 PHP 7.1 起才允許類別常數可見性
PhpLanguageFeature.class.member.access.on.instantiation.not.supported=從 PHP 5.4 起才允許對實例化進行類別成員存取
PhpLanguageFeature.class.name.const.not.supported=從 PHP 5.5 起才允許使用類別名常數
PhpLanguageFeature.class.name.literal.on.object=從 PHP 8.0 起才允許在物件上使用 '\:\:class'
PhpLanguageFeature.clone.with.properties='clone' with properties is only allowed since PHP 8.5
PhpLanguageFeature.coalesce.assign=從 PHP 7.4 起才允許使用 '??\='
PhpLanguageFeature.coalesce.operator=從 PHP 7.0 起才允許使用合併運算符
PhpLanguageFeature.constant.scalar.expressions=從 PHP 5.6 起才允許使用常數標量表達式
PhpLanguageFeature.constants.in.traits=從 PHP 8.2 起才允許在特徵中使用常數
PhpLanguageFeature.dynamic.class.constant=從 PHP 8.3 起才允許使用動態類別常數提取
PhpLanguageFeature.empty.any.expression.not.supported=從 PHP 5.5 起才允許在 'empty' 中使用任意表達式
PhpLanguageFeature.enum.classes=從 PHP 8.1 起才允許使用枚舉
PhpLanguageFeature.exception.throw.from.toString=從 PHP 7.4 起才允許從 ''__toString'' 拋出異常，''{0}.__toString'' 可能會拋出異常
PhpLanguageFeature.explicit.octal.literal=自 PHP 8.1 起只允許顯式八進制字面量
PhpLanguageFeature.exponentiation=從 PHP 5.6 起才允許使用求冪
PhpLanguageFeature.final.class.constants=自 PHP 8.1 起只允許使用 'final' 類別常數
PhpLanguageFeature.final.property.promotion=Constructor 'final' property promotion is only allowed since PHP 8.5
PhpLanguageFeature.finally.not.supported=從 PHP 5.5 起才允許使用 'Finally' 子句
PhpLanguageFeature.first.class.callable.syntax=從 PHP 8.1 起才允許一級可調用語法
PhpLanguageFeature.flexible.heredocs=靈活的 heredoc/nowdoc 語法
PhpLanguageFeature.foreach.list.not.supported=從 PHP 5.5 起才允許在 foreach 中使用列表
PhpLanguageFeature.generators.not.supported=從 PHP 5.5 起才允許使用產生器
PhpLanguageFeature.grouped.use=從 PHP 7.0 起才允許分組 use 宣告
PhpLanguageFeature.immediate.dereferencing.not.supported=從 PHP 5.5 起才允許直接解參照
PhpLanguageFeature.intersection.and.union.in.same.type=從 PHP 8.2 起才允許使用混合交叉類型與聯合體類型
PhpLanguageFeature.intersection.types=從 PHP 8.1 起才允許交叉類型
PhpLanguageFeature.iterable.type.hint=從 PHP 7.1 起才允許迭代類型提示
PhpLanguageFeature.keyword.names=在 PHP 7.0 中關鍵字可用作名稱
PhpLanguageFeature.list.assign=從 PHP 7.1 起才允許列表解包中的 []
PhpLanguageFeature.list.keys=從 PHP 7.1 起才允許列表解包中的密鑰
PhpLanguageFeature.literal.in.instanceof=從 PHP 7.3 起才允許將字面量作為第一個動作數
PhpLanguageFeature.literal.in.static.call.not.supported=從 PHP 5.4 起才允許在 static 呼叫中使用字面量
PhpLanguageFeature.match.expression=從 PHP 8.0 起才允許符合表達式
PhpLanguageFeature.mixed.type.hint=從 PHP 8.0 起才允許 'mixed' 類型提示
PhpLanguageFeature.named.arguments=從 PHP 8.0 起才允許使用命名實參
PhpLanguageFeature.namespaced.name.as.single.token=從 PHP 8.0 起才允許關鍵字作為命名空間的一部分
PhpLanguageFeature.negative.numeric.indices=從 PHP 7.1 起才允許負數值索引
PhpLanguageFeature.new.in.init=從 PHP 8.1 起才允許在初始設定式中使用 'new'
PhpLanguageFeature.new.without.parentheses=從 PHP 8.4 起才允許使用不帶括號的 'new'
PhpLanguageFeature.non.capturing.catches=從 PHP 8.0 起才允許捕捉異常而又不將異常捕獲到變數中
PhpLanguageFeature.nullables=從 PHP 7.1 起才允許可為 null
PhpLanguageFeature.nullsafe.dereferencing=從 PHP 8.0 起才允許 Nullsafe 運算符
PhpLanguageFeature.numeric.literals.separators=從 PHP 7.4 起才允許使用數值字面量分隔符
PhpLanguageFeature.object.type.hint=從 PHP 7.2 起才允許物件類型提示
PhpLanguageFeature.parent.in.closure.not.supported=從 PHP 5.4 起才允許在閉包中使用 parent
PhpLanguageFeature.property.hooks=從 PHP 8.4 起才允許使用屬性掛鈎
PhpLanguageFeature.property.promotion=從 PHP 8.0 起才允許建構函式屬性提升
PhpLanguageFeature.readonly.classes=從 PHP 8.2 起才允許使用 'readonly' 類別
PhpLanguageFeature.readonly.properties=從 PHP 8.1 起才允許使用 'readonly' 屬性
PhpLanguageFeature.references.in.list=從 PHP 7.3 起才允許在 [] 和 list() 賦值中使用參照
PhpLanguageFeature.return.never=自 PHP 8.1 起才允許使用返回值類型 'never'
PhpLanguageFeature.return.types=從 PHP 7.0 起才允許使用返回值類型宣告
PhpLanguageFeature.return.void=從 PHP 7.1 起才允許使用返回值類型 'void'
PhpLanguageFeature.scalar.type.hints=從 PHP 7.0 起才允許使用標量類型提示
PhpLanguageFeature.self.in.closure.not.supported=從 PHP 5.4 起才允許在閉包中使用 self
PhpLanguageFeature.short.array.syntax.not.supported=從 PHP 5.4 起才允許使用短陣列語法
PhpLanguageFeature.spaceship.operator=從 PHP 7.0 起才允許使用宇宙飛船運算符
PhpLanguageFeature.spread.operator.in.array=從 PHP 7.4 起才允許在陣列中使用展開運算符
PhpLanguageFeature.standalone.null.false=從 PHP 8.2 起才允許將 'null' 和 'false' 用作獨立類型
PhpLanguageFeature.static.in.closure.not.supported=從 PHP 5.4 起才允許在閉包中使用 static
PhpLanguageFeature.static.type.hint=從 PHP 8.0 起才允許 'static' 返回值類型宣告
PhpLanguageFeature.this.in.closure.not.supported=從 PHP 5.4 起才允許在閉包中使用 $this
PhpLanguageFeature.throw.expression=從 PHP 8.0 起才允許使用 throw 表達式
PhpLanguageFeature.trailing.comma.in.closure.use.list=只有 PHP 8.0 支援在閉包 use 列表中使用尾隨逗號
PhpLanguageFeature.trailing.comma.in.function.calls=從 PHP 7.3 起才允許在函式呼叫中使用尾隨逗號
PhpLanguageFeature.trailing.comma.in.group.uses=從 PHP 7.2 起才允許在組使用列表中使用尾隨逗號
PhpLanguageFeature.trailing.comma.in.parameter.list=從 PHP 8.0 起才允許在參數列表中使用尾隨逗號
PhpLanguageFeature.traits.not.supported=從 PHP 5.4 起才允許使用特徵
PhpLanguageFeature.true.type=從 PHP 8.2 起才允許使用名為 'true' 的類型提示
PhpLanguageFeature.typed.class.constants=從 PHP 8.3 起才允許使用類型化類別常數
PhpLanguageFeature.typed.properties=從 PHP 7.4 起才允許使用類型化屬性
PhpLanguageFeature.uniform.variable.syntax=從 PHP 7.0 起才允許統一變數語法
PhpLanguageFeature.union.types=從 PHP 8.0 起才允許聯合體類型
PhpLanguageFeature.use.function.and.const=從 PHP 5.6 起才允許 use function 和 use const
PhpLanguageFeature.var.break.argument.not.supported=PHP 5.4 不再支援具有非常數動作數的 'break' 運算符
PhpLanguageFeature.var.break.zero.argument.not.supported=自 PHP 5.4 起，'break' 運算符僅接受正數
PhpLanguageFeature.var.continue.not.supported=PHP 5.4 不再支援具有非常數動作數的 'continue' 運算符
PhpLanguageFeature.var.continue.zero.not.supported=自 PHP 5.4 起，'continue' 運算符僅接受正數
PhpLanguageFeature.variadic.functions=從 PHP 5.6 起才允許使用可變函式
PhpLanguageLevel.5.3.0.presentable.name=5.3
PhpLanguageLevel.5.3.0.short.description=命名空間，閉包
PhpLanguageLevel.5.4.0.presentable.name=5.4
PhpLanguageLevel.5.4.0.short.description=特徵，短陣列語法
PhpLanguageLevel.5.5.0.presentable.name=5.5
PhpLanguageLevel.5.5.0.short.description=finally，生成器
PhpLanguageLevel.5.6.0.presentable.name=5.6
PhpLanguageLevel.5.6.0.short.description=可變函式，實參解包
PhpLanguageLevel.7.0.0.presentable.name=7.0
PhpLanguageLevel.7.0.0.short.description=返回值類型，標量類型提示
PhpLanguageLevel.7.1.0.presentable.name=7.1
PhpLanguageLevel.7.1.0.short.description=常數可見性，可為 null，多個異常
PhpLanguageLevel.7.2.0.presentable.name=7.2
PhpLanguageLevel.7.2.0.short.description=物件類型提示，abstract 函式覆寫
PhpLanguageLevel.7.3.0.presentable.name=7.3
PhpLanguageLevel.7.3.0.short.description=列表賦值中的參照，靈活的 heredoc
PhpLanguageLevel.7.4.0.presentable.name=7.4
PhpLanguageLevel.7.4.0.short.description=類型屬性，短閉包，null 合併運算符
PhpLanguageLevel.8.0.0.presentable.name=8.0
PhpLanguageLevel.8.0.0.short.description=聯合體類型，命名實參，特性，match 表達式
PhpLanguageLevel.8.1.0.presentable.name=8.1
PhpLanguageLevel.8.1.0.short.description=枚舉、'never' 返回值類型、交叉類型、'readonly' 屬性
PhpLanguageLevel.8.2.0.presentable.name=8.2
PhpLanguageLevel.8.2.0.short.description='readonly' 類別，'true' 類型，獨立的 'null' 和 'false'
PhpLanguageLevel.8.3.0.presentable.name=8.3
PhpLanguageLevel.8.3.0.short.description=類型化類別常數
PhpLanguageLevel.8.4.0.presentable.name=8.4
PhpLanguageLevel.8.4.0.short.description=不帶圓括號的 'new'、屬性掛鈎、不對稱可見性
PhpLanguageLevel.8.5.0.presentable.name=8.5
PhpLanguageLevel.8.5.0.short.description=
actions.generate.php.doc.is.not.available=PHPDoc 生成在索引更新期間不可用
array.declaration.style=陣列/列表宣告樣式
array.index=陣列索引
checkbox.add.a.comma.after.last.argument.in.function.call=在函式呼叫中的最後一個實參後新增逗號
checkbox.add.a.comma.after.last.element.in.multiline.array=在多行陣列中的最後一個元素之後新增逗號
checkbox.add.a.comma.after.last.match.arm=在最後一個 match arm 後新增一個逗號
checkbox.add.a.comma.after.last.parameter=在參數列表中的最後一個參數後新增逗號
checkbox.add.a.comma.after.last.var.in.closure.use.list=在閉包 use 列表中的最後一個變數後新增逗號
checkbox.align.parameter.property.names=對齊參數/屬性名稱
checkbox.align.tag.comments=對齊標記註釋
checkbox.blank.line.before.the.first.tag=在第一個標記前使用空行
checkbox.blank.lines.around.parameters=在參數周圍使用空行
checkbox.force.short.declaration.style=強制短宣告樣式
checkbox.keep.blank.lines=保留空行
checkbox.sort.phpdoc.tags=對 PHPDoc 標記排序
checkbox.use.as.a.default.template=用作預設模板
checkbox.use.fully.qualified.class.names=使用完全限定類別名
checkbox.wrap.long.lines=長行換行
class.name=類別名
class.reference=類別參照
code.style.option.after='{' 之後\:
code.style.option.after.class.body=類別主體之後\:
code.style.option.after.colon.in.enum.backed.type=在備用枚舉中類型宣告旁邊的冒號後面
code.style.option.after.colon.in.named.argument=命名實參中的冒號之後
code.style.option.after.colon.in.return.type=返回值類型中的冒號之後
code.style.option.after.function=函式之後\:
code.style.option.after.namespace=命名空間之後\:
code.style.option.after.opening.tag=起始標記之後\:
code.style.option.after.unary.not=一元非(\!)之後
code.style.option.after.use.statements=在 'Use' 語句後\:
code.style.option.align.consecutive.assignments=對齊連續賦值
code.style.option.align.constants=對齊常數
code.style.option.align.enum.cases=對齊枚舉 case
code.style.option.align.inline.comments=對齊內聯註釋
code.style.option.align.key.value.pairs=對齊鍵值對
code.style.option.align.properties.in.columns=對齊列中屬性
code.style.option.and=<?\= 和 ?>
code.style.option.anonymous.function.parentheses=匿名函式括號
code.style.option.around.class.constants=類別常數周圍\:
code.style.option.around.enum.cases=枚舉 case 周圍\:
code.style.option.around.property=屬性周圍\:
code.style.option.array.initializer.parentheses=陣列初始設定式圓括號
code.style.option.arrow.function.parentheses=箭頭函式括號
code.style.option.assignment.in.declare.statement=在 declare 語句中賦值
code.style.option.attributes=特性
code.style.option.before.class.body=類別主體之前\:
code.style.option.before.colon.in.enum.backed.type=在備用枚舉中類型宣告旁邊的冒號前面
code.style.option.before.colon.in.named.argument=命名實參中的冒號之前
code.style.option.before.colon.in.return.type=返回值類型中的冒號之前
code.style.option.before.namespace=命名空間之前\:
code.style.option.before.return.statement=在 'return' 語句前\:
code.style.option.before.unary.not=一元非(\!)之前
code.style.option.before.use.statements=在 'Use' 語句前\:
code.style.option.between.and='?' 與 '\:' 之間
code.style.option.between.group.use.statements=在 'Use' 語句組之間\:
code.style.option.brackets.around.variable.expression=使用中括號將變數/表達式括起來
code.style.option.class.field.constant.groups=類別屬性/常數組
code.style.option.concatenation=串聯(.)
code.style.option.for.foreach.statements=for()/foreach() 語句
code.style.option.force.empty.classes.braces.in.one.line=將空類別的大括號放在一行
code.style.option.force.empty.functions.braces.in.one.line=將空函式/方法的大括號放在一行
code.style.option.function.call.parentheses=函式呼叫括號
code.style.option.function.constructor.call.arguments=函式/建構函式呼叫實參
code.style.option.function.declaration.parameters=函式宣告參數
code.style.option.function.declaration.parentheses=函式宣告括號
code.style.option.function.left.brace=函式左大括號
code.style.option.function.return.type=函式返回值類型
code.style.option.group.use=將 'use' 分組
code.style.option.here.now.doc=heredoc 和 nowdoc
code.style.option.in.anonymous.class.declaration=在匿名類別宣告中
code.style.option.in.closure.declaration=在閉包宣告中
code.style.option.in.function.declaration=在函式宣告中
code.style.option.in.namespace=在命名空間中
code.style.option.keep.and.on.one.line=將 ')' 和 '{' 保持在同一行
code.style.option.match.expression='match' 表達式
code.style.option.match.expression.align.match.arm.bodies=對齊 'match' arm 主體
code.style.option.multiline.arrays.lambdas=將多行陣列/匿名函式視為多行實參
code.style.option.multiplicative.operators=乘法運算符(*, /, %, **)
code.style.option.new.line.after=在第一個元素後換行
code.style.option.new.line.after.php.tag=在 '<?php' 標記後換行
code.style.option.null.coalescing.operator=null 合併運算符(??)
code.style.option.object.access.operator=物件存取運算符(->)
code.style.option.parameter.attributes=參數特性
code.style.option.php.opening.tag=PHP 起始標記
code.style.option.place.braces.for.constructor.always=始終
code.style.option.place.braces.for.constructor.as.is=保留原樣
code.style.option.place.braces.for.constructor.never=從不
code.style.option.place.first.call.on.new.line=多行時將第一個呼叫放在新行中
code.style.option.place.for.constructor=放置建構函式的 '()'
code.style.option.place.lambda.on.new.line=在多行閉包中將 '\=>' 放在新行中
code.style.option.place.on.new.line=將 ';' 置於新行中
code.style.option.place.on.new.line2=在最後一個元素後換行
code.style.option.relational.operators=關係運算符(<、>、<\=、>\=、<\=>)
code.style.option.return.type.on.new.line=返回值類型位於新行中
code.style.option.shift.operators=移位運算符(<<,>>)
code.style.option.short.closure=短閉包
code.style.option.space.around.pipe.in.union.types=聯合體類型的 | 周圍
code.style.option.unary.additive.operators=一元加法運算符(+,-,++,--)
code.style.place.here.now.doc.on.the.same.line=與變數宣告放在同一行
color.settings.alias.primitive.type.hint=關鍵字//基元類型提示
color.settings.alias.reference=關鍵字//別名參照
color.settings.attributes=特性
color.settings.bad_character=未知字元
color.settings.braces=大括號和運算符//大括號
color.settings.brackets=大括號和運算符//中括號
color.settings.class=類別和屬性//類別
color.settings.comma=大括號和運算符//逗號
color.settings.comment=註釋
color.settings.concatenation=字串//串聯
color.settings.constant=關鍵字//常數
color.settings.doc.identifier=PHPDoc//關鍵字
color.settings.doc.method.identifier=PHPDoc//方法宣告
color.settings.doc.parameter=PHPDoc//參數
color.settings.doc.property.identifier=PHPDoc//屬性
color.settings.doc.template.type=PHPDoc//模板類型
color.settings.doc.var=PHPDoc//變數
color.settings.doccomment=PHPDoc//文本
color.settings.docmarkup=PHPDoc//標記
color.settings.doctag=PHPDoc//標記
color.settings.dql.builder.expr=DQL 建置器//表達式
color.settings.dql.builder.placeholder=DQL 建置器//佔位符
color.settings.escape_sequence=字串//轉義序列
color.settings.exec_command=Shell 指令
color.settings.function=函式和方法//宣告
color.settings.function.call=函式和方法//函式呼叫
color.settings.goto.label=關鍵字//轉到標籤
color.settings.heredoc_content=Heredoc//Heredoc 內容
color.settings.heredoc_id=Heredoc//Heredoc ID
color.settings.identifier=關鍵字//預設
color.settings.instance.field=類別和屬性//實例屬性
color.settings.instance.method=函式和方法//實例方法呼叫
color.settings.instance.private.field=類別和屬性//private 實例屬性
color.settings.instance.private.method=函式和方法//private 實例方法呼叫
color.settings.instance.protected.field=類別和屬性//protected 實例屬性
color.settings.instance.protected.method=函式和方法//protected 實例方法呼叫
color.settings.interface=類別和屬性//接口
color.settings.keyword=關鍵字
color.settings.magic.member=關鍵字//魔術成員存取
color.settings.name=PHP
color.settings.named.arguments=命名實參
color.settings.number=數字
color.settings.operation=大括號和運算符//運算符
color.settings.parameter=函式和方法//參數
color.settings.parentheses=大括號和運算符//圓括號
color.settings.php.scripting=PHP 程式碼//背景
color.settings.php.tags=PHP 程式碼//標記
color.settings.predefined.symbols=關鍵字//預定義符號
color.settings.semicolon=大括號和運算符//分號
color.settings.static.field=類別和屬性//static 屬性
color.settings.static.method=函式和方法//static 方法呼叫
color.settings.string=字串//字元
color.settings.this.var=關鍵字//'$this' 變數
color.settings.var=關鍵字//變數
color.settings.var_var=關鍵字//可變變數
default.value=預設值
enable=啟用
exception.class=異常類別
expected.class.reference=應為\: 類別參照
expected.expression=應為\: 表達式
expected.property=屬性
expression1=表達式
extends=擴展
extends.or.implements=擴展或實作
field.name=欄位名稱
fields.default.visibility.panel=屬性預設可見性
fields.default.visibility.private=private
fields.default.visibility.protected=protected
fields.default.visibility.public=public
filetype.php.description=PHP
getters.setters.getters.first=getter 優先
getters.setters.naming.style=命名樣式\:
getters.setters.order=Getter/Setter 順序\:
getters.setters.setters.first=setter 優先
getters.setters.style=Getter/Setter 樣式
identifier=關鍵字
initializer=初始設定式
interface.name=接口名稱
label.align.named.arguments=對齊命名實參
label1=標籤
line.separator=行分隔符
modifier=修飾符
no.type=NO_TYPE
object.property=物件屬性
parser.expected=應為\: {0}
parser.unexpected=意外\: {0}
parsing.error.at.expected=應為 '@'
parsing.error.expression.not.assignable=表達式不可賦值
parsing.error.method.label.expected=應為方法標籤
parsing.error.not.allowed=不允許使用 ''{0}''
parsing.error.statement.expected=應為語句
parsing.error.unexpected.token=意外的標記\: {0}
php.annotator.heredoc.indent.validation.mixed.space.and.tab.characters=結束關鍵字縮排中混用了空格和制表符字元
php.annotator.heredoc.indent.validation.wrong.content.indent=縮排錯誤\:應與結束標記縮排相同
php.code.style.convert.keyword.to.lowercase=將關鍵字轉換為小寫
php.code.style.convert.lower.case=小寫
php.code.style.convert.upper.case=大寫
php.code.style.sort.alphabetically=按字母順序
php.code.style.sort.by.length=按長度
php.code.style.sort.use.stmt=對 'use' 語句排序\:
php.conversion.code.style.title=程式碼轉換
php.generation.code.style.title=程式碼生成
php.smart.indent.codestyle.indent.in.php=縮排 PHP 標記中的程式碼
phpdoc.code.style.convert.else.if.combine=elseif
phpdoc.code.style.convert.else.if.separate=else if
phpdoc.code.style.convert.else.if.to=將 else if/elseif 轉換為\:
phpdoc.code.style.convert.null.to=將 Null 常數轉換為\:
phpdoc.code.style.convert.true.false.to=將 True/False 常數轉換為\:
phpdoc.code.style.force.null.position=將 'null' 置於以下類型中\:
phpdoc.code.style.generated.doc.blocks=生成的 PHPDoc 標記
phpdoc.code.style.in.beginning.position=在開頭
phpdoc.code.style.in.end.position=在結尾
phpdoc.code.style.param.spaces.between.name.and.description=在名稱與描述之間\:
phpdoc.code.style.param.spaces.between.tag.and.type=在標記與類型之間\:
phpdoc.code.style.param.spaces.between.type.and.name=在類型與名稱之間\:
phpdoc.code.style.param.spaces.panel=PHPDoc '@param' 空間
phpdoc.code.style.sort.doc.blocks=PHPDoc 標記順序
phpdoc.code.style.title=PHPDoc
property.or.function=屬性或函式
radio.button.always.add.comma=始終
radio.button.when.multiline.add.coma=當多行時
return.type=返回值類型
show.settings=顯示設定
static.value=static 值
type=類型
variable.naming.style.camel.case=駝峰式命名法
variable.naming.style.mixed=混合
variable.naming.style.panel=變數命名樣式
variable.naming.style.snake.case=snake_case
variable1=變數
