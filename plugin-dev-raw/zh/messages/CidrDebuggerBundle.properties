debug.breakpoint.line=行中斷點
debug.breakpoint.line.unresolved.hint=中斷點當前不會被命中。沒有可執行程式碼與此行相關聯。

debug.command.error.timedOut=指令超時
debug.command.error.notSuspended=僅當目標掛起時才能執行指令
debug.command.error.inPrompt=在提示模式下無法執行指令
debug.command.error.evaluationTimedOut=評估掛起: {0}\n\
 這可能是死鎖或無限迴圈等情況所致。\n\
 為了防止在計算變數時發生這種情況，請將 ''{1}'' 切換為<a href="off">關</a>。
debug.command.error.cannotAddModulesSearchPaths=無法添加模組搜尋路徑

debug.assign.error.cannotAssignExpression=無法將表達式 ''{0}'' 分配至 ''{1}''

debug.settings.variables.separator=變數
debug.settings.enableValueRenderers.action=啟用值呈現器
debug.settings.enableValueRenderers.checkbox=啟用值呈現器:
debug.settings.enableValuesFilter.checkbox=隱藏範圍外的變數
debug.settings.enableValuesFilter.checkbox.hint=在當前範圍內未初始化或不可用的變數將不會顯示
debug.settings.enableCocoaRenderers.checkbox=Cocoa 呈現器
debug.settings.enableCoreDataRenderers.checkbox=核心資料呈現器
debug.settings.enableGNUSTLRenderers.checkbox=啟用 GNU C++ 庫呈現器
debug.settings.enableGNUSTLRenderers.checkbox.description=更改此選項將影響下一個偵錯會話
debug.settings.enableHexNumberFormatting.checkbox=將整數顯示為十六進制值
debug.settings.enableHexNumberFormatting.asSecondary.checkbox=與原始值一起顯示
debug.settings.enableHexNumberFormatting.asSecondary.checkbox.hint=同時顯示原始和十六進制數字格式
debug.settings.enableLLDBNatvisRenderers.checkbox=為 LLDB 啟用 NatVis 呈現器
debug.settings.enableLLDBNatvisRenderers.checkbox.description=更改此選項將影響下一個偵錯會話
debug.settings.enableLLDBNatvisRenderers.diagnostics=診斷:

debugger.variables.loadMutedValue.link=載入
debugger.variables.showRawStringValue.link=檢視

debugger.attachedTo=偵錯器已附加到行程 {0,number,#}
debugger.detached=偵錯器已分離
debugger.connectedTo=偵錯器已連接至 {0}
debugger.disconnected=偵錯器已斷開連接

build.configuration.destination.ios.device=iOS 裝置
build.configuration.destination.tvos.device=tvOS 裝置
device.startingApplication.startingDebug=正在啟動偵錯…
debug.lldb.lockedDeviceWaiting=正在等待裝置解鎖…
debug.lldb.lockedDeviceUserMessage={0} 無法在裝置上啟動應用程式，因為該裝置當前已被密碼鎖定。\n\
 請解鎖裝置。
debug.driver.cannotCreatePipe=無法設定行程通信: {0}
debug.driver.cannotReadInputFile=無法開啟輸入檔案: {0}
debug.gdb.error.duringStartupProgramTerminatedOnSierra={0}\n\
\n\
從版本 10.12 開始，由於系統完整性保護，macOS 在執行 GDB 時存在已知問題。
debug.gdb.error.changeSettingsToLLDB=請在<a href="settings">偏好設定</a>中將偵錯器切換到 LLDB。
debug.console.completions.tooManyCompletions=補全過多(僅顯示了 {0} 個補全)
debug.console.action.jumpToDebuggerConsole.jumpTo0=跳轉到 {0} 主控台
debug.console.action.jumpToDebuggerConsole=跳轉到 GDB/LLDB 主控台

debug.memory.view.name.pattern={0} ({1})
debug.memory.view.tooltip.pattern=''{0}'' 的 {1}
debug.memory.view.panel.address.label=轉到:
debug.memory.view.panel.error.evaluationNotAvailableWhileRunning=評估在程序執行時不可用
debug.memory.view.panel.error.evaluationNotAvailableInSelectedFrame=評估在所選框架中不可用
debug.memory.view.panel.error.evaluationError=評估錯誤: {0}
debug.memory.view.panel.error.notAPointer=不是指針
debug.memory.view.panel.hint.takeAddress=提取地址: {0}
debug.memory.addess.copy.address=複製地址
debug.memory.view.modify.not.supported=不支持修改 {0}
debug.address.breakpoints=地址中斷點
debug.address.breakpoint={0}
debug.address.breakpoint.invalid=地址中斷點無效
debug.exception.breakpoint.whenCaught.checkbox=捕獲時
debug.exception.breakpoint.whenThrown.checkbox=拋出時
debug.exception.breakpoint.when.summary.caught.label={0} 捕獲時
debug.exception.breakpoint.when.summary.thrown.label={0} 拋出時
debug.exception.breakpoint.when.summary.thrownAndCaught.label={0} 拋出時；{1} 被捕獲
debug.symbolic.breakpoint.moduleName.label=模組名稱
debug.symbolic.breakpoint.symbolName.label=符號名稱
debug.symbolic.breakpoint.emptySymbolName.title=<Empty>
debug.symbolic.breakpoint.moduleAndSymbol.title={0}: {1}
debug.watchpoint.properties.accessType=存取類型:
debug.watchpoint.properties.error.label=錯誤
debug.watchpoint.properties.lifeTime=有效時長:
debug.evaluating.expression=正在評估表達式資訊…
debug.evaluating.expression.cancel=已取消表達式資訊
debug.evaluating.expression.cancel.tooltip=取消表達式資訊
debug.exception.breakpoints=異常中斷點
debug.exception.breakpoint.invalid=異常中斷點無效
debug.exception.breakpoint=異常中斷點
debug.current.trace=執行緒: {0}\n\
跟踪: {1}
debug.result.already.cancelled=結果已被取消。\n\
當前執行緒: {0}\n\
{1}
debug.result.already.set.exceptionally=結果已被異常設定。\n\
異常: {0}\n\
{1}\n\
當前執行緒: {2}\n\
{3}
debug.memory.view.process=內存檢視
debug.signal.suspension.cause=信號
debug.signal.exception.cause=異常
debug.symbolic.breakpoint.module.placeholder=所有模組
debug.symbolic.breakpoints=符號中斷點
debug.symbolic.breakpoint.invalid=中斷點無效
debug.popup.error.crashed=偵錯器行程已結束，退出程式碼為 {0}。
debug.popup.rerun=重新執行 ''{0}''
debug.jumpToLine.text=將執行點設定到游標
debug.jumpToLine.tooltip=拖放箭頭以設定執行點
debug.jumpToLine.warning=此操作會將下一條語句設定為另一個函數\n\
並有可能破壞進一步執行。\n\
是否確定?
debug.computing.source.position=正在計算源位置
debug.watchpoints=觀察點
debug.watchpoint.obsolete=觀察點過時，請移除
debug.watchpoint.displayText.valueName.valueAccessType=%s (存取類型: "%s")
debug.watchpoint.displayText.valueName.valueAccessType.valueLifetime=%s (存取類型: "%s"，有效時長: "%s")

filetype.disasm.description=二進制圖片反匯編
filetype.hex.dump.description=內存轉儲
goto.address.evaluate.view.button=查看
goto.address.evaluation.option=評估選項

action.CIDR.Debugger.LLDBFrontendDebugMode.text=為 LLDBFrontend 啟用偵錯模式
action.CIDR.Debugger.LLDBFrontendDebugMode.description=LLDBFrontend 將等待偵錯器附加
group.CIDR.Debugger.InternalActions.text=CIDR 原生偵錯器
action.CIDR.Debugger.ShowMemoryViewInEditor.text=在編輯器中顯示記憶體檢視
action.CIDR.Debugger.AddWatchPoint.text=添加觀察點
action.CIDR.Debugger.JumpToDebuggerConsole.text=跳轉到偵錯器主控台
action.CIDR.Debugger.ShowInMemoryView.text=在內存檢視中顯示
action.CIDR.Debugger.CopyAddress.text=複製地址
error.cannot.create.editor.for=無法為下列物件創建編輯器: {0}
error.execution.interrupted=執行中斷
action.show.addresses.text=顯示地址
dialog.message.execution.exception=執行異常
filetype.native.visualisations.description=原生可視化
filetype.native.visualisations.display.name=原生可視化

debug.editor.notification.force.mapping=找不到當前幀的檔案 ''{0}'' 或其內容與編譯的內容不同。您可以手動指定此檔案。
debug.editor.notification.force.mapping.select.file=選擇檔案…
debug.force.file.mapping.title=強制檔案映射?
debug.force.file.mapping.invalid.hash=所選檔案的校驗和與偵錯資訊中的校驗和不同。是否仍要使用所選檔案?
debug.force.file.mapping.invalid.name=所選檔案的名稱(''{0}'')與偵錯資訊中的名稱(''{1}'')不同。是否仍要使用所選的檔案?
debug.breakpoint.line.is.relaxed.match=僅使用文件名
debug.editor.notification.force.mapping.exists=當前幀檔案 ''{0}'' 的內容與編譯的內容不同。
debug.editor.notification.force.mapping.use.it.anyway=仍要使用
stack.frame.label.inlined=[內聯]
progress.title.downloading.symbols=正在下載符號…
tab.display.name.parallel.stacks=並行堆疊
debug.command.error.checkPermissionsMessage=附加偵錯器失敗，請檢查權限 - https://www.jetbrains.com/help/clion/attaching-to-local-process.html
debug.settings.name.objective.c=Objective-C
debug.settings.name.c.cpp=C/C++
debug.settings.frames.separator=幀
debug.settings.showFrameModule.checkbox=顯示模組名稱
action.CIDR.Debugger.ShowFrameModuleName.text=顯示模組名稱
group.CIDR.Debugger.FramePresentation.Popup.text=幀裝飾
debug.frames.unknownFunction=<unknown>
action.CIDR.Debugger.DisableFilteringValues.text=隱藏範圍外的變數
action.CIDR.Debugger.MuteVariables.text=禁止變數
action.CIDR.Debugger.EnableHexFormatting.text=將整數顯示為十六進制值
action.CIDR.Debugger.ViewAsArray.text=作為陣列查看…
debugger.variables.viewAsArray.enterSize.prompt=<輸入大小>
debugger.variables.viewAsArray.enterSize.error=未提供大小
action.CIDR.Debugger.ShowTypes.text=顯示類型
debug.settings.showTypeTemplateArguments.checkbox=顯示類型中的模板實參
debug.settings.showFrameFunctionParameterTypes.checkbox=顯示參數類型
debug.settings.showFrameFunctionTemplateArguments.checkbox=顯示函數中的模板實參
debug.settings.cxxTypes.separator=C++ 類型(幀和變數)
debug.settings.stripCxxStdAbiVersionNamespace.checkbox=剝離輔助命名空間
debug.settings.stripCxxStdAbiVersionNamespace.checkbox.description=移除全域和函數範圍說明符以及標準 ABI 版本命名空間
debug.settings.sugarizeCxxStlTypes.checkbox=簡化 STL 類型
debug.settings.sugarizeCxxStlTypes.checkbox.description=將標準庫類型取代為可讀性更強的別名
action.CIDR.Debugger.ShowFrameFunctionParameterTypes.text=顯示參數類型
action.CIDR.Debugger.ShowFrameFunctionTemplateArguments.text=顯示模板實參
group.CIDR.Debugger.ValueGroup.DataViewSettings.Popup.text=自訂示範
action.CIDR.Debugger.ShowTypeTemplateArguments.text=顯示模板實參
action.CIDR.Debugger.StripAuxiliaryNamespaces.text=剝離輔助命名空間
action.CIDR.Debugger.SugarizeCxxStlTypes.text=簡化 C++ STL 類型
debug.exception.breakpoint.when.any.label=任意
debug.exception.breakpoint.when.objc.label=Objective-C
debug.exception.breakpoint.when.swift.label=Swift
debug.exception.breakpoint.when.kn.label=Kotlin/Native
debug.exception.breakpoint.when.any.fragment=任意
debug.exception.breakpoint.when.objc.fragment=Objective-C
debug.exception.breakpoint.when.swift.fragment=Swift
debug.exception.breakpoint.when.kn.fragment=Kotlin/Native