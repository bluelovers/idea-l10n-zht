### META-INF/codeInsight.xml
no.tailrec.annotation.title=無尾遞歸註解
group.general=一般

### org/jetbrains/plugins/scala/codeInsight/generation/actions/ScalaGenerateCompanionObjectAction.scala
generate.companion.object.action.text=伴生物件
generate.companion.object.action.description=生成伴生物件

### org/jetbrains/plugins/scala/codeInsight/generation/actions/ScalaGenerateEqualsAction.scala
generate.equals.and.hashcode.methods.action.text=equals() 和 hashCode()
generate.equals.and.hashcode.methods.action.description=生成 equals() 和 hashCode() 方法
no.fields.to.include.in.equals.hashcode.have.been.found=未找到要包含在 equals/hashCode 中的欄位

### org/jetbrains/plugins/scala/codeInsight/generation/actions/ScalaGeneratePropertyAction.scala
generate.proprty.action.text=屬性(getter 和 setter)
generate.proprty.action.description=生成屬性

### org/jetbrains/plugins/scala/codeInsight/generation/actions/ScalaGenerateToStringAction.scala
generate.tostring.method.action.text=toString()
generate.tostring.method.action.description=生成 toString() 方法

### org/jetbrains/plugins/scala/codeInsight/generation/ui/ScalaGenerateToStringWizard.scala
generate.ui.toString.title=生成 toString
generate.ui.toString.properties=從中生成 toString 的屬性
generate.ui.toString.withNames=包含屬性名稱(&P)

### org/jetbrains/plugins/scala/codeInsight/hints/GeneralSettingsPanel.form
inlay.hints.respect.vertical.alignment=遵循垂直對齊
inlay.hints.limit.hint.length.to=將提示長度限制為
inlay.hints.characters=個字符

### org/jetbrains/plugins/scala/codeInsight/hints/ScalaGeneralTypeHintsSettingsModel.scala
show.types.even.if.they.are.obvious=即使類型顯而易見也顯示類型
general.settings=一般設定

### org/jetbrains/plugins/scala/codeInsight/hints/ScalaInlayParameterHintsProvider.scala
inlay.hints.show.parameter.hints=顯示參數提示
inlay.hints.even.for.code.apply.code.and.code.update.code.methods=即使對於 <code>{0}</code> 和 <code>{1}</code> 方法也是如此
inlay.hints.even.for.non.literal.expressions=即使對於非文字表達式也是如此

### org/jetbrains/plugins/scala/codeInsight/hints/ScalaTypeHintsConfigurable.scala
method.chain.hints.action.text=方法鏈提示
method.chain.hints.action.description=切換方法鏈提示
type.hints.action.text=類型提示
type.hints.action.description=切換類型提示
configure.type.hints.text=設定…
configure.type.hints.description=設定類型提示

### org/jetbrains/plugins/scala/codeInsight/hints/ScalaTypeHintsSettingsModel.scala
member.variables=成員變數
method.results=方法結果
local.variables=局部變數
show.type.hints.for=顯示類型提示:
type.hints=類型提示

### org/jetbrains/plugins/scala/codeInsight/hints/TypeMismatchHintsSettingsModel.scala
link.label.more.info=更多資訊
show.type.mismatch.hints=顯示類型不符合提示
type.mismatch.hints=類型不符合提示
instead.of.underlining.the.code=而不是為程式碼添加下劃線

### org/jetbrains/plugins/scala/codeInsight/hints/methodChains/ScalaMethodChainInlayHintsSettingsModel.scala
in.a.separate.column=在單獨一列中
show.method.chain.hints=顯示方法鏈提示
method.chain.hints=方法鏈提示

### org/jetbrains/plugins/scala/codeInsight/hints/methodChains/ScalaMethodChainInlaySettingsPanel.form
inlay.hints.only.when.there.are.at.least=僅當至少存在
inlay.hints.unique.types=種獨一無二的類型時

### org/jetbrains/plugins/scala/codeInsight/implicits/ExpandImplicitHintsAction.scala
expand.implicit.hints.action.text=展開隱式提示
expand.implicit.hints.action.description=在編輯器中展開隱式轉換/參數嵌入提示

### org/jetbrains/plugins/scala/codeInsight/implicits/ImplicitHintsPass.scala
implicit.is.diverged=隱式分叉
can.t.infer.proper.types.for.type.parameters=無法推斷類型參數的正確類型
no.implicits.found.for.parameter=找不到參數 {0} 的隱式項
no.implicits.found.for.parameters=找不到參數 {0} 的隱式項
ambiguous.implicits.for.parameter=參數 {0} 的模糊隱式項

### org/jetbrains/plugins/scala/codeInsight/implicits/ShowImplicitHintsAction.scala
show.implicit.hints.action.text=顯示隱式提示
show.implicit.hints.action.description=在編輯器中將隱式轉換/實參顯示為嵌入提示

### org/jetbrains/plugins/scala/codeInsight/implicits/menu/ImplicitArgumentsPopup.scala
implicit.arguments.popup.action.text=隱式實參彈出視窗
implicit.arguments.popup.action.description=隱式實參彈出視窗

### org/jetbrains/plugins/scala/codeInsight/implicits/menu/MakeConversionExplicit.scala
make.conversion.explicit.action.text=將轉換設為顯式
make.conversion.explicit.action.description=將轉換設為顯式

### org/jetbrains/plugins/scala/codeInsight/implicits/menu/RemoveExplicitArguments.scala
remove.explicit.arguments.action.text=移除顯式實參
remove.explicit.arguments.action.description=移除顯式實參

### org/jetbrains/plugins/scala/codeInsight/intention/argument/AddNameToArgumentIntention.scala
family.name.use.named.arguments=使用命名實參
use.named.arguments.for.current.and.subsequent.arguments=對當前和後續的實參使用命名實參

### org/jetbrains/plugins/scala/codeInsight/intention/argument/ArgumentToBlockExpressionIntention.scala
family.name.convert.to.block.expression=轉換為塊表達式

### org/jetbrains/plugins/scala/codeInsight/intention/argument/BlockExpressionToArgumentIntention.scala
family.name.convert.to.argument.in.parentheses=轉換為圓括號中的實參

### org/jetbrains/plugins/scala/codeInsight/intention/argument/PermuteArgumentsIntention.scala
family.name.permute.arguments=重新排列實參
permute.arguments.to.match.the.parameter.declaration.order=重新排列實參以符合參數宣告順序

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/DeMorganLawIntention.scala
family.name.demorgan.law=套用德摩根定律
replace.refname.with.replacement=將 ''{0}'' 取代為 ''{1}''

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/ExpandBooleanIntention.scala
expand.boolean.use.to.ifelse=將布爾使用擴展為 'if else'
family.name.expand.boolean=擴展布爾

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/FlipComparisonInInfixExprIntention.scala
family.name.flip.comparison.in.infix.expression=翻轉中綴表達式中的比較
flip.operation=翻轉 ''{0}''
flip.operation.to.inverse=將 ''{0}'' 翻轉為 ''{1}''

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/FlipComparisonInMethodCallExprIntention.scala
family.name.flip.comparison.in.method.call.expression=翻轉方法調用表達式中的比較

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/NegateComparisonIntention.scala
family.name.negate.comparison=求反比較
negate.operation.to.inverse=將 ''{0}'' 求反為 ''{1}''

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/ReplaceEqualsOrEqualityInInfixExprIntention.scala
family.name.replace.equals.or.equality.in.infix.expression=取代中綴表達式中的等號或等式

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/ReplaceEqualsOrEqualityInMethodCallExprIntention.scala
family.name.replace.equals.or.equality.in.method.call.expression=取代方法調用表達式中的等號或等式
replace.operator.with.replacement=將 ''{0}'' 取代為 ''{1}''

### org/jetbrains/plugins/scala/codeInsight/intention/booleans/SimplifyBooleanExprWithLiteralIntention.scala
family.name.simplify.boolean.expression.with.a.literal=簡化布爾表達式
simplify.boolean.expression=簡化布爾表達式

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/InvertIfConditionIntention.scala
family.name.invert.if.condition=反轉 If 條件

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/MergeElseIfIntention.scala
family.name.merge.else.if=合併 Else If
merge.elseif=合併 'else if'

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/MergeIfToAndIntention.scala
family.name.merge.nested.ifs.to.anded.condition=合併嵌套的 'if' 語句
merge.nested.ifs=合併嵌套的 'if'

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/MergeIfToOrIntention.scala
family.name.merge.equivalent.ifs.to.ored.condition=合併連續的 'if' 語句
merge.sequential.ifs=合併順序 'if'

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/RemoveRedundantElseIntention.scala
family.name.remove.redundant.else=移除冗餘的 else
remove.redundant.else=移除冗餘的 'else'

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/ReplaceDoWhileWithWhileIntention.scala
family.name.replace.do.while.with.while=將 do while 取代為 while
this.action.will.cause.name.conflict=此操作將導致名稱衝突。

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/ReplaceWhileWithDoWhileIntention.scala
family.name.replace.while.with.do.while=將 while 取代為 do while

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/SplitElseIfIntention.scala
family.name.split.else.if=拆分 else if
split.elseif=拆分 'else if'

### org/jetbrains/plugins/scala/codeInsight/intention/controlFlow/SplitIfIntention.scala
family.name.split.if=拆分 if
split.into.2.if.s=拆分為 2 個 'if'

### org/jetbrains/plugins/scala/codeInsight/intention/declarations/ChangeAccessModifierIntention.scala
change.access.modifier.intention=更改存取修飾符
change.access.modifier.intention.family=更改存取修飾符
make.0.1=將 ''{0}'' 設為{1}
detecting.possible.conflicts=正在檢測可能的衝突
0.with.1.visibility.is.not.accessible.from.2=可見性為 {1} 的{0}無法從{2}存取
title.change.modifier=更改修飾符

### org/jetbrains/plugins/scala/codeInsight/intention/recursion/AddTailRecursionAnnotationIntention.scala
no.tailrec.annotation.fix=添加 @tailrec 註解
family.name.recursion=添加 @tailrec 註解

### org/jetbrains/plugins/scala/codeInsight/intention/stringLiteral/AddReplaceSlashRToMLStringIntention.scala
family.name.add.replace.call=添加 .replace("\\r","")
add.replace.call=添加 'replace("\\r", "")'

### org/jetbrains/plugins/scala/codeInsight/intention/stringLiteral/AddStripMarginToMLStringIntention.scala
family.name.add.stripmargin=添加 .stripMargin
add.stripmargin=添加 'stripMargin'

### org/jetbrains/plugins/scala/codeInsight/intention/stringLiteral/FormatConversionIntention.scala
convert.to.string.concatenation=轉換為字串串聯
convert.to.interpolated.string=轉換為插值字串
convert.to.formatted.string=轉換為格式化字串

### org/jetbrains/plugins/scala/codeInsight/intention/stringLiteral/InsertGapIntoStringIntention.scala
family.name.insert.gap=插入間隙
insert.gap.with.concatenation=使用串聯插入間隙: (" +  + ")

### org/jetbrains/plugins/scala/codeInsight/intention/stringLiteral/StringToMultilineStringIntention.scala
family.name.regular.multi.line.string.conversion=在一般/多行字串之間轉換
convert.to.normal.string=轉換為 "string"
convert.to.multiline.string=轉換為 """string"""

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaBlankLineContextType.scala
element.context.type.blank.line=空行

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaCodeContextType.scala
element.context.type.code=程式碼

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaCommentContextType.scala
element.context.type.comment=註釋

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaImplicitValueClassContextType.scala
element.context.type.implicit.value.class=隱式值類

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaStringContextType.scala
element.context.type.string=字串

### org/jetbrains/plugins/scala/codeInsight/template/impl/ScalaXmlContextType.scala
element.context.type.xml=XML

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaAnnotatedMacro.scala
macro.annotated=annotated("annotation qname")

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaCompanionClassMacro.scala
macro.companion.class=companionClass

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaImplicitValueClassNameMacro.scala
macro.implicit.value.class.name=implicitValueClassName(TYPE_TEXT)

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaMethodReturnTypeMacro.scala
macro.method.returnType=methodReturnType()

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaPrimaryConstructorMacro.scala
macro.primaryConstructor.param.names=primaryConstructorParamNames
macro.primaryConstructor.param.types=primaryConstructorParamTypes
macro.primaryConstructor.param.instances=primaryConstructorParams

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaSubtypesMacro.scala
macro.subtypes=subtypes(TYPE)

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaSuggestVariableNameByTypeMacro.scala
macro.suggest.variable.name.by.type=suggestVariableNameByTypeText(TYPE_TEXT)

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaTypeOfVariableMacro.scala
macro.type.of.variable=typeOfVariable

### org/jetbrains/plugins/scala/codeInsight/template/macros/ScalaTypeParametersMacro.scala
marco.typeParameters=typeParams(CLASS)
marco.typeParameters.without.bounds=typeParamsWithoutBounds(CLASS)
