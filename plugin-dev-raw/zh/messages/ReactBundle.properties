action.ReactClassToFunctionComponentAction.description=轉換為函式組件
action.ReactClassToFunctionComponentAction.text=轉換為函式組件
action.ReactExtractComponentAction.description=提取組件
action.ReactExtractComponentAction.text=提取組件…
action.ReactFunctionToClassComponentAction.description=轉換為類別組件
action.ReactFunctionToClassComponentAction.text=轉換為類別組件
create.react.app.description=<a href\="https\://github.com/facebookincubator/create-react-app">建立 React 套用</a>是官方支援的一種建立單頁 React 套用程序的新方法。它提供了沒有組態的現代建置設定。
create.react.app.name=React
create.react.app.scripts.version=腳本版本 (&V)
create.react.app.typescript.checkbox=建立 TypeScript 專案(&T)
javascript.fix.create.class.component.jsx.family=建立類別組件
javascript.fix.create.class.component.jsx.name=建立類別組件 ''{0}''
javascript.fix.create.function.component.jsx.family=建立函式組件
javascript.fix.create.function.component.jsx.name=建立函式組件 ''{0}''
react.class.component.type.class=類別
react.class.component.type.function=函式
react.class.to.function.caret.at.class=文字游標應置於要轉換的類別處
react.function.to.class.caret.at.function=文字游標應置於要轉換的函式處
react.inspection.unresolved.component.prop=未解析的組件 prop ''{0}''
react.inspection.unresolved.prop.action.name=建立組件 Prop
react.inspection.unresolved.prop.quick.fix.family.name=建立組件 prop
react.inspection.unresolved.prop.quick.fix.text=建立組件 prop ''{0}''
react.inspection.unresolved.prop.validation.message.component.source.not.found=找不到組件源
react.inspection.unresolved.prop.validation.message.writable.props.not.found=找不到可寫屬性類型物件
react.inspection.unresolved.prop.validation.message.writable.source.not.found=找不到可寫組件源
react.inspection.unresolved.ref.to.prop.fix.text=在 ''{1}'' 組件中建立 ''{0}'' prop
react.inspection.unresolved.ref.to.state.fix.family.name=建立組件狀態
react.inspection.unresolved.ref.to.state.fix.text=在 ''{1}'' 組件中建立 ''{0}'' 狀態
refactoring.create.react.component.title=建立組件
refactoring.extract.react.component.label.name=名稱\:
refactoring.extract.react.component.label.type=類型\:
refactoring.extract.react.component.no.expression=所選內容不構成 JSX 表達式
refactoring.extract.react.component.no.scope=找不到用於放置所建立組件的作用域
refactoring.extract.react.component.title=提取組件
refactoring.react.class.to.function.conflict.used.with.ref={0} 與 ''ref'' 特性結合使用。無法為無狀態函式組件提供 ref
refactoring.react.class.to.function.intention.title=轉換為函式組件
refactoring.react.class.to.function.refactoring.title=轉換為函式組件
refactoring.react.could.not.find.in.template=無法重構。找不到名稱為 {0} 的元素。可能的程式碼模板 {1} 無效嗎?
refactoring.react.function.to.class.intention.title=轉換為類別組件
refactoring.react.function.to.class.refactoring.title=轉換為類別組件
refactoring.react.function.to.class.used.in.call.conflict=呼叫表達式中使用了 {0}
refactoring.react.function.to.class.used.in.new.conflict=\ ''new'' 表達式中使用了 {0}
