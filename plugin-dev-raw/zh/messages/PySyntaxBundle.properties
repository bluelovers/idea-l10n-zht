configurable.PyLanguageCodeStyleSettingsProvider.display.name=Python
formatter.after.hash='\#' 之後
formatter.after.local.imports=在本地匯入後面\:
formatter.align.when.multiline=多行時對齊
formatter.around.eq.in.keyword.argument=在關鍵字實參中的 \= 周圍
formatter.around.eq.in.named.parameter=在命名參數中的 \= 周圍
formatter.around.multiplicative.operators=乘法運算符 (*, @, /, %)
formatter.around.power.operator=冪運算符 (**)
formatter.around.top.level.classes.and.function=圍繞頂層類別和函式\:
formatter.around.top.level.imports=在頂層匯入後\:
formatter.before.backslash='' 之前
formatter.before.first.method=在第一個方法前面\:
formatter.before.hash='\#' 之前
formatter.braces=大括號
formatter.collections.and.comprehensions=集合和推導
formatter.dictionary.literals=字典字面量
formatter.force.new.line.after.colon=在冒號後強制換行
formatter.force.trailing.comma.if.multiline=如有多行，強制使用尾隨逗號
formatter.from.import.statements="From" Import 語句
formatter.from.import.statements.force.parentheses.if.multiline=如有多行，強制使用括號
formatter.hang.closing.brackets=掛起右中括號
formatter.imports.panel.from.imports.always.split=始終拆分匯入
formatter.imports.panel.from.imports.join.with.same.source=使用相同的源聯接匯入
formatter.imports.panel.from.imports.leave.as.is=保持原樣
formatter.imports.panel.from.imports.structure.title="from" 匯入結構
formatter.imports.panel.optimize.imports=最佳化 import
formatter.imports.panel.sort.by.type=在組中分別對 plain 匯入和 "from" 匯入進行排序
formatter.imports.panel.sort.case.insensitively=不區分大小寫排序
formatter.imports.panel.sort.imports=對 import 語句排序
formatter.imports.panel.sort.names.in.from.imports=對 "from" 匯入中的匯入名稱排序
formatter.imports.panel.title=匯入
formatter.left.bracket=左中括號
formatter.list.literals=列表字面量
formatter.multi.clause.statements=多子句語句
formatter.panel.add.trailing.line.feed=在檔案末尾新增換行
formatter.panel.dict.alignment.label=字典對齊\:
formatter.panel.format.injected.fragments=設定注入片段的格式
formatter.panel.injected.fragments=注入的片段\:
formatter.panel.injected.fragments.use.continuation.indent=新增縮排
formatter.panel.use.continuation.indent.for.arguments=方法呼叫實參
formatter.panel.use.continuation.indent.for.collection.literals=集合和推導
formatter.panel.use.continuation.indent.for.parameters=方法宣告參數
formatter.panel.use.continuation.indent.for.title=為此內容使用繼續縮排
formatter.parenthesized.tuples=用圓括號括起的元組表達式
formatter.set.literals=設定字面量
formatter.single.clause.statements=單子句語句
python.colors.braces.and.operators.braces=大括號和運算符//大括號
python.colors.braces.and.operators.brackets=大括號和運算符//中括號
python.colors.braces.and.operators.comma=大括號和運算符//逗號
python.colors.braces.and.operators.dot=大括號和運算符//點
python.colors.braces.and.operators.operation.sign=大括號和運算符//運算符號
python.colors.braces.and.operators.parentheses=大括號和運算符//圓括號
python.colors.built.in.name=內建名稱
python.colors.class.definition=類別定義
python.colors.decorator=裝飾器
python.colors.docstring.tag=Docstring//標籤
python.colors.docstring.text=Docstring//文本
python.colors.functions.function.call=函式//函式呼叫
python.colors.functions.function.definition=函式//函式定義
python.colors.functions.method.call=函式//方法呼叫
python.colors.functions.nested.function.definition=函式//嵌套函式定義
python.colors.keyword=關鍵字
python.colors.keyword.argument=關鍵字實參
python.colors.line.comment=行註釋
python.colors.local.variables=區域變數
python.colors.number=數字
python.colors.parameters.parameter=參數//參數
python.colors.parameters.self.parameter=參數//'self' 參數
python.colors.python=Python
python.colors.special.names.definition=特殊名稱//定義
python.colors.special.names.usage=特殊名稱//用法
python.colors.string.binary.bytes=字串//二進制(位元組)
python.colors.string.escape.sequence.invalid=字串//轉義序列//無效
python.colors.string.escape.sequence.valid=字串//轉義序列//有效
python.colors.string.f.string.expression.braces=字串//格式化字串///表達式大括號
python.colors.string.f.string.format.specifier.start=字串//格式化字串//格式說明符開始
python.colors.string.f.string.type.conversion=字串//格式化字串///類型轉換
python.colors.string.text.unicode=字串//文本 (unicode)
python.colors.type.annotation=類型註解
python.colors.type.parameters=類型參數
