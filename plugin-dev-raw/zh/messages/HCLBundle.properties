missing.resource.property.inspection.display.name=缺少必需屬性
missing.resource.property.inspection.required.properties.error.message=缺少必需屬性: {0}
missing.resource.property.inspection.add.properties.quick.fix.name=添加屬性: {0}
missing.resource.property.inspection.add.properties.quick.fix.family.name=添加缺失的屬性

conflicting.resource.property.inspection.display.name=屬性衝突
conflicting.resource.property.inspection.error.message=與之衝突: {0}

deprecated.element.inspection.display.name=棄用的塊/屬性
deprecated.element.inspection.deprecated.property.error.message=棄用的屬性: {0}{2, choice, 0# : {1}|1#}
deprecated.element.inspection.deprecated.block.error.message=棄用的塊: {0}{2, choice, 0# : {1}|1#}

unknown.block.type.inspection.display.name=未知塊類型
unknown.block.type.inspection.unknown.block.type.error.message=未知塊類型 {0}
unknown.block.type.inspection.missing.closing.brace.error.message=上一行缺少右大括號
unknown.block.type.inspection.add.closing.brace.quick.fix.test=在元素前添加右大括號

block.name.validness.inspection.display.name=無效塊名稱
block.name.validness.inspection.block.name.should.not.be.empty.error.message=塊名稱不應為空
block.name.validness.inspection.invalid.name.error.message=名稱必須以字母或下劃線開頭，並且只能包含字母、數字、下劃線和短劃線。
block.name.validness.inspection.missing.block.name.error.message=還要求 {0} 個名稱元素
block.name.validness.inspection.extra.block.name.error.message=塊名稱元素過多
block.name.validness.inspection.add.name.quick.fix.name=添加名稱元素
block.name.validness.inspection.remove.name.quick.fix.name=移除額外名稱元素
block.name.validness.inspection.rename.block.quick.fix.name=重命名

terraform.files.duplicates.inspection.group.display.name=重複項

duplicated.block.property.inspection.display.name=重複的屬性
duplicated.block.property.inspection.duplicate.property.error.message=在一個塊內多次宣告屬性 ''{0}''

duplicated.inspection.base.navigate.to.duplicate.quick.fix.name=導航到{0}重複項
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name.first=第一個
duplicated.inspection.base.show.other.duplicates.quick.fix.name=查看與此相似的所有重複項

duplicated.output.inspection.display.name=重複的輸出
duplicated.output.inspection.output.declared.multiple.times.error.message=多次宣告了輸出 ''{0}''
duplicated.output.inspection.delete.output.quick.fix.name=刪除輸出
duplicated.output.inspection.rename.output.quick.fix=重命名輸出

duplicated.provider.inspection.display.name=重複的提供程序
duplicated.provider.inspection.display.name.multiple.declaration.error.message=多次宣告了提供程序 ''{0}''
duplicated.provider.inspection.display.name.add.provider.alias.quick.fix.name=添加提供程序別名
duplicated.provider.inspection.display.name.change.provider.alias.quick.fix.name=更改提供程序別名

duplicated.variable.inspection.display.name=重複的變數
duplicated.variable.inspection.multiple.declaration.error.message=多次宣告了變數 ''{0}''
duplicated.variable.inspection.delete.variable.quick.fix.name=刪除變數
duplicated.variable.inspection.rename.variable.quick.fix.name=重命名變數

incorrect.variable.type.inspection.display.name=變數類型不正確
incorrect.variable.type.inspection.legacy.variable.error.message=''舊表單'' (Terraform 0.12 前)中的變數類型不正確，應為 {0}
incorrect.variable.type.inspection.type.mismatch.error.message=變量值類型 ''{0}'' 與預設值類型 ''{1}'' 不符合
incorrect.variable.type.inspection.type.mismatch.simplified.error.message=變量值類型與預設值類型 ''{0}'' 不符合
incorrect.variable.type.inspection.change.type.quick.fix.name=將變數類型更改為 {0}

missing.module.inspection.display.name=未解析的模組
missing.module.inspection.missing.module.error.message=無法在本地定位模組: {0}
missing.module.inspection.ru.terraform.get.quick.fix.name=在 {0} 中執行 ''terraform get''
missing.module.inspection.ru.terraform.get.quick.fix.family.name=執行 'terraform get'
missing.module.inspection.ru.terraform.get.quick.fix.failure.message=無法執行 ''terraform get'': {0}
missing.module.inspection.ru.terraform.get.quick.fix.failure.title=無法提取 Terraform 模組

illegal.interpolations.inspection.display.name=非法插值
illegal.interpolations.inspection.no.double.quotes.error.message=模組源應為帶雙引號的字串
illegal.interpolations.inspection.in.variable.error.message=變數中不允許使用插值
illegal.interpolations.inspection.no.function.calls.error.message=只需要一個靜態變數引用: 僅特性存取和包含常數鍵的索引(無計算、函數調用、模板表達式等)。
illegal.interpolations.inspection.depends.on.error.message={0} 中不允許使用插值

tfvars.unsupported.element.inspection.display.name=.tfvars 內容不正確
tfvars.unsupported.element.inspection.only.key.values.allowed.error.message=僅允許 'key=value' 元素
tfvars.unsupported.element.inspection.illegal.value.type.error.message=屬性值應為數字、帶雙引號的字串、列表或物件
tfvars.unsupported.element.inspection.no.quotes.in.argument.name.error.message=實參名稱不得加引號
tfvars.unsupported.element.inspection.undefined.variable.error.message=未定義的變數 ''{0}''
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message=變數值類型不正確。應為 {0}
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message.string.expected=簡單值(字串或數字)
tfvars.unsupported.element.inspection.convert.to.double.quoted.string.quick.fix.name=轉換為帶雙引號的字串

type.specification.validator.illegal.type.specification.error.message=類型規範可以是基元類型關鍵字(布爾、數字、字串)，也可以是列表(字串)等複雜類型構造函數調用
type.specification.validator.exact.type.required.error.message=關鍵字 {0} 不能在此類型規範中使用: 需要確切的類型
type.specification.validator.collection.argument.required.error.message={0} 類型構造函數需要一個指定元素類型的實參
type.specification.validator.object.argument.required.error.message=物件類型構造函數需要一個指定特性類型和值作為映射的實參
type.specification.validator.tuple.argument.required.error.message=元組類型構造函數需要一個指定元素類型作為列表的實參
type.specification.validator.invalid.type.specification.error.message=關鍵字 {0} 不是有效的類型規範
type.specification.validator.simple.keyword.required.for.call.error.message=方法名稱必須為簡單關鍵字
type.specification.validator.no.argument.expected.error.message=基元類型關鍵字 {0} 不應有實參
type.specification.validator.object.argument.map.required.error.message=物件類型構造函數需要一個鍵為特性名稱、值為對應特性類型的映射
type.specification.validator.block.not.allowed.error.message=不允許塊，僅允許屬性
type.specification.validator.object.constructor.map.keys.must.be.attribute.names.error.message=物件構造函數映射鍵必須為特性名稱
type.specification.validator.invalid.type.constructor.error.message=關鍵字 {0} 不是有效的類型構造函數

terraform.files.inspection.group.display.name=Terraform 設定

hil.scope.not.available.in.context.inspection.display.name=不可用的範圍
hil.scope.not.available.in.context.inspection.illegal.self.use.message=僅允許在資源定義內部的 'provisioner' 和 'connection' 塊中引用 'self'

hil.unknown.resource.type.inspection.display.name=引用了未知資源類型
hil.unknown.resource.type.inspection.unknown.resource.type.error.message=未知資源類型

hil.unresolved.reference.inspection.display.name=未解析的引用
hil.unresolved.reference.inspection.unresolved.reference.error.message=未解析的引用 {0}

hil.operation.types.mismatch.inspection.display.name=操作實參類型不符合
hil.operation.types.mismatch.inspection.number.expected.error.message=應為數字，而不是 {0}
hil.operation.types.mismatch.inspection.boolean.expected.error.message=應為布林值，而不是 {0}
hil.operation.types.mismatch.inspection.boolean.or.string.expected.error.message=條件應為布林值或包含布林值的字串
hil.operation.types.mismatch.inspection.both.branches.must.have.same.type.error.message=這兩個分支的類型應相同。''then'' 為 {0}，''else'' 為 {1}

hil.convert.to.hcl.inspection.display.name=HIL 表達式可轉化為 HCL2
hil.convert.to.hcl.inspection.interpolation.could.be.replaced.with.hcl2.message=插值可以取代為 HCL2 表達式
hil.convert.to.hcl.inspection.convert.to.hcl2.quick.fix.text=轉換為 HCL2 表達式

hcl.simplify.expression.inspection.display.name=次優表達式
hcl.simplify.expression.inspection.could.be.replaced.with.list.indexing.message=可以取代為列表索引(可能會改變語意)
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.text=取代為列表索引
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.family.name=簡化表達式

terraform.name=Terraform
terraform.name.lowercase=terraform
terraform.configuration.title=Terraform
terraform.configuration.type.description=使用指定參數執行 Terraform
run.configuration.no.working.directory.specified=未指定工作目錄
run.configuration.no.terraform.specified=Terraform 可執行檔案的路徑未設定
run.configuration.terraform.path.incorrect=Terraform 可執行檔案的路徑不正確

introduce.variable.title=引入變數
refactoring.introduce.selection.error=無法使用所選元素執行重構
refactoring.introduce.variable.scope.error=名稱與現有變量衝突
refactoring.introduce.name.error=名稱錯誤
refactoring.introduce.anchor.error=無法找到結果的位置
refactoring.introduce.error=引入錯誤

label.runs.terraform.fmt="對 Terraform HCL 設定檔案執行 `terraform fmt`"

inspection.suppressor.suppress.for.property.action.name=對屬性禁止
inspection.suppressor.suppress.for.element.action.name=對{0}禁止
terraform.fmt.commit.error.details.caption=詳細資訊(&D)…
terraform.fmt.commit.error.message=<html><body>'terraform fmt' 在某些檔案中返回非零程式碼。<br/>仍要提交嗎?</body></html>

AddVariableFix.family.name=添加變數
AddVariableFix.text=添加變數 ''{0}''

HCLFileType.description=HashiCorp 設定語言檔案
HILFileType.description=HashiCorp 插值語言檔案
TerraformFileType.description=Terraform 設定檔案

code.style.align.properties.title=對齊屬性
code.style.formatting.options.group.name=格式化選項
code.style.line.commenter.character.title=單行註釋樣式
code.style.code.conventions.group.name=程式碼慣例

hcl.code.style.settings.braces=大括號
hcl.code.style.settings.equals=等號
hcl.code.style.settings.arrays=陣列
hcl.code.style.settings.objects=物件

hcl.color.settings.braces.and.operators.brackets=大括號和運算符//中括號
hcl.color.settings.braces.and.operators.braces=大括號和運算符//大括號
hcl.color.settings.braces.and.operators.comma=大括號和運算符//逗號
hcl.color.settings.braces.and.operators.operation.sign=大括號和運算符//運算符號
hcl.color.settings.number=數字
hcl.color.settings.keyword=關鍵字
hcl.color.settings.identifier=關鍵字
hcl.color.settings.comments.line.comment=註釋//行註釋
hcl.color.settings.comments.block.comment=註釋//塊註釋
hcl.color.settings.property.name=屬性名稱
hcl.color.settings.block.only.name.type=塊//僅類型塊
hcl.color.settings.block.first.type=塊//第一類型塊
hcl.color.settings.block.second.type=塊//第二類型塊
hcl.color.settings.block.other.types=塊//其他類型塊
hcl.color.settings.block.name=塊//塊名稱
hcl.color.settings.string.text=字串//字串文本
hcl.color.settings.string.valid.escape.sequence=字串//有效轉義序列
hcl.color.settings.string.invalid.escape.sequence=字串//無效轉義序列

hil.color.settings.braces.operators.parentheses=大括號和運算符//圓括號
hil.color.settings.braces.operators.braces=大括號和運算符//大括號
hil.color.settings.braces.operators.brackets=大括號和運算符//中括號
hil.color.settings.braces.operators.comma=大括號和運算符//逗號
hil.color.settings.braces.operators.operation.sign=大括號和運算符//運算符號
hil.color.settings.braces.operators.dot=大括號和運算符//點
hil.color.settings.number=數字
hil.color.settings.string=字串
hil.color.settings.keyword=關鍵字
hil.color.settings.identifier=關鍵字
hil.color.settings.predefined.scope=預定義範圍
hil.color.settings.resource.type.reference=資源類型引用
hil.color.settings.resource.instance.reference=資源實例引用
hil.color.settings.property.reference=屬性引用
hil.color.settings.valid.escape.sequence=有效轉義序列
hil.color.settings.invalid.escape.sequence=無效的轉義序列

HCLFindUsagesProvider.type.module=模組
HCLFindUsagesProvider.type.variable=輸入變數
HCLFindUsagesProvider.type.output.value=輸出值
HCLFindUsagesProvider.type.provider=提供程序
HCLFindUsagesProvider.type.resource=資源
HCLFindUsagesProvider.type.data.source=資料來源
HCLFindUsagesProvider.type.terraform.configuration=terraform 設定
HCLFindUsagesProvider.type.local.values=局部值
HCLFindUsagesProvider.type.backend.configuration=後端設定
HCLFindUsagesProvider.type.local.value=局部值
HCLFindUsagesProvider.type.property=屬性
HCLFindUsagesProvider.type.dynamic.iterator=動態迭代器
HCLFindUsagesProvider.type.for.loop.variable=for 迴圈變數
HCLFindUsagesProvider.type.named.block=塊({0})
HCLFindUsagesProvider.type.untyped.named.element=<未指定類型的 PsiNamedElement {0}>
HCLFindUsagesProvider.type.untyped.non.psi.named.element=<未指定類型的非 PsiNamedElement {0}>

hcl.literal.annotator.property.key=屬性鍵
hcl.literal.annotator.block.only.name.identifier=塊單一名稱關鍵字
hcl.literal.annotator.block.name.identifier=塊名稱關鍵字
hcl.literal.annotator.block.type.1.element=塊類型 1 元素
hcl.literal.annotator.block.type.2.element=塊類型 2 元素
hcl.literal.annotator.block.type.3.element=塊類型 3+ 元素
hcl.literal.annotator.missing.closing.quote=缺少右引號
hcl.literal.annotator.illegal.octal.escape.sequence=非法八進制轉義序列
hcl.literal.annotator.illegal.hex.escape.sequence=非法十六進制轉義序列
hcl.literal.annotator.illegal.unicode.escape.sequence=非法 Unicode 轉義序列
hcl.literal.annotator.illegal.escape.sequence=非法轉義序列
hcl.literal.annotator.argument.names.must.not.be.quoted=實參名稱不得加引號
hcl.literal.annotator.illegal.number.literal=非法數字文字
hcl.literal.annotator.add.closing.quote.quick.fix.text=添加右引號

hil.literal.annotator.unwrap.string.quick.fix.text=轉換為關鍵字

hil.variable.annotator.expression.start.expected=應為表達式開頭
hil.variable.annotator.expanded.function.argument.must.be.immediately.followed.by.closing.parentheses=展開的函數實參後應緊跟右圓括號

hil.introduce.variable.handler.dialog.caption=引入變數
hil.inplace.variable.introducer.title=引入變數


terraform.executable.macro.description=Terraform 可執行檔案路徑
terraform.settings.executable.path.label=Terraform 可執行檔案路徑
terraform.settings.reloading.terraform.model.progress.title=正在重新載入 Terraform 模型

terraform.run.configuration.name=Terraform 執行
terraform.run.configuration.type.plan.name.suffix=方案
terraform.run.configuration.type.apply.name.suffix=套用

introduce.dialogs.replace.all.checkbox.title={0} ({1} 個匹配項)

TFExecutor.finished.successfully.notification.text=成功完成
TFExecutor.interrupted.notification.text=已中斷
TFExecutor.unknown.error.notification.text=未知錯誤，有關詳細資訊，請參閱日誌
TFExecutor.failed.to.run.notification.text=無法執行
