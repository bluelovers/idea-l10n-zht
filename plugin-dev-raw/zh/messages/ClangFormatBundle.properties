# settings dialog
cf.config.title=ClangFormat
cf.config.enable=啟用 ClangFormat (僅限 C/C++/Objective-C)
cf.config.override.standard=ClangFormat 覆寫 IDE 程式碼樣式設定
cf.title.actual.clang.format={0} 的 ClangFormat 選項

# indent widget
cf.hint.text.overridden=ClangFormat
cf.action.group.title=ClangFormat
cf.action.disable=禁用 ClangFormat
cf.action.enable=啟用 ClangFormat
cf.action.open.file=編輯 {0} 的 `.clang-format`
cf.action.open.full.set=查看 {0} 的 ClangFormat 選項
cf.action.create.file=從程式碼樣式創建 `.clang-format`
# suppress inspection "UnusedProperty"
cf.action.export=.clang-format 檔案

# indent widget tooltips
cf.advertisement.text.overridden=當前程式碼樣式被 ClangFormat 覆寫
cf.advertisement.text.has.clang-format=啟用 ClangFormat 並使用 `.clang-format` 覆寫程式碼樣式。
# json schema
cf.schema.name=ClangFormat

# create `.clang-format` file Yes/No
cf.create.cf.file.title=創建 .clang-format 檔案
cf.create.cf.file.message=是否要通過有效程式碼樣式為專案創建新的 .clang-格式文件?

progressbar.long.clang.format=正在使用 ClangFormat 格式化…
progressbar.long.clang.indent=正在使用 ClangFormat 縮排…
progressbar.long.clang.settings=正在載入 ClangFormat 設定…

action.CIDR.Lang.Format.ClangFormat.text=clangd: 純 Clang 格式