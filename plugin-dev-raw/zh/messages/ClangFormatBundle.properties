action.CIDR.Lang.Format.ClangFormat.text=clangd\: 按原樣執行 clang-format
cf.action.create.file=從程式碼樣式建立 `.clang-format`
cf.action.disable=為專案停用 ClangFormat
cf.action.enable=為專案啟用 ClangFormat
cf.action.export=`.clang-format` 檔案
cf.action.group.title=ClangFormat
cf.action.open.file=開啟已編輯檔案的 `.clang-format`
cf.action.open.full.set=顯示已編輯檔案的 ClangFormat 選項
cf.advertisement.text.has.clang-format=啟用 ClangFormat 並使用 `.clang-format` 覆寫程式碼樣式。
cf.advertisement.text.overridden=當前程式碼樣式被 ClangFormat 覆寫
cf.config.enable=啟用 ClangFormat (僅限 C/C++/Objective-C)
cf.config.override.standard=ClangFormat 覆寫 IDE 程式碼樣式設定
cf.config.title=ClangFormat
cf.create.cf.file.message=是否要通過有效程式碼樣式為當前專案建立新的 `.clang-format` 檔案?
cf.create.cf.file.title=建立 `.clang-format` 檔案
cf.hint.text.overridden=ClangFormat
cf.overwrite.cf.file.message=您是否要覆蓋當前專案中的 `.clang-format` 檔案以獲得新的程式碼樣式?
cf.overwrite.cf.file.title=覆蓋 `.clang-format` 檔案
cf.schema.name=ClangFormat
cf.title.actual.clang.format={0} 的 ClangFormat 選項
progressbar.long.clang.format=正在使用 ClangFormat 格式化…
progressbar.long.clang.indent=正在使用 ClangFormat 縮排…
progressbar.long.clang.settings=正在載入 ClangFormat 設定…
