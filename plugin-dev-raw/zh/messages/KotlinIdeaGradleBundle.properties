action.Gradle.MigrateToDaemonJvmCriteria.text=將專案遷移到守護程序 JVM 標準
action.text.install=安裝
build.0.project=構建版本 {0}
change.build.gradle.configuration=更改 build.gradle 組態
command.name.configure.0=組態 {0}
command.name.configure.kotlin=組態 Kotlin
command.name.configure.kotlin.automatically=Kotlin 自動組態
configuration.apply.is.resolve.module.per.source.set=修正並重新匯入專案
configuration.do.not.suggest.update.is.resolve.module.per.source.set=不再顯示
configuration.is.resolve.module.per.source.set=檢測到傳統 Gradle 匯入模式
configuration.update.is.resolve.module.per.source.set=IDE 當前組態為每個 Gradle 專案建立一個模組。這種模式與 Kotlin Multiplatform 專案不相容，後者要求每個 Gradle 源集都只有一個模組。
configure.kotlin.new.content=新內容
configure.kotlin.original.content=原始內容
description.text.a.single.platform.kotlin.library.or.application.targeting.javascript=面向 JavaScript 的單平台 Kotlin 庫或應用程式
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.browser=面向 JavaScript 或瀏覽器的單平台 Kotlin 庫或應用程式
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.node.js=面向 JavaScript 或 Node.js 的單平台 Kotlin 庫或應用程式
description.text.a.single.platform.kotlin.library.or.application.targeting.the.jvm=面向 JVM 的單平台 Kotlin 庫或應用程式
description.text.adds.support.for.building.kotlin.projects=新增對建置 Kotlin 專案的支援
description.text.multi.targeted.jvm.js.ios.etc.project.with.shared.code.in.common.modules=具有通用模組中共享程式碼的多目標 (JVM、JS、iOS 等) 專案。可以在專案的建置腳本中組態這些目標。
display.name.kotlin.js.for.browser=Kotlin/JS (適用於瀏覽器)
display.name.kotlin.js.for.node.js=Kotlin/JS (適用於 Node.js)
display.name.kotlin.jvm=Kotlin/JVM
display.name.kotlin.multiplatform=Kotlin/Multiplatform
error.text.cannot.find.build.gradle.file.for.module=找不到模組 {0} 的 build.gradle 檔案
error.text.failed.to.load.script.definitions.by=無法通過 {0} 載入腳本定義
error.text.highlighting.is.impossible.during.gradle.import=在 Gradle 匯入期間，無法突出顯示
error.text.support.requires.version={0}支援需要 {1} 或更高版本的 Kotlin 執行時庫。請更新建置腳本中的版本。
error.text.this.language.feature.requires.version=此語言功能需要 {0} 或更高版本的 Kotlin 執行時庫。請更新建置腳本中的版本。
framework.support.provider.kotlin.js.for.browser.display.name=Kotlin/JS (適用於瀏覽器)
framework.support.provider.kotlin.js.for.node.js.display.name=Kotlin/JS (適用於 Node.js)
framework.support.provider.kotlin.jvm.display.name=Kotlin/JVM
presentable.text.java.with.gradle=Java 與 Gradle
step.configure.kotlin.preparing=正在準備建置檔案
step.configure.kotlin.writing=正在編寫建置檔案
text.couldn.t.configure.kotlin.gradle.plugin.automatically=無法自動組態 kotlin-gradle 延伸模組。
text.see.manual.installation.instructions=要檢視手動安裝說明，請點擊<a href\="https\://kotlinlang.org/docs/reference/using-gradle.html">此處</a>。
text.was.modified={0} 已被修改
title.configure.kotlin.gradle.plugin=組態 Kotlin-Gradle 延伸模組
title.kotlin.build.script=Gradle Kotlin DSL 腳本錯誤
title.update.language.version=更新語言版本
you.can.delegate.to.gradle=您可以在“檔案 | 設定 | 建置、執行、部署 | 建置工具 | Gradle | 使用此工具建置和執行”中將 IDE 建置/執行動作委託給 Gradle
