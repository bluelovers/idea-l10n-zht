adding.file.to.backup.0=正在將檔案新增到備份\: {0}
all.modules.with.kotlin.files.are.configured=已組態包含 Kotlin 檔案的所有模組
button.text.decompile=反編譯
bytecode.toolwindow.label.jvm.target=JVM 目標\:
cannot.compile.0.to.bytecode=無法將 {0} 編譯為位元組碼。
checkbox.text.assertions=斷言
checkbox.text.inline=內聯
checkbox.text.offsets=顯示偏移量
checkbox.text.optimization=最佳化
classpath.add.kotlin.test=將 'kotlin-test.jar' 新增到類別路徑
classpath.add.reflection=將 'kotlin-reflect.jar' 新增到類別路徑
classpath.add.script.runtime=將 'kotlin-script-runtime.jar' 新增到類別路徑
command.name.processing.kotlin.scratch.output=處理 Kotlin 臨時檔案輸出
configuration.title.script.file=腳本檔案
copying.logs=正在複製日誌
copying.project.s.system.dir=正在複製專案的系統目錄
couldn.t.compile.0=無法編譯 {0}
couldn.t.execute.statement.0=無法執行語句\: {0}
couldn.t.extract.line.info.from.line.0=無法從行提取行資訊\: {0}
couldn.t.find.ktfile.for.current.editor=找不到當前編輯器的 KtFile
couldn.t.get.scratch.execution.result.stopped.by.timeout.0.ms=無法獲取臨時執行結果 - 因超時而停止({0} 毫秒)
couldn.t.stop.repl.process=無法停止 REPL 程序
create.backup.for.debugging.kotlin.incremental.compilation=建立用於偵錯 Kotlin 增量編譯的備份
created.backup=已建立備份
creating.backup.for.debugging.kotlin.incremental.compilation=正在建立用於偵錯 Kotlin 增量編譯的備份
creating.patch.0=正在建立補丁 {0}
enable.feature.family=提高{0,choice,0\#模組|1\#專案}{1,choice,0\#API版本|1\#語言版本}
enable.feature.text=將{0,choice,0\#模組|1\#專案}{1,choice,0\#API版本|1\#語言版本}設定為 {2}
exception.occurred.during.run.scratch.action1=執行臨時動作時出現異常
exception.occurs.during.run.scratch.action=執行臨時動作時出現異常
failed.to.decompile.0.1=無法反編譯 {0}\: {1}
fix.0.in.current.module=在當前模組中 {0}
fix.0.in.the.project=在專案中 {0}
frameworks.remove.conflict.question=當前模組已使用 ''{0}'' 框架組態。\n是否要將其移除?
frameworks.remove.conflict.title=框架衝突
kotlin.bytecode.decompiler=Kotlin 位元組碼反編譯器
label.missed.libraries.text=在模組相依項列表中找不到 ''{0}'' 庫
libraries.for.the.following.platform.are.also.present.in.the.module.dependencies.0=以下平台的庫也存在於模組相依項中\: {0}
library.label.javascript=Kotlin JS 庫
library.label.jvm=Kotlin 執行時
library.no.kotlin.library.question=是否要在沒有 Kotlin 執行時庫的情況下繼續?
library.no.kotlin.library.title=未指定 Kotlin 執行時
list.item.no.module=<無模組>
lookup.project.configurators.progress.text=正在尋找專案組態器…
no.target.platforms.selected=未選擇目標平台
notification.group.configure.kotlin.in.project=需要 Kotlin 專案組態
other.scratch.file.execution.is.in.progress=正在執行其他臨時檔案
presentable.name.kotlin.js=Kotlin/​JS
presentable.name.kotlin.jvm=Kotlin/JVM
progress.title.compiling.kotlin.scratch=正在編譯臨時檔案
progress.title.run.scratch=正在執行臨時檔案
running.kotlin.scratch=正在執行 Kotlin 臨時檔案…
scanning.project.dir.0=正在掃描專案目錄\: {0}
scratch.clear.button=清除結果
scratch.inlay.output.mode.description=嵌入式輸出模式
scratch.inlay.output.mode.title=內嵌輸出模式\n\n輸出將顯示在程式碼編輯器中的表達式旁。非常適合簡短的單行輸出。
scratch.is.interactive.checkbox=互動模式
scratch.is.interactive.checkbox.description=在你停止鍵入 {0} 秒後執行
scratch.is.repl.checkbox=使用 REPL
scratch.is.repl.checkbox.description=在 Kotlin REPL 中執行。只執行新增到草稿末尾的新表達式
scratch.make.before.run.checkbox=執行前建置模組
scratch.make.before.run.checkbox.description=在執行 scratch 之前建置模組 {0}。只有已編譯的程式碼才能從此作用域存取
scratch.module.combobox=使用模組的類別路徑
scratch.run.button=執行臨時檔案
scratch.run.from.here.button=從這裡執行臨時檔案
scratch.side.panel.output.mode.description=側邊面板輸出模式
scratch.side.panel.output.mode.title=側面板輸出模式\n\n輸出會顯示在單獨的面板中。輸出較長或為多行輸出時很有用。
scratch.stop.button=停止臨時執行
successfully.created.backup.0=已成功建立備份 {0}
text.was.modified={0} 已被修改
there.aren.t.configurators.available=沒有可用的組態器
there.were.compilation.errors.in.module.0=模組 {0} 中存在編譯錯誤
this.java.file.is.outside.of.java.source.roots.and.won.t.be.added.to.the.classpath=此 .java 檔案位於 Java 來源根之外且不會新增到類別路徑中。
