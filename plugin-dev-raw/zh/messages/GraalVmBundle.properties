action.GraalVM.Debugger.DisplayPointers.text=顯示值的記憶體地址
debugger.display.gdb.name=GDB/GraalVM
debugger.display.lldb.name=LLDB/GraalVM
graalvm.application.arguments=實參\:
graalvm.application.run=GraalVM 應用程式執行
graalvm.before.run.task.build={0} GraalVM 建置任務
graalvm.before.run.task.progress.title.building.project=建置目標
graalvm.container.attach.configuration.type.description=GraalVM 容器偵錯
graalvm.container.attach.configuration.type.name=GraalVM 容器偵錯
graalvm.debug.marker.loading.debug.info=正在載入偵錯資訊符號
graalvm.debugger.attach.group.name=Graal VM/Docker
graalvm.debugger.attach.option.title=附加選項
graalvm.debugger.attach.options.dialog.label.modules=類別路徑模組\:
graalvm.debugger.attach.options.dialog.label.symbol.file=符號檔案\:
graalvm.debugger.attach.options.dialog.label.symbol.file.text=符號檔案
graalvm.debugger.driver.configuration.symbol-file-loader-title=符號檔案載入器
graalvm.debugger.driver.configuration.symbol-file-not-found-ignore=忽略，我沒有偵錯符號。
graalvm.debugger.driver.configuration.symbol-file-not-found-message=未設定偵錯符號。要進行組態嗎?
graalvm.debugger.driver.configuration.symbol-file-not-found-ok=好的，我有偵錯符號檔案。我們來載入它吧。
graalvm.debugger.driver.configuration.title=Graal VM 偵錯資訊載入程序。
graalvm.debugger.function-breakpoint=GraalVM 函式中斷點
graalvm.debugger.ok=確定
graalvm.debugger.progress.local-process-starting=本地程序正在偵錯器下啟動
graalvm.debugger.progress.port-fetching=正在從框架中獲取進度
graalvm.debugger.progress.prepare-remote-target=正在準備遠端執行目標
graalvm.debugger.progress.remote-process-attaching=正在附加到遠端程序
graalvm.debugger.progress.searching.for.file=正在載入檔案…
graalvm.debugger.restoring.parameter=正在恢復參數
graalvm.debugger.symbol-file-loading=正在載入符號檔案
graalvm.debugger.variable.description.warning=參數“{0}”根據呼叫約定還原，使用它可能非常危險\!
graalvm.docker.console.title=Docker 主控台上的 GraalVm…
graalvm.downloader.download-message=下載偵錯器
graalvm.json.jni.config.name=GraalVM JNI 組態
graalvm.json.predefined.classes.config.name=GraalVM 預定義類別組態
graalvm.json.proxy.config.name=GraalVM 代理組態
graalvm.json.reflection.config.name=GraalVM 反射組態
graalvm.json.resource.config.name=GraalVM JNI 組態
graalvm.json.serialization.config.name=GraalVM 序列化組態
graalvm.pre.run.task.native.image.args=原生鏡像實參\:
graalvm.pre.run.task.target=建置環境\:
graalvm.remote.attach.configuration.container.lookup=正在建立附加容器
graalvm.remote.attach.configuration.type.description=GraalVM 遠端偵錯
graalvm.remote.attach.configuration.type.name=GraalVM 遠端偵錯
graalvm.run.config.missing.symbol.file=未指定符號檔案
graalvm.run.configuration.error.no.class.specified=未指定類別。
graalvm.run.configuration.error.no.image.specified=未指定可執行檔案
graalvm.run.configuration.error.no.module.specified=未指定類別路徑模組。
graalvm.run.configuration.error.no.symbol.info.specified=未指定符號檔案.
graalvm.run.configuration.name.application=GraalVM 編譯的應用程式 `{0}`
graalvm.run.line.marker.text=作為 GraalVM 應用程式執行
graalvm.runconfig.argumentsLabel=實參\:
graalvm.runconfig.attach.name=附加字串(host\:port)\:
graalvm.runconfig.docker.container.name=Docker 容器名稱/ID
graalvm.runconfig.docker.container.pid=目標 PID
graalvm.runconfig.docker.containers=Docker 容器
graalvm.runconfig.docker.process.shared.display.name={0, number, \#}\: {1}
graalvm.runconfig.docker.progress.pid.mode.fetching=正在從容器中獲取 pid 模式
graalvm.runconfig.environmentVariables=環境變數\:
graalvm.runconfig.fileHint=GraalVM 鏡像
graalvm.runconfig.gdbserver.launch=啟動 Gdb 伺服器
graalvm.runconfig.imageFileNameLabel=可執行檔案\:
graalvm.runconfig.mapping-label=源映射\:
graalvm.runconfig.module=使用模組的類別路徑\:
graalvm.runconfig.process.id=程序 ID
graalvm.runconfig.symbol-file=符號檔案\:
graalvm.runconfig.symbolInfoFileHint=GraalVM 偵錯資訊符號
graalvm.runconfig.system-root=系統根\:
graalvm.runconfig.system-root-path=系統根
graalvm.runconfig.table.local=本地源\:
graalvm.runconfig.table.remote=遠端源\:
graaplvm.application.main.class=主類別\:
method.invoke.notsupported=不支持類別方法呼叫
newinstance.notsupported=不支持類別實例化
notification.group.unsupported.graalvm.platform=不受支援的 GraalVM 平台
