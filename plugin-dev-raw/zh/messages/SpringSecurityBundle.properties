# Inspections
inspections.group.path.name=Spring Security
spring.security.framework.name=Spring 安全


model.inspection.model=不正確的 Spring Security 基於 XML 的應用程式上下文
model.inspection.model.http.must.not.contain.children=對於 security='none'，必須為空標記
model.inspection.model.user.service.either.properties.or.users=必須具有特性 'properties' 或 <user> 元素列表
model.inspection.model.ldap.server.manager.dn.without.manager.password=使用 'manager-dn' 時需要 'manager-password'
model.inspection.model.ldap.either.user.context.mapper.ref.or.user.details.class=必須具有 'user-context-mapper-ref' 或 'user-details-class'
model.inspection.model.http.pattern.all.must.be.last=帶 '/**' 模式的 <http> 必須位於最後
model.inspection.model.http.not.multiple.without.pattern=不允許使用多個無 'pattern' 的 <http> 元素
model.inspection.model.authentication.provider.only.one.kind.of.user.service=僅允許使用一種使用者服務
model.inspection.global.method.security.pre.post.annotations.not.enabled='pre-post-annotations' 的值必須為 'enabled' 才能使用 <pre-post-annotation-handling>
mode.inspection.global.method.security.not.aspectj.with.protect.pointcut=無法為 <protect-pointcut> 使用值為 'aspectj' 的 'mode'
model.inspection.model.intercept.url.attribute.only.inside.http=只能為父 <http> 使用特性
model.inspection.model.access.denied.handler.no.http.access.denied.page=不得與 <http> 'access-denied-page' 一起使用
model.inspection.model.protect.pointcut.expression.only.execution=此處僅支援 'execution' 切入點指示符
model.inspection.model.user.service.ref.required=找到多個使用者服務，需要 'user-service-ref'
model.inspection.model.protect.do.not.mix.with.global.method.security=不建議將 <protect> 與 <global-method-security> 混用

model.inspection.debug.activated=Spring Security 設定中啟用了偵錯模式
model.inspection.debug.activated.message=活動偵錯模式可能會暴露敏感資料

spring.bean.resolve.in.annotation.inspection.display.name=Spring Security 註解中引用的 Spring Bean 設定不正確
security.role.type=安全角色