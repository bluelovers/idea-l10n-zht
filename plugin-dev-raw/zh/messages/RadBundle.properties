action.RadMigrateCodeStyle.text=將程式碼樣式設定從 CLion Classic 遷移到 Nova
action.RadResetCodeStyle.text=重設 CLion Nova 的 C/C++ 程式碼樣式設定
action.RadShowTestList.text=顯示測試列表
action.SendFeedback.text=提交反饋(_F)…
color.builtin.type.keywords=關鍵字//內建類型
color.concept=模板//概念
color.conditionally.non-compiled=有條件的未編譯程式碼
color.constant=變數//常數
color.control.flow.keywords=關鍵字//控制流關鍵字
color.control.transfer.keywords=關鍵字//控制轉移關鍵字
color.deduction_guide=模板//推導指南
color.dependent_code=模板//相依程式碼
color.doxygen.comment=註釋//Doxygen//文本
color.doxygen.tag=註釋//Doxygen//指令
color.doxygen.tag.value=註釋//Doxygen//指令值
color.enum.const=枚舉常數
color.format.string.token=字串//字串實參中的格式說明符
color.function.call=函式//呼叫
color.function.declaration=函式//宣告
color.global.variable=變數//全域變數
color.keyword=關鍵字//關鍵字
color.macro.name=巨集名稱
color.macro.parameter=參數//巨集參數
color.namespace=命名空間
color.overloaded.operator=大括號和運算符//多載運算符
color.preprocessor.directive=預處理程序//指令
color.preprocessor.path=預處理程序//頭路徑
color.struct.field=結構欄位
color.struct.union=類別/結構/枚舉/聯合
color.template.non.type=模板//非類型參數
color.template.type=模板//類型參數
color.this.keywords=關鍵字//'this' 關鍵字
color.typedef=Typedef
configurable.name.c.resolve.context=C/C++ 解析上下文
formatter.item.allman.braces=Allman 大括號(無命名規則)
formatter.item.gnu=GNU (無命名規則)
formatter.item.kr.braces=K\\&R 大括號(無命名規則)
formatter.item.stroustrup.braces=Stroustrup
formatter.item.whitesmiths.braces=Whitesmiths 大括號(無命名規則)
hint.severity=提示
hint.severity.capitalized=提示
hint.severity.count.message={0} 個{0, choice, 0\#提示|1\#提示|2\#提示}
inspection.compiler.errors.description=顯示來自 ReSharper 後端的編譯器錯誤
inspection.compiler.errors.title=編譯器錯誤
inspection.measure.resolve.description=Measures time needed to resolve all references in the project
inspection.measure.resolve.title=Measure references resolve
inspections.description.load.failed=無法載入
inspections.description.loading=正在載入…
inspections.group.bestpractice=常見做法和程式碼改進
inspections.group.coderedundancy=程式碼中的冗餘
inspections.group.codesmell=潛在的程式碼品質問題
inspections.group.codestyleissues=語法樣式
inspections.group.compilerwarnings=編譯器問題
inspections.group.constraints=約束違規
inspections.group.dataflow=數據流分析
inspections.group.formattingissues=格式設定
naming.convention.header.guard.style.help=您可以使用預定義變數，例如\:<br><b>${PROJECT_NAME}</b>、 <b>${PROJECT_REL_PATH}</b>、 <b>${FILE_NAME}</b>、 <b>${EXT}</b> 和 <b>${UUID}</b>。<br>所有來自<i>編輯器/檔案和程式碼模板</i> (<i>“檔案”頁籤</i>)<br>的預定義變數也可用(<b>${USER}</b>、<b>${DATE}</b> 等)
naming.convention.header.guard.style.label=標頭檔保護符樣式
project.awaiter=Awaits CLion backend activities
projectConfigurable.AggregateHints.displayName=聚合初始化
projectConfigurable.Cpp.CodeGeneration.displayName=程式碼生成
projectConfigurable.Cpp.General.displayName=一般
projectConfigurable.Cpp.IncludesOrder.displayName=\#include 的順序
projectConfigurable.Cpp.Internal.displayName=內部
projectConfigurable.Other.displayName=其他
projectConfigurable.Other.languages.displayName=其他語言
projectConfigurable.ParameterNameHints.displayName=參數名稱提示
projectConfigurable.RiderInlayHintsCppOptions.displayName=C/C++
projectConfigurable.TypeConversionHints.displayName=類型轉換提示
projectConfigurable.TypeNameHints.displayName=Type Name Hints
refactoring.action.is.not.available.in.current.context=重構動作在當前上下文中不可用
refactoring.rename.collecting.usages.title=正在收集用法
resolve.contexts.current.file=當前 {0} 檔案在 ''{1}'' 的上下文中解析
resolve.contexts.loading=正在載入解析上下文…
resolve.contexts.no.context=<無上下文>
resolve.contexts.prefix=上下文
resolve.contexts.prefix.no.context=當前檔案無解析上下文
settings.completion.alwaysInsertInclude=始終新增 \#include
settings.completion.alwaysShowMenu=始終顯示帶有選項的選單
settings.completion.dependingOnFileType=在 .cpp 檔案中新增 '\#include'，在標頭檔中顯示選單
settings.completion.importBehaviour=匯入條目的行為
settings.completion.insert.include.after.completion.of.member.of.incomplete.class=在補全不完整類別的成員後新增 '\#include'
settings.completion.show.free.items=在成員補全中顯示自由函式
settings.completion.show.import.items=在基本補全中顯示匯入條目
settings.completion.show.signatures=顯示函式簽名
test.file.is.not.source.file=檔案不是原始檔，測試將從源進行計數
test.framework=框架 ''{0}''\:
test.test.count=測試計數\:{0}
test.tests.in.project=''{0}'' 專案中的測試
usage.declaration=宣告
usage.invocation=呼叫
