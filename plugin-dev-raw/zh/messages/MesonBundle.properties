action.Meson.LoadMesonProject.text=載入 Meson 專案
annotator.meson.options.error.bad.statement=meson.options 中只允許 option() 呼叫
build.all.target.name=所有
clean.and.refresh.project.action.description=擦除專案並強制重新載入鏈接的 Meson 專案
clean.and.refresh.project.action.name=擦除並重新載入 Meson 專案
converter.failed.to.find.compiler.executable=找不到可執行檔案\: {0}
converter.no.targets=空 Meson 內省
converter.unknown.compiler.executable=未知的編譯器可執行檔案\: {0}
execution.build.task.name=正在建置\: {0}
execution.build.task.target=正在使用目標 {1} 建置 {0}
execution.clean.task.name=正在清理\: {0}
filetype.description=Meson 檔案
group.Meson.ToolsMenu.text=Meson
meson=Meson
model.cant.read.file.error=無法讀取檔案 ''{0}''
model.compiler.exe.empty.error=Meson 內省檔案格式錯誤\: 未指定編譯器可執行檔案
model.compiler.id.empty.error=Meson 內省檔案格式錯誤\: 未指定編譯器 ID
model.error.happened.during.reload.error=Meson 設定期間發生錯誤
model.generic.error=無法解析 Meson 內省
model.introspection.file.parse.error=Meson 內省檔案格式錯誤\: 找不到內省檔案
model.language.empty.error=Meson 內省檔案格式錯誤\: 未指定語言
model.target.type.empty.error=Meson 內省檔案格式錯誤\: 未指定目標類型
model.unsupported.introspection.version.error=不受支援的內省版本。\n當前版本\: ''{0}''\n支援版本\: ''{1}''
model.version.empty.error=Meson 內省檔案格式錯誤\: 版本為空
open.meson.build.file.action.name=開啟 meson.build 檔案
open.settings.action.description=開啟 Meson 設定
open.settings.action.name=Meson 設定
options.language.arguments.key=鍵
options.language.assignment=大括號和運算符//賦值
options.language.boolean=字面量//布林值
options.language.braces=大括號和運算符//大括號
options.language.brackets=大括號和運算符//中括號
options.language.calls.function=呼叫//函式呼叫
options.language.calls.method=呼叫//方法呼叫
options.language.comment=評論
options.language.identifier=關鍵字
options.language.integer=字面量//數字
options.language.invalid.seq=字串//轉義序列//無效
options.language.keyword=關鍵字
options.language.logical=大括號和運算符//邏輯
options.language.other=大括號和運算符//其他
options.language.parentheses=大括號和運算符//圓括號
options.language.string=字面量//字串
options.language.valid.seq=字串//轉義序列//有效
project.generation.panel.language=語言\:
project.generation.panel.language.c=C
project.generation.panel.language.cpp=C++
project.generation.panel.language.standard=語言標準\:
project.generation.panel.type=類型\:
project.generation.panel.type.executable=可執行檔案
project.generation.panel.type.library=庫
project.status.action.select=選擇 meson.build
refresh.project.action.description=強制重新載入鏈接的 Meson 專案
refresh.project.action.name=重新載入 Meson 專案
resolver.cancelled.error=專案重新載入被取消
resolver.configuring.step.display.name=正在匯入到 CLion 專案模型
resolver.meson.failed=Meson 失敗，錯誤程式碼為 {0}
resolver.meson.file.not.found.message=在 ''{0}'' 中找不到 ''meson.build''
resolver.meson.not.found=缺少 Meson
resolver.meson.not.found.description=找不到 Meson。請按照<a href\="{0}">官方安裝指南</a>安裝 Meson
resolver.meson.not.started=無法執行 Meson
resolver.no.environment=無環境
resolver.not.in.process.message=Meson 僅支援 'in-process' 模式。在註冊表中設定 'Meson.system.in.process' 鍵
resolver.preparation.step.display.name=正在準備
resolver.reload.step.display.name=正在執行 Meson
resolver.unexpected.error.message=重新載入 Meson 專案期間發生意外錯誤
settings.global.configurable.empty.text=未檢測到 Meson 專案
settings.profile.tab.buildDir=建置目錄\:
settings.profile.tab.compile.options=建置選項\:
settings.profile.tab.compiler.info=編譯器解析\:
settings.profile.tab.compiler.info.automatic=自動的
settings.profile.tab.compiler.info.force.build=建置
settings.profile.tab.compiler.info.force.host=主機
settings.profile.tab.compiler.info.hint=此功能主要用於交叉編譯。在某些情況下，需要使用主機編譯器(而非建置編譯器)進行程式碼醒目提示。預設的自動模式會選擇最合適的選項，即“建置”或“主機”，其適用於大多數用例。手動選擇編譯器可以幫助解決重新載入專案後由於編譯器資訊不正確而導致程式碼醒目提示不正確的問題。
settings.profile.tab.meson.executable=Meson 可執行檔案\:
settings.profile.tab.meson.executable.comment.cancelled=版本檢測已取消
settings.profile.tab.meson.executable.comment.cant.detect=找到了可執行檔案，但未檢測到其版本
settings.profile.tab.meson.executable.comment.cant.launch=Meson 無法啟動。請按照<hyperlink>官方安裝指南</hyperlink>安裝 Meson
settings.profile.tab.meson.executable.comment.classic.detected=Meson 版本\: {0}
settings.profile.tab.meson.executable.comment.classic.detected.old=Meson 版本\: {0}。需要升級到 0.55.0 或更高版本
settings.profile.tab.meson.executable.comment.detecting=正在檢測…
settings.profile.tab.meson.executable.comment.meson.not.exists=找不到 Meson。請按照<hyperlink>官方安裝指南</hyperlink>安裝 Meson
settings.profile.tab.meson.executable.comment.mesonplusplus.detected=Meson++ 版本\: {0}。某些功能可能不可用
settings.profile.tab.meson.executable.comment.muon.detected=Muon 版本\:{0} (Meson 相容版本 {1})
settings.profile.tab.meson.executable.comment.no.toolchain=找不到工具鏈
settings.profile.tab.meson.executable.comment.not.zero.code=Meson 已離開，程式碼為 {0}。請按照<hyperlink>官方安裝指南</hyperlink>安裝 Meson
settings.profile.tab.meson.executable.comment.unexpected=版本檢測意外完成
settings.profile.tab.meson.executable.comment.wrapper.detected=Meson，附帶的包裝器版本\: {0}
settings.profile.tab.meson.executable.dialog.name=選擇 Meson 可執行檔案
settings.profile.tab.meson.executable.empty.text.cant.detect=無法檢測 Meson
settings.profile.tab.meson.executable.empty.text.detected=已檢測到\: {0}
settings.profile.tab.meson.executable.empty.text.detecting=正在檢測…
settings.profile.tab.meson.setup.options=設定選項\:
settings.profile.tab.toolchain.name=工具鏈\:
show.settings.action.name=顯示 Meson 設定
template.meson.cant.generate.project=無法建立新項目\: {0}
template.meson.cant.generate.project.unknown.reason=未知原因
template.meson.project=Meson
template.meson.project.c.executable=C 可執行檔案的 meson.build
template.meson.project.c.library=C 庫的 meson.build
template.meson.project.cpp.executable=C++ 可執行檔案的 meson.build
template.meson.project.cpp.library=C++ 庫的 meson.build
toolwindow.empty.text=未載入 Meson 專案
toolwindow.nodes.build.all.node.text=全部建置
toolwindow.nodes.build.node.description=建置目標
toolwindow.nodes.build.node.text=建置目標
toolwindow.nodes.build.target.node.text=建置 {0}
toolwindow.nodes.clean.node.text=清理
toolwindow.nodes.configure.autofeature.feature.node.text=功能\: {0}
toolwindow.nodes.configure.autofeature.feature.progress.title=啟用功能 {0}…
toolwindow.nodes.configure.autofeature.feature.task.name=啟用功能 {0}
toolwindow.nodes.configure.autofeature.node.description=覆蓋所有 'auto' 功能的值(預設值\: auto)
toolwindow.nodes.configure.autofeature.node.text=auto 功能
toolwindow.nodes.configure.backend.node.backend.node.text=使用後端 {0}
toolwindow.nodes.configure.backend.node.backend.progress.title=使用後端 {0}…
toolwindow.nodes.configure.backend.node.backend.task.name=使用後端 {0}
toolwindow.nodes.configure.backend.node.description=要使用的後端(預設值\: ninja)
toolwindow.nodes.configure.backend.node.text=後端類型
toolwindow.nodes.configure.buildtype.node.buildtype.node.text=使用建置類型 {0}
toolwindow.nodes.configure.buildtype.node.buildtype.progress.title=使用建置類型 {0}…
toolwindow.nodes.configure.buildtype.node.buildtype.task.name=使用建置類型 {0}
toolwindow.nodes.configure.buildtype.node.description=要使用的建置類型(預設值\: 偵錯)
toolwindow.nodes.configure.buildtype.node.text=建置類型
toolwindow.nodes.configure.defaultlibrary.node.defaultlibrary.node.text=選擇 {0} 庫類型
toolwindow.nodes.configure.defaultlibrary.node.defaultlibrary.progress.title=選擇 {0} 庫類型…
toolwindow.nodes.configure.defaultlibrary.node.defaultlibrary.task.name=選擇 {0} 庫類型
toolwindow.nodes.configure.defaultlibrary.node.description=預設庫類型(預設值\: 共享)
toolwindow.nodes.configure.defaultlibrary.node.text=預設庫類型
toolwindow.nodes.configure.node.description=組態 meson
toolwindow.nodes.configure.node.text=組態
toolwindow.nodes.configure.optimization.node.description=最佳化級別(預設值\: 0)
toolwindow.nodes.configure.optimization.node.optimization.node.text=最佳化級別\: {0}
toolwindow.nodes.configure.optimization.node.optimization.progress.title=選擇最佳化級別\: {0}
toolwindow.nodes.configure.optimization.node.optimization.task.name=選擇最佳化級別 {0}
toolwindow.nodes.configure.optimization.node.text=最佳化級別
toolwindow.nodes.configure.warnlevel.node.description=要使用的編譯器警告級別(預設值\: 1)
toolwindow.nodes.configure.warnlevel.node.text=警告級別
toolwindow.nodes.configure.warnlevel.node.warnlevel.node.text=警告級別\: {0}
toolwindow.nodes.configure.warnlevel.node.warnlevel.progress.title=選擇警告級別\: {0}…
toolwindow.nodes.configure.warnlevel.node.warnlevel.task.name=選擇警告級別\: {0}
toolwindow.nodes.configure.werror.node.text=將警告視為錯誤
toolwindow.nodes.configure.werror.node.werror.progress.title=將警告視為錯誤…
toolwindow.nodes.configure.werror.node.werror.task.name=將警告視為錯誤
toolwindow.nodes.dist.node.dist.progress.title=正在建立版本歸檔…
toolwindow.nodes.dist.node.dist.task.name=正在建立版本歸檔
toolwindow.nodes.dist.node.text=建立版本歸檔
toolwindow.nodes.install.node.description=安裝專案
toolwindow.nodes.install.node.install.node.text=安裝
toolwindow.nodes.install.node.install.progress.title=安裝專案…
toolwindow.nodes.install.node.install.task.name=安裝專案
toolwindow.nodes.install.node.installnorebuild.node.text=安裝(無重建)
toolwindow.nodes.install.node.installnorebuild.progress.title=安裝專案…
toolwindow.nodes.install.node.installnorebuild.task.name=安裝專案(無重建)
toolwindow.nodes.install.node.installonlychanges.node.text=安裝(僅更改)
toolwindow.nodes.install.node.installonlychanges.progress.title=安裝專案…
toolwindow.nodes.install.node.installonlychanges.task.name=安裝專案(僅更改)
toolwindow.nodes.install.node.text=安裝
toolwindow.nodes.subprojects.node.description=子專案動作
toolwindow.nodes.subprojects.node.download.node.text=下載子專案
toolwindow.nodes.subprojects.node.download.progress.title=下載子專案…
toolwindow.nodes.subprojects.node.download.task.name=下載子專案
toolwindow.nodes.subprojects.node.purge.node.text=清除子專案
toolwindow.nodes.subprojects.node.purge.progress.title=清除子專案…
toolwindow.nodes.subprojects.node.purge.task.name=清除子專案
toolwindow.nodes.subprojects.node.text=子專案
toolwindow.nodes.subprojects.node.update.node.text=更新子專案
toolwindow.nodes.subprojects.node.update.progress.title=更新子專案…
toolwindow.nodes.subprojects.node.update.task.name=更新子專案
toolwindow.nodes.test.node.test.progress.title=執行測試…
toolwindow.nodes.test.node.test.task.name=執行測試
toolwindow.nodes.test.node.text=test
