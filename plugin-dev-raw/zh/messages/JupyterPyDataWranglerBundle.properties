JupyterStringTransformationCondition.capitalize.first.character=將第一個字元大寫
JupyterStringTransformationCondition.convert.to.lower.case=轉換為小寫
JupyterStringTransformationCondition.convert.to.upper.case=轉換為大寫
RoundType.ceil=向上取整
RoundType.floor=向下取整
RoundType.round=四捨五入取整
SkewedTransformationType.logarithmic=對數
SkewedTransformationType.square.root=平方根
action.DataWrangler.Jupyter.Cell.Export.description=將生成的程式碼匯出到單元
action.DataWrangler.Jupyter.Cell.Export.text=在 {0} 中新增 DW 單元
action.DataWrangler.Jupyter.Code.Export.description=將生成的程式碼匯出到單元
action.DataWrangler.Jupyter.Code.Export.text=在 {0} 中新增單元
action.DataWrangler.Jupyter.Notebook.Export.description=將生成的程式碼匯出到新 Notebook
action.DataWrangler.Jupyter.Notebook.Export.text=新增 Notebook…
action.DataWrangler.Jupyter.Python.Script.Export.description=將生成的程式碼匯出到新的 Python 檔案
action.DataWrangler.Jupyter.Python.Script.Export.text=新增 Python 腳本…
action.DataWrangler.Jupyter.Show.description=在 Data Wrangler 中編輯表
action.DataWrangler.Jupyter.Show.text=在 Data Wrangler 中編輯
action.DataWrangler.TableFile.Show.description=在 Data Wrangler 中編輯表
action.DataWrangler.TableFile.Show.text=在 Data Wrangler 中編輯
action.DataWranglerPyTablePanel.Show.description=使用 Data Wrangler 開啟或隱藏面板
action.DataWranglerPyTablePanel.Show.text=Data Wrangler
action.JupyterAddDataWranglerCellAction.description=插入 Data Wrangler 單元
action.JupyterAddDataWranglerCellAction.text=Data Wrangler
action.JupyterConvertDataWranglerToCodeAction.description=將單元轉換為程式碼單元
action.JupyterConvertDataWranglerToCodeAction.text=將單元轉換為程式碼(_C)
action.JupyterDataWranglerEditAction.description=在 data wrangler 中編輯
action.JupyterDataWranglerEditAction.text=_在 Data Wrangler 中編輯
action.JupyterDataWranglerInputNamePopup.text.before.variable=從變數轉換
action.JupyterDataWranglerOutputNamePopup.text.before.variable=儲存到
data.wrangler.jupyter.cell.empty.action.link=新增轉換
data.wrangler.jupyter.cell.link.text=在 Data Wrangler 中編輯
data.wrangler.jupyter.command.changeType.description=將類型 {0} 修改為 {1}
data.wrangler.jupyter.command.changeType.description.hint.text=更改列的資料類型。確保為分析提供正確的資料表示。
data.wrangler.jupyter.command.changeType.label=更改類型\: {0}
data.wrangler.jupyter.command.changeType.name=更改列的類型
data.wrangler.jupyter.command.drop.description=從資料幀中移除列 {0}
data.wrangler.jupyter.command.drop.description.hint.text=永久移除 DataFrame 中的某一列。當某些特徵不再需要時使用。
data.wrangler.jupyter.command.drop.label=刪除列\: {0}
data.wrangler.jupyter.command.drop.name=拖放列
data.wrangler.jupyter.command.dropRows.description=刪除從 {0} 到 {1} 範圍內的行
data.wrangler.jupyter.command.dropRows.description.hint.text=根據索引號移除特定行。有助於消除不需要的觀測值。
data.wrangler.jupyter.command.dropRows.label=刪除行\: {0} 至 {1}
data.wrangler.jupyter.command.dropRows.name=刪除行
data.wrangler.jupyter.command.duplicates.description=刪除列中的重複行
data.wrangler.jupyter.command.duplicates.description.hint.text=移除指定列中具有相同值的行。有助於清理冗餘資料。
data.wrangler.jupyter.command.duplicates.label=移除重複項\: {0}
data.wrangler.jupyter.command.duplicates.name=移除重複項
data.wrangler.jupyter.command.encoding.description={0} 列的獨熱編碼
data.wrangler.jupyter.command.encoding.description.hint.text=將分類變數轉換為二進制列。對於準備機器學習的分類資料至關重要。
data.wrangler.jupyter.command.encoding.label=獨熱編碼\: {0}
data.wrangler.jupyter.command.encoding.name=獨熱編碼分類變數
data.wrangler.jupyter.command.fillMissing.description=使用 {1} 填充列 {0} 中的缺失值
data.wrangler.jupyter.command.fillMissing.description.hint.text=將缺失值取代為指定值。有助於在不刪除行的情況下維護資料完整性。
data.wrangler.jupyter.command.fillMissing.label=填充缺失值\: {0}
data.wrangler.jupyter.command.fillMissing.name=填充缺失
data.wrangler.jupyter.command.filter.condition.equal=等於
data.wrangler.jupyter.command.filter.condition.greater=大於
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=大於或等於
data.wrangler.jupyter.command.filter.condition.less=小於
data.wrangler.jupyter.command.filter.condition.lessOrEqual=小於或等於
data.wrangler.jupyter.command.filter.condition.notEqual=不等於
data.wrangler.jupyter.command.filter.description=帶有條件\: {0} {1}
data.wrangler.jupyter.command.filter.description.hint.text=根據等於、大於或小於等條件篩選資料。有助於聚焦特定的資料子集。
data.wrangler.jupyter.command.filter.label={0} {1} 列
data.wrangler.jupyter.command.filter.name=篩選
data.wrangler.jupyter.command.handleOutliersWithED.description=使用閾值為 {0} 的 ED 移除 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithED.description.hint.text=使用到中心的歐几里得距離尋找異常值。有助於檢測資料中的異常模式。
data.wrangler.jupyter.command.handleOutliersWithED.label=歐几里得距離異常值\: {0}
data.wrangler.jupyter.command.handleOutliersWithED.name=使用歐几里得距離檢測異常值
data.wrangler.jupyter.command.handleOutliersWithIQR.description=使用乘數為 {0} 的 IQR 移除列 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithIQR.description.hint.text=使用四分位距法檢測並移除異常值。有助於識別異常資料點。
data.wrangler.jupyter.command.handleOutliersWithIQR.label=IQR 異常值\: {0}
data.wrangler.jupyter.command.handleOutliersWithIQR.name=使用 IQR 的異常值檢測
data.wrangler.jupyter.command.handleOutliersWithMAD.description=使用閾值為 {0} 的 MAD 移除列 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithMAD.description.hint.text=使用中位數絕對偏差識別異常值。與標準差相比，對極端值更可靠。
data.wrangler.jupyter.command.handleOutliersWithMAD.label=MAD 異常值\: {0}
data.wrangler.jupyter.command.handleOutliersWithMAD.name=使用 MAD 的異常值檢測
data.wrangler.jupyter.command.handleSkewed.description=對列 {1} 套用 {0} 變換以減少偏斜
data.wrangler.jupyter.command.handleSkewed.description.hint.text=套用轉換來減少資料偏斜。有助於歸一化資料分布。
data.wrangler.jupyter.command.handleSkewed.label=減少偏斜\: {0}
data.wrangler.jupyter.command.handleSkewed.name=減少偏斜
data.wrangler.jupyter.command.init.description=建立新的 DataFrame 變數
data.wrangler.jupyter.command.init.label=複製 Python DataFrame 變數
data.wrangler.jupyter.command.init.name=複製 DataFrame
data.wrangler.jupyter.command.minMax.description=使用 Min-Max 對列 {0} 進行歸一化，最小值\: {1} 到最大值\: {2}
data.wrangler.jupyter.command.minMax.description.hint.text=將數值縮放到 0 到 1 之間的範圍。機器學習預處理的關鍵步驟。
data.wrangler.jupyter.command.minMax.label={0} 中的 Min-Max
data.wrangler.jupyter.command.minMax.name=Min-Max 縮放
data.wrangler.jupyter.command.miss.description=刪除 {0} 中缺少資料的行
data.wrangler.jupyter.command.miss.description.hint.text=移除指定列中包含缺失值(NaN, None)的行。
data.wrangler.jupyter.command.miss.label=刪除缺失值\: {0}
data.wrangler.jupyter.command.miss.name=刪除缺失值
data.wrangler.jupyter.command.remove.description=移除缺失的行
data.wrangler.jupyter.command.remove.description.hint.text=移除所有列中包含 NaN 值的行。可以快速獲取乾淨、完整的資料。
data.wrangler.jupyter.command.remove.label=移除 Na
data.wrangler.jupyter.command.remove.name=移除具有 NaN 值的行
data.wrangler.jupyter.command.removeCols.description=移除多列 {0}
data.wrangler.jupyter.command.removeCols.description.hint.text=一次移除多個列。可以簡化清理未使用特徵的過程。
data.wrangler.jupyter.command.removeCols.label=移除列
data.wrangler.jupyter.command.removeCols.name=移除多列
data.wrangler.jupyter.command.replace.description=從 {0} 到 {1}
data.wrangler.jupyter.command.replace.description.hint.text=尋找並取代資料中的特定值或模式。支援精確符合和正則表達式。
data.wrangler.jupyter.command.replace.label=在 {1} 列中{0}
data.wrangler.jupyter.command.replace.name=尋找並取代
data.wrangler.jupyter.command.round.description=將列 {1} 中的值四捨五入到小數點後 {0} 位
data.wrangler.jupyter.command.round.description.hint.text=將數值四捨五入到指定的小數位數。在需要時提高可讀性。
data.wrangler.jupyter.command.round.label=將數值四捨五入\: {0}
data.wrangler.jupyter.command.round.name=將數值四捨五入
data.wrangler.jupyter.command.split.description=按分隔符 {1} 拆分列 {0}，最多拆分 {2} 個
data.wrangler.jupyter.command.split.description.hint.text=根據分隔符將一列拆分為多列。有助於拆分複雜的文本欄位。
data.wrangler.jupyter.command.split.label=拆分列\: {0}
data.wrangler.jupyter.command.split.name=拆分列
data.wrangler.jupyter.command.standardization.description=將列 {0} 轉換為平均值為 0 和標準差為 1
data.wrangler.jupyter.command.standardization.description.hint.text=將資料歸一化為零均值和單位方差。用於統計分析和機器學習。
data.wrangler.jupyter.command.standardization.label={0} 的 Z 分數
data.wrangler.jupyter.command.standardization.name=Z 分數歸一化
data.wrangler.jupyter.command.string.transform.description={0} 中的 {0}，轉換為 {1}
data.wrangler.jupyter.command.string.transform.description.hint.text=套用文本轉換，如小寫、大寫或首字母大寫。標準化文本資料格式。
data.wrangler.jupyter.command.string.transform.label=轉換字串自\: {0}
data.wrangler.jupyter.command.string.transform.name=使用字串轉換列
data.wrangler.py.local.file.init.description=建立新的 DataFrame 變數
data.wrangler.py.local.file.init.label=將表資料匯出到 DataFrame 變數
data.wrangler.py.local.file.init.name=建立 DataFrame
jupyter.cell.wrangler.variable.popup.text=使用 Python 變數\:
unknown.command.0=未知指令 {0}
