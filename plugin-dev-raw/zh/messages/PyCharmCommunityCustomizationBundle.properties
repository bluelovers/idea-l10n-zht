action.PromoDataFrameAction.text=DataFrame
action.PromoDockerAction.text=在 Docker 中執行
action.PromoEndpointsAction.text=端點
action.PromoNewJavaScriptFile.text=JavaScript 檔案
action.PromoNewJupyterNotebook.text=Jupyter Notebook
action.PromoNewSqlFile.text=SQL 檔案
action.PromoNewTypeScriptFile.text=TypeScript 檔案
action.PromoPlotsAction.text=繪圖
action.PromoPreviewJupyterNotebook.text=Jupyter Notebook
feature.ai.assistant.description.html=<a href\="{0}">AI Assistant</a> 能夠為軟體開發提供 AI 賦能的功能。<br/>它可以幫助實作以下功能\:
feature.ai.assistant.open.toolwindow=開啟 AI Assistant
feature.ai.assistant.title=推出 AI Assistant
feature.django.code=模型、檢視、字串等的程式碼洞察和補全
feature.django.description.html=通過進階偵錯功能、實時模板等獲得專門的 <a href\="{0}">Django</a> 支援\:
feature.django.djangoTemplates=Django 模板支援\: 為您的 Django 模板獲取語法和錯誤醒目提示、程式碼補全、導覽等功能
feature.django.endpoints=端點\: 在使用 API 時獲取所有宣告的 URL 和端點的概覽
feature.jupyter.code=適用於 Jupyter 的 PyCharm 級編碼輔助
feature.jupyter.debugger=使用我們的內建偵錯器，在 Notebook 中進行進階偵錯和實時變數監控
feature.jupyter.description.html=通過將 <a href\="{0}">Jupyter Notebook</a> 與 PyCharm 提供的全部功能無縫整合來增強其功能。
feature.jupyter.tables=使您能夠瀏覽、排序、檢視和匯出資料的互動表
feature.jupyter.vcs=增強的整合，包括版本控制支援、問題分析、檔案檢視器窗格等
feature.remoteSsh.deploy=輕鬆將您的應用程式部署到遠端伺服器，確保您的程式碼在目標環境中平穩執行
feature.remoteSsh.description.html=在<a href\="{0}">遠端伺服器</a>上無縫開發、執行和偵錯您的 Python 專案，使協作和部署變得輕而易舉。
feature.remoteSsh.run=在遠端/容器環境中執行和設定中斷點、檢查變數，以及逐步執行本地程式碼
feature.remoteSsh.sync=同步程式碼、資料和其他專案檔案，使本地和遠端開發環境保持最新
misc.install.python.question=是否要安裝最新的 Python?
misc.no.python.found=在您的系統上找不到 Python 解釋器。
misc.project.error.create.dir=由於{1}，無法建立 {0}。請手動建立，然後重試。
misc.project.filling.file=正在填充模板檔案
misc.project.generating.env=正在準備環境
misc.script.text=新增腳本
new.project.other.group.name=其他
new.project.python.group.name=Python
notification.group.pro.advertiser=PyCharm 推薦
promo.configurable.django=Django
promo.configurable.jupyter=Jupyter
promo.configurable.remoteSsh=遠端 SSH
sdk.create.condaenv.exception.dialog.title=無法建立 Conda 環境
sdk.create.condaenv.permission=檔案 environment.yml 包含專案相依項。要使用它建立 conda 環境嗎?
sdk.create.condaenv.suggestion=使用 environment.yml 建立 conda 環境
sdk.create.pipenv.exception.dialog.title=無法建立 Pipenv 環境
sdk.create.pipenv.permission=檔案 Pipfile 包含專案相依項。要使用它建立 pipenv 環境嗎?
sdk.create.pipenv.suggestion=使用 {0} 建立 pipenv 環境
sdk.create.venv.permission=檔案 {0} 包含專案相依項。要使用它建立虛擬環境嗎?
sdk.create.venv.suggestion=使用 {0} 建立虛擬環境
sdk.detect.condaenv.exception.dialog.title=無法獲取 Conda 環境
sdk.dialog.title.failed.to.set.up.poetry.environment=無法設定 Poetry 環境
sdk.dialog.title.setting.up.poetry.environment=正在設定 Poetry 環境
sdk.notification.label.set.up.poetry.environment.from.pyproject.toml.dependencies=檔案 pyproject.toml 包含專案相依項。是否要設定 Poetry 環境?
sdk.progress.text.setting.up.poetry.environment=正在設定 Poetry 環境
sdk.set.up.hatch.environment=設定 Hatch 'default' 環境
sdk.set.up.hatch.project.analysis=Hatch 專案分析
sdk.set.up.poetry.environment=使用 {0} 設定 Poetry 環境
sdk.set.up.uv.environment=使用 {0} 設定 uv 環境
temporarily.ignored.file.provider.description=暫時忽略的檔案
