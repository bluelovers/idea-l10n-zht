0.is.not.an.identifier=''{0}'' 不是一個關鍵字。
annotation.name.is.missing=應為格式為 'name\=value' 的註解特性
annotation.target.ANNOTATION_TYPE=註解類型
annotation.target.CONSTRUCTOR=建構函式
annotation.target.FIELD=欄位
annotation.target.LOCAL_VARIABLE=區域變數
annotation.target.METHOD=方法
annotation.target.MODULE=模組
annotation.target.PACKAGE=軟體套件
annotation.target.PARAMETER=參數
annotation.target.RECORD_COMPONENT=記錄組件
annotation.target.TYPE=類型
annotation.target.TYPE_PARAMETER=類型參數
annotation.target.TYPE_USE=類型使用
anonymous.class.context.display=匿名在{0}
anonymous.class.derived.display=派生自 {0} 的匿名類別
aux.context.display=/{0}
bad.return.type.in.lambda.expression=lambda 表達式中存在錯誤返回值類型\: {0} 無法轉換為 {1}
bad.return.type.in.lambda.expression1=lambda 表達式中存在錯誤返回值類型\: {0} 無法轉換為 void
bad.return.type.in.method.reference=方法參照中存在錯誤返回值類型\: 無法將{0}轉換為{1}
bound.not.expected=意外綁定
catch.without.try='catch' 沒有 'try'
class.context.display={0} ({1} 內)
class.file.version=版本 {0}
class.literal.expected=應為 .class
command.name.insert.block.statement=插入塊語句
conflicting.conjuncts={0} 和 {1}
context.type.java.comment=註釋
context.type.string=字串
default.language.level.description=SDK 預設值
diamond.error.anonymous.inner.classes=無法將 '<>' 用於匿名內部類別
diamond.error.anonymous.inner.classes.non.private=由於非 private 方法不會覆寫或實作父類型中的方法，無法使用 '<>'
diamond.error.cannot.infer.arguments=無法推斷實參
diamond.error.cannot.infer.arguments.unable.to.resolve.constructor=無法推斷實參(無法解析建構函式)
diamond.error.cannot.infer.type.arguments=無法推斷 {0} 的類型實參
diamond.error.explicit.type.parameters.for.constructor=無法將 diamond 與顯式類型參數用於建構函式
element.abstract_method=abstract 方法
element.annotation=註解
element.anonymous_class=匿名類別
element.class=類別
element.constant=常數欄位
element.constructor=建構函式
element.enum=枚舉
element.enum_constant=枚舉常數
element.expression=表達式
element.extends.list=extends 列表
element.field=欄位
element.initializer=初始設定式
element.interface=接口
element.kind.and.name={0} {1}
element.label=標籤
element.local_variable=區域變數
element.method=方法
element.method.call=方法呼叫
element.module=模組
element.package=軟體套件
element.package.statement=package 語句
element.parameter=參數
element.pattern_variable=模式變數
element.permits.list=permits 列表
element.receiver.parameter=接收器參數
element.record=記錄
element.record_component=記錄組件
element.record_header=記錄頭
element.snippet_body=程式碼段正文
element.statement=語句
element.throws.list=throws 列表
element.type.arguments=類型實參
element.type.parameter=類型參數
element.type.parameters=類型參數
element.type.semicolon=分號
element.unknown=元素
element.variable=變數
else.without.if='else' 沒有 'if'
enum.constant.context=枚舉常數 ''{0}'' 在 ''{1}''
error.incompatible.type={0} 與 {1} 不相容
error.incompatible.type.bad.lambda.return.type=lambda 表達式中存在錯誤返回值類型\: {0} 無法轉換為 {1}
error.incompatible.type.declaration.for.the.method.reference.not.found=未找到方法參照的編譯時宣告
error.incompatible.type.expected.non.void.got.void.method.reference=不相容的類型\: 不應當為 void，但方法參照的編譯時宣告具有 void 返回值類型
error.incompatible.type.expected.value.lambda=不相容的類型\: 不應當為 void，但 lambda 體是與值不相容的塊
error.incompatible.type.failed.to.resolve.argument=無法解析實參
error.incompatible.type.incompatible.equality.constraint=不相容的相等約束\: {0} 和 {1}
error.incompatible.type.incompatible.parameter.types.in.lambda=Lambda 參數數量錯誤\: 應為 {0} 個，但實際為 {1} 個
error.incompatible.type.incompatible.parameter.types.in.method.reference=方法參照表達式中存在不相容的參數類型
error.incompatible.type.incompatible.types.expected.not.void.got.void.method.reference=不相容的類型\: 不應當為 void，但方法參照的編譯時宣告具有 void 返回值類型
error.incompatible.type.incompatible.types.expected.void.lambda=不相容的類型\: 應為 void，但 lambda 體既不是語句表達式，也不是與 void 相容的塊
error.incompatible.type.no.type.variable=不存在類型變數的實例，使 {0}
error.incompatible.type.no.type.variable.0=不存在類型變數 {0} 的實例，使 {1}
error.incompatible.type.no.valid.function.type.found=未找到 {0} 的有效函式類型
error.incompatible.type.not.a.functional.interface={0} 不是函式式接口
error.incompatible.type.not.convertible=不相容的類型\: {0} 無法轉換為 {1}
error.incompatible.type.parameter.type.is.not.yet.inferred=參數類型尚未推斷\: {0}
error.incompatible.type.return.type.is.not.yet.inferred=返回值類型尚未推斷\: {0}
error.incompatible.type.unhandled.exception=未處理的異常\: {0}
error.incompatible.upper.bounds=不相容的上限\: {0}
error.inference.variable.has.incompatible.bounds=推斷變數 {0} 的界限不相容\:\n {1}\: {2}\n{3}\: {4}
error.message.wildcard.not.expected=意外萬用字元
error.type.parameter.has.incompatible.upper.bounds=類型參數 {0} 的上限不相容\: {1}
expected.array.initializer=應為陣列初始設定式
expected.boolean.expression=應為布爾表達式
expected.case.label.element=應為表達式、模式、'default' 或 'null'
expected.catch.or.finally=應為 'catch' 或 'finally'
expected.class.or.interface=應為 'class' 或 'interface'
expected.class.reference=應為類別參照
expected.colon=應為 '\:'
expected.colon.or.arrow=應為 '\:' 或 '->'
expected.comma=應為 ','
expected.comma.or.rparen=應為 ',' 或 ')'
expected.comma.or.semicolon=應為 ',' 或 ';'
expected.dot=應為 '.'
expected.eq=應為 '\='
expected.expression=應為表達式
expected.gt=應為 '>'。
expected.gt.or.comma=應為 '>' 或 ','
expected.identifier=應為關鍵字
expected.identifier.or.semicolon=應為關鍵字或 ';'
expected.identifier.or.type=應為關鍵字或類型
expected.lbrace=應為 '{'
expected.lbrace.or.semicolon=應為 '{' 或 ';'
expected.lbracket=應為 '['
expected.lparen=應為 '('
expected.lparen.or.lbracket=應為 '(' 或 '['
expected.lt.or.lparen=應為 '<' 或 '('
expected.module.declaration=應為模組宣告
expected.module.statement=應為模組指令
expected.package.reference=應為軟體套件參照
expected.parameter=應為參數
expected.parameter.or.rparen=應為註解特性或 ')'
expected.pattern=應為模式
expected.rbrace=應為 '}'
expected.rbracket=應為 ']'
expected.resource=應為資源定義
expected.rparen=應為 ')'
expected.semicolon=應為 ';'
expected.statement=應為語句
expected.string=應為字串字面量
expected.switch.label=應為 'case'、'default' 或 '}'
expected.switch.rule=應為表達式、塊或 throw 語句
expected.template.fragment=應為模板片段
expected.type=應為類型
expected.type.parameter=應為類型參數
expected.value=應為值
expected.while=應為 'while'
expected.with=應為 'with'
filetype.class.description=Java 類別
filetype.class.display.name=Java 類別
filetype.java.description=Java
filetype.java.module.description=Java 模組
filetype.java.module.display.name=Java 模組
filetype.jshell.description=JShell 程式碼段
finally.without.try='finally' 沒有 'try'
implicit.class.context.display=壓縮原始檔
import.statement.identifier.or.asterisk.expected.=應為關鍵字或 '*'
java.terms.anonymous.class.base.ref=匿名{0}
javadoc.exception.tag.class.is.not.throwable=類別 {0} 不是 Throwable 的後代
javadoc.exception.tag.exception.is.not.thrown={0} 未被宣告為由方法 {1} 拋出
javadoc.exception.tag.wrong.tag.value=標籤值錯誤
javadoc.param.tag.parameter.name.expected=應為參數名稱
javadoc.param.tag.type.parameter.gt.expected=應為 '>'
javadoc.param.tag.type.parameter.name.expected=應為類型參數名稱
javadoc.ref.tag.class.ref.expected=應為類別參照
javadoc.value.field.required=@value 標記必須參照欄位
javadoc.value.field.with.initializer.required=@value 標記必須參照具有常數初始設定式的欄位
javadoc.value.static.field.required=@value 標記必須參照 static 欄位
javadoc.value.tag.jdk15.required=使用 JDK 1.4 或更早版本時，@value 標記可能沒有任何實參
lambda.body.must.be.a.statement.expression=lambda 體必須是語句表達式
list.item.no.module=<無模組>
local.class.preposition=本地
method.context.display={0}() 在 {1}
missing.return.value.lambda=缺少返回值
node.abstract.flag.tooltip=abstract
node.annotation.tooltip=註解
node.anonymous.class.tooltip=匿名類別
node.class.tooltip=類別
node.enum.tooltip=枚舉
node.exception.tooltip=異常
node.field.tooltip=欄位
node.final.flag.tooltip=Final
node.interface.tooltip=接口
node.junit.test.tooltip=JUnit測試
node.method.tooltip=方法
node.record.tooltip=記錄
node.runnable.class.tooltip=Runnable類別
node.simple.source.file.tooltip=壓縮原始檔
node.static.flag.tooltip=static
psi.error.attempt.to.edit.class.file=無法修改檔案中的已編譯元素''{0}''
task.background.title.maven=Maven
type.can.be.converted={0} 無法轉換為 {1}
type.conforms.to.constraint={0} 符合 {1}
unexpected.identifier=意外關鍵字
unexpected.return.value=意外返回值
unexpected.token=意外的標記
unexpected.tokens=意外的標記
