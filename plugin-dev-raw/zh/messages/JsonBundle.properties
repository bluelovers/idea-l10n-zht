json.array=陣列
json.object=物件
json.property=屬性

syntax.error.missing.closing.quote=缺少右引號
syntax.error.illegal.escape.sequence=非法轉義序列
syntax.error.illegal.unicode.escape.sequence=非法 Unicode 轉義序列
syntax.error.illegal.floating.point.literal=非法浮點文字
syntax.error.control.char.in.string=字串文字中不允許使用控制字符 ''{0}''

# Inspections
json.inspection.group=JSON 和 JSON5

inspection.compliance.name=符合 JSON 標準
inspection.compliance5.name=符合 JSON5 標準
inspection.compliance.msg.comments=JSON 標準不允許註釋。在解析前，請使用 JSMin 或類似工具移除註釋。
inspection.compliance.msg.single.quoted.strings=JSON 標準不允許使用帶單引號的字串
inspection.compliance.msg.bad.token=JSON 標準不允許使用此類令牌
inspection.compliance.msg.illegal.property.key=JSON 標準只允許將帶雙引號的字串作為屬性鍵
inspection.compliance.msg.trailing.comma=JSON 標準不允許使用尾隨逗號
inspection.compliance.msg.multiple.top.level.values=JSON 標準只允許使用一個頂層值

inspection.compliance.option.comments=關於註釋的警告
inspection.compliance.option.multiple.top.level.values=關於多個頂層值的警告
inspection.compliance.option.trailing.comma=關於尾隨逗號的警告
inspection.compliance.option.nan.infinity=關於 NaN 和無窮大/負無窮大數值的警告

inspection.duplicate.keys.name=物件文字中的重複鍵
inspection.duplicate.keys.msg.duplicate.keys=物件包含重複鍵 ''{0}''

inspection.jsonpath.unknown.function=未知 JSONPath 函數
inspection.jsonpath.unknown.operator=未知 JSONPath 運算符
inspection.jsonpath.unknown.key=為 JSONPath 求值表達式使用未知屬性鍵
inspection.message.jsonpath.unknown.function.name=未知函數名稱 ''{0}''
inspection.message.jsonpath.unknown.operator.name=未知運算符 ''{0}''
inspection.message.jsonpath.unknown.key=屬性鍵 ''{0}'' 未在源 JSON 文檔中定義
inspection.message.jsonpath.unsupported.jayway.function=Jayway JSONPath 實作中不支持函數 {0}
inspection.message.jsonpath.unsupported.jayway.operator=Jayway JSONPath 實作中不支持運算符 {0}

# Formatter
formatter.align.properties.caption=對齊

formatter.align.properties.none=不對齊
formatter.align.properties.on.colon=冒號上
formatter.align.properties.on.value=值上
formatter.space_within_braces.label=大括號
formatter.space_before_colon.label=在 ':' 前
formatter.space_after_colon.label=在 ':' 後
formatter.trailing_comma.label=尾隨逗號
formatter.wrapping_arrays.label=陣列
formatter.objects.label=物件

# Quickfixes and editor actions
quickfix.add.double.quotes.desc=使用雙引號包裝

surround.with.object.literal.desc=物件文字
surround.with.array.literal.desc=陣列文字
surround.with.quotes.desc=引號
json.template.context.type=JSON

json.copy.to.clipboard=將 {0} 複製到剪貼簿

#json schema
json.schema.add.schema.chooser.title=選擇 JSON 架構檔案
json.schema.annotation.not.allowed.property=不允許使用屬性 ''{0}''
json.schema.conflicting.mappings=警告: 衝突映射。<a href="#">顯示詳細資訊</a>
json.schema.file.selector.title=架構檔案或 URL:
json.schema.version.selector.title=架構版本:
json.schema.file.not.found=找不到檔案
json.schema.inspection.compliance.name=符合 JSON 架構
json.schema.inspection.deprecation.name=棄用的 JSON 屬性
json.schema.inspection.case.insensitive.enum=枚舉值符合不區分大小寫

json.schema.ref.refs.inspection.name=未解析的 '$ref' 和 '$schema' 引用
json.schema.ref.file.not.found=找不到檔案 ''{0}''
json.schema.ref.cannot.resolve.path=無法解析路徑 ''{0}''
json.schema.ref.cannot.resolve.id=無法解析 id ''{0}''
json.schema.ref.no.array.element=陣列不包含索引為 ''{0}'' 的元素
json.schema.ref.no.property=找不到屬性 ''{0}''

settings.display.name.json=JSON
settings.display.name.jsonpath=JSONPath

settings.json.schema.add.mapping=添加映射
settings.json.schema.edit.mapping=編輯映射
settings.json.schema.remove.mapping=移除映射

json.intention.sort.properties=按字母順序對屬性排序
configurable.JsonSmartKeysConfigurable.display.name=JSON
configurable.JsonSchemaMappingsConfigurable.display.name=JSON 架構映射
configurable.JsonSchemaCatalogConfigurable.display.name=遠端 JSON 架構
settings.smart.keys.insert.missing.comma.on.enter=按 Enter 時插入缺失的逗號
settings.smart.keys.insert.missing.comma.after.matching.braces.and.quotes=在符合的大括號和引號後面插入缺失的逗號
settings.smart.keys.automatically.manage.commas.when.pasting.json.fragments=貼上 JSON 片段時自動管理逗號
settings.smart.keys.escape.text.on.paste.in.string.literals=在貼上字串文字時轉義文本
settings.smart.keys.automatically.add.quotes.to.property.names.when.typing.comma=鍵入 ':' 時自動向屬性名稱中添加引號
settings.smart.keys.automatically.add.whitespace.when.typing.comma.after.property.names=在屬性名稱後面鍵入 ':' 時自動添加空格
settings.smart.keys.automatically.move.comma.after.the.property.name.if.typed.inside.quotes=如果在引號內鍵入，則自動將 ':' 移至屬性名稱後面
settings.smart.keys.automatically.move.comma.after.the.property.value.or.array.element.if.inside.quotes=如果是在引號中，則自動將逗號移至屬性值或陣列元素後面
checkbox.use.schemastore.org.json.schema.catalog=使用 schemastore.org JSON 架構目錄
checkbox.allow.downloading.json.schemas.from.remote.sources=允許從遠端源下載 JSON 架構
checkbox.always.download.the.most.recent.version.of.schemas=始終下載最新版本的架構
action.DumbAware.JsonSchemaMappingsConfigurable.text.add=添加
action.DumbAware.JsonSchemaMappingsConfigurable.description.add=添加
filetype.json.description=JSON
filetype.json_lines.description=JSON 行
filetype.jsonpath.description=JSONPath
copy.json.pointer=複製 JSON 指針
cannot.sort.properties=無法對屬性排序
file.is.readonly=檔案為唯讀
not.applicable.in.batch.mode=不適用於批處理模式
sorry.this.fix.is.not.available.in.batch.mode=抱歉，此修正在批處理模式下不可用
replace.with.allowed.value=取代為允許的值
json.schema=JSON 架構
remove.prohibited.property=移除禁止的屬性
add.missing.0=添加缺失的{0}
add.missing.properties=添加缺失的屬性

path.to.file.or.directory.relative.to.project.root.or.file.name=相對於專案根的檔案或目錄的路徑，或文件名模式，例如 *.config.json
json.property.keys=JSON 屬性鍵
json.string.values=JSON 字串值
property.0.is.deprecated.1=屬性 ''{0}'' 已被棄用: {1}
add.mapping.for.a=為以下物件添加映射:
no.schema.mappings.defined=未定義架構映射
filetype.json5.description=JSON5
unnamed.desc=<unnamed>
navigate.to.duplicates=導航到重複項
navigate.to.duplicates.header=''{0}'' 的重複項
navigate.to.duplicates.desc=第 #{1} 行的 ''{0}''
annotation.property.key=屬性鍵
color.page.attribute.keyword=關鍵字
color.page.attribute.string=字串
color.page.attribute.number=數值
color.page.attribute.colon=冒號
color.page.attribute.comma=逗號
color.page.attribute.brackets=中括號
color.page.attribute.braces=大括號
color.page.attribute.block.comment=塊註釋
color.page.attribute.line.comment=行註釋
color.page.attribute.property.key=屬性鍵
color.page.attribute.invalid.escape.sequence=無效的轉義序列
color.page.attribute.valid.escape.sequence=有效轉義序列

jsonpath.color.page.keyword=關鍵字
jsonpath.color.page.identifier=關鍵字
jsonpath.color.page.string=字串
jsonpath.color.page.number=數值
jsonpath.color.page.boolean=布爾
jsonpath.color.page.function=函數調用
jsonpath.color.page.context=上下文變數
jsonpath.color.page.brackets=大括號和運算符//中括號
jsonpath.color.page.braces=大括號和運算符//大括號
jsonpath.color.page.colon=大括號和運算符//冒號
jsonpath.color.page.comma=大括號和運算符//逗號
jsonpath.color.page.dot=大括號和運算符//點
jsonpath.color.page.operation.sign=大括號和運算符//運算符號
jsonpath.color.page.parentheses=大括號和運算符//圓括號

jsonpath.completion.key=鍵
jsonpath.evaluate.no.result=評估表達式以查看結果
jsonpath.toolwindow.evaluate.stripe=評估 JSONPath
jsonpath.toolwindow.evaluate.on.snippet=程式碼段
jsonpath.toolwindow.evaluate.on.snippet.n=程式碼段({0})
jsonpath.toolwindow.evaluate.on.file=檔案 {0}
jsonpath.evaluate.intention=評估 JSONPath 表達式
jsonpath.evaluate.export.result=匯出 JSONPath 評估結果
jsonpath.evaluate.progress.export.result=正在匯出 JSONPath 評估結果

jsonpath.evaluate.add.tab.text=新建頁籤
jsonpath.evaluate.input=JSON 輸入:
jsonpath.evaluate.result=結果:

jsonpath.evaluate.options=選項
jsonpath.evaluate.output.option=輸出:
jsonpath.evaluate.output.values=匹配值
jsonpath.evaluate.output.paths=路徑表達式

jsonpath.evaluate.suppress.exceptions=評估期間禁止異常
jsonpath.evaluate.return.list=始終返回結果列表
jsonpath.evaluate.nullize.missing.leaf=對缺少的葉返回 Null
jsonpath.evaluate.require.all.properties=需要所有屬性
jsonpath.evaluate.file.not.found=找不到輸入檔案

qualified.name.qualified=限定名稱
qualified.name.pointer=JSON 指針

schema.of.version=JSON 架構版本 {0}

schema.configuration.error.empty.file.path=空檔案路徑無任何符合項
schema.configuration.error.empty.pattern=空模式無任何符合項
schema.configuration.error.unknown.mapping=未知映射類型
schema.configuration.project.directory={0}[專案目錄]

schema.configuration.error.empty.path=架構路徑為空
schema.configuration.error.invalid.url=無效架構 URL
schema.configuration.error.invalid.url.resource=無效 URL 資源
schema.configuration.error.file.does.not.exist=架構檔案不存在
schema.configuration.error.empty.name=架構名稱為空
schema.configuration.error.duplicate.name=重複的架構名稱: ''{0}''
schema.configuration.error.conflicting.mappings.title=衝突的映射:\n{0}
schema.configuration.error.conflicting.mappings.desc=對於架構 ''{1}'' 為 ''{0}''，對於架構 ''{3}'' 為 ''{2}''


schema.configuration.mapping.empty.area.string=選擇要查看的 JSON 架構
schema.configuration.mapping.empty.area.alt.string=請添加 JSON 架構檔案並設定其用法
schema.configuration.mapping.remote=遠端架構 URL

schema.mapping.file=檔案
schema.mapping.pattern=檔案路徑模式
schema.mapping.directory=目錄

schema.catalog.hint=將使用 <a href="https://schemastore.org/json/">SchemaStore API</a> 下載和分配架構
schema.catalog.remote.hint=始終從 SchemaStore 下載架構，即使其中一些架構與 IDE 捆綁也下載

schema.widget.registered.schemas=已註冊的架構
schema.widget.store.schemas=SchemaStore.org 架構
schema.widget.add.mapping=新建架構映射…
schema.widget.edit.mappings=編輯架構映射…
schema.widget.load.mappings=載入 SchemaStore 映射
schema.widget.prefix.json.files=JSON:
schema.widget.prefix.other.files=架構:
schema.widget.display.name=JSON 架構
schema.widget.tooltip.json.files=JSON 架構:
schema.widget.tooltip.other.files=由 JSON 架構驗證:
schema.widget.service=JSON 架構服務
schema.widget.conflict.message.prefix=有多個 JSON 架構映射到此檔案:<br/>
schema.widget.conflict.message.postfix=架構(!)
schema.widget.download.in.progress.tooltip=已計劃下載或正在下載
schema.widget.download.in.progress.label=正在下載 JSON 架構
schema.widget.error.label=JSON 架構錯誤
schema.widget.error.not.a.schema=檔案不是架構
schema.widget.error.cant.download=下載架構時出錯
schema.widget.bundled.postfix= (捆綁)
schema.widget.no.schema.label=無 JSON 架構
schema.widget.no.schema.tooltip=未定義 JSON 架構
schema.widget.package.postfix=(軟體套件: ''{0}'')
schema.widget.conflict.popup.title=JSON 架構衝突映射
schema.widget.checking.state.text={0}正在分析…
schema.widget.checking.state.tooltip=正在分析…

schema.reader.cant.load.file=無法載入 JSON 架構檔案 ''{0}''
schema.reader.cant.load.model=無法載入 JSON 架構檔案 ''{0}'' 的程式碼模型
schema.reader.file.too.large=未從 ''{0}'' 載入 JSON 架構，因為它太大(檔案大小為 {1} 字節)
schema.reader.file.empty=未從 ''{0}'' 載入 JSON 架構。檔案為空
schema.reader.file.not.found.or.error=找不到 JSON 架構或 ''{0}'' 中包含錯誤: {1}

schema.documentation.deprecated.postfix= (已棄用)

schema.validation.property=屬性 {0}
schema.validation.properties=屬性 {0}

schema.validation.array.shorter.than=陣列短於 {0}
schema.validation.array.longer.than=陣列長於 {0}
schema.validation.array.not.contains='contains' 規則無符合
schema.validation.array.no.extra=不允許使用其他條目
schema.validation.not.unique=條目非唯一
schema.validation.enum.mismatch=值應為以下選項之一: {0}
schema.validation.against.not=根據 'not' 架構進行驗證
schema.validation.integer.expected=應為整數值
schema.validation.number.expected=應為 Double 值
schema.validation.not.multiple.of=不是 {0} 的倍數
schema.validation.greater.than.exclusive.maximum=大於獨佔最大值 {0}
schema.validation.greater.than.maximum=大於最大值 {0}
schema.validation.less.than.exclusive.minimum=小於獨佔最小值 {0}
schema.validation.less.than.minimum=小於最小值 {0}
schema.validation.missing.required.property.or.properties=缺少必需{0}
schema.validation.number.of.props.less.than=屬性數量小於 {0}
schema.validation.number.of.props.greater.than=屬性數量大於 {0}
schema.validation.violated.dependency=違反依賴關係: 由於指定了 ''{1}''，因此必須指定 {0}
schema.validation.string.shorter.than=字串短於 {0}
schema.validation.string.longer.than=字串長於 {0}
schema.validation.invalid.string.pattern=由於錯誤，無法按模式檢查字串: {0}
schema.validation.string.violates.pattern=字串違反模式: ''{0}''
schema.validation.actual=實際:
schema.validation.incompatible.types=不相容的類型。
schema.validation.required.one=要求: {0}。{1}
schema.validation.required.one.of=要求為以下選項之一: {0}。{1}
schema.validation.to.more.than.one=驗證多個變體
schema.validation.one.of.property.sets.required=需要以下屬性集之一: {0}
schema.validation.at.least.one.of.property.sets.required=應至少具有以下屬性集之一: {0}
schema.add.mapping.kind.text=添加 {0}

json.intention.category.name=JSON