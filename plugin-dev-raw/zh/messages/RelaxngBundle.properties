relaxng.annotator.definition-doesnt-override-anything-from=定義不覆寫 {0} 中的任何內容
relaxng.annotator.overrides.x.in.y=覆寫 {1} 中的 ''{0}''
relaxng.annotator.unresolved-namespace-prefix=未解析的命名空間前綴 ''{0}''
relaxng.annotator.unresolved-pattern-reference=未解析的模式引用 ''{0}''

relaxng.convert-schema.action.title.non-xml=轉換架構…
relaxng.convert-schema.action.title.xml-files=從 XML {0, choice, 1#檔案|2#檔案} 生成架構…

relaxng.convert-schema.advanced-options.dialog.title=進階轉換選項
relaxng.convert-schema.advanced-options.dtd.action.remove-entry.description=移除條目
relaxng.convert-schema.advanced-options.dtd.border-title.dtd-input=DTD 輸入
relaxng.convert-schema.advanced-options.dtd.border-title.namespace-settings=命名空間設定
relaxng.convert-schema.advanced-options.dtd.checkbox.generate-start=generate-start(&G)
relaxng.convert-schema.advanced-options.dtd.checkbox.inline-attlist=inline-attlist(&I)
relaxng.convert-schema.advanced-options.dtd.checkbox.strict-any=strict-any(&S)
relaxng.convert-schema.advanced-options.dtd.label.any-name=any-name(&N):
relaxng.convert-schema.advanced-options.dtd.label.annotation-prefix=annotation-prefix(&O):
relaxng.convert-schema.advanced-options.dtd.label.attlist-define=attlist-define(&A):
relaxng.convert-schema.advanced-options.dtd.label.colon-replacement=colon-replacement(&C):
relaxng.convert-schema.advanced-options.dtd.label.default=預設(&D):
relaxng.convert-schema.advanced-options.dtd.label.element-define=element-define(&E):
relaxng.convert-schema.advanced-options.dtd.tooltip.annotation-prefix=預設值使用註解特性 prefix:defaultValue 表示，其中前綴綁定到 RELAX NG DTD 兼容性委員會規範定義的 http://relaxng.org/ns/compatibility/annotations/1.0。預設情況下，Trang 將為前綴使用 a，除非該前綴與 DTD 中使用的前綴衝突。
relaxng.convert-schema.advanced-options.dtd.tooltip.strict-any=通過對宣告的所有元素使用顯式選擇的引用，保留 ANY 內容模型的確切語意。預設情況下，Trang 使用允許任意元素的萬用字元。
relaxng.convert-schema.advanced-options.dtd.tooltip.colon-replacement=在構造用於表示 DTD 中元素宣告和特性列表宣告的定義名稱時，將元素名稱中的冒號取代為字符。Trang 為 DTD 中的每個元素宣告和特性列表宣告生成定義。定義名稱基於元素的名稱。在 RELAX NG 中，定義名稱不能包含冒號。但在 DTD 中，元素名稱可以包含冒號。預設情況下，Trang 將首先嘗試使用不帶前綴的元素名稱。如果這引起衝突，會將冒號取代為合法的名稱字符(首先嘗試使用句點)。
relaxng.convert-schema.advanced-options.dtd.tooltip.element-define=指定如何根據元素名稱構造表示元素宣告的定義名稱。名稱模式必須只包含一個百分號字符。此百分號字符被取代為元素名稱(在進行冒號取代後)，結果用作定義名稱
relaxng.convert-schema.advanced-options.dtd.tooltip.inline-attlist=指定不生成特性列表宣告的定義，而是將特性列表宣告中宣告的特性移動到為元素宣告生成的定義中。這是輸出模組為 xsd 時的預設行為。否則，預設行為如 -i no-inline-attlist 參數中所述。
relaxng.convert-schema.advanced-options.dtd.tooltip.any-name=對於 DTD 中宣告為具有 ANY 內容模型的元素，指定為元素內容生成的定義名稱。
relaxng.convert-schema.advanced-options.dtd.tooltip.generate-start=指定 Trang 是否應生成起始元素。DTD 未指示允許哪些元素作為文檔元素。Trang 假定允許所有已定義但從未引用的元素作為文檔元素。
relaxng.convert-schema.advanced-options.dtd.tooltip.attlist-define=指定如何根據元素名稱構造表示特性列表宣告的定義名稱。名稱模式必須只包含一個百分號字符。此百分號字符被取代為元素名稱(在進行冒號取代後)，結果用作定義名稱.

relaxng.convert-schema.advanced-options.xsd.border-title.w3c-xml-schema-output=W3C XML 架構輸出
relaxng.convert-schema.advanced-options.xsd.checkbox.disable-abstract-elements=disable-abstract-elements(&D)
relaxng.convert-schema.advanced-options.xsd.label.any-attribute-process-contents=any-attribute-process-contents(&N)
relaxng.convert-schema.advanced-options.xsd.label.any-process-contents=any-process-contents(&A)
relaxng.convert-schema.advanced-options.xsd.tooltip.any-attribute-process-contents=指定任意特性元素的 processContents 特性的值。\n預設為 skip (對應 RELAX NG 語意)。
relaxng.convert-schema.advanced-options.xsd.tooltip.any-process-contents=指定任意元素的 processContents 特性的值。\n預設為 skip (對應 RELAX NG 語意)，除非輸入格式為 dtd，\n在這種情況下，預設為 strict (對應\nDTD 語意)。
relaxng.convert-schema.advanced-options.xsd.tooltip.disable-abstract-elements=在生成的 XML 架構中禁用\n抽象元素和取代組。\n也可以使用註解特性進行控制。

relaxng.convert-schema.dialog.file-exists.message=檔案 ''{0}'' 已存在。是否覆蓋?
relaxng.convert-schema.dialog.file-exists.title=輸出檔案存在
relaxng.convert-schema.dialog.title=轉換架構檔案

relaxng.convert-schema.settings.border-title.output-destination=輸出目標
relaxng.convert-schema.settings.border-title.output-options=輸出選項
relaxng.convert-schema.settings.border-title.output-type=輸出類型
relaxng.convert-schema.settings.destination.message=請選擇應放置生成檔案的目標
relaxng.convert-schema.settings.destination.title=模式轉換目標
relaxng.convert-schema.settings.label.encoding=編碼(&E):
relaxng.convert-schema.settings.label.indent=縮排(&I):
relaxng.convert-schema.settings.label.line-length=行長度(&L):
relaxng.convert-schema.settings.radio-button.dtd=DTD(&D)
relaxng.convert-schema.settings.radio-button.relax-ng-compact-syntax=RELAX NG - 緊湊語法(&C)
relaxng.convert-schema.settings.radio-button.relax-ng-xml-syntax=RELAX NG - XML 語法(&R)
relaxng.convert-schema.settings.radio-button.w3c-xml-schema=W3C XML 架構(&S)

relaxng.gutter.is-overridden=被覆寫
relaxng.gutter.go-to-overridden-define=轉到覆寫的定義
relaxng.gutter.go-to-overriding-defines=轉到覆寫定義

filetype.relaxng.compact-syntax.description=RELAX NG 緊湊語法

relaxng.inspection.group-name=RELAX NG
relaxng.inspection.unresolved-reference.name=未解析的引用
relaxng.inspection.unused-define.message=未引用的定義
relaxng.inspection.unused-define.name=未使用的定義

relaxng.message-viewer.warning.message={0} 仍在執行。仍然關閉?
relaxng.message-viewer.warning.title={0} 正在執行
relaxng.message-viewer.tab-title.convert-schema=轉換架構
relaxng.message-viewer.tab-title.validate-relax-ng=驗證 RELAX NG

relaxng.parse.error.equals-expected=應為 =
relaxng.parse.error.equals-orequals-or-andequals-expected=應為 =、|= 或 \\&=
relaxng.parse.error.identifier-expected=應為關鍵字
relaxng.parse.error.lbrace-expected=應為 {
relaxng.parse.error.literal-expected=應為文字
relaxng.parse.error.name-class-expected=應為名稱類別
relaxng.parse.error.namespace-expected=應為 'namespace'
relaxng.parse.error.namespace-uri-or-inherit-expected=應為命名空間 URI 或 'inherit'
relaxng.parse.error.pattern-expected=應為模式
relaxng.parse.error.rbrace-expected=應為 }
relaxng.parse.error.rparen-expected=應為 )
relaxng.parse.error.uri-literal-expected=應為 URI 文字

relaxng.quickfix.create-declaration.name=創建{0}宣告 ''{1}''
relaxng.quickfix.create-pattern.family=創建模式
relaxng.quickfix.create-pattern.name=創建模式 ''{0}''
relaxng.quickfix.remove-define=移除定義

relaxng.suppress.action.name=對{0}禁止
relaxng.symbol.pattern-definition=模式定義

action.ConvertSchemaAction.text=轉換架構…
action.ConvertSchemaAction.description=將所選架構文檔 (RNG、RNC、XSD、DTD) 轉換為另一種格式
prefix=前綴
