action.Gradle.DownloadSources.description=下載專案中使用的所有庫的原始碼
action.Gradle.DownloadSources.text=下載原始碼
action.Gradle.ExecuteTask.text=執行 Gradle 任務
action.Gradle.ImportExternalProject.description=鏈接此檔案描述的 Gradle 專案
action.Gradle.ImportExternalProject.text=鏈接 Gradle 專案
action.Gradle.OpenProjectCompositeConfiguration.text=複合建置組態
action.Gradle.ShowDaemons.text=顯示 Gradle 守護程序
action.Gradle.ToggleOfflineAction.description=切換 Gradle 建置的脫機模式
action.Gradle.ToggleOfflineAction.text=切換脫機模式
advanced.setting.gradle.attach.scripts.dependencies.sources=Attach scripts dependencies sources
advanced.setting.gradle.attach.scripts.dependencies.sources.description=Attach sources for build scripts dependencies during the project import. A project sync is required to attach the sources after selecting this option.
advanced.setting.gradle.download.sources=下載源
advanced.setting.gradle.download.sources.automatically=開啟時自動下載檔案的原始碼
advanced.setting.gradle.download.sources.automatically.description=導覽到檔案的反編譯程式碼時自動下載原始碼。
advanced.setting.gradle.download.sources.description=在專案匯入期間下載專案相依項的原始碼。選中此框後，需要進行專案同步才能下載原始碼。
advanced.setting.gradle.run.using.gradle=使用 Gradle 執行
advanced.setting.gradle.run.using.gradle.description=預設情況下，IDE 會使用 Gradle 建置專案並執行任務。如果停用，將使用 IDE 執行應用程式組態。
advanced.settings.gradle=建置工具。Gradle
column.name.daemon.PID=PID
column.name.daemon.info=資訊
column.name.daemon.status=狀態
column.name.daemon.timestamp=時間戳
compiler.build.messages.gradle.configuration.not.found=無法生成 ''{0}''。\n找不到相關的 gradle 組態。請重新匯入 Gradle 專案，然後重試。
daemons.started.by.are.displayed=顯示由 {0} (或類似組態的其他守護程序)啟動的守護程序。<i>支援 4.5 或更高版本。<i>
grable.execution.name.upgrade.wrapper=升級 Gradle 包裝器
gradle.action.download.sources=下載原始碼
gradle.action.download.sources.busy.text=正在下載源…
gradle.action.refresh.dependencies.description=使用 --refresh-dependencie 實參重新整理 Gradle 快取中的相依項
gradle.action.refresh.dependencies.text=重新整理 Gradle 相依項
gradle.auto.jdk.was.selected=It is not possible to use the currently selected Gradle JVM for the operation.\nThe installation from {0} will be used instead.
gradle.build.issue.daemon.toolchain.download.error.title=無法安裝工具鏈符合標準
gradle.build.issue.daemon.toolchain.downloaded.mismatch.criteria.title=意外下載的工具鏈規範
gradle.build.issue.daemon.toolchain.invalid.criteria.title=Gradle 守護程序 JVM 標準無效
gradle.build.issue.daemon.toolchain.not.found.title=找不到符合 Gradle 守護程序 JVM 標準的工具鏈
gradle.build.issue.daemon.toolchain.repositories.undefined.title=未定義的工具鏈下載儲存庫
gradle.build.issue.daemon.toolchain.undefined.criteria.title=未定義的 Gradle 守護程序 JVM 標準
gradle.build.issue.gradle.compatible.maximum.description=相容的最高 Gradle 版本為 {0}。
gradle.build.issue.gradle.compatible.minimum.description=相容的最低 Gradle 版本為 {0}。
gradle.build.issue.gradle.deprecated.description=Gradle {0} 支援已被棄用並已安排移除
gradle.build.issue.gradle.deprecated.title=棄用的 Gradle 版本
gradle.build.issue.gradle.jvm.compatible.maximum.description=相容的最高 Gradle JVM 版本為 {0}。
gradle.build.issue.gradle.jvm.compatible.minimum.description=相容的最低 Gradle JVM 版本為 {0}。
gradle.build.issue.gradle.jvm.incompatible.description=您的建置當前組態為使用不相容的 Java {0} 和 Gradle {1}。無法同步專案。
gradle.build.issue.gradle.jvm.incompatible.title=不相容的 Gradle JVM
gradle.build.issue.gradle.jvm.incompatible.unknown.gradle.description=您的建置當前組態為使用不相容的 Java {0}。無法同步專案。
gradle.build.issue.gradle.jvm.incompatible.unknown.java.description=您的建置當前組態為使用不相容的 Java。無法同步專案。
gradle.build.issue.gradle.jvm.supported.description=支援的最低 Gradle JVM 版本為 {0}。
gradle.build.issue.gradle.jvm.unsupported.description=Gradle 執行不支持 Java {0}。無法同步專案。
gradle.build.issue.gradle.jvm.unsupported.title=不受支援的 Gradle JVM
gradle.build.issue.gradle.jvm.unsupported.unknown.description=無法獲取 Gradle 同步的 Java 版本。發生這種情況的原因可能是 Gradle JVM 無效或過時。
gradle.build.issue.gradle.recommended.description=我們建議升級到 Gradle 版本 {0}。
gradle.build.issue.gradle.supported.description=支援的最低 Gradle 版本為 {0}。
gradle.build.issue.gradle.unsupported.description=不支持 Gradle {0}。無法同步專案。
gradle.build.issue.gradle.unsupported.title=不支持的 Gradle 版本
gradle.build.issue.gradle.unsupported.unknown.description=無法獲取 Gradle 版本。發生這種情況的原因可能是 Gradle 包裝器無效或過時。
gradle.build.quick.fix.add.toolchain.criteria=<a href\="{0}">新增預設守護程序 JVM 標準</a>
gradle.build.quick.fix.add.toolchain.repository=<a href\="{0}">新增預設工具鏈下載儲存庫延伸模組</a>
gradle.build.quick.fix.gradle.jvm=使用 Java {1} 作為 Gradle JVM\: <a href\="{0}">開啟 Gradle 設定</a>
gradle.build.quick.fix.gradle.version=<a href\="{0}">升級到 Gradle {1} 並重新同步</a>
gradle.build.quick.fix.install.missing.toolchain=<a href\="{0}">安裝所需工具鏈</a>
gradle.build.quick.fix.modify.gradle.jvm.criteria=<a href\="{0}">修改守護程序 JVM 標準</a>
gradle.build.quick.fix.recreate.download.urls=<a href\="{0}">重新建立工具鏈下載 URL</a>
gradle.codeInsight.action.add_maven_dependency.description=向專案中新增所選 Maven 工件相依項
gradle.codeInsight.action.add_maven_dependency.text=新增 Maven 工件相依項
gradle.codeInsight.action.apply_plugin.description=向專案中新增所選 Gradle 延伸模組
gradle.codeInsight.action.apply_plugin.popup.title=選擇延伸模組
gradle.codeInsight.action.apply_plugin.text=新增 Gradle 延伸模組
gradle.codeInsight.buildscript.classpath.description=此腳本類別路徑組態用於編譯和執行建置腳本。此類別路徑還用於載入建置腳本使用的延伸模組。
gradle.command.line.parse.error.invalid.arguments=<b>命令行實參無法解析</b>
gradle.commandline.description=在給定目錄下組態 Gradle 專案
gradle.daemons.close=關閉
gradle.daemons.description.title=描述
gradle.daemons.gradle.daemons=Gradle 守護程序
gradle.daemons.refresh=重新整理
gradle.daemons.show.stopped=顯示已停止
gradle.daemons.stop.all=全部停止
gradle.daemons.stop.selected=停止所選項
gradle.daemons.stopWhenIdle.all=全部空閑時停止
gradle.dependency.analyzer.loading=載入 Gradle 相依項
gradle.dsl.artifactid.is.null=ArtifactId 為 null
gradle.dsl.groupid.is.null=GroupId 為 null
gradle.dsl.model.fail.to.build=無法為模組 {0} 建置 Gradle 模型
gradle.dsl.new.project.wizard=Gradle DSL\:
gradle.dsl.new.project.wizard.groovy=Groovy
gradle.dsl.new.project.wizard.kotlin=Kotlin
gradle.dsl.scope.is.null=組態為 null
gradle.dsl.version.is.null=版本為 null
gradle.execution.name.build.project.=建置 {0}
gradle.execution.name.config.daemon.jvm.criteria=組態守護程序 JVM 標準
gradle.filetype.description=Groovy Gradle DSL 組態
gradle.filetype.display.name=Groovy Gradle DSL
gradle.filter.label=Gradle 檔案
gradle.home.setting.type.explicit.empty=未指定 Gradle 位置
gradle.home.setting.type.explicit.incorrect=Gradle 位置不正確。\n位置\: {0}
gradle.incorrect.jvm.issue.title=Gradle JVM 選項不正確
gradle.incorrect.jvm.wsl.issue.description=專案位於 WSL({0} - ''{1}'') 上。\n使用安裝在同一 WSL 發行版上的 JDK。
gradle.incorrect.jvm.wslJdk.on.win.issue.description=該專案位於 Windows 系統中。\n使用 Windows 系統中安裝的 JDK。
gradle.jvm.has.been.resolved=Gradle JVM 已解析
gradle.jvm.incorrect=Gradle JVM 選項不正確\:\n路徑\: {0}
gradle.jvm.is.being.resolved=正在解析 Gradle JVM…
gradle.jvm.is.being.resolved.error=正在解析 Gradle JVM，請稍候。
gradle.jvm.is.invalid=找到無效的 Gradle JDK 組態。
gradle.jvm.is.jre=請為 Gradle 匯入程序使用 JDK 而不是 JRE。
gradle.jvm.resolution.lookup.reason=下載 Java 以執行 Gradle {0}
gradle.jvm.undefined=請設定 Gradle JVM 選項
gradle.linking.project=正在鏈接 Gradle 專案
gradle.name=Gradle
gradle.notifications.daemon.toolchain.migration.accept.action.text=遷移
gradle.notifications.daemon.toolchain.migration.apply.plugin.command.name=正在套用 Foojay Resolver 延伸模組
gradle.notifications.daemon.toolchain.migration.cancel.action.text=忽略
gradle.notifications.daemon.toolchain.migration.description=使用守護程序工具鏈的專案允許建置根據定義的 JVM 標準自動檢測已安裝的工具鏈，或者在本地找不到相容的工具鏈時下載相容的工具鏈。此外，使用守護程序工具鏈可以使 CLI 與 IDE 之間的選擇保持一致，避免生成多個守護程序，從而提高性能，同時也使在不同機器上處理所需工具鏈變得簡單。
gradle.notifications.daemon.toolchain.migration.error.message=無法將專案 ''{0}'' 遷移到守護程序 JVM 標準。請考慮按照指南手動遷移。
gradle.notifications.daemon.toolchain.migration.error.title=專案遷移錯誤
gradle.notifications.daemon.toolchain.migration.info.action.text=了解詳情
gradle.notifications.daemon.toolchain.migration.info.url=https\://docs.gradle.org/current/userguide/gradle_daemon.html\#daemon_jvm_criteria
gradle.notifications.daemon.toolchain.migration.title=遷移到 Gradle 守護程序工具鏈
gradle.notifications.java.home.change.content=“{0}”已設定為 {1} <br/> {2}
gradle.notifications.java.home.change.title=Gradle JVM 已組態
gradle.notifications.java.home.invalid.title=找到無效的 Gradle JVM 組態
gradle.notifications.java.home.property.content=請修正 {0} 中的 <i>org.gradle.java.home</i>。
gradle.notifications.java.home.unsupported.content=JDK {0} 與 Gradle {1} 不相容。
gradle.notifications.java.home.variable.content=請修正 <i>JAVA_HOME</i> 環境變數。
gradle.notifications.sources.download.action.title=開啟 {0}
gradle.notifications.sources.download.failed.content=以下物件的原始碼未下載\: {0}
gradle.notifications.sources.download.failed.title=源下載失敗
gradle.notifications.sources.download.from.repository.failed.content=<html>無法從 {1} 下載 {0}。確保所有工件的組件在此儲存庫中可用。或者，調整 build.gradle 中儲存庫的順序，以便優先從具有完整組件集的儲存庫下載。</html>
gradle.open.gradle.settings=開啟 Gradle 設定
gradle.plugin.0=Gradle 延伸模組 ''{0}''
gradle.project.0=Gradle 專案 ''{0}''
gradle.project.generation.wrapper.progress.title=正在生成 Gradle 包裝器
gradle.project.resolver.orphan.modules.error.description=找不到以下{0,choice,1\#模組|1<模組}\: {1}\n這可能是 Gradle 版本低於 3.3 的 *.gradle 腳本中的複合建置組態所致。\n嘗試 Gradle 3.3 或更高版本，或啟用 ''{2}'' 選項
gradle.project.resolver.orphan.modules.error.title=Gradle 專案結構問題
gradle.project.settings.distribution=分發\:
gradle.project.settings.distribution.bundled=已捆綁
gradle.project.settings.distribution.group=Gradle 源
gradle.project.settings.distribution.invalid=Gradle SDK 安裝無效
gradle.project.settings.distribution.local=本地安裝
gradle.project.settings.distribution.local.location=位置\:
gradle.project.settings.distribution.local.location.dialog=選擇 Gradle 安裝
gradle.project.settings.distribution.local.location.empty.state=本地 Gradle 的路徑
gradle.project.settings.distribution.local.location.npw=Gradle 位置\:
gradle.project.settings.distribution.npw=Gradle 分發\:
gradle.project.settings.distribution.store.settings=將這些設定用於未來的專案
gradle.project.settings.distribution.version.invalid=無法解析 Gradle SDK 版本
gradle.project.settings.distribution.version.unsupported=Gradle {1} 不支持 JDK {0}
gradle.project.settings.distribution.wrapper=包裝器
gradle.project.settings.distribution.wrapper.task=包裝器任務
gradle.project.settings.distribution.wrapper.version=版本\:
gradle.project.settings.distribution.wrapper.version.auto.select=自動選擇
gradle.project.settings.distribution.wrapper.version.npw=Gradle 版本\:
gradle.project.structure.jee.application=JEE 應用程式
gradle.project.structure.source.set=源集
gradle.project.structure.web.artifact=Web 工件
gradle.root.project=Gradle 根專案
gradle.run.configuration.command.line.argument.column=實參
gradle.run.configuration.command.line.arguments.empty.text=無 Gradle 實參
gradle.run.configuration.command.line.description.column=描述
gradle.run.configuration.command.line.empty.state=任務和實參
gradle.run.configuration.command.line.hint=範例\: build --debug。如果未指定任何任務，則執行預設任務。
gradle.run.configuration.command.line.name=任務和實參(&R)
gradle.run.configuration.command.line.task.column=任務
gradle.run.configuration.command.line.tasks.empty.text=無 Gradle 任務
gradle.run.configuration.command.line.title=任務和實參
gradle.run.configuration.command.line.tooltip=插入任務和實參…
gradle.settings.composite.build.title=複合建置組態
gradle.settings.composite.select.all=全選
gradle.settings.composite.selector.description=請選擇要包含在 Gradle 複合建置中的組成專案。
gradle.settings.composite.unselect.all=取消全選
gradle.settings.text.build.run=使用此工具建置和執行\:
gradle.settings.text.build.run.hint=預設情況下，{0} 使用 Gradle 建置專案並執行任務。<br><br> 在純 Java/Kotlin 專案中，由於進行了最佳化，通過 IDE 建置並執行的速度可能更快。請注意，IDE 並非支援所有 Gradle 延伸模組，可能無法使用其中一些延伸模組正確建置專案。
gradle.settings.text.build.run.per.test=根據測試選擇\:
gradle.settings.text.build.run.title=建置並執行
gradle.settings.text.daemon.toolchain.component=Gradle JVM 標準\:
gradle.settings.text.daemon.toolchain.title=定義的標準用於自動檢測符合的本地安裝工具鏈，或為建置執行自動組態工具鏈。<a href\='https\://docs.gradle.org/current/userguide/gradle_daemon.html\#daemon_jvm_criteria'>了解詳情</a>
gradle.settings.text.daemon.toolchain.vendor=供應商\:
gradle.settings.text.daemon.toolchain.vendor.any=任何供應商
gradle.settings.text.daemon.toolchain.vendor.custom=自訂供應商
gradle.settings.text.daemon.toolchain.vendor.error=請避免供應商的值為空或留空
gradle.settings.text.daemon.toolchain.vendor.hint=如果未指定供應商，則會根據 <a href\='https\://docs.gradle.org/current/userguide/toolchains.html\#sec\:precedence'>Gradle 優先規則</a>進行解析
gradle.settings.text.daemon.toolchain.vendor.invalid=供應商無效
gradle.settings.text.daemon.toolchain.version=版本\:
gradle.settings.text.daemon.toolchain.version.error=請選擇一個版本
gradle.settings.text.daemon.toolchain.version.invalid=版本無效
gradle.settings.text.daemon.toolchain.version.undefined=未定義
gradle.settings.text.default=預設
gradle.settings.text.download.annotations=下載相依項的外部註解
gradle.settings.text.generate.iml.files=為從 Gradle 匯入的模組生成 *.iml 檔案
gradle.settings.text.generate.iml.files.hint=如果您有包含 {0} 模組和 Gradle 模組的混合專案，則啟用此設定，以便通過 VCS 共享該專案
gradle.settings.text.home.path=Gradle 主目錄\:
gradle.settings.text.jvm.path=Gradle JVM\:
gradle.settings.text.module.per.source.set=根據 Gradle 源集生成 {0} 模組
gradle.settings.text.module.per.source.set.hint=此設定已棄用，因為它不完全相容 Gradle 的模型。<br>請考慮將其還原為預設設定(選中)
gradle.settings.text.parallelModelFetch=為 Gradle 7.4+ 啟用並行 Gradle 模型提取
gradle.settings.text.parallelModelFetch.hint=允許在專案重新載入期間並行收集 Gradle 模型。
gradle.settings.text.parallelModelFetch.warning=正在孵化。對 build.gradle 中共享 Gradle 組態資料的非執行緒安全存取可能會導致並發問題。
gradle.settings.text.run.tests=使用此工具執行測試\:
gradle.settings.text.unexpected=意外\: {0}
gradle.settings.text.user.home=Gradle 使用者主目錄\:
gradle.settings.text.user.home.dialog.title=選擇 Gradle 使用者主目錄
gradle.settings.text.user.home.hint=覆寫 Gradle 存儲下載檔案的預設位置，例如調整 Windows 中的防病毒軟體
gradle.settings.text.user.home.not.found.error.text=找不到 Gradle 使用者主目錄
gradle.settings.text.vm.options=Gradle 虛擬機選項\:
gradle.settings.text.vm.options.confirm.text=要將虛擬機選項移至 ''{0}'' 檔案嗎?\n請注意，現有的 ''org.gradle.jvmargs'' 屬性將被覆蓋。\n\n您可以稍後手動執行此動作
gradle.settings.text.vm.options.empty.text=虛擬機選項已移至 gradle.properties
gradle.settings.text.vm.options.link.text=遷移
gradle.settings.text.vm.options.link.tooltip=此設定已棄用，請改用 'gradle.properties' 檔案中的 'org.gradle.jvmargs' 屬性
gradle.settings.text.vm.options.migration.error.text={0}\n\n請手動遷移設定
gradle.settings.text.vm.options.migration.error.title=遷移錯誤
gradle.settings.title=Gradle
gradle.settings.wizard.gradle.unsupported.message={0} 不支持早於 {1} 的版本。
gradle.settings.wizard.gradle.unsupported.title=不支持的 Gradle 版本
gradle.settings.wizard.java.unsupported.message={0} 不支持 Gradle 專案中早於 {1} 的 Java 版本。
gradle.settings.wizard.java.unsupported.title=不支持的 Java 版本
gradle.settings.wizard.unsupported.jdk.message=Gradle 支援 JDK 版本 {0} 至 {1}。\n\n是否要繼續使用 JDK {2} 和 Gradle {3}?
gradle.settings.wizard.unsupported.jdk.title=不受支援的{0, choice, 0\#專案|1\#模組} JDK
gradle.settings.wrapper.not.found=找不到 'gradle-wrapper.properties'
gradle.target.configurable.home.path.comment=目標上的 Gradle 安裝的路徑
gradle.target.configurable.home.path.label=Gradle 主路徑\:
gradle.target.configurable.home.path.title=Gradle 主路徑
gradle.target.configure.label=Gradle 組態
gradle.target.execution.project.folder.description=專案原始碼所在的目標路徑
gradle.target.execution.project.folder.label=專案目錄\:
gradle.target.execution.project.folder.title=專案目錄
gradle.target.run.label=執行 Gradle 任務
gradle.tasks.annotations.looking.for=正在尋找 {0} 的註解
gradle.tasks.annotations.title=正在解析已知的外部註解
gradle.tasks.coverage.disabled=Coverage disabled
gradle.tasks.coverage.disabled.hint=Disables and hides the "Run with Coverage" action for this run configuration
gradle.tasks.debugging.all=偵錯執行圖上的所有 Gradle 任務
gradle.tasks.debugging.all.comment=偵錯標誌已新增到 Gradle 執行圖上的所有相容任務。可能重新觸發任務執行。
gradle.tasks.debugging.disabled=Debugging disabled
gradle.tasks.debugging.disabled.hint=Disables and hides the debugging action for this run configuration
gradle.tasks.directory.completion.description=Gradle 源集
gradle.tasks.profiling.disabled=Profiling disabled
gradle.tasks.profiling.disabled.hint=Disables and hides the profiling action for this run configuration
gradle.tasks.reattach.debug.process=在單獨的偵錯頁籤中偵錯複刻的 Gradle 任務
gradle.tasks.reattach.debug.process.comment=一個 Gradle 偵錯會話用於所有任務。啟用此選項以獨立偵錯並行執行的任務。
gradle.tasks.script.debugging=偵錯 Gradle 腳本
gradle.tasks.tests.force=作為測試執行
gradle.tasks.tests.force.comment=顯示測試檢視並強制重新執行測試任務
gradle.tasks.toggle.offline.search.title=切換 Gradle 脫機模式
gradle.test.runner.build.tw.link.title=在“執行”工具視窗中檢視測試檢視
gradle.test.runner.ui.tests.actions.open.gradle.report.desc=開啟測試任務生成的 Gradle 報告
gradle.test.runner.ui.tests.actions.open.gradle.report.text=開啟 Gradle 測試報告
gradle.test.runner.ui.tests.tree.presentation.labels.no.tests.were.found=未收到測試事件
gradle.test.show.internal.nodes.action.name=顯示內部 Gradle 測試套件
gradle.test.show.internal.nodes.action.text=顯示內部 Gradle 測試套件，例如 'Gradle Test Executor N'
gradle.tests.pattern.producer.configuration.name={0} 和其他 {1} 個
gradle.tests.tasks.choosing.popup.hint=選擇要同時執行的多個任務
gradle.tests.tasks.choosing.popup.title=執行 {0} 的任務
gradle.tests.tasks.choosing.popup.title.common=執行任務
gradle.tests.tasks.choosing.warning.text=無可用任務
gradle.title.gradle.settings=Gradle 設定
gradle.toolchain.download.error.message=無法找到並下載符合標準的守護程序 JVM (版本\={0}，供應商\={1})。請考慮手動安裝或修改守護程序 JVM 標準。
gradle.toolchain.download.error.message.any=任意
gradle.toolchain.download.error.title=無法下載工具鏈
gradle.version.quick.fix.error=無法更新包裝器檔案
gradle.version.quick.fix.error.description=詳細資訊見 IDE 日誌。\n<a href\="\#open_log">{0}</a>
notification.group.gradle=Gradle
popup.title.gradle.tasks=Gradle 任務
progress.title.build=正在建置
progress.title.build.model=正在建置模型
progress.title.configure.build=正在組態建置
progress.title.configure.projects=正在組態專案
progress.title.download=正在下載 {0}
progress.title.run.task=正在執行任務
progress.title.run.tasks=正在執行任務
