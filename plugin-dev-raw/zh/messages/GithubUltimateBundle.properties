GithubActionsCronDocumentationTarget.cron.explanation=<p>Cron 解釋\: <b>{0}</b></p><p>有關 Cron 格式解釋，請參閱 <a href\="https\://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows\#schedule">https\://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows\#schedule</a>。</p>
action.CreateGitHubActionFileAction.description=建立 GitHub Action - action.yml 檔案
action.CreateGitHubActionFileAction.text=GitHub Action
action.CreateGitHubWorkflowFileAction.description=建立 GitHub 工作流腳本檔案
action.CreateGitHubWorkflowFileAction.text=GitHub 工作流
advanced.setting.github.actions.support.enabled=GitHub Actions 編寫支援(需要重啟 IDE)
create.directory.completion.description=GitHub Actions
github.action.file.create=建立 GitHub 動作檔案
github.action.file.create.title=新增 GitHub Action 檔案
github.action.file.description=GitHub 動作腳本檔案 — action.yml
github.action.inspection.message.required.parameter.for.action.missing=“{1}”缺少必需參數\:“{0}”
github.action.inspection.message.undefined.parameter=未定義的參數\:“{0}”
github.action.inspections.cyclic.job.dependency=迴圈作業相依關係
github.action.inspections.group.name=GitHub 動作
github.action.inspections.illegal.job.dependency=未定義的作業相依項
github.action.inspections.invalid.params=參數無效
github.action.inspections.message.cyclic.job.dependency=迴圈作業相依關係\:“{0}”
github.action.inspections.message.illegal.job.dependency=未定義的作業相依項\:“{0}”
github.action.inspections.std.lib.validation.incorrect.arguments.count=實參數量不正確\: 應為 {0} 個，但實際為 {1} 個
github.action.inspections.std.lib.validation.name=標準庫函數驗證
github.action.inspections.std.lib.validation.unknown.function=未知函式呼叫
github.action.inspections.undefined.action=未定義的動作/檔案參照
github.action.inspections.undefined.params=未定義的參數
github.action.intention.add.missing.action.params=新增缺少的參數
github.action.intention.family.name.remove.illegal.job=移除未定義的作業參照
github.action.intention.family.name.remove.undefined.parameter=移除未定義的參數
github.action.support=GitHub Actions
github.actions.configure.github.settings=開啟 GitHub 設定…
github.actions.support.enabled.description=啟用 GitHub Actions 支援\: 參數自動補全、工作流內的檢查和導覽，以及自訂動作檔案
github.workflow.file.create=建立 GitHub Actions 工作流檔案
github.workflow.file.create.title=新增 GitHub 工作流檔案
github.workflow.file.description=GitHub 工作流腳本檔案
github.workflow.invalid.file.name=工作流檔案副檔名應為 ".yml" 或 ".yaml"
group.com.intellij.github.actions.ide.new.file.text=GitHub Actions
gutter.name.action.color=動作顏色
gutter.name.action.icon=動作圖示
inspection.message.unresolved.action.reference=未解析的動作/工作流參照\:“{0}”
intention.name.reload.action=重新載入動作/工作流
invalid.github.action.file.name=GitHub 動作檔名應為\: {0}
label.github.actions.expression.language=GitHub 動作表達式語言
notification.content.cannot.download.action.description.file=無法獲取動作/工作流檔案\:“{0}”
notification.content.github.download.file.error=下載檔案時出錯\: {0}
notification.content.github.rate.limit=超出速率限制。請檢查您的帳戶設定。錯誤文本\: {0}
notification.content.not.found.action.description.file=找不到動作“{0}”的檔案
notification.title.action.reload.issue=動作/工作流重新載入問題
pattern.fileset.no.matching.files=找不到符合檔案
progress.title.loading.action=正在載入動作/工作流\:“{0}”
vcs.log.github.commit.status.column.name=GitHub 提交檢查
vcs.log.github.commit.status.popup.empty=此提交沒有狀態檢查
vcs.log.github.commit.status.popup.error=無法載入提交狀態
vcs.log.github.commit.status.popup.title=GitHub 提交檢查
