{
  "com/android/tools/idea/compose/preview/ComposePreviewBundle.properties": {
    "inspection.animation.type.animate.as.state": "animate*AsState"
  },
  "messages/ActionsBundle.properties": {
    "action.Actions.ActionsPlugin.GenerateToString.text": "to_String()",
    "action.Floating.CodeToolbar.SurroundWithTryCatch.text": "try / catch",
    "action.Floating.CodeToolbar.SurroundWithTryCatchFinally.text": "try / catch / finally",
    "action.GenerateCreateUI.text": "createUI(...)",
    "action.SearchEverywhereToolbarHotKey.hotkey": "Shift+Shift",
    "group.Internal.UI.KotlinUiDsl.text": "Kotlin UI DSL",
    "group.Internal.UI.text": "UI(&U)",
    "group.VcsGroups.text": "Git(_G)"
  },
  "messages/AmperBundle.properties": {
    "jvm.app.module.yaml.template.group.name": "module.yaml"
  },
  "messages/AnalysisBundle.properties": {
    "virtual.file.window.name": "<Injected {0}file>"
  },
  "messages/AndroidBundle.properties": {
    "action.Android.RunAndroidAvdManager.text": "AVD Manager",
    "android.9patch.file.type.description": "Android 9-Patch",
    "android.ddms.actions.layoutinspector.notification.group": "Layout Inspector",
    "android.ddms.actions.layoutinspector.notification.title": "Layout Inspector",
    "android.ddms.nodevices": "[none]",
    "android.extended.device.chooser.avd.label": "Android Virtual Device(&A):",
    "android.sdk.presentable.name": "Android SDK",
    "android.test.run.configuration.type.name": "Android Instrumented Tests",
    "android.wizard.module.config.new.base.missing": "<No Base Module found>",
    "android.wizard.module.new.google.cloud": "Google Cloud",
    "android.wizard.module.new.wear": "Wear OS",
    "configurable.ExperimentalSettingsConfigurable.checkbox.jetpack.compose": "Jetpack Compose",
    "configurable.SdkUpdaterConfigurable.display.name": "Android SDK",
    "essentials.mode.notification.ignore": "ignore.essentials.mode.notification",
    "gradle.settings.jdk.component.label.text": "Gradle JDK:",
    "group.Android.InstantRunActions.text": "Instant Run",
    "live.edit": "Live Edit",
    "live.edit.configurable.display.name": "Compose Live Edit",
    "project.migrated.to.gradle.local.java.home.info.url": "https://d.android.com/r/studio-ui/jdk-macro",
    "project.sync.warning.multiple.gradle.daemons.url": "https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:why_is_there_more_than_one_daemon_process_on_my_machine"
  },
  "messages/AndroidLintBundle.properties": {
    "android.inspections.group.path.lint": "Android,Lint"
  },
  "messages/AndroidWearPairingBundle.properties": {
    "wear.assistant.companion.app.name": "Google Pixel Watch",
    "wear.assistant.companion.app.name.legacy": "Wear OS by Google"
  },
  "messages/Angular2Bundle.properties": {
    "angular.action.goto-related.inline": "<inline>",
    "angular.action.new-project.name": "Angular CLI",
    "angular.action.new-project.presentable-package-name": "Angular CLI(&C):",
    "angular.description.angular-cli": "Angular CLI",
    "angular.description.unknown-class": "<unknown class>",
    "angular.description.unnamed": "<unnamed>",
    "angular.inspection.cyclic-module-dependency.message.separator": "->",
    "livetemplate.description.angular2.a-formControlName": "Angular formControlName",
    "livetemplate.description.angular2.a-formGroup": "Angular formGroup",
    "livetemplate.description.angular2.a-formGroupName": "Angular formGroupName",
    "livetemplate.description.angular2.a-httpclient-get": "Angular HttpClient.get",
    "livetemplate.description.angular2.a-ngClass": "Angular ngClass",
    "livetemplate.description.angular2.a-ngFor": "Angular *ngFor",
    "livetemplate.description.angular2.a-ngForAsync": "Angular *ngForAsync",
    "livetemplate.description.angular2.a-ngIf": "Angular *ngIf",
    "livetemplate.description.angular2.a-ngIfElse": "Angular *ngIfElse",
    "livetemplate.description.angular2.a-ngModel": "Angular ngModel",
    "livetemplate.description.angular2.a-ngStyle": "Angular ngStyle",
    "livetemplate.description.angular2.a-ngSwitch": "Angular ngSwitch",
    "livetemplate.description.angular2.a-ngrx-data-entity-collection-data-service": "NgRx Data Entity Collection Data Service",
    "livetemplate.description.angular2.a-ngrx-data-entity-metadata": "NgRx Data Entity Metadata",
    "livetemplate.description.angular2.a-ngrx-data-store-module": "NgRx Data Store Module",
    "livetemplate.description.angular2.a-routerLink": "Angular routerLink"
  },
  "messages/AppCodeBundle.properties": {
    "38mm.2x": "38mm 2x",
    "42mm.2x": "42mm 2x",
    "apple.tv": "Apple TV",
    "apple.watch": "Apple Watch",
    "apple.watch.long.look": "Apple Watch Long Look",
    "apple.watch.short.look": "Apple Watch Short Look",
    "colorscheme.xcode.prefix": "Xcode - {0}",
    "execution.mac.catalyst": "(Mac Catalyst)",
    "execution.mac.rosetta": "(Rosetta)",
    "execution.ppc": "(ppc)",
    "ios.5.6": "(iOS 5,6)",
    "ipad.spotlight": "iPad Spotlight",
    "ipad.spotlight.ios.5.6": "iPad Spotlight (iOS 5,6)",
    "iphone.spotlight": "iPhone Spotlight",
    "project.settings.multiple.values": "<Multiple values>",
    "retina.4": "Retina 4",
    "retina.hd.4.7": "Retina HD 4.7",
    "retina.hd.5.5": "Retina HD 5.5",
    "sdk.type.name": "Apple SDK"
  },
  "messages/AppServersCommonBundle.properties": {
    "ServerInstance.exception.message": "{0}: {1}"
  },
  "messages/ApplicationBundle.properties": {
    "combobox.crlf.mac": "Classic Mac OS (\\r)",
    "combobox.crlf.windows": "Windows (\\r\\n)",
    "editorsearch.current.cursor.position": "{0}/{1}",
    "editorsearch.toomuch": "{0}+",
    "settings.hints.group.code.vision": "Code Vision",
    "settings.hints.new.group.code.vision": "Code Vision",
    "wrapping.try.resources": "'try-with-resources'"
  },
  "messages/AquaCloudBundle.properties": {
    "aqua.cloud.code.vision.group.name": "Aqua Cloud",
    "aqua.cloud.settings.service.block": "Aqua Service Cloud",
    "aqua.cloud.settings.title": "Aqua Cloud",
    "aqua.cloud.toolwindow.name": "Aqua Cloud"
  },
  "messages/AquaFrameworksPlaywrightJSBundle.properties": {
    "playwright.project.generator.presentable.package.name": "Playwright(&P):"
  },
  "messages/AquaWebInspectorBundle.properties": {
    "locators.evaluator.placeholder.xpath": "XPath..."
  },
  "messages/AspectJBundle.properties": {
    "action.create.aspect.kind.annotation": "@Aspect",
    "highlighting.tooltip.html": "<html><body>{0}</body></html>",
    "highlighting.tooltip.link": "<a href=\"#navigation/{0}:{1}\">{2}</a>"
  },
  "messages/AwsBundle.properties": {
    "settings.s3.region.group.us.gov": "AWS GovCloud"
  },
  "messages/AzureBundle.properties": {
    "auth.select.dialog.oauth.label": "OAuth 2.0",
    "custom.bucket.text.empty": "container/folder,container2/folder/subfolder2,…"
  },
  "messages/BVBundle.properties": {
    "label.unknown": "@unknown"
  },
  "messages/BackgroundTaskBundle.properties": {
    "actions.on.save.page.checkbox.file.watcher.0": "File Watcher: {0}",
    "actions.on.save.page.label.file.watcher": "File Watcher",
    "command.name.file.watcher.0": "File Watcher: {0}",
    "custom.file.watcher.name.placeholder": "<custom>",
    "editor.notification.question.text.part.that.becomes.link.to.settings": "File Watcher",
    "inspections.group.name": "File Watcher",
    "settings.name": "File Watcher"
  },
  "messages/BdtCommonBundle.properties": {
    "action.BigDataTools.Services.AddDataproc.text": "Google Cloud Dataproc",
    "action.BigDataTools.Services.AddEMR.text": "AWS EMR",
    "connection.alibaba.default.name": "Alibaba OSS",
    "connection.dos.default.name": "DigitalOcean Spaces",
    "connection.gcs.default.name": "Google Cloud Storage",
    "connection.glue.default.name": "AWS Glue",
    "connection.hive.default.name": "Hive Metastore",
    "connection.s3.default.name": "AWS S3",
    "connection.tencent.default.name": "Tencent COS",
    "connection.yarn.default.name": "Hadoop YARN",
    "connections.settings.display.name": "Big Data Tools",
    "kerberos.settings.principal.empty": "user@EXAMPLE.COM",
    "metainfo.info.label.etag": "ETag:",
    "notification.title.bdt": "Big Data Tools",
    "progress.title.to": "{0} {1}，{2}",
    "rfs.copy.process.text": "({0}/{1}) {2}->{3}",
    "rfs.copy.process.text.fast": "{0}->{1}",
    "rfs.pane.spark.submit": "Spark Submit",
    "settings.tunnel.ssh.local.port.empty.text": "<Dynamic>",
    "settings.url": "URL:",
    "tool.window.title": "Big Data Tools"
  },
  "messages/BicepBundle.properties": {
    "progress.title.load.dotnet": ".net SDK"
  },
  "messages/CLionBazelBundle.properties": {
    "checkbox.dev.containers": "Dev Container"
  },
  "messages/CLionCMakeBundle.properties": {
    "cmake.settings.cmake.options.link.latest.address": "https://cmake.org/cmake/help/latest/manual/cmake.1.html#options",
    "cmake.settings.cmake.options.link.versioned.address": "https://cmake.org/cmake/help/v{0}.{1}/manual/cmake.1.html#options"
  },
  "messages/CLionExecutionBundle.properties": {
    "coredump.sysroot": "Sysroot:",
    "cpp.build.description.1": "====================[ {0} ]====",
    "cpp.build.description.2": "====================[ {0} | {1} ]====",
    "cpp.build.description.3": "====================[ {0} | {1} | {2} ]====",
    "debug.attach.remoteHostTypeName.ssh.wsl": "SSH/WSL",
    "gdbRemote.lldb.command": "'process connect' url:",
    "gdbRemote.sysroot": "Sysroot:"
  },
  "messages/CLionProfilingBundle.properties": {
    "sanitizers.llvmSymbolizer.notification.title": "Google Sanitizers"
  },
  "messages/CMakeBundle.properties": {
    "action.CPP.NewCMakeListsFile.description": "CMakeLists.txt",
    "action.CPP.NewCMakeListsFile.text": "CMakeLists.txt",
    "livetemplate.description.foreach": "foreach()-loop",
    "livetemplate.description.if": "if()-condition",
    "livetemplate.description.while": "while()-loop",
    "parameter.info.no.parameters": "<no parameters>"
  },
  "messages/CPPBundle.properties": {
    "language.cpp.settings.description": "C/C++"
  },
  "messages/CVPBundle.properties": {
    "cached.value.profiler.column.avg.cost": "Cost÷N",
    "cached.value.profiler.column.avg.use.count": "Used÷N"
  },
  "messages/CdiBundle.properties": {
    "actions.show.named": "@Named",
    "category.name.decorator": "@Decorator",
    "category.name.inject": "@Inject",
    "category.name.produces": "@Produces"
  },
  "messages/ChefBundle.properties": {
    "chef.sdk.name": "Chef DK: {0}"
  },
  "messages/CidrBoostBundle.properties": {
    "boost.test.configuration.name": "Boost.Test"
  },
  "messages/CidrCTestBundle.properties": {
    "ctest.test.number.column.header": "#"
  },
  "messages/CidrCoverageBundle.properties": {
    "gcov.binary.row.title": "gcov:",
    "gcov.llvm.name": "gcov/llvm",
    "gcov.name": "gcov/llvm-cov",
    "llvm.cov.binary.row.title": "llvm-cov:",
    "llvm.profdata.binary.row.title": "llvm-profdata:"
  },
  "messages/CidrDebuggerBundle.properties": {
    "debug.address.breakpoint": "{0}",
    "debug.exception.breakpoint.when.kn.fragment": "Kotlin/Native",
    "debug.exception.breakpoint.when.kn.label": "Kotlin/Native",
    "debug.exception.breakpoint.when.objc.fragment": "Objective-C",
    "debug.exception.breakpoint.when.objc.label": "Objective-C",
    "debug.frames.unknownFunction": "<unknown>",
    "debug.memory.view.name.pattern": "{0} ({1})",
    "debug.settings.name.c.cpp": "C/C++",
    "debug.settings.name.objective.c": "Objective-C",
    "debug.symbolic.breakpoint.emptySymbolName.title": "<Empty>",
    "debug.symbolic.breakpoint.moduleAndSymbol.title": "{0}: {1}"
  },
  "messages/CidrDoctestBundle.properties": {
    "doctest.test.noname": "<Anonymous>"
  },
  "messages/CidrGoogleBundle.properties": {
    "gtest.test.configuration.name": "Google Test"
  },
  "messages/CidrLangBundle.properties": {
    "c.cpp": "C/C++",
    "language.cpp.configurable.name": "C/C++",
    "objective.c": "Objective-C"
  },
  "messages/ClangdBundle.properties": {
    "action.ClangdXRefAction.text": "clangd: XRef",
    "clang.tidy.schema.name": "Clang-Tidy",
    "clang.tidy.status.bar.widget.title": ".clang-tidy",
    "clangd.crash.reason.clang.tidy": "clang-tidy",
    "clangd.crash.reason.clion.clang.tidy": "clang-tidy",
    "inspection.clangTidy.message": "Clang-Tidy: {0}",
    "inspection.clangTidy.name": "Clang-Tidy",
    "inspection.clazy.message": "Clazy: {0}",
    "language.cpp.clang-tidy.configurable.name": "Clang-Tidy",
    "language.cpp.clangd.quick.fix": "Clangd fix-it"
  },
  "messages/ClionEmbeddedPlatformioBundle.properties": {
    "dialog.title.platformio.home": "PlatformIO Home",
    "task.home": "PlatformIO Home",
    "task.monitor": "PlatformIO Serial Monitor"
  },
  "messages/CloudBundle.properties": {
    "editor.pane.text.empty.text": "<html><head>{0}<style>body '{'text-align: center; white-space: normal;background: #{1};color: #{2};'}'</style></head><body>{3}</body></html>",
    "run.configuration.name": "{0} - {1}"
  },
  "messages/CloudFormationBundle.properties": {
    "aws.cloudformation.inspections.group.name": "AWS CloudFormation",
    "aws.cloudformation.new.json.file.action": "AWS CloudFormation JSON",
    "aws.cloudformation.new.yaml.file.action": "AWS CloudFormation YAML",
    "aws.cloudformation.template.context.type.json": "AWS CloudFormation (JSON)",
    "aws.cloudformation.template.context.type.yaml": "AWS CloudFormation (YAML)",
    "filetype.aws.cloudformation.templates.json.display.name": "\"AWS CloudFormation (JSON)\"",
    "filetype.aws.cloudformation.templates.yaml.display.name": "AWS CloudFormation (YAML)"
  },
  "messages/CodeInsightBundle.properties": {
    "livetemplate.description.prsf": "private static final",
    "livetemplate.description.psf": "public static final",
    "livetemplate.description.psfi": "public static final int",
    "livetemplate.description.psfs": "public static final String",
    "macro.capitalize.string": "capitalize(String)",
    "macro.capitalizeAndUnderscore.string": "capitalizeAndUnderscore(String)",
    "macro.decapitalize.string": "decapitalize(String)",
    "macro.enum": "enum(...)",
    "macro.firstWord.string": "firstWord(String)",
    "macro.groovy.script": "groovyScript(\"groovy code\")",
    "macro.spacesToUnderscores.string": "spacesToUnderscores(String)",
    "macro.underscoresToCamelCase.string": "underscoresToCamelCase(String)",
    "macro.underscoresToSpaces.string": "underscoresToSpaces(String)",
    "n.of.m": "{0}/{1}",
    "parameter.info.no.parameters": "<no parameters>",
    "surround.with.cast.template": "((Type)expr)",
    "surround.with.if.expression.template": "if (expr) {...}",
    "surround.with.ifelse.template": "if / else",
    "surround.with.not.template": "!(expr)",
    "surround.with.parenthesis.template": "(expr)",
    "surround.with.try.finally.template": "try / finally"
  },
  "messages/CodeStyleBundle.properties": {
    "arrangement.settings.text.entry.type.static.init": "static init",
    "arrangement.settings.text.modifier.package.private": "package private"
  },
  "messages/CodeVisionBundle.properties": {
    "CodeVisionConfigurable.configurable.name.code.vision": "Code Vision",
    "codeLens.more.popup.header": "Code Vision"
  },
  "messages/CodeWithMeGuestBundle.properties": {
    "action.CWMThinClientShowPopupAction.text": "Code With Me",
    "code.with.me.tm": "Code With Me:",
    "project.title.cwm": "Code With Me – {0}",
    "status.bar.text.ping.label": "Ping: {0}",
    "status.bar.text.ping.value": "{0} (UI: {1})",
    "thin.client.network.latency.status.connected": "{0}ms"
  },
  "messages/CodeWithMePlatformBundle.properties": {
    "action.CWMHostShowPopupAction.text": "Code With Me",
    "action.CWMThinClientShowPopupAction.text": "Code With Me",
    "circle.control.tooltip": "<html><div>{0}</div><font color={1}>{2}</font></html>",
    "code.with.me.learn.more.link": "https://www.jetbrains.com/code-with-me/",
    "license.buy.link": "http://www.jetbrains.com/code-with-me/buy",
    "metrics.cpu.label": "CPU {0}%",
    "metrics.jvm.ram.label": "JVM RAM {0}%",
    "metrics.server.ram.label": "RAM {0}%",
    "newUiOnboarding.code.with.me.step.header": "Code With Me",
    "product.name": "Code With Me",
    "toolwindow.factory.title.code.with.me": "Code With Me",
    "user.notification.html.not.escaped": "<html><a href=\"\">{0}</a></html>",
    "wire.stats.status.bar.text": "({0}) ↑{1}/s / ↓{2}/s"
  },
  "messages/CodeWithMePluginBundle.properties": {
    "backend.control.center.heap": "MiB -Xmx",
    "permission.dialog.toolWindow.access.tooltip": "Gradle、Ant、Maven、Messages",
    "permission.dialog.toolWindow.access.tooltip.clion": "Gradle、Ant、Maven、Messages、CMake"
  },
  "messages/CollaborationToolsBundle.properties": {
    "review.details.branch.checkout.remote.ad.label": "{0} ← {1}"
  },
  "messages/CommonProfilerBundle.properties": {
    "ui.what.if.tab": "What-If"
  },
  "messages/CompDBBundle.properties": {
    "compdb.url": "http://clang.llvm.org/docs/JSONCompilationDatabase.html"
  },
  "messages/CompilerIntegrationBundle.properties": {
    "jdk": "JDK(&J):"
  },
  "messages/CompletionRankingModelsBundle.properties": {
    "ml.completion.experiment.model.cidr": "C/C++"
  },
  "messages/ComposeBundle.properties": {
    "recomposition.state.function.description.lambda": "Composable {0}"
  },
  "messages/ComposePreviewBundle.properties": {
    "inspection.animation.type.animate.as.state": "animate*AsState"
  },
  "messages/ComposeProjectWizardBundle.properties": {
    "module.presentation.name": "Compose for Desktop"
  },
  "messages/CoreBundle.properties": {
    "plugin.name.and.vendor": "{0} ({1})"
  },
  "messages/CsBundle.properties": {
    "color.display.name.heredoc.id": "Heredoc id",
    "color.display.name.heregex.id": "Heregex id",
    "surrounder.if.else": "if/else",
    "surrounder.try.catch": "try/catch",
    "surrounder.try.catch.finally": "try/catch/finally",
    "surrounder.try.finally": "try/finally"
  },
  "messages/CssBundle.properties": {
    "angle.value.presentable.name": "<angle>",
    "any.value.presentable.name": "<any>",
    "color.value.presentable.name": "<color>",
    "custom.property.name.value.presentable.name": "<custom property name>",
    "decibel.value.presentable.name": "<decibel>",
    "expression.value.presentable.name": "<expression>",
    "flex.value.presentable.name": "<flexible length>",
    "frequency.value.presentable.name": "<frequency>",
    "id.value.presentable.name": "<id>",
    "integer.value.presentable.name": "<integer>",
    "java.script.value.presentable.name": "<java script>",
    "length.value.presentable.name": "<length>",
    "name.value.presentable.name": "<identifier>",
    "number.value.presentable.name": "<number>",
    "percentage.value.presentable.name": "<percentage>",
    "position.value.presentable.name": "<position>",
    "resolution.value.presentable.name": "<resolution>",
    "selector.value.presentable.name": "<selector>",
    "semitones.value.presentable.name": "<semitones>",
    "string.value.presentable.name": "<string>",
    "time.value.presentable.name": "<time>",
    "urange.value.presentable.name": "<urange>",
    "url.value.presentable.name": "<url>"
  },
  "messages/CucumberBundle.properties": {
    "step.definition.0.1": "{0} {1}"
  },
  "messages/CucumberJavaBundle.properties": {
    "cucumber.java.run.configuration.type.name": "Cucumber Java",
    "run.configuration.form.glue": "Glue(&G)"
  },
  "messages/CucumberJavaScriptBundle.properties": {
    "notification.name.cucumber.js": "Cucumber.js"
  },
  "messages/DSActionsBundle.properties": {
    "jupyter.managed.server.settings.run.configuration.inherit.from.workspace": "<inherit from workspace>"
  },
  "messages/DSTableBundle.properties": {
    "ds.DataManager.cannot.get.dataframe": "Cannot get DataFrame info",
    "ds.DataWrangler.main.panel.name": "Data Wrangler"
  },
  "messages/DaemonBundle.properties": {
    "import.popup.text": "{0}?"
  },
  "messages/DartBundle.properties": {
    "action.Dart.build.text": "Webdev Build…",
    "action.Dart.pub.cache.repair.text": "Pub Cache Repair…",
    "action.Dart.pub.get.text": "Pub Get",
    "action.Dart.pub.outdated.text": "Pub Outdated",
    "action.Dart.pub.upgrade.text": "Pub Upgrade",
    "action.Generate.ToString.Dart.text": "toString()",
    "action.text.pub.build": "Pub Build…",
    "action.text.webdev.build": "Webdev Build…",
    "dart.feedback.url": "https://github.com/dart-lang/sdk/issues/new?title={0}\\&body=",
    "dart.problems.view.status.0.and.1": "{0}、{1}",
    "dart.problems.view.status.0.and.1.and.2": "{0}、{1}、{2}",
    "dart.problems.view.status.0.and.filters.1": "{0} ({1})",
    "dart.pub.build.title": "Pub Build",
    "dart.pub.cache.repair.title": "Pub Repair Cache",
    "dart.pub.get.title": "Pub Get",
    "dart.pub.outdated.title": "Pub Outdated",
    "dart.pub.upgrade.title": "Pub Upgrade",
    "dart.surround.with.brackets": "[expr]",
    "dart.surround.with.not.parenthesis": "!(expr)",
    "dart.surround.with.parenthesis": "(expr)",
    "dart.webdev.build.title": "Webdev Build",
    "debugger.asynchronous.gap.frame": "<asynchronous gap>",
    "notification.group.dart.webdev": "Dart webdev",
    "pub.get": "Pub get",
    "pub.outdated": "Pub outdated",
    "pub.upgrade": "Pub upgrade",
    "webdev.build": "Webdev build…",
    "webdev.debug.configuration.name": "Dart Web"
  },
  "messages/DataGridBundle.properties": {
    "Console.TableResult.n.bytes.of.m.bytes.loaded": "{0}/{1}",
    "count.rows.action.of.text": "/{0}",
    "csv.format.settings.quotation.policy.escape.duplicate": "<duplicate>",
    "excel.xlsx": "Excel (xlsx)"
  },
  "messages/DatabaseBundle.properties": {
    "ChangeDialectToolbarAction.action.dialect.text": "<dialect>",
    "DataSourceConfigurable.tab.ssh.ssl": "SSH/SSL",
    "DatabaseScriptRunConfigurationSettingsEditor.unknown.target": "<unknown>",
    "DbObjectGrantsEditor.label.no.grantee": "<No grantee>",
    "DbObjectGrantsEditor.label.no.grants": "<No grants>",
    "DbObjectGrantsEditor.state.label.not.granted": "<Not granted>",
    "MongoDB.auth.AWS": "AWS IAM",
    "MongoDB.auth.SCRAM.SHA.1": "SCRAM-SHA-1",
    "MongoDB.auth.SCRAM.SHA.256": "SCRAM-SHA-256",
    "MongoDB.auth.kerberos": "GSSAPI (Kerberos)",
    "MongoDB.auth.x.509": "X.509",
    "SqlResolveConfigurable.label.all": "<All>",
    "SqlResolveConfigurable.label.all.excluding": "<All exc.>",
    "SqlResolveConfigurable.label.everything": "<Everything>",
    "SqlResolveConfigurable.label.none": "<None>",
    "SqlResolveConfigurable.label.nothing": "<Nothing>",
    "action.Console.Jdbc.ExplainAnalyse.Raw.description": "Explain Analyse (Raw)",
    "action.Console.Jdbc.ExplainAnalyse.Raw.text": "Explain Analyse (Raw)",
    "action.Console.Jdbc.ExplainAnalyse.description": "Explain analyse",
    "action.Console.Jdbc.ExplainAnalyse.text": "Explain Analyse",
    "action.Console.Jdbc.ExplainPlan.Raw.description": "Explain Plan (Raw)",
    "action.Console.Jdbc.ExplainPlan.Raw.text": "Explain Plan (Raw)",
    "action.Console.Jdbc.ExplainPlan.description": "Explain Plan",
    "action.Console.Jdbc.ExplainPlan.text": "Explain Plan",
    "action.tx.text": "Tx: {0}",
    "azure.active.directory.interactive": "Azure Active Directory Interactive",
    "column.0": "<Column {0}>",
    "data.source.editor.url.label": "URL:",
    "data.source.from.url.url": "URL(&U):",
    "data.source.scope.editor.tree.unnamed.node.name": "<Unnamed>",
    "database.introspection.level.L1.longName": "L1 (",
    "deactivate.data.source.notification.title": "{0} [{1}]",
    "dialog.message.ssh": "SSH: {0}",
    "do.not.set": "<Do not set>",
    "group.Console.Jdbc.ExplainGroup.text": "Explain Plan",
    "group.PlanViewGroup.text": "Explain Plan",
    "label.auto.detect": "<auto detect>",
    "label.none": "<none>",
    "label.unnamed": "<unnamed {0}>",
    "label.unnamed1": "<unnamed>",
    "namespace.fraction": "{0}/{1}",
    "no.driver": "<No driver>",
    "notification.content.missing.error.message": "<missing error message>",
    "notification.content.oracle.home.should.be.defined.action": "<a href='$ACTION0'>Set ORACLE_HOME</a>",
    "progress.title.anonymous": "<Anonymous>",
    "scriptGen.option.RestrictDeleteTriggers.text": "RESTRICT WHEN DELETE TRIGGERS",
    "settings.number.nan": "NaN:",
    "unknown.in.angleBraces": "<unknown>",
    "value": "<value>"
  },
  "messages/DatabaseInspectorBundle.properties": {
    "export.notification.success.message.reveal": "<a href=reveal>{0}</a>"
  },
  "messages/DatabricksBundle.properties": {
    "dialog.add.cluster.json.label.link.url": "https://docs.databricks.com/dev-tools/api/latest/clusters.html#create",
    "note.format.inote": "INote (BigDataTools)"
  },
  "messages/DatagenBundle.properties": {
    "test.data.generator.lorem.ipsum": "Lorem Ipsum",
    "test.data.generator.web.url": "Web URL"
  },
  "messages/DataprocBundle.properties": {
    "cluster.info.config.vtpm": "VTPM:",
    "dataproc.toolwindow.title": "GC Dataproc",
    "group.name.dataproc": "GC Dataproc",
    "job.info.spark.jars": "Jar:",
    "metainfo.cluster.id": "ID:"
  },
  "messages/DbtBundle.properties": {
    "dbt.create.project.title": "dbt init"
  },
  "messages/DenoBundle.properties": {
    "deno.path": "Deno:",
    "deno.run.configuration.default.name": "Deno: {0}"
  },
  "messages/DependencyAnalysisBundle.properties": {
    "spdx.creators.organization": "JetBrains s.r.o."
  },
  "messages/DesignerBundle.properties": {
    "palette.item.deprecated.tooltip": "<html><body><center><b>{0}</b>{1}</center><p style=''width: 300px''>{2}{3}</p></body></html>"
  },
  "messages/DevKitBundle.properties": {
    "error.plugin.xml.tag.invalid": "<Invalid>",
    "group.DevkitNewActions.text": "Plugin DevKit",
    "inspection.threading.concurrency.option.group.inside.requires.edt.check.requires.read.lock": "@RequiresReadLock",
    "inspection.threading.concurrency.option.group.inside.requires.edt.check.requires.write.lock": "@RequiresWriteLock",
    "inspections.group.name": "Plugin DevKit",
    "inspections.group.path": "Plugin DevKit",
    "plugin.xml.convert.action.or.group.invalid.name": "<invalid name>",
    "plugin.xml.convert.language.id.any.language.display.name": "<any language>"
  },
  "messages/DevKitImagesBundle.properties": {
    "action.darcula.hidpi.theme.text": "Darcula HiDPI"
  },
  "messages/DevKitWorkspaceModelBundle.properties": {
    "inspections.group.path": "Plugin DevKit"
  },
  "messages/DeviceFileExplorerBundle.properties": {
    "configurable.name.android.device.file.explorer": "Android Device Explorer",
    "configurable.name.device.file.explorer": "Device Explorer"
  },
  "messages/DeviceFileExplorerToolWindowBundle.properties": {
    "configurable.name.android.device.file.explorer": "Android Device File Explorer",
    "configurable.name.device.file.explorer": "Device File Explorer"
  },
  "messages/DiagnosticBundle.properties": {
    "error.list.message.index.count": "{0}/{1}"
  },
  "messages/DiagramBundle.properties": {
    "action.Diagram.ExportToFileGroup.Dot.text": "Graphviz .dot",
    "action.Diagram.ExportToFileGroup.Graphml.text": "YEd .graphml",
    "action.Diagram.ExportToFileGroup.Mermaid.text": "Mermaid .md",
    "action.Diagram.ExportToFileGroup.Mxgraph.text": "JGraph .drawio",
    "action.Diagram.OpenInOnlineEditorGroup.Dot.text": "Graphviz Online",
    "action.Diagram.OpenInOnlineEditorGroup.Graphml.text": "yEd Live",
    "action.Diagram.OpenInOnlineEditorGroup.Mermaid.text": "Mermaid Live",
    "action.Diagram.OpenInOnlineEditorGroup.Mxgraph.text": "JGraph diagrams.net",
    "action.UML.SaveDiagram.text": "IDEA .uml",
    "visibility.level.package": "public  package",
    "visibility.level.protected": "public  package  protected"
  },
  "messages/DiffBundle.properties": {
    "blank.diff.recent.content.summary.text.date": "{0} ({1})",
    "diff.utf.charset.name.bom.suffix": "{0} BOM"
  },
  "messages/DjangoBundle.properties": {
    "django.manage.console.name": "manage.py@{0}",
    "django.manage.name": "manage.py",
    "inspection.url_tag_arguments.named_arg_string": "''{0}''",
    "magic_literals.django_url_name": "Django url",
    "manage.run.tab.name": "Django: manage.py"
  },
  "messages/DockerBundle.properties": {
    "ComposeApplicationRuntime.notification.group": "docker-compose",
    "DockerBuildSettingsUI.dockerfile.text": "Dockerfile:",
    "DockerCloudConfigurable.docker.for.mac.radio.title": "Docker for Mac",
    "DockerCloudConfigurable.docker.for.windows.radio.title": "Docker for Windows",
    "DockerComposeCredentialsEditor.no.service.placeholder": "<Select service>",
    "DockerComposeCredentialsType.name": "Docker Compose",
    "DockerComposeDeploymentEditor.down.remove.images.all.desc": "--rmi all",
    "DockerComposeDeploymentEditor.down.remove.images.local.desc": "--rmi local",
    "DockerComposeDeploymentEditor.group.up": "docker-compose up",
    "DockerComposeDeploymentEditor.group.up.v2": "docker compose up",
    "DockerComposeDeploymentEditor.no.deps.desc": "--no-deps",
    "DockerComposeDeploymentEditor.up.abort.on.exit.desc": "--abort-on-container-exit",
    "DockerComposeDeploymentEditor.up.always.recreate.desc": "--always-recreate-deps",
    "DockerComposeDeploymentEditor.up.attach.deps.desc": "--attach-dependencies",
    "DockerComposeDeploymentEditor.up.build.desc": "--build",
    "DockerComposeDeploymentEditor.up.detach.desc": "--detach",
    "DockerComposeDeploymentEditor.up.exit.code.from.desc": "--exit-code-from",
    "DockerComposeDeploymentEditor.up.force.recreate.desc": "--force-recreate",
    "DockerComposeDeploymentEditor.up.no.build.desc": "--no-build",
    "DockerComposeDeploymentEditor.up.no.recreate.desc": "--no-recreate",
    "DockerComposeDeploymentEditor.up.no.start.desc": "--no-start",
    "DockerComposeDeploymentEditor.up.remove.orphans.desc": "--remove-orphans",
    "DockerComposeDeploymentEditor.up.renew.anon.volumes.desc": "--renew-anon-volumes",
    "DockerComposeDeploymentEditor.up.scale.desc": "--scale",
    "DockerComposeDeploymentEditor.up.timeout.desc": "--timeout",
    "DockerComposeDeploymentSourceType.deploymentName": "Compose: {0}",
    "DockerComposeDeploymentSourceType.name": "Docker Compose",
    "DockerComposeInspection.groupKey": "Docker-compose",
    "DockerComposeSettingsEditor.form.name": "Docker Compose",
    "DockerDeleteProvider.smart.delete.compose": "Compose: {0}",
    "DockerExtraHostConfigurable.ip.text": "IP:",
    "DockerFileDeploymentSourceType.deploymentName": "{0} Dockerfile: {1}",
    "DockerFileDeploymentSourceType.suggestRunConfigurationName": "{0}",
    "DockerSingletonDeploymentSourceType.unknown.node.text": "<unknown>",
    "DockerSshConnectionConfigurator.label": "SSH:",
    "DockerTargetConfigurable.dockerfile.row.label": "Dockerfile:",
    "DockerWslConnectionConfigurator.label": "WSL:",
    "RegistryRuntimeTask.current.of.total": "{0}/{1}"
  },
  "messages/DockerComposeBundle.properties": {
    "ComposeFileRunLineMarkerProvider.AllServicesLineMarkerInfo.tooltip": "docker-compose up",
    "ComposeFileRunLineMarkerProvider.ServiceLineMarkerInfo.restart.tooltip": "docker-compose restart {0}",
    "ComposeFileRunLineMarkerProvider.ServiceLineMarkerInfo.up.tooltip": "docker-compose up {0}"
  },
  "messages/DockerGatewayBundle.properties": {
    "DockerGateway.devcontainer": "Dev Container",
    "DockerGatewayConnector.title": "Docker Dev Container",
    "DockerGatewayRecentConnections.title": "Dev Container",
    "action.com.intellij.clouds.docker.gateway.actions.NewDevcontainerAction.text": ".devcontainer",
    "advanced.settings.dev.containers": "Dev Container",
    "group.Dev.Container.Actions.text": "Dev Container"
  },
  "messages/DownburstBundle.properties": {
    "docker.terminal.title": "Docker: {0}",
    "external.system.name": "Docker Compose",
    "tool.window.title": "Docker Compose"
  },
  "messages/DpaBundle.properties": {
    "dpa.icon.widget.display.name": "Dynamic Program Analysis",
    "dpa.options.page.name": "Dynamic Program Analysis",
    "dpa.status.bar.popup.title": "Dynamic Program Analysis"
  },
  "messages/DubboBundle.properties": {
    "inspection.group.name": "Apache Dubbo",
    "label.boot.version": "Spring Boot:",
    "label.dubbo.version": "Apache Dubbo:"
  },
  "messages/DuplicatesBundle.properties": {
    "duplicates.inspection.description": "Reports duplicated blocks of code from the selected scope: the same file{0,choice, 0#, same module, dependent modules|1#} or the entire project.<!-- tooltip end --> <p>The inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window.{0,choice, 0#When possible, the inspection provides a quick-fix to extract a method from the duplicated code.|1#}<p>The inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs.{1,choice, 0#'<'p>You can also configure the constructs that you want to anonymize in '<'a href=\"settings://duplicates.index\"> {2} '|' Editor '|' Duplicates'<'/a>.|1#}"
  },
  "messages/DvcsBundle.properties": {
    "clone.repository.url.label": "URL:",
    "multi.message.line.prefix.form": "{0}: {1}"
  },
  "messages/EJBHighlightingBundle.properties": {
    "ejb.enterprise.java.beans": "EJB: Enterprise Java Beans",
    "ejb.label.name": "<ejb-name>(&N):"
  },
  "messages/EclipseBundle.properties": {
    "eclipse.classpath.storage.description": "Eclipse (.classpath)"
  },
  "messages/EditorBundle.properties": {
    "intellij.darcula.contrast.scheme.name": "Darcula Contrast",
    "intellij.light.color.scheme.name": "IntelliJ Light",
    "print.page.width.x.height.unit.template": "{0} x {1} {2}"
  },
  "messages/EditorConfigBundle.properties": {
    "usage.descriptive.name.unknown": "<unknown name>",
    "usage.node.text": "{0} {1}",
    "usage.node.unknown": "<unknown node>",
    "usage.type.unknown": "<unknown type>"
  },
  "messages/EduCoreBundle.properties": {
    "action.Educational.Educator.SyncChangesWithNextTasks.Lesson.description": "Synchronize the changes of the files in the current framework lesson",
    "action.Educational.Educator.SyncChangesWithNextTasks.Lesson.text": "Sync Files...",
    "action.Educational.Educator.SyncChangesWithNextTasks.MergeDialog.AcceptFromButton.text": "Accept from {0}",
    "action.Educational.Educator.SyncChangesWithNextTasks.MergeDialog.LeftPanel.title": "New changes in {0}",
    "action.Educational.Educator.SyncChangesWithNextTasks.MergeDialog.MergeWindow.title": "Resolve conflicts for {0}",
    "action.Educational.Educator.SyncChangesWithNextTasks.MergeDialog.MultipleFileDialog.description": "It was not possible to apply changes to some files automatically. Conflict resolution is needed.",
    "action.Educational.Educator.SyncChangesWithNextTasks.Notification.cancel.description": "Applying changes from task \"{0}\" to all subsequent tasks was canceled at task \"{1}\"",
    "action.Educational.Educator.SyncChangesWithNextTasks.Notification.cancel.title": "Canceled applying the changes",
    "action.Educational.Educator.SyncChangesWithNextTasks.Notification.success.description": "Applied changes from task \"{0}\" to all subsequent tasks",
    "action.Educational.Educator.SyncChangesWithNextTasks.Notification.success.title": "Finished applying the changes",
    "action.Educational.Educator.SyncChangesWithNextTasks.SeveralFiles.description": "Synchronize the changes of the files in the current task with next tasks in the current framework lesson",
    "action.Educational.Educator.SyncChangesWithNextTasks.SeveralFiles.text": "Sync Files with Next Tasks...",
    "action.Educational.Educator.SyncChangesWithNextTasks.SingleFile.description": "Synchronize the changes of the file in the current task with next tasks in the current framework lesson",
    "action.Educational.Educator.SyncChangesWithNextTasks.SingleFile.text": "Sync File with Next Tasks...",
    "action.Educational.Educator.SyncChangesWithNextTasks.conflict.resolution.smart.indicator": "Resolving Conflicts...",
    "action.Educational.Student.ApplyCode.dialog.text": "Are you sure you want to apply this code?",
    "action.Educational.Student.PostMarketplaceProjectToGitHub.banner.action": "Share on GitHub",
    "action.Educational.Student.PostMarketplaceProjectToGitHub.banner.message": "Would you like to share your project on GitHub?",
    "action.Educational.Student.PostMarketplaceProjectToGitHub.notification.content.no.framework.lessons.found": "No framework lessons found",
    "action.Educational.Student.PostMarketplaceProjectToGitHub.notification.title.failed.to.post.project.to.marketplace": "Failed to post project to Marketplace",
    "action.Educational.Student.PostMarketplaceProjectToGitHub.text": "Post Marketplace Project to GitHub",
    "exception.message.http.info": "HTTP {0} {1}",
    "inspection.group.path.key": "JetBrains Academy",
    "marketplace.widget.title": "JetBrains Account",
    "stepik.url": "Stepik URL:",
    "submissions.button.community.tooltip.text.login": "Log in to view community solutions",
    "ui.dialog.create.answer.placeholder.path.pattern": "[sectionName#]lessonName#taskName#filePath#placeholderIndex",
    "user.agreement.dialog.text": "By clicking Agree, you confirm that you have read and agree <br> to the following terms and conditions:",
    "user.agreement.editor.notification": "Saves are disabled/don''t work. Agree to the user agreement to enable them"
  },
  "messages/EduFormatBundle.properties": {
    "error.agreement.not.accepted": "User Agreement Not Accepted"
  },
  "messages/EfCoreUiBundle.properties": {
    "configurable.name.ef.core.ui": "EF Core UI",
    "group.EfCore.Groups.Dialogs.text": "Entity Framework Core",
    "tab.task.ef.core": "EF Core"
  },
  "messages/EjbBundle.properties": {
    "action.CreateServletAction.text": "Servlet(_S)",
    "action.GenerateServletAction.text": "Servlet(&S)…",
    "label.edit.relationship.ejb": "EJB:"
  },
  "messages/EmbeddedBundle.properties": {
    "freertos.task.table.id.column": "TCB №",
    "jlink.gdb.server.displayname": "Segger JLink",
    "label.jlink.gdb.server": "Segger J-Link",
    "label.st.util.gdb.server": "st-util",
    "non.readable": "<Non-readable>",
    "pemicro.gdb.server.displayname": "PE Micro (OpenSDA)",
    "reset.strategy.pre_reset": "Pre-Reset",
    "reset.strategy.under_reset": "Init-Under-Reset",
    "rtos.azure.display.name": "Azure RTOS ThreadX",
    "stutil.displayname": "st-util",
    "svd.write.only": "<Write-Only>"
  },
  "messages/EmrBundle.properties": {
    "emr.spark.submit.editor.mapper": "Mapper:",
    "emr.spark.submit.editor.reducer": "Reducer:",
    "metainfo.cluster.id": "ID:",
    "metainfo.cluster.outpostArn": "Outpost ARN:",
    "step.info.log.stderr": "Stderr:",
    "step.info.log.stdout": "Stdout:",
    "step.info.log.syslog": "Syslog:"
  },
  "messages/ExecutionBundle.properties": {
    "combo.java.version.1.4": "JDK 1.4.x",
    "combo.java.version.5.to.8": "JDK 5 - 8",
    "run.configuration.jre.label": "JRE(&J):",
    "run.configuration.jre.name": "JRE(&J)",
    "run.configurations.multilaunch.error.template.executable.error": "{0}: {1}",
    "run.configurations.multilaunch.table.row.unknown": "<Unknown>",
    "run.on.targets.label.new.target.of.type": "{0}…",
    "run.toolbar.started": "{0}: {1}",
    "settings.console.kb": " KB",
    "targets.details.action.new.target.of.type.text": "{0}…",
    "wsl.folding.placeholder": "{0}: {1}"
  },
  "messages/ExternalSystemBundle.properties": {
    "external.system.dependency.analyzer.editor.tab.name": "Dependency Analyzer",
    "progress.update.text": "{0}: {1}"
  },
  "messages/FacesBundle.properties": {
    "action.Faces.CreateJsfAction.text": "JSF/Facelets",
    "list.item.jsf.facelets": "JSF/Facelets"
  },
  "messages/FeedbackBundle.properties": {
    "dialog.previous.ide.2": "IntelliJ Ultimate",
    "dialog.previous.ide.3": "IntelliJ Community",
    "dialog.previous.ide.4": "Android Studio",
    "dialog.previous.language.4": "JavaScript/TypeScript",
    "dialog.previous.language.5": "C/C++",
    "dialog.previous.language.6": "C#"
  },
  "messages/FindBundle.properties": {
    "emptyText.used.option": "{0}",
    "find.context.presentation.scope.label": " ({0})"
  },
  "messages/FlexBundle.properties": {
    "actionscript.template.context.type": "ActionScript(&I)",
    "autodetected.source.root.type": "ActionScript/Flex",
    "can.not.package.bc": "<html><b>{0}</b>: {1}</html>",
    "dialog.edit.template.checkbox.mxml": "MXML(&M)",
    "flash.builder": "Flash Builder",
    "flex.sdk.presentable.name": "Flex/AIR SDK",
    "javascript.uml.visibility.package_local": "protected \\&\\& internal",
    "js.uml.presentable.name": "ActionScript/Flex"
  },
  "messages/FrameworkBundle.properties": {
    "framework.commands.form.messages.title.command.line.tools": "Command Line Tools",
    "framework.run.anything.value.patten.help.description": "{0}<value> {1}",
    "framework.settings.table.interpreter.default": "<Default project interpreter>",
    "framework.settings.table.interpreter.unknown": "<Uknown interpreter>",
    "framework.zend1.name.zend.tool.framework": "Zend Framework 1 Tool",
    "framework.zend2.name.zend.tool.framework": "Zend Framework 2 Tool",
    "symfony.component.version.2": "2.*.*"
  },
  "messages/FullLineBundle.properties": {
    "full.line.configurable.name": "Full Line Code Completion",
    "full.line.notifications.feedback.title": "Full Line Code Completion"
  },
  "messages/GatewayBundle.properties": {
    "connector.cwm.dialog.title": "Code With Me",
    "install.google.cloud.title": "Google Cloud",
    "wsl-distribution-chooser.microsoft-store": "Microsoft Store"
  },
  "messages/GaugeBundle.properties": {
    "form.gauge.home": "GAUGE_HOME:",
    "gauge.manifest.json.schema": "Gauge 1.0 Manifest"
  },
  "messages/GcloudBundle.properties": {
    "install.sdk.title": "GCloud SDK",
    "managedsdk.notifications.title": "Google Cloud SDK"
  },
  "messages/GitBundle.properties": {
    "abort.operation.indicator.text": "git {0} --abort{1}",
    "action.Git.Fixup.To.Commit.text": "Fixup…",
    "activity.name.abort.command": "Git abort {0}",
    "activity.name.checkout": "Git checkout",
    "activity.name.cherry.pick": "Git cherry-pick",
    "activity.name.merge": "Git merge",
    "activity.name.rebase": "Git rebase",
    "activity.name.reset": "Git reset",
    "activity.name.revert": "Git revert",
    "activity.name.stash": "Git stash",
    "activity.name.undo.commit": "Git undo commit",
    "activity.name.unstash": "Git unstash",
    "errors.message.item": "\n{0}",
    "git.add.to.exclude.file.action.text": ".git/info/exclude",
    "git.light.status.bar.text": "Git: {0}",
    "git4idea.vcs.name.with.mnemonic": "&Git",
    "group.Git.ContextMenu.text": "&Git",
    "group.Git.Menu.text": "&Git",
    "init.warning.title": "Git Init",
    "label.credential.store.key.http.password": "Git HTTP",
    "local.changes.freeze.message.git.operation.prefix": "Git {0}",
    "remotes.define.remote.url": "URL:",
    "stash.editor.diff.preview.id.change.title": "{0}: {1}"
  },
  "messages/GitLabBundle.properties": {
    "merge.request.on.branch": "!{0}，{1}"
  },
  "messages/GithubBundle.properties": {
    "action.Github.Share.Vcs.Toolbar.Widget.text": "GitHub…"
  },
  "messages/GithubUltimateBundle.properties": {
    "group.com.intellij.github.actions.ide.new.file.text": "GitHub Actions"
  },
  "messages/GlassfishBundle.properties": {
    "GlassfishIntegration.presentable.name": "Glassfish Server",
    "descriptor.pattern.name": "{0} ({1})"
  },
  "messages/GlueBundle.properties": {
    "config.name.default": "AWS Glue",
    "settings.group.name": "AWS Glue",
    "toolwindow.title": "AWS Glue"
  },
  "messages/GoBundle.properties": {
    "action.GoEditSettingsAction.text.os.specific": "Go {0}…",
    "action.com.goide.vgo.actions.VgoTidyAction.text": "Go Mod Tidy",
    "action.com.goide.vgo.actions.VgoVendorAction.text": "Go Mod Vendor",
    "go.app.engine.wizard.name": "App Engine",
    "go.debugger.thread.dump.n.goroutines": "{0} {0,choice,0#goroutines|1#goroutine|2#goroutine}",
    "go.execution.remote.run.configuration.description": "Go Remote",
    "go.execution.remote.run.configuration.display.name": "Go Remote",
    "go.intention.run.go.generate.text": "Go generate ''{0}''",
    "go.libraries.configurable.path.source.prefix.gopath": "[GOPATH]",
    "go.quick.doc.keyword.resource.effective.go.label": "Effective Go",
    "go.run.target.gopath.label": "GOPATH: ",
    "go.wizard.name": "Go (GOPATH)",
    "vgo.inspection.dependency-deprecated-retracted.tooltip-template": "<html><body>{0}.<p><span style=\"color:{3}\">{1}:</span> {2}</body></html>"
  },
  "messages/GraalVmBundle.properties": {
    "debugger.display.name": "GDB/GraalVM"
  },
  "messages/GradleBundle.properties": {
    "gradle.dsl.new.project.wizard": "Gradle DSL:",
    "gradle.filetype.display.name": "Groovy Gradle DSL",
    "gradle.settings.text.jvm.path": "Gradle JVM:"
  },
  "messages/GrailsBundle.properties": {
    "action.Grails.NewTagLib.text": "Grails TagLib",
    "checkbox.tooltip.text.html.nbsp.0.html": "<html>&nbsp;{0}</html>",
    "domain.classes.relations.belongs.to": "1..1",
    "domain.classes.relations.has.many": "1..*",
    "domain.classes.relations.has.many.to.many": "*..*",
    "domain.classes.relations.strong": "*..1",
    "domain.classes.relations.strong.strong": "1..1",
    "filetype.gsp.description": "Groovy Server Pages",
    "forge.module.builder.title": "Grails App Forge",
    "mvc.plugins.form.description.default": "<html>  <head> </head>  <body> <p style=\"margin-top: 0\"></p></body></html>",
    "project.view.application.node.version.label": "(Grails {0})",
    "relation.form.checkbox.belongsto": "belongsTo(&B)",
    "relation.form.checkbox.hasmany": "hasMany(&H)",
    "wizard.form.checkbox.create.app": "create-app(&A)",
    "wizard.form.checkbox.create.plugin": "create-plugin(&P)"
  },
  "messages/GraphQLBundle.properties": {
    "graphql.library.apollokotlin": "Apollo Kotlin",
    "graphql.library.prefix": "GraphQL:",
    "graphql.query.result.statistics.error": ", {0} {1}"
  },
  "messages/GroovyBundle.properties": {
    "action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGenerateMethodMissingAction.text": "methodMissing()",
    "action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGeneratePropertyMissingAction.text": "propertyMissing()",
    "action.org.jetbrains.plugins.groovy.actions.generate.tostring.GroovyGenerateToStringAction.text": "to_String()",
    "dynamic.dialog.static.checkbox": "static(&S)",
    "expression.type.unknown": "<unknown>",
    "filetype.gdsl.display.name": "Groovy DSL",
    "filetype.logback.display.name": "Groovy Logback DSL",
    "framework.0.sdk.chooser.title": "{0} SDK",
    "getter.kind.getter.0": "Getter {0}",
    "groovy.version.0": "Groovy {0}",
    "inspection.display.name.delegates.to": "@DelegatesTo",
    "label.groovy.sdk": "Groovy SDK:",
    "module.name.0.and.groovy.version.1": "{0} ({1})",
    "non.sealed.visibility.presentation": "non-sealed",
    "surround.with.cast": "((Type) expr)",
    "surround.with.closure": "{ -> ... }.call()",
    "surround.with.if.else": "if / else",
    "surround.with.if.else.expr": "if (expr) / else",
    "surround.with.if.expr": "if (expr)",
    "surround.with.parentheses": "(expr)",
    "surround.with.shouldFail": "shouldFail () {...}",
    "surround.with.try.catch": "try / catch",
    "surround.with.try.catch.finally": "try / catch / finally",
    "surround.with.try.finally": "try / finally",
    "surround.with.while.expr": "while (expr)",
    "surround.with.with": "with () {...}",
    "surround.with.with.expr": "with (expr)"
  },
  "messages/GroovyJpsBundle.properties": {
    "compiler.name.greclipse": "Groovy-Eclipse",
    "status.0.chunk.name.1": "{0} [{1}]"
  },
  "messages/GroovyRefactoringBundle.properties": {
    "visibility.protected.choice": "Protected(&O)",
    "visibility.public.choice": "public(&B)"
  },
  "messages/GuiceBundle.properties": {
    "group.GuiceActionGroup.text": "Google Guice"
  },
  "messages/GwtBundle.properties": {
    "dialog.title.google.web.toolkit": "Google Web Toolkit",
    "exportable.GwtSdkManager.presentable.name": "GWT SDK",
    "file.template.group.title.gwt": "Google Web Toolkit",
    "google.web.toolkit.title": "Google Web Toolkit",
    "group.GWT.description": "Google Web Toolkit",
    "group.GWT.text": "Google Web Toolkit",
    "group.gwt.inspections.name": "Google Web Toolkit",
    "gwt.intention.category": "Google Web Toolkit",
    "label.gwt.sdk": "GWT SDK:",
    "label.none.facet.selected": "<none>"
  },
  "messages/GwtJpsBundle.properties": {
    "compiler.message.stderr.0": "[stderr]: {0}"
  },
  "messages/HadoopMonitoringBundle.properties": {
    "settings.group.name": "Hadoop YARN",
    "toolwindow.title": "Hadoop YARN"
  },
  "messages/HbBundle.properties": {
    "border.title.handlebars.mustache": "Handlebars/Mustache",
    "filetype.hb.description": "Handlebars/Mustache",
    "hb.pages.options.title": "Handlebars/Mustache",
    "inspections.group.name": "Handlebars/Mustache"
  },
  "messages/HdfsBundle.properties": {
    "custom.bucket.text.empty": "bucket/folder,bucket2/folder/subfolder2,…",
    "emr.spark.submit": "EMR Spark-submit",
    "emr.toolwindow.title": "AWS EMR",
    "group.name.alibaba": "Alibaba OSS",
    "group.name.dospaces": "DigitalOcean Spaces",
    "group.name.emr": "AWS EMR",
    "group.name.gcs": "Google Cloud Storage",
    "group.name.s3": "AWS S3",
    "oss.file.info.label.type": "Content-Type:",
    "settings.s3.region.group": "AWS S3"
  },
  "messages/HelidonBundle.properties": {
    "helidon.inspections.config.properties": "Helidon application.properties",
    "helidon.inspections.config.yaml": "Helidon application.yaml"
  },
  "messages/HgBundle.properties": {
    "action.hg4idea.pull.update.merge": "&Merge",
    "activity.name.graft": "Hg graft",
    "activity.name.merge": "Hg merge",
    "activity.name.rebase": "Hg rebase",
    "activity.name.rollback": "Hg revert",
    "activity.name.update": "Hg update",
    "hg4idea.vcs.name.with.mnemonic": "Mercurial(_M)",
    "hg4idea.vcs.short.name.with.mnemonic": "Hg(_G)"
  },
  "messages/HibernateBundle.properties": {
    "framework.title.hibernate": "Hibernate(&H)"
  },
  "messages/HiveMetastoreBundle.properties": {
    "settings.uri.emptyText": "thrift://address:1083,thrift://address2:1083"
  },
  "messages/HttpClientExecutorBundle.properties": {
    "rest.client.0.of.1.kb.indicator.text": "{0}/{1}Kb"
  },
  "messages/HunspellBundle.properties": {
    "hunspell.type": "hunspell-jni"
  },
  "messages/IcsBundle.properties": {
    "readonly.sources.configuration.url.label": "URL:"
  },
  "messages/IdeBundle.properties": {
    "about.box.vm": "VM: {0}，{1}",
    "browsers.explorer": "Internet Explorer",
    "colorpanel.label.alpha.percent": "A%",
    "colorpanel.label.brightness": "B%",
    "colorpanel.label.hue": "H°",
    "colorpanel.label.saturation": "S%",
    "colorpicker.label.blue": "B:",
    "colorpicker.label.brightness": "B:",
    "colorpicker.label.green": "G:",
    "colorpicker.label.hue": "H:",
    "colorpicker.label.red": "R:",
    "colorpicker.label.saturation": "S:",
    "colorpicker.recent.color.tooltip": "R: {0} G: {1} B: {2} A: {3}",
    "configurable.AppEngineFacetEditor.display.name": "Google App Engine",
    "icon.nodes.c_plocal.tooltip": "package-local",
    "intellij.light.theme.name": "IntelliJ Light",
    "label.text.antialiasing.scope.ide": "IDE:",
    "label.version.any": "<any>",
    "list.item.temporary.file.0": "<temporary file>{0}",
    "login.dialog.title": "{0}",
    "node.structureview.invalid": "<invalid>",
    "notification.manager.content.height.linebreak": "<br>\n",
    "notification.title.jcef.measureFPS": "OSR JCEF FPS Meter",
    "plugin.advertiser.product.call.to.action": "{0}: {1}",
    "presentation.assistant.configurable.keymap.win.label": "Win/Linux",
    "presentation.assistant.configurable.name": "Presentation Assistant",
    "presentation.assistant.notification": "Presentation Assistant",
    "presentation.assistant.settings": "Presentation Assistant",
    "presentation.assistant.toggle.action.name": "Presentation Assistant",
    "settings.menus.group.touch.bar": "Touch Bar",
    "start.browser.panel.url.label": "URL(&U):",
    "task.browser.url": "URL:",
    "transfersettings.product.visual.studio": "Visual Studio",
    "transfersettings.product.visual.studio.for.mac": "Visual Studio for Mac",
    "wsl.wsl.ip": "WSL (Linux) IP"
  },
  "messages/ImagesBundle.properties": {
    "icon.dimensions": "{0,number}x{1,number}x{2,number}",
    "image.description": "{0}×{1}，{2}bpp",
    "image.info.svg": "{0}x{1} SVG {2}"
  },
  "messages/ImportSettingsBundle.properties": {
    "jetbrains.ides": "JetBrains IDE",
    "transfer.error.no-error-message": "<no error message>"
  },
  "messages/InspectionGadgetsBundle.properties": {
    "static.import.display.name": "static import",
    "static.import.problem.descriptor": "static import <code>#ref</code>  #loc"
  },
  "messages/InspectionJSBundle.properties": {
    "add.require.amd.module.group.name": "Node.js"
  },
  "messages/InspectionsBundle.properties": {
    "custom.severity.count.message": "{0} {1}",
    "group.names.language.level.specific.issues.and.migration.aids10": "Java 10",
    "group.names.language.level.specific.issues.and.migration.aids11": "Java 11",
    "group.names.language.level.specific.issues.and.migration.aids14": "Java 14",
    "group.names.language.level.specific.issues.and.migration.aids15": "Java 15",
    "group.names.language.level.specific.issues.and.migration.aids16": "Java 16",
    "group.names.language.level.specific.issues.and.migration.aids21": "Java 21",
    "group.names.language.level.specific.issues.and.migration.aids5": "Java 5",
    "group.names.language.level.specific.issues.and.migration.aids7": "Java 7",
    "group.names.language.level.specific.issues.and.migration.aids8": "Java 8",
    "group.names.language.level.specific.issues.and.migration.aids9": "Java 9",
    "inspection.reference.default.package": "<default>",
    "long.range.set.presentation.range.with.mod": "{0}；{1}"
  },
  "messages/IntelliLangBundle.properties": {
    "language.label.id": "ID(&I):"
  },
  "messages/J2EEBundle.properties": {
    "group.names.javaee.issues": "Java EE",
    "project.view.pane.title.j2ee": "Java EE",
    "starter.web.application.hint": "Servlet、web.xml、index.jsp"
  },
  "messages/JBossBundle.properties": {
    "JBossIntegration.name": "JBoss/WildFly"
  },
  "messages/JSDebuggerBundle.properties": {
    "javascript.debugger.settings.url": "URL(&U):",
    "js.debug.firefox.config.name": "Firefox Remote",
    "js.scripts.source.tree.root.label": "<root>",
    "react.native.config.name": "React Native",
    "react.native.project.generator.package.name": "React Native:"
  },
  "messages/JUnitBundle.properties": {
    "default.junit.config.name.category": "@Category({0})",
    "jvm.inspections.migrate.assert.to.matcher.description": "Assert expression <code>#ref</code> can be replaced with ''{0}'' call #loc"
  },
  "messages/JadeBundle.properties": {
    "color.settings.name": "Pug/Jade",
    "pug.code.style.configurable.name": "Pug/Jade",
    "pug.inspections.group.name": "Pug/Jade",
    "pug.template.context.name": "Pug/Jade"
  },
  "messages/JavaAnalysisBundle.properties": {
    "dfa.find.cause.special.field.of.something": "{0}/{1}",
    "inspection.reference.default.package": "<default>",
    "inspection.reference.lambda.name": "lambda ({0})"
  },
  "messages/JavaBundle.properties": {
    "action.create.new.module-info.title": "module-info.java",
    "action.create.new.package-info.title": "package-info.java",
    "checkbox.collapse.suppress.warnings": "<html>@SuppressWarnings</html>",
    "inspection.unused.symbol.check.accessors": "Getter/Setter",
    "intention.category.junit": "Java/JUnit",
    "intention.create.test.dialog.setUp": "set&Up/@Before",
    "intention.create.test.dialog.tearDown": "tear&Down/@After",
    "intention.surround.with.ARM.block.template": "try-with-resources",
    "java.terms.variable.of.method": "{0}/{1}",
    "jrt.node.short": "[JRT]",
    "jvm.logging.configurable.id": "jvm.logging",
    "macro.array.variable": "arrayVariable()",
    "macro.component.type.of.array": "componentTypeOf(Array)",
    "macro.descendant.classes.enum": "descendantClassesEnum(String)",
    "macro.expression.type": "expressionType(Expression)",
    "macro.guess.element.type.of.container": "guessElementType(Container)",
    "macro.iterable.component.type": "iterableComponentType(ArrayOrIterable)",
    "macro.iterable.variable": "iterableVariable()",
    "macro.variable.of.type": "variableOfType(Type)",
    "null.check.surrounder.description": "if (expr != null) {…}",
    "surround.with.dowhile.template": "do / while",
    "surround.with.ifelse.expression.template": "if (expr) {...} else {...}",
    "surround.with.try.catch.finally.template": "try / catch / finally",
    "surround.with.try.catch.template": "try / catch",
    "switch.stmt.template.description": "switch (expr) {…}",
    "title.code.vision": "Code Vision",
    "title.code.vision.inlay.hints": "Code Vision"
  },
  "messages/JavaCompilerBundle.properties": {
    "error.jdk.module.names.overflow.element.ellipsis": "…"
  },
  "messages/JavaDebuggerBundle.properties": {
    "exception.breakpoint.console.message.location.info": "{0}:{1,number,#}",
    "instances.window.show.history": "InstancesWindow.ShowHistory",
    "label.debugger.launching.configurable.socket": "&Socket ",
    "label.generic.debugger.parameters.patcher.configurable.shmem": "Shared &memory ()",
    "label.thread.node": "\"{0}\"@{1}: {2}",
    "memory.view.constructor.tracker.name": "MemoryViewConstructorTracker: {0}",
    "message.node.toString": "… toString()",
    "surround.with.runtime.type.template": "((RuntimeType)expr)",
    "threads.export.attribute.label.object-id": "<0x{0}> ({1})",
    "threads.export.attribute.label.priority": "prio={0}",
    "threads.export.attribute.label.tid": "tid=0x{0}"
  },
  "messages/JavaFXBundle.properties": {
    "javafx.edit.certificates.dialog.keypass": "Keypass(&E):",
    "javafx.edit.certificates.dialog.keystore": "Keystore(&Y):",
    "javafx.edit.certificates.dialog.signed.storepass": "Storepass(&P):",
    "scene.builder.editor.tab.name": "Scene Builder"
  },
  "messages/JavaFXJpsBundle.properties": {
    "java.fx.packager": "Java FX Packager"
  },
  "messages/JavaPsiBundle.properties": {
    "aux.context.display": "/{0}",
    "element.kind.and.name": "{0} {1}",
    "feature.classfile.api": "ClassFile API",
    "feature.static.imports": "static import",
    "feature.stream.gatherers": "Stream Gatherer",
    "feature.try.with.resources": "Try-with-resources",
    "feature.with.initial": "ThreadLocal.withInitial()"
  },
  "messages/JavaRefactoringBundle.properties": {
    "encapsulate.fields..package.local.radio": "Package local(&C)",
    "encapsulate.fields.protected.radio": "protected(&T)",
    "extract.method.object.inner.visibility.package.local": "package local(&K)",
    "extract.method.object.inner.visibility.private": "private(&V)",
    "extract.method.object.inner.visibility.protected": "protected(&O)",
    "extract.method.object.inner.visibility.public": "public(&B)"
  },
  "messages/JavaScriptBundle.properties": {
    "action.JasmineGenerateAfterEachMethodAction.text": "Jasmine afterEach",
    "action.JasmineGenerateBeforeEachMethodAction.text": "Jasmine beforeEach",
    "action.JasmineGenerateNewSpecAction.text": "Jasmine Spec",
    "action.JasmineGenerateNewSuiteAction.text": "Jasmine Suite",
    "action.NewPackageJsonFile.text": "package.json",
    "action.QUnitGenerateNewTestAction.text": "QUnit Test",
    "action.QUnitGenerateSetupAction.text": "QUnit Setup",
    "action.QUnitGenerateTearDownAction.text": "QUnit TearDown",
    "bower.json": "bower.json (&O):",
    "es6.auto.import.options.title": "TypeScript / JavaScript",
    "fetch.client.generator.title": "JavaScript Fetch",
    "filetype.ecmascript6.description": "ECMAScript 6",
    "filetype.flow.description": "Flow JS",
    "filetype.flow.display.name": "Flow JS",
    "filetype.typescript.jsx.description": "TypeScript JSX",
    "filetype.yarn.lock.description": "Yarn lock",
    "filetype.yarn.lock.display.name": "Yarn Lock",
    "flow.js.widget.display.name": "Flow JS",
    "grunt.rc.gruntfile.label": "Gruntfile (&F):",
    "gulp.rc.gulpfile.label": "Gulpfile (&F):",
    "intention.category.ecmascript6": "JavaScript/ECMAScript 6",
    "introduce.variable.const": "const(&C)",
    "introduce.variable.let": "let(&L)",
    "introduce.variable.var": "var(&V)",
    "javascript.label.visibility.package_local": "internal(&I)",
    "javascript.label.visibility.private": "private(&V)",
    "javascript.label.visibility.protected": "protected(&O)",
    "javascript.surround.with.cast": "Type(expr)",
    "javascript.surround.with.do.while": "do / while",
    "javascript.surround.with.if.cond": "if (cond)",
    "javascript.surround.with.if.else": "if / else",
    "javascript.surround.with.if.else.cond": "if (cond) / else",
    "javascript.surround.with.not.parenthesis": "!(expr)",
    "javascript.surround.with.parenthesis": "(expr)",
    "javascript.surround.with.try.catch": "try / catch",
    "javascript.surround.with.try.catch.finally": "try / catch / finally",
    "javascript.surround.with.try.finally": "try / finally",
    "javascript.template.context.type": "JavaScript(&R)",
    "js.language.feature.async.await": "async/await",
    "js.language.version.combo.es5": "ECMAScript 5.1",
    "js.language.version.combo.es6": "ECMAScript 6+",
    "js.language.version.combo.js185": "JavaScript 1.8.5",
    "jshint.inspection.message.prefix": "JSHint:",
    "jshint.option.esnext.description.short": "EcmaScript.next",
    "jshint.option.wsh.description.short": "Windows Script Host",
    "jshint.progress.title": "JSHint {0}",
    "jsx.html.context.type": "JSX HTML",
    "livetemplate.description.console.assert": "console.assert()",
    "livetemplate.description.console.error": "console.error()",
    "livetemplate.description.console.info": "console.info()",
    "livetemplate.description.console.log": "console.log()",
    "livetemplate.description.console.trace": "console.trace()",
    "livetemplate.description.console.warn": "console.warn()",
    "macro.js.component.type.of": "jsComponentTypeOf(Array)",
    "macro.js.suggest.default.variable.kind": "jsSuggestDefaultVariableKind(Boolean)",
    "node.js.inspection.group.name": "Node.js",
    "notification.group.linters": "JavaScript linter",
    "npm.rc.packageJson.label": "package.json(&P):",
    "settings.nodejs.name": "Node.js",
    "typescript.compiler.configurable.options.version": "TypeScript:",
    "unresolved.project.interpreter.notification.download.action.url": "https://nodejs.org/en/download"
  },
  "messages/JavaScriptIntentionBundle.properties": {
    "plugin.category.flowjs": "Flow JS",
    "plugin.category.javascript.jsx": "JavaScript/JSX"
  },
  "messages/JavaStartersBundle.properties": {
    "title.project.java.version.label": "Java:"
  },
  "messages/JavaUiBundle.properties": {
    "checkbox.javadocs": "JavaDoc(&D)",
    "class.file.decompiled.sdk.version.text": "(Java {0})",
    "facet.banner.text": "Facet ''{0}''",
    "facet.type.banner.text": "''{0}''Facets",
    "jdk.missing.item": "<No JDK>",
    "label.maven": "Maven:",
    "label.project.wizard.new.project.jdk": "JDK:",
    "multiple.facets.banner.0.1.facets": "{0} {1} facet",
    "project.roots.classpath.format.default.descr": "IntelliJ IDEA (.iml)",
    "project.roots.jdk.banner.text": "SDK ''{0}''",
    "project.roots.library.banner.text": "{1} ''{0}''",
    "project.structure.sdk": "SDK:",
    "repository.library.type.maven.description": "Maven: {0}"
  },
  "messages/JavaeeJspBaseBundle.properties": {
    "dialog.edit.template.checkbox.jsp": "JSP (&P)"
  },
  "messages/JdlBundle.properties": {
    "configurable.name.jhipster.jdl": "JHipster JDL",
    "unnamed": "<unnamed>"
  },
  "messages/JoomlaBundle.properties": {
    "inspection.php.group.joomla": "Joomla!",
    "joomla.title": "Joomla!",
    "notification.group.joomla": "Joomla!"
  },
  "messages/JpaBuddyBundle.properties": {
    "BasicRepositoryAttribute.Nullability.NotSet": "-",
    "DisplayName.hibernateEnvers": "Hibernate Envers",
    "JpaToolWindowManager.toolWindowId": "JPA Buddy",
    "PTableGroup.hibernate.envers": "Hibernate Envers",
    "PTableGroup.jpa.buddy": "JPA Buddy",
    "RepositoryAttribute.OperatorType.NotSet": "-",
    "RepositoryMethodDialog.is": "(Is)",
    "configurable.group.jpa.buddy.tools.settings.display.name": "JPA Buddy",
    "inspection.group.key.jpbCommon": "JPA Buddy",
    "jpa.buddy.generation": "JPA Buddy",
    "jpaBuddy.title": "JPA Buddy",
    "project.persistenceUnit.caption": "JPA Buddy"
  },
  "messages/JpaModelBundle.properties": {
    "RepositoryConditionType.ING_POSTFIX": "-ing",
    "RepositoryConditionType.IS_ING": "Is  -ing",
    "diff.scope.count": " {0}/{1}",
    "fluent.setters": "Fluent setter",
    "jpa.buddy.template.group": "JPA Buddy",
    "microsoft.sql.server": "Microsoft SQL Server",
    "microsoft.sql.server.jtds": "Microsoft SQL Server (jtds)",
    "to.string": "toString()",
    "transactional.read.only": "Transactional readOnly"
  },
  "messages/JpaQlBundle.properties": {
    "options.xml.display.name": "JPA QL"
  },
  "messages/JsonBundle.properties": {
    "schema.widget.prefix.json.files": "JSON:",
    "unnamed.desc": "<unnamed>"
  },
  "messages/JupyterBundle.properties": {
    "Jupyter.hub.login.dialog.description.instruction.link.href": "https://jupyterhub.readthedocs.io/en/stable/reference/rest.html#create-an-api-token",
    "Jupyter.servers.managed.server.dynamic.port": "<Dynamic>",
    "action.JupyterAddRawNBCellAction.text": "Raw NBConvert",
    "action.JupyterCreateFileAction.text": "Jupyter Notebook",
    "jupyter.cell.type.raw": "Raw NBConvert",
    "jupyter.server.run.configuration.radio.python.sdk": "Python SDK",
    "notebook.collapsed.web.output.text": "Web: {0}x{1} px"
  },
  "messages/JupyterDSBundle.properties": {
    "notification.group.jupyter": "Jupyter Notebook"
  },
  "messages/KafkaBundle.properties": {
    "kafka.auth.aws_iam": "AWS IAM",
    "kafka.auth.type.scram256": "SCRAM-SHA-256",
    "kafka.auth.type.scram512": "SCRAM-SHA-512",
    "producer.asks": "ACK:",
    "schema.info.arn": "ARN:",
    "settings.cloud.type.msk": "AWS MSK",
    "settings.registry.url": "URL:",
    "settings.registry.url.hint": "http://localhost:8081",
    "settings.url.text.empty": "server1,server2"
  },
  "messages/KeyMapBundle.properties": {
    "dialog.mouse.pad.shortcut.text": "<html><center> <br>{0}<br><br>"
  },
  "messages/KmmBundle.properties": {
    "wizard.project.documentationUrl": "https://kotlinlang.org/lp/mobile/?utm_medium=link&utm_source=product&utm_campaign=ASKMMW&utm_content={0}",
    "wizard.project.library.XCFrameworkUrl": "https://kotlinlang.org/docs/mpp-build-native-binaries.html#build-xcframeworks",
    "wizard.project.library.regularFrameworkUrl": "https://kotlinlang.org/docs/apple-framework.html",
    "wizard.project.podDocUrl": "https://kotlinlang.org/docs/native-cocoapods.html#install-the-cocoapods-dependency-manager-and-plugin",
    "wizard.project.podIntegrationUrl": "https://kotlinlang.org/docs/native-cocoapods.html#use-a-kotlin-gradle-project-as-a-cocoapods-dependency",
    "wizard.project.regularFrameworkIntegrationUrl": "https://kotlinlang.org/docs/mobile/discover-kmm-project.html#ios-application"
  },
  "messages/KotlinBaseCodeInsightBundle.properties": {
    "declaration.name.0.of.1": "{0}/{1}"
  },
  "messages/KotlinBaseFe10HighlightingBundle.properties": {
    "html.javascript.0.html": "JavaScript: {0}",
    "i.for.i.br.0": "<i> for </i><br/>{0}"
  },
  "messages/KotlinBaseProjectStructureBundle.properties": {
    "sdk.0": "<sdk {0}>"
  },
  "messages/KotlinBundle.properties": {
    "action.KotlinGenerateToString.text": "toString()",
    "column.name.val.var": "Val/Var",
    "group.path.kotlin.migration": "Kotlin,Migration",
    "highlighter.name.dsl": "Dsl//",
    "hints.ranges.greaterOrEqual": "≥",
    "hints.ranges.less": "<",
    "hints.ranges.lessOrEqual": "≤",
    "hints.title.codevision": "Code Vision",
    "kotlin.script.in.beta.stage.link": "https://kotlinlang.org/docs/components-stability.html#stability-levels-explained",
    "kotlin.script.in.project.sources.link": "https://youtrack.jetbrains.com/issue/KT-52735",
    "member.info.abstract.0": "abstract {0}",
    "notification.text.kotlin.js.compiler.link": "https://kotl.in/jsirstable",
    "presentation.text.paren": "({0})",
    "presentation.text.paren.no.brackets": "{0}",
    "usage.provider.text.property.of.0": "{0}/{1}",
    "version": "{version}"
  },
  "messages/KotlinCodeInsightBundle.properties": {
    "surround.with.try.catch.finally.template": "try / catch / finally",
    "surround.with.try.catch.template": "try / catch"
  },
  "messages/KotlinDebuggerCoreBundle.properties": {
    "message.variables.property.get": "... get()"
  },
  "messages/KotlinIdeaCompletionBundle.properties": {
    "find.usage.provider.0": "{0}",
    "find.usage.provider.0.of.1": "{0}/{1}",
    "presentation.tail.for.0": "，{0}"
  },
  "messages/KotlinIdeaGradleBundle.properties": {
    "display.name.kotlin.jvm": "Kotlin/JVM",
    "display.name.kotlin.multiplatform": "Kotlin/Multiplatform",
    "framework.support.provider.kotlin.jvm.display.name": "Kotlin/JVM"
  },
  "messages/KotlinJavascriptBundle.properties": {
    "configuration.type.description.protractor.kotlin": "Protractor (Kotlin)"
  },
  "messages/KotlinJvmBundle.properties": {
    "presentable.name.kotlin.js": "Kotlin/​JS",
    "presentable.name.kotlin.jvm": "Kotlin/JVM"
  },
  "messages/KotlinMavenBundle.properties": {
    "notification.text.kotlin.js.compiler.link": "https://kotl.in/jsir-move-to-gradle"
  },
  "messages/KotlinMigrationBundle.properties": {
    "kotlin.code.style.default.changed.action.url": "https://kotl.in/new-code-style-defaults"
  },
  "messages/KotlinNewProjectWizardBundle.properties": {
    "buildsystem.type.gradle.groovy": "Gradle Groovy",
    "buildsystem.type.gradle.kotlin": "Gradle Kotlin",
    "module.configuration.group.windows.mingw": "Windows (MinGW)",
    "module.configurator.android.setting.android.plugin.application": "com.android.application",
    "module.configurator.android.setting.android.plugin.library": "com.android.library",
    "module.configurator.js.node": "Node.js",
    "module.configurator.tests.setting.framework.junit4": "JUnit 4",
    "module.configurator.tests.setting.framework.junit5": "JUnit 5",
    "module.configurator.tests.setting.framework.kotlin.test": "Kotlin Test",
    "module.type.js": "Kotlin/JS",
    "module.type.jvm": "Kotlin/JVM",
    "module.type.native": "Kotlin/Native",
    "module.type.wasm": "Kotlin/Wasm",
    "multiplatform.web.wizard.link": "https://kmp.jetbrains.com/",
    "plugin.android.setting.sdk": "Android SDK",
    "project.kind.kmm": "Kotlin Multiplatform Mobile",
    "project.kind.kotlin.js": "Kotlin/JS"
  },
  "messages/KotlinNewProjectWizardUIBundle.properties": {
    "generator.title": "Kotlin Multiplatform"
  },
  "messages/KotlinNotebookBundle.properties": {
    "action.CreateNewKotlinNotebook.text": "Kotlin Notebook",
    "kotlin.jupyter.settings.title": "Kotlin Notebook",
    "kotlin.jupyter.template.context.type.generic": "Kotlin Notebook"
  },
  "messages/KotlinPluginUpdaterBundle.properties": {
    "kotlin.eap.notification.group.name": "Kotlin EAP",
    "update.name.android.studio": "Android Studio"
  },
  "messages/KotlinProjectConfigurationBundle.properties": {
    "auto.configure.kotlin.documentation.gradle.url": "https://kotl.in/configure-kotlin-with-gradle",
    "warning.failed.disable.default.compile.link": "https://kotl.in/maven/compile-kotlin-and-java-sources"
  },
  "messages/KtorStarterBundle.properties": {
    "ktor.inspections.config.yaml": "Ktor application.yaml"
  },
  "messages/KubernetesBundle.properties": {
    "ContextsTreeDialog.selected.nodes.count.text": "{0}/{1}",
    "HelmLintAction.task.title": "Helm Lint",
    "KubectlExecutor.BaseProcessListener.progressTitle.template": "Kubernetes: {0}",
    "Kubernetes.db.no.error.message": "<no error message> ",
    "KubernetesPodContent.shell.title": "Shell: {0}",
    "KubernetesResourceMapper.resourceDisplayableName.template": "{0} ''{1}''",
    "KubernetesViewConfigurable.podShellRow.title": "Pod Shell",
    "action.Kubernetes.HelmLint.text": "Helm Lint(&L)",
    "group.Kubernetes.HelmActions.text": "Helm(&H)"
  },
  "messages/LLMBundle.properties": {
    "action.AIAssistant.ToolWindow.ShowOrFocus.text": "AI Assistant",
    "ai.assistant.grazie.login.error.title": "AI Assistant",
    "cmg.prompt.customization.title.ai.assistant": "AI Assistant",
    "intention.category.large.language.models": "AI Assistant",
    "intentions.apply.custom.edit.dialog.title.ai.assistant": "AI Assistant",
    "name.assistant": "AI Assistant",
    "notification.group.name": "AI Assistant",
    "settings.configurable.display.name": "AI Assistant",
    "statusbar.balloon.title": "AI Assistant",
    "statusbar.widget.toolTipText": "AI Assistant"
  },
  "messages/LLMInstallerBundle.properties": {
    "action.ActivateAIAssistantToolWindow.text": "AI Assistant",
    "toolwindow.stripe.AIAssistant": "AI Assistant"
  },
  "messages/LLMPyCharmCommunityInstallerBundle.properties": {
    "intention.category.large.language.models": "AI Assistant",
    "promo.configurable.ai": "AI Assistant"
  },
  "messages/LLMUITestGenerationBundle.properties": {
    "action.AIAssistant.WebInspector.Generate.Popup.Section.Framework": "{0}",
    "action.AIAssistant.WebInspector.Generate.Popup.Section.Framework.Language": "{0}",
    "action.AIAssistant.WebInspector.Generate.Popup.Title": "AI Assistant"
  },
  "messages/LangBundle.properties": {
    "build.event.message.with": "{0}，{1}",
    "executor.one.of.actions": "{0}/{1}: {2}",
    "image.preview.label": "{0}x{1}，{2}bpp，{3}",
    "label.export.plugin.url": "URL:"
  },
  "messages/LangCoreBundle.properties": {
    "shorten.command.line.method.argfile": "@argfile (Java 9+)"
  },
  "messages/LayoutInspectorBundle.properties": {
    "action.Android.RunLayoutInspector.text": "Layout Inspector",
    "layout.inspector": "Layout Inspector"
  },
  "messages/LearnBundle.properties": {
    "learn.options.panel.name": "Features Trainer",
    "notification.group.feature.trainer": "IDE Features Trainer"
  },
  "messages/LicenseBundle.properties": {
    "radio.button.jb.account": "JetBrains Account(&A)"
  },
  "messages/LineProfilerBundle.properties": {
    "percent.of.parent": " /{0}"
  },
  "messages/LintBundle.properties": {
    "android.inspections.group.path.lint": "Android,Lint",
    "android.lint.inspections.group.name": "Android Lint"
  },
  "messages/LiveEditBundle.properties": {
    "configurable.displayName": "Live Edit",
    "update.application.ws.suffix": "(Live Edit)"
  },
  "messages/LogcatBundle.properties": {
    "logcat.color.page.name": "Android Logcat",
    "logcat.device.combo.offline": " [OFFLINE]",
    "logcat.device.combo.version": "Android {0}，API {1}",
    "logcat.settings.buffer.kb": " KB"
  },
  "messages/LombokBundle.properties": {
    "action.delombokBuilder.text": "@Builder",
    "action.delombokConstructor.text": "@Constructors",
    "action.delombokData.text": "@Data",
    "action.delombokDelegate.text": "@Delegate",
    "action.delombokEqualsAndHashCode.text": "@EqualsAndHashCode",
    "action.delombokFieldNameCostants.text": "@FieldNameConstants",
    "action.delombokGetter.text": "@Getter",
    "action.delombokSetter.text": "@Setter",
    "action.delombokStandardException.text": "@StandardException",
    "action.delombokSuperBuilder.text": "@SuperBuilder",
    "action.delombokToString.text": "@ToString",
    "action.delombokUtilityClass.text": "@UtilityClass",
    "action.delombokValue.text": "@Value",
    "action.delombokWither.text": "@Wither",
    "inspection.redundant.slf.4.j.definition.display.name": "@Slf4j",
    "intention.category.lombok": "Java/Lombok"
  },
  "messages/MakefileLangBundle.properties": {
    "action.run.target.description": "make {0}",
    "action.run.target.text": "make {0}",
    "filetype.makefile.description": "GNU Makefile",
    "run.configuration.editor.filename.label": "Makefile(&M)"
  },
  "messages/MarkdownBundle.properties": {
    "markdown.header.level.popup.heading.action.secondary.text": "(H{0})"
  },
  "messages/MavenConfigurableBundle.properties": {
    "maven.run.configuration.bundled.distribution.name": "Maven {0}",
    "maven.run.configuration.jre.label": "JRE(&J):",
    "maven.run.configuration.jre.name": "JRE(&J)",
    "maven.settings.generated.folder.targerdir": "target/generated-sources",
    "maven.settings.runner.jre": "JRE(&J):",
    "maven.settings.testrun.argline": "<html><i>argLine(&A)</i></html>",
    "maven.settings.testrun.env.variables": "<html><i>environmentVariables(&E)</i></html>",
    "maven.settings.testrun.system.property": "<html><i>systemPropertyVariables(&S)</i></html>"
  },
  "messages/MavenIndicesBundle.properties": {
    "maven.dependency.completion.presentable": "{0}:{1}"
  },
  "messages/MavenProjectBundle.properties": {
    "maven.before.build.of.count": "{2} ({1}/{0})",
    "maven.parent.label.none": "<none>"
  },
  "messages/MavenWizardBundle.properties": {
    "maven.new.project.wizard.archetype.catalog.central.name": "Maven Central",
    "maven.new.project.wizard.archetype.generator.name": "Maven Archetype",
    "maven.new.project.wizard.archetype.label": "Archetype:"
  },
  "messages/MesonBundle.properties": {
    "project.generation.panel.language.cpp": "C++"
  },
  "messages/MeteorBundle.properties": {
    "settings.meteor.configurable.executable.generator": "Meteor:",
    "ui.filetype.spacebars.description": "Meteor Spacebars"
  },
  "messages/MicronautBundle.properties": {
    "micronaut.data.inspections.group": "Micronaut Data",
    "micronaut.data.ql": "Micronaut Data QL",
    "micronaut.inspections.config.yaml": "Micronaut application.yaml",
    "micronaut.starter.version.label": "Micronaut:"
  },
  "messages/MicronautELBundle.properties": {
    "mn.el.name": "Micronaut EL"
  },
  "messages/MicroservicesBundle.properties": {
    "frameworks.accessibility.filter.label": "{0}: {1}",
    "http.code.description.101": "Switching Protocols",
    "http.code.description.203": "Non-Authoritative Information",
    "http.code.description.204": "No Content",
    "http.code.description.206": "Partial Content",
    "http.code.description.207": "Multi-Status",
    "http.code.description.300": "Multiple Choices",
    "http.code.description.301": "Moved Permanently",
    "http.code.description.303": "See Other",
    "http.code.description.304": "Not Modified",
    "http.code.description.305": "Use Proxy",
    "http.code.description.307": "Temporary Redirect",
    "http.code.description.308": "Permanent Redirect",
    "http.code.description.400": "Bad Request",
    "http.code.description.402": "Payment Required",
    "http.code.description.404": "Not Found",
    "http.code.description.405": "Method Not Allowed",
    "http.code.description.406": "Not Acceptable",
    "http.code.description.407": "Proxy Authentication Required",
    "http.code.description.408": "Request Timeout",
    "http.code.description.411": "Length Required",
    "http.code.description.412": "Precondition Failed",
    "http.code.description.413": "Request Entity Too Large",
    "http.code.description.414": "Request-URI Too Long",
    "http.code.description.415": "Unsupported Media Type",
    "http.code.description.416": "Requested Range Not Satisfiable",
    "http.code.description.417": "Expectation Failed",
    "http.code.description.421": "Misdirected Request",
    "http.code.description.422": "Unprocessable Entity",
    "http.code.description.424": "Failed Dependency",
    "http.code.description.425": "Unordered Collection",
    "http.code.description.426": "Upgrade Required",
    "http.code.description.428": "Precondition Required",
    "http.code.description.429": "Too Many Requests",
    "http.code.description.431": "Request Header Fields Too Large",
    "http.code.description.500": "Internal Server Error",
    "http.code.description.501": "Not Implemented",
    "http.code.description.502": "Bad Gateway",
    "http.code.description.503": "Service Unavailable",
    "http.code.description.504": "Gateway Timeout",
    "http.code.description.505": "HTTP Version Not Supported",
    "http.code.description.506": "Variant Also Negotiates",
    "http.code.description.507": "Insufficient Storage",
    "http.code.description.510": "Not Extended",
    "http.code.description.511": "Network Authentication Required"
  },
  "messages/MobileBundle.properties": {
    "run.configuration.name": "Kotlin Mobile",
    "sdk.sync.missing.sdk.title": "Android SDK"
  },
  "messages/NextJsBundle.properties": {
    "create.next.app.name": "Next.js"
  },
  "messages/NoSqlBundle.properties": {
    "nosql.id": "NoSQL ID",
    "nosql.inspections.group": "Jakarta NoSQL"
  },
  "messages/NodeJSBundle.properties": {
    "npm.init.generator.name": "Node.js",
    "profile.cpu.line.total.text": "<total>",
    "profile.table.root.text": "<root>",
    "profile.table.unreachable_or_hidden.text": "<unreachable or hidden>"
  },
  "messages/NotebookBundle.properties": {
    "hint.readonly": "<html>{0}</html>"
  },
  "messages/OCBundle.properties": {
    "action.CIDR.Lang.IntroduceTypedef.text": "Typedef…",
    "action.CIDR.Lang.ObjC.GenerateCopy.text": "-copyWithZone:…",
    "action.CIDR.Lang.ObjC.GenerateDescription.text": "-description…",
    "action.CIDR.Lang.ObjC.GenerateEncode.text": "-init/encodeWithCoder:…",
    "action.CIDR.Lang.ObjC.GenerateInitWith.text": "-initWith…",
    "action.CIDR.Lang.ObjC.GenerateSharedInstance.text": "+sharedInstance",
    "action.CIDR.Lang.ObjC.Synthesize.text": "@synthesize…",
    "action.CIDR.Lang.Wrap.By.Pragma.Region": "#pragma region...endregion",
    "changeSignature.constexpr.function.checkbox": "&Constexpr",
    "changeSignature.noexcept.function.checkbox": "Noexcept(&X)",
    "color.struct.union.oc": "Struct/enum/union",
    "create.class.objc": "Objective-C (.m)",
    "create.class.objcpp": "Objective-C++ (.mm)",
    "include.cpp.url": "https://www.includecpp.org/",
    "surround.with.block.expression.template": "^{ return expr; }",
    "surround.with.do.while.template": "do / while",
    "surround.with.if.else.template": "if / else",
    "surround.with.if.respondsToSelector.template": "if respondsToSelector",
    "surround.with.not.expr.template": "!(expr)",
    "surround.with.parenthesis.template": "(expr)"
  },
  "messages/OCInspectionsBundle.properties": {
    "intentions.group.objc": "Objective-C"
  },
  "messages/OpenRewriteBundle.properties": {
    "open.rewrite.recipe.local.history.label": "OpenRewrite: {0}"
  },
  "messages/OptionsBundle.properties": {
    "exportable.ShortcutPromoterManager.presentable.name": "Shortcut Promoter"
  },
  "messages/OsmorcBundle.properties": {
    "bnd.configuration.name": "Bnd OSGi",
    "bnd.importer.name": "Bnd/Bndtools",
    "bnd.resolve.tree.via": "VIA:",
    "facet.library.name": "OSGi Core API"
  },
  "messages/PackageCheckerBundle.properties": {
    "dependency.safe.version.link": "<a href =\"{0}{1}\">{2}</a>",
    "dependency.tree.popup.groupid": "PackageChecker.Toolwindow.Tree.Popup",
    "vulnerability.popup.step.text": "{0}: {1}"
  },
  "messages/PackageManagerBundle.properties": {
    "toolwindow.problem.solve.part.package.manager.use.existed": "vcpkg ''{0}''",
    "vcpkg.add.new.package.manager.field.url": "URL:",
    "vcpkg.toolwindow.package.triplet.name.and.version": "{0} ({1})"
  },
  "messages/PerforceBundle.properties": {
    "change.list.decoration": " - Perforce #{0}",
    "group.PerforceDirect.Menu.text": "Perforce(_P)",
    "perforce.name.with.mnemonic": "Perforce(_P)",
    "progress.text2.p4.status": "p4 {0}"
  },
  "messages/PerformanceTestingBundle.properties": {
    "summary.link": "https://intellij-support.jetbrains.com/anonymous_requests/new",
    "summary.link.rider": "https://rider-support.jetbrains.com/hc/en-us/requests/new"
  },
  "messages/PersistenceBundle.properties": {
    "mongodb.json": "MongoDB JSON"
  },
  "messages/PhingBundle.properties": {
    "phing.not.selected": "<not selected>"
  },
  "messages/PhoneGapBundle.properties": {
    "exportable.PhoneGapSettings.presentable.name": "PhoneGap/Cordova"
  },
  "messages/PhpBundle.properties": {
    "0": " ({0})",
    "0.1": "{0}，{1}",
    "0.12": "{0}:{1}",
    "02": "{0}::",
    "03": "({0})",
    "04": "{0}:",
    "PhpExtractMethodDialog.private": "private(&V)",
    "PhpExtractMethodDialog.protected": "protected(&T)",
    "PhpExtractMethodDialog.public": "public(&B)",
    "PhpLanguageLevel.5.3.0.presentable.name": "5.3",
    "PhpLanguageLevel.5.4.0.presentable.name": "5.4",
    "PhpLanguageLevel.5.5.0.presentable.name": "5.5",
    "PhpLanguageLevel.5.6.0.presentable.name": "5.6",
    "PhpLanguageLevel.7.0.0.presentable.name": "7.0",
    "PhpLanguageLevel.7.1.0.presentable.name": "7.1",
    "PhpLanguageLevel.7.2.0.presentable.name": "7.2",
    "PhpLanguageLevel.7.3.0.presentable.name": "7.3",
    "PhpLanguageLevel.7.4.0.presentable.name": "7.4",
    "PhpLanguageLevel.8.0.0.presentable.name": "8.0",
    "PhpLanguageLevel.8.1.0.presentable.name": "8.1",
    "PhpLanguageLevel.8.2.0.presentable.name": "8.2",
    "PhpLanguageLevel.8.3.0.presentable.name": "8.3",
    "XdebugCloudConfigurable.cloud.id": "Cloud ID:",
    "XdebugCloudConfigurable.display.name": "Xdebug Cloud",
    "action.PhpGenerateGetters.text": "getter…",
    "action.PhpGenerateSetters.text": "setter…",
    "actions.mark.directory.as.psr.0.root": "<i>{0}</i>",
    "all.scripts": "<All scripts>",
    "color.settings.heredoc_id": "Heredoc//Heredoc ID",
    "composer.label.phar": "composer.phar",
    "configurable.quality.tool.laravel.pint": "Laravel Pint",
    "configurable.quality.tool.mess.detector": "Mess Detector",
    "configurable.quality.tool.php.cs.fixer": "PHP CS Fixer",
    "debug.composite.value.presentation": "[{0}]",
    "external.formatter.phpcbf": "PHP Code Beautifier and Fixer",
    "external.formatter.phpcsfixer": "PHP CS Fixer",
    "filetype.phar.description": "Php Phar",
    "filetype.phar.display.name": "Php Phar",
    "fluent.setters": "Fluent setter",
    "folding.checkbox.collapse.heredocs.and.nowdocs": "HEREDOC\\NOWDOC",
    "inspection.php.group.psr.12": "PSR-12",
    "inspection.php.illegal.array.key.type.description": "{0} {1}",
    "inspection.php.separate.else.if.inspection.display.name": "Else if",
    "inspection.void.never.function.result.used.problem.type": "void/never",
    "label.lt.no.server": "<no server>",
    "label.server.document.root": "$_SERVER['DOCUMENT_ROOT']",
    "php.framework.laravel.plugin": "Laravel Idea",
    "php.run.label.https": "HTTPS:",
    "php.run.label.url": "URL:",
    "php.web.server.validation.xdebug.remote.log": "<b>{0}:</b> {1}",
    "phpdoc.code.style.convert.else.if.separate": "else if",
    "profiler.measurement.unit.microsecond.short": "µs",
    "property.read": "@property-read",
    "property.write": "@property-write",
    "quality.tool.laravel.pint": "Laravel Pint",
    "quality.tool.phpcbf.name": "PHP Code Beautifier and Fixer",
    "radio.button.const": "const(&C)",
    "radio.button.private": "private(&I)",
    "radio.button.protected": "protected(&O)",
    "radio.button.public": "public(&U)",
    "refactoring.extract.field.visibility.private": "private(&I)",
    "refactoring.extract.field.visibility.protected": "protected(&O)",
    "refactoring.extract.field.visibility.public": "public(&U)",
    "xdebug.initializing.connection.xdebug.cloud": "Xdebug Cloud"
  },
  "messages/PhpRemoteSdkBundle.properties": {
    "remote.interpreter.default.interpreter.path": "/usr/bin/php",
    "remote.interpreter.wsl.default.interpreter.path": "/usr/bin/php"
  },
  "messages/PrettierBundle.properties": {
    "prettier.formatter.hint.0": "Prettier: {0}"
  },
  "messages/ProjectBundle.properties": {
    "dialog.text.resolving.sdks.item": "{0}“{1}”",
    "sdk.configure.add.sdkType.subAction": "{0}…"
  },
  "messages/PropertiesBundle.properties": {
    "structure.view.empty.property.presentation": "<property>"
  },
  "messages/ProtobufIdeBundle.properties": {
    "settings.project.display": "Protocol Buffers",
    "settings.virtual.group.std.google.proto.name": "google stdlib"
  },
  "messages/PuppetBundle.properties": {
    "language.settings.code.style.sample": "service { 'sshd':\n  subscribe => File['sshdconfig'],\n}",
    "puppet.module.name": "{0} {1}",
    "puppet.module.name.unnamed": "<Unnamed>"
  },
  "messages/PyBDDBundle.properties": {
    "com.intellij.python.gherkin.inspections.parameters.unnamed_param": "<unnamed param>"
  },
  "messages/PyBundle.properties": {
    "QFIX.bold.html.text": "<b>{0}</b>",
    "configurable.PythonSdkEditorTab.display.name": "Python SDK",
    "debugger.cython.extension.gcc.not.found": "x86_64-linux-gnu-gcc",
    "debugger.cython.extension.install.python.command": "<code>sudo apt-get install python{0}-dev</code>",
    "debugger.dataviewer.header.filter.hint": "{0}: {1}",
    "debugger.progress.title.stackframe.processing": "StackFrame processing",
    "framework.support.python.sdk.combobox.label": "Python SDK:",
    "pandas.completion.type.text": "DataFrame: {0}",
    "python.console.command.queue.got.it.tooltip.id": "python.console.command.queue.show",
    "python.packaging.dialog.description.attempt.to.uninstall.for.several.dependent.packages.single.package.description": "{0} -> {1}",
    "python.sdk.action.add.interpreter.based.on.target.text": "{0}…",
    "python.sdk.configurable.name": "Python SDK",
    "python.sdk.environment.yml.label": "environment.yml",
    "remote.interpreter.default.interpreter.path": "/usr/bin/python",
    "remote.interpreter.wsl.default.interpreter.path": "/usr/bin/python",
    "runcfg.trial.display_name": "Twisted Trial"
  },
  "messages/PyCharmCommunityCustomizationBundle.properties": {
    "action.PromoNewJupyterNotebook.text": "Jupyter Notebook",
    "action.PromoPreviewJupyterNotebook.text": "Jupyter Notebook"
  },
  "messages/PyDockerBundle.properties": {
    "python.add.sdk.panel.name.docker.compose": "Docker Compose",
    "remote.sdk.exception.message.with.cause": "{0}:\n{1}"
  },
  "messages/PyHuggingFaceBundle.properties": {
    "python.hugging.face.base.url": "https://huggingface.co",
    "python.hugging.face.tags.style": "<style>{0}</style>"
  },
  "messages/PyPsiBundle.properties": {
    "element.presentation.location.string.module": "({0})",
    "filetype.python.docstring.description": "Python docstring",
    "find.usages.unnamed": "<unnamed>"
  },
  "messages/PySshInterpreterBundle.properties": {
    "ssh.connection.wizard.remote.interpreter.default.interpreter.path": "/usr/bin/python"
  },
  "messages/PythonProBundle.properties": {
    "python.debug.text.pane.text": "<html><head></head><body></body></html>"
  },
  "messages/QodanaBundle.properties": {
    "action.open.qodana.cloud.open.in.ide.report.action": "Qodana Cloud {0}",
    "cli.coverage.percent": "%",
    "notification.title.qodana.cloud": "Qodana Cloud",
    "qodana.add.to.ci.azure.pipelines": "Azure Pipelines",
    "qodana.add.to.ci.bitbucket": "Bitbucket Cloud",
    "qodana.add.to.ci.gitlab.ci": "GitLab CI/CD",
    "qodana.cloud.url": "https://qodana.cloud/",
    "qodana.documentation.ci.url": "https://www.jetbrains.com/help/qodana/ci.html",
    "qodana.documentation.ide.plugin.url": "https://www.jetbrains.com/help/qodana/qodana-ide-plugin.html#Open+a+Qodana+report+in+the+IDE",
    "qodana.documentation.website.url": "https://www.jetbrains.com/help/qodana/",
    "qodana.open.settings.other": "Qodana Cloud…",
    "qodana.preview.url": "https://www.jetbrains.com/qodana/#:~:text=See%20how%20Qodana%20works",
    "qodana.problem.description.with.level": "[{0}]{1,choice,0#|1# Qodana:} {2}",
    "qodana.problem.description.without.level": "{0,choice,0#|1# Qodana:} {1}",
    "qodana.website.url": "https://www.jetbrains.com/qodana/",
    "qodana.yaml.exclude.scope.name": "qodana.yaml.exclude.{0}",
    "qodana.yaml.include.scope.name.default.severity": "qodana.yaml.include.{0}",
    "qodana.yaml.include.scope.name.w.severity": "qodana.yaml.{0}.{1}"
  },
  "messages/QuarkusBundle.properties": {
    "dev.ui.editor.tab.title": "Quarkus Dev UI",
    "quarkus.starter.version.label": "Quarkus:"
  },
  "messages/RBundle.properties": {
    "action.rspec.LetIntroduce.text": "RSpec 'let'",
    "border.title.ruby.i18n": "Ruby i18n",
    "class.anonymous": "<anonymous>",
    "cucumber.jruby.run.configuration.type.name": "JRuby Cucumber",
    "cucumber.run.configuration.prefix": "Cucumber: {0}",
    "dialog.generate.common.checkBox.git.text": "Git(&G)",
    "dialog.generate.common.checkBox.svn.text": "Svn(&V)",
    "dialog.generate.cucumber.sframework.capybara": "Capybara(&C)",
    "dialog.generate.cucumber.sframework.webrat": "Webrat(&W)",
    "dialog.generate.cucumber.tframework.spec": "RSpec(&R)",
    "dialog.generate.cucumber.tframework.testunit": "Test::Unit(&T)",
    "dialog.rails.i18n.create.property.translation.example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    "gem.build.options.dialog.title": "{0} Gem {1}",
    "group.BUNDLER_ACTIONS.text": "Bundler(&B)",
    "group.GEM_BUILD_ACTION.text": "Gem (&G)",
    "group.ROR_TOOLS.text": "Ruby on Rails",
    "inspection.brakeman.notification.title.full": "{0} {1}",
    "irb.console": "IRB: {0}",
    "jrails.facet": "JRuby on Rails",
    "jruby.framework.configurable.sdk": "JRuby SDK:",
    "jruby.framework.configurable.select.sdk.text": "JRuby SDK:",
    "let.bang": "let!",
    "minitest.run.configuration.prefix": "Minitest: {0}",
    "module.rails.create.app.presentable.name": "Rails API",
    "parsing.error.ruby": "[RUBY] {0}",
    "pry.console": "Pry: {0}",
    "rails.action.cable.gutter.title": "Action cable",
    "rails.application.api.generator.name": "Rails API",
    "rails.facet": "Ruby on Rails",
    "rails.project.module.view.nodes.minitest.shoulda.presentable": "Minitest/Shoulda",
    "rake.action.title": "Rake ''{0}''",
    "refactoring.extract.module.context.static": "static (extend)(&E)",
    "remote.interpreter.default.interpreter.path": "/usr/bin/ruby",
    "remote.interpreter.wsl.default.interpreter.path": "/usr/bin/ruby",
    "rspec.run.configuration.prefix": "RSpec: {0}",
    "ruby.action.create.new.test.dialog.kind.testUnit": "Test::Unit",
    "ruby.ide.sdk.configurable.create.rvm.gemset.sdk.label": "Ruby SDK(&S):",
    "ruby.ide.sdk.configurable.create.rvm.gemset.text.edit": "RVM Gemset(&G):",
    "ruby.intentions.category.erb": "Ruby/ERB",
    "ruby.intentions.category.i18n": "Ruby/I18n",
    "ruby.presentation.invalid": "<invalid>",
    "ruby.presentation.unknown": "<unknown>",
    "ruby.rbenv.gemset.name": "Rbenv gemset",
    "run.anything.rvm.use.undefined": "<undefined>",
    "run.anything.select.rbenv.shell.completion.group": "rbenv shell",
    "run.configuration.messages.runner.version": "''{0}'' gem:",
    "run.configuration.messages.select.sdk.bound": "Ruby SDK:",
    "run.configuration.tests.display.name": "Test::Unit/Shoulda/Minitest",
    "sdk.jruby.title": "JRuby SDK",
    "sdk.ruby.new.wizard.label": "Ruby SDK:",
    "sdk.ruby.title": "Ruby SDK",
    "spork.run.settings.cucumber": "Cucumber(&C)",
    "spork.run.settings.rspec": "RSpec(&S)",
    "spork.run.settings.testunit": "TestUnit/Shoulda/Minitest(&U)",
    "spork.server.run.configuration.type.name": "Spork DRb",
    "subject.bang": "subject!",
    "test.frameworks.names.testunit": "Test::Unit"
  },
  "messages/RPluginBundle.properties": {
    "create.new.r.markdown.file.notebook": "HTML Notebook",
    "dataframe.viewer.page.count": "/{0}",
    "debugger.global.stack.frame": "[global]",
    "import.data.dialog.encoding.latin": "Latin-1",
    "import.data.dialog.encoding.utf": "UTF-8",
    "inlay.hints.function.return.expression.explicit.prefix": "^",
    "inlay.hints.function.return.expression.implicit.prefix": "<n>^",
    "interpreter.status.bar.current.interpreter.name": "R {0}",
    "interpreter.status.bar.local.interpreter.representation": "R {0}",
    "project.setting.rcpp.email": "your@email.com",
    "project.setting.rcpp.license": "GPL (>= 2)",
    "rstudioapi.show.dialog.message": "{0}\n<a href=\"{1}\">{1}</a>",
    "rx.presentation.utils.empty.list.text": "list()",
    "rx.presentation.utils.environment.unnamed": "[environment]",
    "rx.presentation.utils.list.element.name": "[[{0}]]",
    "rx.presentation.utils.list.text": "List[1:{0}]",
    "rx.presentation.utils.vector.element.name": "[{0}]"
  },
  "messages/RSBundle.properties": {
    "webservices.file.templates.group.name": "JAX-RS"
  },
  "messages/RadBundle.properties": {
    "project.awaiter": "Awaits CLion backend activities",
    "projectConfigurable.RiderInlayHintsCppOptions.displayName": "C++",
    "projectConfigurable.TypeNameHints.displayName": "Type Name Hints"
  },
  "messages/RbsBundle.properties": {
    "rbs.actions.run.anything.help.placeholder": "rbs <command>",
    "rbs.intention.ruby.category.rbs": "Ruby/RBS",
    "rbs.rubysigs.name": "rbs [bundled]",
    "rbs.rubysigs.name.with.version": "rbs (v{0}) [bundled]",
    "rbs.search.presentation.of.container": "/{0}",
    "steep.actions.run.anything.help.placeholder": "steep <command>"
  },
  "messages/RdClientDotnetBundle.properties": {
    "action.MeasurePerformanceAndDump.text": "Measure Performance and Dump",
    "action.RiderDumpComponentContainersCtorStepsToJsonAction.text": "Dump Component Containers Ctor Steps to Json",
    "action.wildcard.container.text": "Wildcard Container",
    "backend.notification.title": "{0} backend",
    "frontendbulbrenderer.0": "FrontendBulbRenderer {0}",
    "memory.usage": "Memory Usage",
    "progress.text.process.workspace.model": "Process Workspace Model…"
  },
  "messages/ReactBuddyBundle.properties": {
    "JsxTree.ifMain": "if ({0})",
    "JsxTree.switchCase": "case ({0})",
    "JsxTree.switchMain": "switch ({0})",
    "Palette.devtools.extensionDependency.notificationContent": "<html>{0}</html>",
    "React.generation": "React Buddy",
    "Snippet.velocity.charts.x": "x:",
    "Snippet.velocity.charts.y": "y:",
    "configurable.group.com.intellij.reactbuddy.tools.settings.display.name": "React Buddy",
    "inspection.group.key.rcbCommon": "React Buddy"
  },
  "messages/ReactiveStreamsBundle.properties": {
    "setting.display.name": "Reactive Streams",
    "settings.initialization.method.agent": "ReactorDebugAgent.init()",
    "settings.initialization.method.agent.link": "https://projectreactor.io/docs/core/release/reference/#reactor-tools-debug",
    "settings.initialization.method.hooks": "Hooks.onOperatorDebug()",
    "settings.initialization.method.hooks.link": "https://projectreactor.io/docs/core/release/reference/#debug-activate"
  },
  "messages/ReactorCoreBundle.properties": {
    "debug.message.expression.flux.result.get": "... collectList()",
    "debug.message.expression.mono.result.get": "... get()"
  },
  "messages/RefactoringBundle.properties": {
    "rename.target.text.0.1": "{0} → ''{1}''",
    "visibility.package.local": "Package local(&K)",
    "visibility.private": "private(&V)",
    "visibility.protected": "protected(&O)",
    "visibility.public": "public(&B)"
  },
  "messages/RelaxngBundle.properties": {
    "relaxng.convert-schema.advanced-options.dtd.checkbox.generate-start": "generate-start(&G)",
    "relaxng.convert-schema.advanced-options.dtd.checkbox.inline-attlist": "inline-attlist(&I)",
    "relaxng.convert-schema.advanced-options.dtd.checkbox.strict-any": "strict-any(&S)",
    "relaxng.convert-schema.advanced-options.dtd.label.annotation-prefix": "annotation-prefix(&O):",
    "relaxng.convert-schema.advanced-options.dtd.label.any-name": "any-name(&N):",
    "relaxng.convert-schema.advanced-options.dtd.label.attlist-define": "attlist-define(&A):",
    "relaxng.convert-schema.advanced-options.dtd.label.colon-replacement": "colon-replacement(&C):",
    "relaxng.convert-schema.advanced-options.dtd.label.element-define": "element-define(&E):",
    "relaxng.convert-schema.advanced-options.xsd.checkbox.disable-abstract-elements": "disable-abstract-elements(&D)",
    "relaxng.convert-schema.advanced-options.xsd.label.any-attribute-process-contents": "any-attribute-process-contents(&N)",
    "relaxng.convert-schema.advanced-options.xsd.label.any-process-contents": "any-process-contents(&A)",
    "relaxng.convert-schema.settings.radio-button.dtd": "DTD(&D)",
    "relaxng.inspection.group-name": "RELAX NG"
  },
  "messages/RemoteSdkBundle.properties": {
    "action.system.default.text": "<System Default>",
    "project.root.placeholder": "<Project root>",
    "wrapped.project.root": "&lt;Project root&gt;"
  },
  "messages/RestClientBundle.properties": {
    "action.NewPrivateEnvironmentFile.text": "http-client.private.env.json",
    "action.NewPublicEnvironmentFile.text": "http-client.env.json",
    "http.client.auth.log.url.message": "URL: {0}",
    "http.client.structure.request.host.undefined": "<not defined>",
    "http.request.diff.compare.with.dialog.title": "{0} vs {1} ({2})"
  },
  "messages/RiderActionsBundle.properties": {
    "action.DecompileAndShowIlViewerAction.text": "IL Viewer",
    "action.ReSharperSelectContainingDeclaration.description": "Selecting Containing Declarations",
    "action.RiderShowIlViewerAction.text": "IL Viewer",
    "action.RiderShowResxEditorAction.text": "Localization Manager",
    "action.stack.trace.explorer.text": "Stack Trace Explorer",
    "group.BackendEntityFrameworkActionGroup.text": "Entity Framework",
    "group.CSharpInteractive.text": "C# Interactive"
  },
  "messages/RiderBundle.properties": {
    "EntityFramework.toolWindow.title": "Entity Framework",
    "StacktraceToolWindowFactory.tab.title.stacktrace": "Stack Trace Explorer",
    "action.EntityFrameworkActionBase.text": "Entity Framework:",
    "action.dump.backend.delegating.actions.text": "Dump Backend Delegating Actions",
    "action.dump.color.settings.mappings.text": "Dump Color Settings Mappings",
    "action.winform.stack.trace.explorer.text": "Stack Trace Explorer",
    "configurable.group.inlay.hints.RiderInlayHintsCSharpConfigurableGroup.settings.display.name": "C#",
    "configurable.group.inlay.hints.RiderInlayHintsVBConfigurableGroup.settings.display.name": "VB.NET",
    "endpoints.framework.asp.net.core.minimal.api": "ASP.NET Core Minimal API",
    "notification.group.collect.backend.threaddump": "Collect backend threadDump",
    "notification.group.entityframework": "Entity Framework",
    "notification.group.problemsview.notification": "ProblemsView notification",
    "publish.to.iis.option": "IIS…",
    "settings.completion.ml.csharp.display.name": "C#",
    "spellchecker.dictionary.settings": "Dictionary settings"
  },
  "messages/RiderCodeWithMeBundle.properties": {
    "activate.code.with.me.dialog.title": "Code With Me"
  },
  "messages/RiderCppBundle.properties": {
    "applicationConfigurable.CppClangTidyOptionsId.displayName": "Clang-Tidy",
    "applicationConfigurable.CppUnrealEngineOptionsId.displayName": "Unreal Engine",
    "applicationConfigurable.preferences.CppConfiguration.displayName": "C++",
    "configurable.name.clang.tidy": "Clang-Tidy",
    "configurable.name.unreal.engine": "Unreal Engine",
    "projectConfigurable.RiderInlayHintsCppOptions.displayName": "C++",
    "projectConfigurable.TypeNameHints.displayName": "Type Name Hints",
    "unreal.json.local.inspection.tool.group.name": "Unreal Engine"
  },
  "messages/RiderCppCoreBundle.properties": {
    "configurations.CppLanguage.name": "C++",
    "filetype.CppSourceFileType.name": "C++"
  },
  "messages/RiderDebuggerBundle.properties": {
    "AttachFromCommandLineInternalAction.dialog.field.label.pid": "PID:",
    "DotNetDebuggerGeneralConfigurableUi.checkbox.show.run.to.panel.3": ")",
    "MsNetAttachDebugger.display.short.name": ".NET",
    "RemoteDebugConfigurableUi.label.os": "OS:",
    "debugger.action.link.force.refresh": "Force Refresh"
  },
  "messages/RiderDesignersBundle.properties": {
    "ResxEditor.editor.name.localization.manager": "Localization Manager",
    "localization.manager": "Localization Manager"
  },
  "messages/RiderDockerBundle.properties": {
    "rider.docker.compose.project.file.type.display.name": "Docker Compose"
  },
  "messages/RiderIdeaInteropBundle.properties": {
    "RiderPluginGroups.group.name.azure.devops": "Azure DevOps"
  },
  "messages/RiderInteractiveBundle.properties": {
    "CSharpInteractiveConsoleRunner.c.interactive": "C# Interactive",
    "CSharpInteractiveOptionsPage.configurable.name.c.interactive": "C# Interactive"
  },
  "messages/RiderJavaScriptBundle.properties": {
    "rider.javascript.debug.companion.tab.name": "{0} - JavaScript"
  },
  "messages/RiderMultiPlatformBundle.properties": {
    "notification.group.riderandroid.sdk": "Android SDK"
  },
  "messages/RiderNugetBundle.properties": {
    "RiderNuGetFeedTable.label.url": "URL:",
    "digits.separator": ".",
    "dotnet.cli": "dotnet cli"
  },
  "messages/RiderPencilsBundle.properties": {
    "CodeVisionFilter.display.name.code.vision": "Code Vision"
  },
  "messages/RiderProjectViewBundle.properties": {
    "NewProjectDialog.DockerSupport.row.label": "Docker:",
    "RiderProjectTemplate.ReSharperProjectTemplate.CPlPl.name": "C++",
    "RiderProjectTemplate.ReSharperProjectTemplate.NET.NETCore.name": ".NET/.NET Core",
    "RiderProjectTemplate.ReSharperProjectTemplate.NETFramework.name": ".NET Framework"
  },
  "messages/RiderRazorBundle.properties": {
    "blazor.wasm.debug.hosted.companion.tab.name": "{0} - WASM",
    "configurable.name.asp.net.c": "ASP.NET (C#)",
    "configurable.name.asp.net.vb": "ASP.NET (VB)",
    "configurable.name.razor.c": "Razor (C#)",
    "folding.header.asp.net": "ASP.NET",
    "folding.header.asp.net.razor": "ASP.NET (Razor)",
    "folding.header.dotnet": ".NET"
  },
  "messages/RiderRunBundle.properties": {
    "IisExpressHost.notification.title.iis.express": "IIS Express",
    "RiderContextPublishAction.action.azure.name": "Azure…"
  },
  "messages/RiderSettingsBundle.properties": {
    "IisExpressOptionsPage.configurable.name.iis.express": "IIS Express",
    "RiderStyleCopConfigurable.settings.stylecop": "Settings.StyleCop",
    "applicationConfigurable.CSharpCodeCleanupOptions.displayName": "C#",
    "applicationConfigurable.CodeVision.displayName": "Code Vision",
    "applicationConfigurable.RiderEntityFrameworkSettings.displayName": "Entity Framework",
    "applicationConfigurable.VBCodeCleanupOptions.displayName": "VB.NET",
    "configurable.codestyle.title.unrealEngine": "Unreal Engine",
    "configurable.name.asp.net": "ASP.NET (Razor)",
    "configurable.name.csharp": "C#",
    "configurable.name.dotnet": ".NET",
    "configurable.name.vb.net": "VB.NET",
    "configurable.name.xUnit.net": "xUnit.net",
    "configurable.name.xamarin.mac.ios": "Mac/iOS",
    "configurable.name.xaml.c": "XAML (C#)",
    "configurable.name.xaml.vb": "XAML (VB)",
    "folding.header.dotnet": ".NET"
  },
  "messages/RiderT4Bundle.properties": {
    "list.item.t4.include": "T4 include"
  },
  "messages/RiderUnitTestingBundle.properties": {
    "RiderDiffLinkPrefix": "Diff in Rider:",
    "action.RiderUnitTestSessionLaunchOptionActionGroupBase.text.toolbar": "{0}：{1}"
  },
  "messages/RiderWizardBundle.properties": {
    "steps.keymaps.groups.jetbrains-ide.name": "JetBrains IDE",
    "steps.keymaps.groups.vscode.name": "VS Code",
    "steps.keymaps.visual-assist.name": "Visual Assist",
    "steps.keymaps.visual-studio.name": "Visual Studio"
  },
  "messages/RubyDockerBundle.properties": {
    "border.title.docker.compose": "docker-compose",
    "configurable.internal.command.mode.run": "'docker-compose run'",
    "configurable.title.docker.compose": "Docker Compose",
    "ruby.docker.compose.command.type.exec.name": "docker-compose exec",
    "ruby.docker.compose.command.type.run.name": "docker-compose run",
    "ruby.docker.compose.command.type.up.name": "docker-compose up",
    "ruby.docker.compose.down.project": "docker-compose down",
    "ruby.docker.compose.up.project": "docker-compose up"
  },
  "messages/RustBundle.properties": {
    "0.abi": "{0} ABI",
    "action.Cargo.RustfmtCargoProject.description": "Reformat Cargo project with Rustfmt",
    "action.Cargo.RustfmtFile.text": "Reformat File with Rustfmt",
    "action.Rust.ConsoleREPL.text": "Rust REPL",
    "action.Rust.NewCargoCrate.text": "Cargo Crate",
    "action.stop.rust.console.description": "Stop Rust REPL",
    "action.while.expr.text": "while expr",
    "action.while.text": "while { }",
    "adt.const.params": "adt const params",
    "build.event.message.": "{0} {1}",
    "cargo.toml": "Cargo.toml",
    "dialog.message.html.body.br.b.b.body.html": "<html><body>{0}{1}<br/><b>{2}</b> {3}</body></html>\n",
    "extern.crate.self": "extern crate self",
    "fn.0": "fn {0}",
    "gutter.rust.implemented.item.name": "Implemented item",
    "html.head.0.style.body.background.1.text.align.center.style.head.body.2.body.html": "\n        <html>\n        <head>\n            {0}\n            <style>body `{`background: #{1}; text-align: center; `}`</style>\n        </head>\n        <body>\n            {2}\n        </body>\n        </html>\n",
    "if.let.guard": "`if let` guard",
    "inline.const": "inline const",
    "inline.const.pat": "inline const pat",
    "inspection.message.": "{0}: {1}",
    "inspection.message.consts": "{0}::{1}::consts::{2}",
    "inspection.message.has.been.removed2": "{0} has been removed",
    "inspection.message.should.have.body2": "`{0}` must have a body",
    "intention.name.": "{0}{1}",
    "intention.name.b.b": "<b>{0}</b>",
    "intention.name.b.b2": "<b>{0}</b>",
    "label.struct": "struct {0}`{`",
    "let.else": "`let-else`",
    "list.item.webassembly.lib": "WebAssembly Lib",
    "min.const.generics": "min const generics",
    "mod.0": "mod {0}",
    "notification.content.cargo.expand": "cargo-expand",
    "notification.content.wasm.pack": "wasm-pack",
    "rust.cargo.toml": "Rust/Cargo.toml",
    "rust.external.linter.cargo.check.item": "Cargo Check",
    "rust.repl": "Rust REPL",
    "wasm.pack": "wasm-pack"
  },
  "messages/SASSBundle.properties": {
    "color.settings.sass.name": "Sass/SCSS",
    "inspections.group.name": "Sass/SCSS"
  },
  "messages/SSRBundle.properties": {
    "file.type.pattern.context": "{0} - {1}",
    "j2ee.category": "Java/Java EE",
    "min.occurs.tooltip.message": "[{0},{1}]",
    "reference.0.label": "Reference={0}",
    "replace.configuration.display.text": "{0} ⇨ {1}",
    "script.0.label": "Script={0}",
    "text.0.label": "Text={0}",
    "type.0.label": "Type={0}",
    "xml_html.category": "XML/HTML"
  },
  "messages/SbtBundle.properties": {
    "sbt.migrate.configurations.dialog.wrapper.default": "<no module>",
    "sbt.settings.sbt": "sbt(&S):",
    "sbt.settings.scala": "Scala(&C):",
    "sbt.settings.shell.title": "sbt shell",
    "sbt.shell.ctrl.d.eof": "Ctrl+D EOF",
    "sbt.shell.title": "sbt shell"
  },
  "messages/ScalaAkkaBundle.properties": {
    "intention.category.scala.akka": "Scala/Akka"
  },
  "messages/ScalaBundle.properties": {
    "def.name": "def {0}",
    "import.hint.text": "{0}? {1} Alt+Enter",
    "library.type.scala.sdk": "Scala SDK",
    "method.of.containingclass": "{0}/{1}",
    "scala.notification.group.id.sbt.shell": "SBT shell",
    "scala3.panel.title": "Scala 3",
    "sdkman": "SDKMAN!",
    "type.checker.label.scala2": "Scala 2:",
    "type.checker.label.scala3": "Scala 3:",
    "val.name": "val {0}",
    "var.name": "var {0}"
  },
  "messages/ScalaCodeInsightBundle.properties": {
    "generate.tostring.method.action.text": "toString()",
    "macro.annotated": "annotated(\"annotation qname\")",
    "macro.implicit.value.class.name": "implicitValueClassName(TYPE_TEXT)",
    "macro.subtypes": "subtypes(TYPE)",
    "macro.suggest.variable.name.by.type": "suggestVariableNameByTypeText(TYPE_TEXT)",
    "marco.typeParameters": "typeParams(CLASS)",
    "marco.typeParameters.without.bounds": "typeParamsWithoutBounds(CLASS)",
    "range.exclusive.hint": "Range.exclusive"
  },
  "messages/ScalaInspectionBundle.properties": {
    "family.name.scala.scaladoc": "Scala: Scaladoc"
  },
  "messages/ScalaPlay2Bundle.properties": {
    "intention.category.scala.play": "Scala/Play",
    "play.2.for.scala": "Play for Scala",
    "play.framework.name": "Play 2.x",
    "play2.notification.group.id": "Play 2"
  },
  "messages/ScalaReplBundle.properties": {
    "scala.console.actions.scala.repl": "Scala REPL",
    "scala.console.config.display.name": "Scala REPL",
    "scalarepl.menu.action.text": "Scala REPL…"
  },
  "messages/SeleniumSharedBundle.properties": {
    "page.object.items.add.by.type": "{0}"
  },
  "messages/SerialMonitorBundle.properties": {
    "uart.newline.crlf": "CR/LF",
    "uart.stopbits.1.5": "1.5"
  },
  "messages/SettingsSyncBundle.properties": {
    "ui.toolwindow.time.date": "{0} {1}"
  },
  "messages/ShBundle.properties": {
    "sh.unnamed.element.presentable.name": "<unnamed>"
  },
  "messages/SharedIndexesBundle.properties": {
    "configuration.combobox.comment.with.url": "{0}",
    "configuration.section.jdk": "JDK:",
    "progress.message.permanent.auth.testing": "{0}"
  },
  "messages/SpaceBundle.properties": {
    "auth.page.jetbrains.space.header.text": "JetBrains Space",
    "column.name.commit.status": "Space Automation",
    "product.name.jetbrains.space": "JetBrains Space",
    "review.at.time": "{0} {1}",
    "review.by.author.at.time": "{0}，{1} {2}",
    "review.chat.editor.tab.tooltip": "{0}: {1}",
    "review.commit.message.error": "Please enter a commit message",
    "review.delete.branch.message": "Delete branch {0}",
    "review.details.cancel.checks.keep": "Keep running checks",
    "review.details.cancel.checks.message": "This action stops all active checks",
    "review.details.cancel.dry.run.title": "Cancel dry run?",
    "review.details.cancel.safe.merge.title": "Cancel safe merge?",
    "review.rebase.and.squash.title": "Rebase and squash",
    "review.safe.merge.title": "Safe Merge",
    "review.start.safe.merge.title": "Start safe merge"
  },
  "messages/SpaceGatewayBundle.properties": {
    "connector.title": "JetBrains Space",
    "label.dev.env.ide": "IDE:",
    "label.dev.file": "Devfile:",
    "label.warmup.snapshot.created.at.by": "{0}，{1}",
    "login.page.title": "JetBrains Space"
  },
  "messages/SpaceVcsBundle.properties": {
    "action.com.intellij.space.vcs.share.SpaceShareProjectAction.Vcs.Toolbar.Widget.text": "Space…"
  },
  "messages/SpaceportGatewayBundle.properties": {
    "auth.page.jetbrains.space.header.text": "JetBrains CodeCanvas",
    "connector.title": "JetBrains CodeCanvas",
    "label.dev.env.ide": "IDE:",
    "label.dev.file": "Devfile:",
    "label.warmup.snapshot.created.at.by": "{0}，{1}",
    "login.page.title": "JetBrains CodeCanvas",
    "login.panel.organization.url.label": "Spaceport URL:"
  },
  "messages/SpaceportMainGatewayBundle.properties": {
    "auth.page.jetbrains.space.header.text": "JetBrains Spaceport",
    "connector.title": "JetBrains Spaceport",
    "login.page.title": "JetBrains Spaceport"
  },
  "messages/SparkMonitoringBundle.properties": {
    "data.stage.rddIds": "RDD ID"
  },
  "messages/SparkSubmitBundle.properties": {
    "cluster.manager.mesos": "Apache Mesos",
    "cluster.manager.yarn": "Hadoop YARN",
    "cluster.status.not.selected": "<Not Selected>",
    "configuration.name": "Spark Submit",
    "label.implicit.cluster.depend.sftp": "SFTP:",
    "label.implicit.cluster.depend.spark.connection": "Spark History:",
    "settings.dependencies.jars": "Jar:",
    "settings.url.gcs.name": "GC Storage",
    "settings.url.gcs.tooltip": "GC Storage"
  },
  "messages/SpellCheckerBundle.properties": {
    "0.in.quotes": "''{0}''"
  },
  "messages/SpringAopBundle.properties": {
    "SpringAopAnnotator.annotator.name": "AOP (XML)",
    "aop.inspection.group": "Spring AOP"
  },
  "messages/SpringApiBundle.properties": {
    "create.spring.context.file.dtd.1.0": "Spring 1.x DTD",
    "create.spring.context.file.dtd.2.0": "Spring 2.x DTD",
    "create.spring.context.file.schema.2.0": "Spring XSD",
    "inspection.group.core": "Spring Core",
    "spring.bean.with.unknown.name": "<anonymous bean>"
  },
  "messages/SpringBatchBundle.properties": {
    "framework.name": "Spring Batch",
    "inspection.group.name": "Spring Batch"
  },
  "messages/SpringBootApiBundle.properties": {
    "icon.icons.SpringBoot.tooltip": "Spring Boot",
    "icon.icons.SpringBoot_Overlay.tooltip": "Spring Boot",
    "spring.boot.configuration.key.value.quick.info": "\"{0}\" [{1}]",
    "spring.boot.intention.category": "Spring Boot",
    "spring.boot.name": "Spring Boot"
  },
  "messages/SpringBootInitializrBundle.properties": {
    "icon.icons.SpringInitializr.tooltip": "Spring Initializr",
    "label.spring.boot.version": "Spring Boot:",
    "spring.initializr.project.starter.text": "Spring Boot"
  },
  "messages/SpringBootRunBundle.properties": {
    "spring.boot.application.run.configuration.framework.section": "Spring Boot(&G)",
    "spring.boot.run.config.fragment.framework.group": "Spring Boot",
    "spring.boot.run.config.type.name": "Spring Boot"
  },
  "messages/SpringBundle.properties": {
    "facet.context.edit.parent.none.selected": "<none>",
    "group.Spring.Beans.Generate.Action.text": "Spring Bean",
    "spring.bean": "Spring Bean"
  },
  "messages/SpringCloudBundle.properties": {
    "spring.cloud.inspection.group.name": "Spring Cloud"
  },
  "messages/SpringCloudStreamBundle.properties": {
    "spring.cloud.stream.inspection.group.name": "Spring Cloud Stream"
  },
  "messages/SpringDataBundle.properties": {
    "data.inspection.group.name": "Spring Data",
    "named.query.type.title": "@NamedQuery",
    "spring.data.jpa": "Spring Data JPA",
    "spring.data.ql": "Spring Data QL"
  },
  "messages/SpringELBundle.properties": {
    "spring.el.name": "Spring EL"
  },
  "messages/SpringGraphBundle.properties": {
    "spring.bean.dependency.graph.edge.anno.autowired": "@Autowired",
    "spring.bean.dependency.graph.edge.anno.imported": "@Import",
    "spring.bean.dependency.graph.edge.anno.inject.autowired": "@Inject",
    "spring.bean.dependency.graph.edge.anno.java.bean": "@Bean",
    "spring.bean.dependency.graph.edge.anno.resource.autowired": "@Resource",
    "spring.diagrams.autowired": "@Autowired"
  },
  "messages/SpringGraphQLBundle.properties": {
    "spring.graph.ql.name": "Spring GraphQL"
  },
  "messages/SpringIntegrationBundle.properties": {
    "el.location.name": "Spring Integration",
    "inspection.group.name": "Spring Integration",
    "spring.integration.framework.name": "Spring Integration"
  },
  "messages/SpringMvcBundle.properties": {
    "mvc.framework.name": "Spring MVC",
    "mvc.goto.related.item.group.name": "Spring MVC",
    "mvc.inspection.group.name": "Spring MVC",
    "spring.reactive.web.client.endpoints.view.title": "Spring Reactive WebClient",
    "spring.reactive.web.test.client.endpoints.view.title": "Spring WebTestClient",
    "spring.rest.client.endpoints.view.title": "Spring RestClient",
    "spring.rest.operations.endpoints.view.title": "Spring RestOperations",
    "spring.test.mock.mvc.endpoints.view.title": "Spring MockMvc",
    "spring.test.rest.template.endpoints.view.title": "Spring TestRestTemplate"
  },
  "messages/SpringOsgiBundle.properties": {
    "osgi.inspection.group.name": "Spring OSGi"
  },
  "messages/SpringSecurityBundle.properties": {
    "inspections.group.path.name": "Spring Security"
  },
  "messages/SpringShellBundle.properties": {
    "inspection.group.name": "Spring Shell"
  },
  "messages/SpringWebServicesBundle.properties": {
    "spring.ws.framework.name": "Spring WebService",
    "spring.ws.model.inspection.group.name": "Spring Web Services"
  },
  "messages/SpringWebSocketBundle.properties": {
    "inspection.group.name": "Spring WebSocket"
  },
  "messages/SqlBundle.properties": {
    "SqlJoinCardinalityInlayHintsProvider.hint.settings.case.full.join": "FULL JOIN",
    "SqlJoinCardinalityInlayHintsProvider.hint.settings.case.inner.join": "INNER JOIN",
    "SqlJoinCardinalityInlayHintsProvider.hint.settings.case.left.join": "LEFT JOIN",
    "SqlJoinCardinalityInlayHintsProvider.hint.settings.case.right.join": "RIGHT JOIN",
    "code.style.predefined.JoeCelko": "Joe Celko",
    "parameter.info.no.parameters": "<no parameters>",
    "settings.code.style.create.schema": "CREATE SCHEMA",
    "settings.code.style.if.then.else": "IF … THEN … ELSE",
    "settings.code.style.table.alter": "ALTER TABLE",
    "settings.code.style.table.create": "CREATE TABLE",
    "sql.inspections.group.name.mssql": "SQL Server"
  },
  "messages/SshBundle.properties": {
    "ide.service.view.local.port.forwarding.text": "{0} → {1}",
    "ide.service.view.remote.port.forwarding.text": "{0} ← {1}"
  },
  "messages/StructureViewBundle.properties": {
    "node.structureview.invalid": "<invalid>"
  },
  "messages/StylelintBundle.properties": {
    "stylelint.error.prefix": "Stylelint:"
  },
  "messages/SvelteBundle.properties": {
    "svelte.context.html": "Svelte HTML"
  },
  "messages/SvnBundle.properties": {
    "group.SubversionFilePopupGroup.text": "Subversion(_S)",
    "label.update.url": "URL:",
    "label.working.copy.url": "URL:",
    "svn.name.with.mnemonic": "Subversion(_S)",
    "svn.short.name.with.mnemonic": "SVN(_S)",
    "value.patch.file.name": "TheirsChanges.patch"
  },
  "messages/SwaggerBundle.properties": {
    "asyncapi.2.json.schema": "AsyncAPI 2",
    "asyncapi.2.json.schema.remote.url": "https://www.asyncapi.com/definitions/2.6.0.json",
    "asyncapi.2.specification.file.presentation": "AsyncAPI 2",
    "openapi.3.0.specification.file.presentation": "OpenAPI 3.0",
    "openapi.3.1.json.schema": "OpenAPI 3.1",
    "openapi.3.1.json.schema.remote.url": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.1/schema.json",
    "openapi.3.1.specification.file.presentation": "OpenAPI 3.1",
    "openapi.3.json.schema": "OpenAPI 3.0",
    "openapi.3.json.schema.remote.url": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v3.0/schema.json",
    "run.configuration.bundled.openapi.generator": "OpenAPI Generator {0}",
    "run.configuration.bundled.swagger.codegen": "Swagger Codegen {0}",
    "settings.hub.title": "Swagger Hub",
    "settings.remote.specification.add.from.hub": "Swagger Hub",
    "specification.asyncapi.yaml.title": "AsyncAPI 2 (.yaml)",
    "specification.openapi.json.title": "OpenAPI 3 (.json)",
    "specification.openapi.yaml.title": "OpenAPI 3 (.yaml)",
    "specification.swagger.json.title": "Swagger 2 (.json)",
    "specification.swagger.yaml.title": "Swagger 2 (.yaml)",
    "swagger.2.0.json.schema": "Swagger 2.0",
    "swagger.2.0.json.schema.remote.url": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v2.0/schema.json",
    "swagger.2.0.specification.file.presentation": "Swagger 2.0",
    "swagger.json.live.templates.presentable.name": "OpenAPI/Swagger [.json]",
    "swagger.yaml.live.templates.presentable.name": "OpenAPI/Swagger [.yaml]"
  },
  "messages/SwiftBundle.properties": {
    "action.Swift.Generate.DebugDescription.text": "debugDescription…",
    "action.Swift.Generate.Description.text": "description…",
    "auto.import.completion.presentation.tail.from.0": " ({0})",
    "change.info.async.throws.label": "async/throws:"
  },
  "messages/SwiftLanguageBundle.properties": {
    "element.description.enum.case": "enum case"
  },
  "messages/SwiftPackageManagerBundle.properties": {
    "group.Swift.PackageManager.Menu.text": "Swift Package Manager",
    "swift.package.manager": "Swift Package Manager"
  },
  "messages/TableBundle.properties": {
    "of": "/{0}"
  },
  "messages/TailwindCssBundle.properties": {
    "notification.group.tailwind": "Tailwind CSS",
    "settings.page.tailwind": "Tailwind CSS"
  },
  "messages/TaskBundle.properties": {
    "jira.default.query": "assignee = currentUser() and resolution = Unresolved order by updated"
  },
  "messages/TencentCosBundle.properties": {
    "create.bucket.error.no.appid.title": "Tencent COS",
    "group.name": "Tencent COS",
    "label.cache.control": "Cache-Control",
    "label.content.disposition": "Content-Disposition",
    "label.content.encoding": "Content-Encoding",
    "label.content.type": "Content-Type",
    "settings.appid": "APPID:"
  },
  "messages/TmsBundle.properties": {
    "tms.connection.url": "URL:",
    "tms.project.configurable.jvm": "Java / Kotlin",
    "tms.settings.local.tms.md.settings": "Markdown TMS"
  },
  "messages/TomcatBundle.properties": {
    "TomcatRemoteModel.target.definition.context": "context.xml"
  },
  "messages/ToolchainsBundle.properties": {
    "cpp.toolchains.toolset.cmake.title": "{0} CMake",
    "cpp.toolchains.toolset.gdb.title": "{0} GDB",
    "mingw64": "MinGW-w64",
    "msvc": "Visual Studio"
  },
  "messages/TraceBundle.properties": {
    "configuration.name": "Spy-js",
    "configuration.node.name": "Spy-js for Node.js",
    "console.trace.doubleSpace": "  ",
    "console.trace.events.eventTooltipTemplate.fileEntryTemplate": "<br/>%s<span>%s</span>",
    "console.trace.unknown": "…",
    "fileDependency.details.event.unknown": "<deleted>",
    "label.s.s": "''{0}'' -> ''{1}''"
  },
  "messages/TsLintBundle.properties": {
    "tslint.notification.content": "TSLint: {0}"
  },
  "messages/UIBundle.properties": {
    "memory.usage.panel.message.text": "{0,number,####}/{1,number,####}M"
  },
  "messages/UIDesignerBundle.properties": {
    "bind.to.bean.getdata.checkbox": "getData()",
    "bind.to.bean.ismodified.checkbox": "isModified()",
    "bind.to.bean.setdata.checkbox": "setData()",
    "resize.feedback": "{0}: {1} R x {2} C"
  },
  "messages/UltimateProfilerBundle.properties": {
    "hprof.object.view.of": "/",
    "hprof.object.view.static": "statically from",
    "hprof.stub.unknown": "<unknown>",
    "hprof.stub.unknown.class": "<unknown class>",
    "hprof.stub.unknown.type": "<unknown type>",
    "jfr.ui.timeline.cpu.load.label": "CPU {0}"
  },
  "messages/UnityBundle.properties": {
    "appended.android.package": " ({0})",
    "appended.pid.0": " (pid: {0})",
    "run.configuration.player.label.id": "ID:",
    "shaderVariant.popup.shaderApi.entries.d3d11": "DirectX 11",
    "shaderVariant.popup.shaderApi.entries.glcore": "OpenGL Core (3/4)",
    "shaderVariant.popup.shaderApi.entries.gles": "Open GL ES 2.0",
    "shaderVariant.popup.shaderApi.entries.gles3": "Open GL ES 3.0/3.1",
    "shaderVariant.popup.shaderApi.entries.metal": "Metal (iOS、Mac)"
  },
  "messages/UnityPluginActionsBundle.properties": {
    "action.UnityToolbarLabel.text": "Unity:",
    "group.NewUI_UnityToolbarActions.text": "Unity Toolbar Actions Base"
  },
  "messages/UnityPluginExplorerBundle.properties": {
    "git.url": "Git URL: {0}"
  },
  "messages/UnrealLinkBundle.properties": {
    "RiderLink.Unreal.Debugger.BlueprintCallstack.UnrealEngineCode.suffix": "filtered out",
    "configurable.UnrealLink.settings.title": "Unreal Engine"
  },
  "messages/UsageViewBundle.properties": {
    "find.file.size.megabytes": "{0} MB",
    "usage.view.results.node.prefix": "[{0}] {1}"
  },
  "messages/VagrantBundle.properties": {
    "vagrant.add.box.url": "Box URL:"
  },
  "messages/VcsBundle.properties": {
    "change.dialog.title.change.list.name": "{0} [{1}]",
    "commit.dialog.default.commit.operation.name": "Comm&it",
    "file.history.details.hash.author.on.date.at.time": "{0} {1}，{2} {3}",
    "group.name.version.control": "VCS(&V)",
    "label.multi.author.modified.code": "{0} {1} *",
    "label.multi.author.not.modified.code": "{0} {1}",
    "label.single.author.modified.code": "{0} *",
    "sequence.concatenation.separator": ", ",
    "vcs.common.labels.url": "URL:",
    "vcs.common.labels.vcs": "VCS:",
    "vcs.generic.name.with.mnemonic": "VCS(_S)"
  },
  "messages/VcsLogBundle.properties": {
    "vcs.log.action.intellisort.title": "IntelliSort: {0}",
    "vcs.log.filter.accessible.name": "{0}: {1}"
  },
  "messages/VisualizationBundle.properties": {
    "paginator.of": "/{0}"
  },
  "messages/ViteBundle.properties": {
    "vite.editor.notification": "Vite: {0}",
    "vite.project.generator.presentable.package.name": "&Vite(&V):"
  },
  "messages/VueBundle.properties": {
    "vue.create.single.file.component.template.class.api": "Class API",
    "vue.create.single.file.component.template.composition.api": "Composition API",
    "vue.create.single.file.component.template.options.api": "Options API",
    "vue.project.generator.name": "Vue.js",
    "vue.project.generator.presentable.package.name": "Vue CLI(&C)",
    "vue.symbol.presentation": "Vue {0} {1}"
  },
  "messages/W3ValidatorsBundle.properties": {
    "inspection.message.w3c": "W3C: {0}"
  },
  "messages/WDBundle.properties": {
    "0.in.angle.brackets": "<{0}>",
    "advanced.tls": "TLS:",
    "choose.web.path.step.url.preview": "http://",
    "composite.diff.element.name": "<multiple {0, choice, 1#directories|2#files|3#directories and files}{1, choice, 0#|1# under project root}>",
    "path.in.root.0.1": "<{0}>/{1}",
    "permissions.execute": "&X",
    "permissions.read": "&R",
    "permissions.write": "&W",
    "remote.diff.title.0.on.server.1": "{0} ({1})",
    "server.form.html.0.html": "<html>{0}</html>",
    "size.kilobyte": "{0,number,#.#} kB",
    "size.megabyte": "{0,number,#.#} MB",
    "transfer.bit.p.s": " ({0,number,#} bit/s)",
    "transfer.kilobit.p.s": " ({0,number,#.#} Kb/s)",
    "transfer.mega.bit.p.s": " ({0,number,#.#} Mb/s)",
    "trouble.info.web.url": "Web URL"
  },
  "messages/WSBundle.properties": {
    "axis2.display.name": "Apache Axis 2",
    "glassfish.jax.ws.2.x.ri.metro.1.x.jwsdp.2.0": "Glassfish / JAX-WS 2.2 RI / Metro 1.X / JWSDP 2.2",
    "group.JAXB.text": "JAXB(_X)",
    "jaxb.generation.dialog.jxc.label": "JXC:",
    "jaxb.generation.dialog.sdk.label": "SDK:",
    "jaxb.generation.dialog.xjc.label": "XJC:",
    "websphere.platform.name": "WebSphere 6.X"
  },
  "messages/WebBundle.properties": {
    "action.GenerateServletAction.text": "Servlet(&S)…",
    "web.group.names.javaee.issues": "Java EE",
    "web.project.structure.root.type.name.java.web": "Java Web",
    "web.xml.validator.description": "Web.xml"
  },
  "messages/WebSphereBundle.properties": {
    "websphere.integration.presentable.name": "WebSphere/Liberty"
  },
  "messages/WebflowBundle.properties": {
    "action.Webflow.Create.Context.File.text": "Spring Web Flow",
    "compiler.validator.flow.name": "Spring Web Flow",
    "el.location.name": "Spring Web Flow",
    "flow.new.file": "Spring Web Flow",
    "inspections.group.path.name": "Spring Web Flow",
    "spring.web.flow.xml": "Spring Web Flow (XML)",
    "spring.webflow": "Spring Web Flow",
    "spring.webflow.framework.name": "Spring Web Flow"
  },
  "messages/WeblogicBundle.properties": {
    "deployment.method.name.weblogic.deployer": "Weblogic.Deployer",
    "template.group.title.version.10.x": "10.x",
    "template.group.title.version.12.x.1.1": "12.x (1.1)",
    "template.group.title.version.12.x.1.2": "12.x (1.2)",
    "template.group.title.version.12.x.1.3": "12.x (1.3)",
    "template.group.title.version.12.x.1.4": "12.x (1.4)",
    "template.group.title.version.12.x.1.5": "12.x (1.5)",
    "template.group.title.version.12.x.1.6": "12.x (1.6)",
    "template.group.title.version.12.x.1.7": "12.x (1.7)",
    "template.group.title.version.12.x.1.8": "12.x (1.8)",
    "template.group.title.version.12.x.1.9": "12.x (1.9)",
    "template.group.title.version.6.x": "6.x",
    "template.group.title.version.7.x": "7.x",
    "template.group.title.version.8.x": "8.x",
    "template.group.title.version.9.x": "9.x",
    "weblogic.appc.name": "WebLogic APPC",
    "weblogic.ejbc.name": "WebLogic EJBC"
  },
  "messages/WizardBundle.properties": {
    "bdide.project.wizard.jdk.label": "JDK:",
    "bdt.wizard.sbt.version": "sbt:",
    "bdt.wizard.scala.version": "Scala:",
    "bdt.wizard.sdk.label": "SDK:"
  },
  "messages/WordPressBundle.properties": {
    "wp.cli.title": "WP-CLI"
  },
  "messages/XDebuggerBundle.properties": {
    "action.Anonymous.text.breakpointdialog.gotosource": "BreakpointDialog.GoToSource",
    "action.Anonymous.text.breakpointdialog.showsource": "BreakpointDialog.ShowSource",
    "xbreakpoint.default.display.text": "{1}:{0,number,#}",
    "xbreakpoint.default.display.text.with.column": "{2}:{0,number,#}:{1,number,#}",
    "xbreakpoints.dialog.double.breakpoint.title": "{0}，{1}",
    "xdebugger.attach.pid": "pid {0,number,#}"
  },
  "messages/XPathBundle.properties": {
    "dialog.title.xslt": "XSLT - {0}",
    "label.uri": "URI(&U):",
    "label.xpath": "XPath:",
    "tab.title.xpath": "XPath ''{0}''"
  },
  "messages/XmlBundle.properties": {
    "configurable.name.html.css": "HTML/CSS",
    "dialog.edit.template.checkbox.html": "HTML (&H)",
    "dialog.edit.template.checkbox.xml": "XML (&X)",
    "web.editor.configuration.title": "HTML/CSS",
    "xml.editor.options.misc.title": "XML/HTML",
    "xml.external.resource.label.uri": "URI:",
    "xml.map.resource.dialog.label.uri": "URI(&U):",
    "xml.schemas.radio.button.html.4.http.www.w3.org.tr.html4.loose.dtd": "HTML 4 (\"http://www.w3.org/TR/html4/loose.dtd\")",
    "xml.schemas.radio.button.html.5": "HTML 5"
  },
  "messages/YAMLBundle.properties": {
    "find.usages.unnamed": "<unnamed>"
  },
  "messages/ZeppelinBundle.properties": {
    "action.NewZeppelinFile.text": "Zeppelin Notebook",
    "dependency.settings.row.sdk": "SDK:",
    "file.type.description": "Zeppelin Notebook",
    "settings.zeppelin.version.empty.text": "<Detect automatically>",
    "zeppelin.search.tab.name": "Zeppelin Notebook"
  },
  "messages/packageSearchBundle.properties": {
    "packagesearch.repository.copyableInfo.id": "ID: {0}",
    "packagesearch.repository.copyableInfo.url": "URL: {0}",
    "packagesearch.terminology.kotlinMultiplatform.platform.android_jvm": "Android JVM",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.android_arm32": "Android (arm32)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.android_arm64": "Android (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.android_x64": "Android (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.android_x86": "Android (x86)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.ios_arm32": "iOS (arm32)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.ios_arm64": "iOS (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.ios_x64": "iOS (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.linux_arm32_hfp": "Linux (arm32_hfp)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.linux_arm64": "Linux (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.linux_mips32": "Linux (mips32)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.linux_mipsel32": "Linux (mips32 little endian)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.linux_x64": "Linux (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.macos_arm64": "macOS (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.macos_x64": "macOS (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.mingw_x64": "mingw (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.mingw_x86": "mingw (x86)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.node": "Node.js",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.tvos_arm64": "tvOS (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.tvos_x64": "tvOS (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.wasm32": "WebAssembly (wasm32)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.watchos_arm32": "watchOS (arm32)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.watchos_arm64": "watchOS (arm64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.watchos_x64": "watchOS (x64)",
    "packagesearch.terminology.kotlinMultiplatform.platform.target.watchos_x86": "watchOS (x86)",
    "packagesearch.terminology.kotlinMultiplatform.tooltip": "Kotlin Multiplatform",
    "packagesearch.ui.toolwindow.packages.filter.onlyMpp": "Kotlin Multiplatform",
    "packagesearch.ui.util.numberWithThousandsSymbol": "{0}k"
  }
}
